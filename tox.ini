[tox]
envlist =
    py27,
    py36,
    py37,
    constraints2,
    constraints3,
    constraints,
    #build_instance,

skip_missing_interpreters = False

[testenv]
skip_install = true

extras =
    develop
    test

commands =
    py27: {envbindir}/buildout -c {toxinidir}/buildout-py2.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src bootstrap
    py27: {envbindir}/buildout -c {toxinidir}/buildout-py2.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src annotate
    py27: {envbindir}/buildout -c {toxinidir}/buildout-py2.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src
    py27: {envbindir}/buildout -c {toxinidir}/buildout-py2.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src install test
    py27: coverage run {envbindir}/test -v1 --auto-color {posargs}
    py3{6,7}: {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src bootstrap
    py3{6,7}: {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src annotate
    py3{6,7}: {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src
    py3{6,7}: {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={envdir} buildout:sources-dir={toxinidir}/src install test
    py3{6,7}: coverage run {envbindir}/test -v1 --auto-color {posargs}

setenv =
    COVERAGE_FILE=.coverage.{envname}

deps = -r{toxinidir}/requirements.txt
    coverage

[testenv:build_instance]
basepython = python3.6
skip_install = true

commands =
    mkdir -p {toxinidir}/bin
    {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={toxinidir} buildout:sources-dir={toxinidir}/src bootstrap
    {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={toxinidir} buildout:sources-dir={toxinidir}/src annotate
    {envbindir}/buildout -c {toxinidir}/buildout-py3.cfg buildout:directory={toxinidir} buildout:sources-dir={toxinidir}/src
    - ln -s {envbindir}/bin/wsgi {toxinidir}/bin/wsgi
    #{toxinidir}/waitress-serve --listen=0.0.0.0:8080 wsgi:application
    echo "To start Plone run:"
    echo "./bin/wsgi"

deps = -r{toxinidir}/requirements.txt

whitelist_externals =
    ln
    echo
    mkdir

[testenv:constraints2]
basepython = python2
skip_install = true
extras =
setenv =
deps =
commands_pre = python -m pip install -r requirements.txt
commands = python create-constraints.py


[testenv:constraints3]
basepython = python3
skip_install = true
extras =
setenv =
deps =
commands_pre = python -m pip install -r requirements.txt
commands = python create-constraints.py

[testenv:constraints]
basepython = python3
skip_install = true
extras =
setenv =
deps =
# Specifying other tox envs as dependencies helps when running in parallel.
depends = constraints2, constraints3
commands = python combine-constraints.py
