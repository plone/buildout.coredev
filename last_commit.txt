Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-07-26T00:25:33+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/d0d1c71dc949c4095dc27c02471d0f88b50dd9c6

Remove PropertiesTool module.

Files changed:
M Products/CMFPlone/__init__.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/tests/testInterfaces.py
M news/125.breaking
D Products/CMFPlone/PropertiesTool.py
D Products/CMFPlone/www/addPropertySheet.zpt

b'diff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\ndeleted file mode 100644\nindex 4cc6feb44e..0000000000\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from AccessControl import ClassSecurityInfo\n-from AccessControl.class_init import InitializeClass\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n-from App.special_dtml import DTMLFile\n-from OFS.Folder import Folder\n-from OFS.PropertyManager import PropertyManager\n-from OFS.SimpleItem import SimpleItem\n-from plone.base.interfaces import IPropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n-from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFCore.permissions import ManagePortal\n-from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.utils import WWW_DIR\n-from Products.MailHost.interfaces import IMailHost\n-from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n-from zope.component import getUtility\n-from zope.component import queryUtility\n-from zope.deprecation import deprecate\n-from zope.interface import implementer\n-\n-\n-@implementer(IPropertiesTool)\n-class PropertiesTool(PloneBaseTool, Folder, UniqueObject):\n-    """Plone properties tool"""\n-\n-    id = "portal_properties"\n-    toolicon = "skins/plone_images/topic_icon.png"\n-\n-    meta_type = "Plone Properties Tool"\n-    meta_types = (\n-        {"name": "Plone Property Sheet", "action": "manage_addPropertySheetForm"},\n-    )\n-\n-    manage_options = (\n-        (Folder.manage_options[0],)\n-        + ({"label": "Overview", "action": "manage_overview"},)\n-        + SimpleItem.manage_options\n-    )\n-\n-    manage_addPropertySheetForm = PageTemplateFile("www/addPropertySheet", globals())\n-\n-    security = ClassSecurityInfo()\n-\n-    security.declareProtected(ManagePortal, "manage_overview")\n-    manage_overview = DTMLFile("explainPropertiesTool", WWW_DIR)\n-\n-    def all_meta_types(self, interfaces=None):\n-        return self.meta_types\n-\n-    security.declareProtected(ManagePortal, "addPropertySheet")\n-\n-    def addPropertySheet(self, id, title="", propertysheet=None):\n-        # Add a new PropertySheet.\n-        o = SimpleItemWithProperties(id, title)\n-\n-        # copy the propertysheet values onto the new instance\n-        if propertysheet is not None:\n-            if not hasattr(propertysheet, "propertyIds"):\n-                raise TypeError("propertysheet needs to be a PropertyManager")\n-\n-            for property in propertysheet.propertyMap():\n-                pid = property.get("id")\n-                ptype = property.get("type")\n-                pvalue = propertysheet.getProperty(pid)\n-                if not hasattr(o, pid):\n-                    o._setProperty(pid, pvalue, ptype)\n-\n-        self._setObject(id, o)\n-\n-    security.declareProtected(ManagePortal, "manage_addPropertySheet")\n-\n-    def manage_addPropertySheet(self, id, title="", propertysheet=None, REQUEST=None):\n-        """Add a instance of a Property Sheet if handed a\n-        propertysheet put the properties into new propertysheet.\n-        """\n-        self.addPropertySheet(id, title, propertysheet)\n-\n-        if REQUEST is not None:\n-            return self.manage_main()\n-\n-    #\n-    #   \'portal_properties\' interface methods\n-    #\n-    security.declareProtected(ManagePortal, "editProperties")\n-\n-    def editProperties(self, props):\n-        # Change portal settings.\n-        aq_parent(aq_inner(self)).manage_changeProperties(props)\n-        if hasattr(self, "propertysheets"):\n-            ps = self.propertysheets\n-            if hasattr(ps, "props"):\n-                ps.props.manage_changeProperties(props)\n-\n-    def title(self):\n-        site = queryUtility(ISiteRoot)\n-        if site is None:\n-            # fallback\n-            return aq_parent(aq_inner(self)).title\n-        return site.title\n-\n-    def smtp_server(self):\n-        return getUtility(IMailHost).smtp_host\n-\n-    @deprecate(\n-        "The portal portal_properties tool will be removed in Plone 6.1. "\n-        "Use the portal_registry instead. "\n-        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n-        "for more details."\n-    )\n-    def hasProperty(self, id):\n-        return super().hasProperty(id)\n-\n-\n-InitializeClass(PropertiesTool)\n-\n-\n-@implementer(ISimpleItemWithProperties)\n-class SimpleItemWithProperties(PropertyManager, SimpleItem):\n-    """\n-    A common base class for objects with configurable\n-    properties in a fixed schema.\n-    """\n-\n-    def __init__(self, id, title=""):\n-        self.id = id\n-        self.title = title\n-\n-    meta_type = "Plone Property Sheet"\n-\n-    manage_options = PropertyManager.manage_options + SimpleItem.manage_options\n-\n-    @deprecate(\n-        "The portal portal_properties tool will be removed in Plone 6.1. "\n-        "Use the portal_registry instead. "\n-        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n-        "for more details."\n-    )\n-    def hasProperty(self, id):\n-        return super().hasProperty(id)\n-\n-\n-InitializeClass(SimpleItemWithProperties)\ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex ff52822e9e..f9fab8c26f 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -153,7 +153,6 @@ def initialize(context):\n     from Products.CMFPlone import patches  # noqa\n     from Products.CMFPlone import PloneControlPanel\n     from Products.CMFPlone import PloneTool\n-    from Products.CMFPlone import PropertiesTool\n     from Products.CMFPlone import RegistrationTool\n     from Products.CMFPlone import SkinsTool\n     from Products.CMFPlone import TranslationServiceTool\n@@ -166,7 +165,6 @@ def initialize(context):\n         PloneTool.PloneTool,\n         WorkflowTool.WorkflowTool,\n         CachingPolicyManager.CachingPolicyManager,\n-        PropertiesTool.PropertiesTool,\n         MigrationTool.MigrationTool,\n         PloneControlPanel.PloneControlPanel,\n         RegistrationTool.RegistrationTool,\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex afb3e1df15..b275ed2efd 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -51,8 +51,6 @@\n     IPasswordResetToolView="plone.base.interfaces.password_reset:IPasswordResetToolView",\n     IPWResetTool="plone.base.interfaces.password_reset:IPWResetTool",\n     IPatternsSettings="plone.base.interfaces.patterns:IPatternsSettings",\n-    IPropertiesTool="plone.base.interfaces.properties:IPropertiesTool",\n-    ISimpleItemWithProperties="plone.base.interfaces.properties:ISimpleItemWithProperties",\n     IBundleRegistry="plone.base.interfaces.resources:IBundleRegistry",\n     IResourceRegistry="plone.base.interfaces.resources:IResourceRegistry",\n     IMigratingPloneSiteRoot="plone.base.interfaces.siteroot:IMigratingPloneSiteRoot",\ndiff --git a/Products/CMFPlone/tests/testInterfaces.py b/Products/CMFPlone/tests/testInterfaces.py\nindex a44348e62f..1766742b07 100644\n--- a/Products/CMFPlone/tests/testInterfaces.py\n+++ b/Products/CMFPlone/tests/testInterfaces.py\n@@ -6,8 +6,6 @@\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n from Products.CMFPlone.PloneTool import PloneTool\n from Products.CMFPlone.Portal import PloneSite\n-from Products.CMFPlone.PropertiesTool import PropertiesTool\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n from Products.CMFPlone.RegistrationTool import RegistrationTool\n from Products.CMFPlone.SkinsTool import SkinsTool\n from Products.CMFPlone.TypesTool import TypesTool\n@@ -300,8 +298,6 @@ def _testStuff(self):\n     (PloneConfiglet, ()),\n     (PloneTool, ()),\n     (PloneSite, ()),\n-    (PropertiesTool, ()),\n-    (SimpleItemWithProperties, ()),\n     (RegistrationTool, ()),\n     (SkinsTool, ()),\n     (TypesTool, ()),\ndiff --git a/Products/CMFPlone/www/addPropertySheet.zpt b/Products/CMFPlone/www/addPropertySheet.zpt\ndeleted file mode 100644\nindex 2d01f3bcda..0000000000\n--- a/Products/CMFPlone/www/addPropertySheet.zpt\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n-<html>\n-<head>\n-<meta http-equiv="content-type" content="text/html;charset=utf-8"\n-      tal:define="charset context/management_page_charset | string:utf-8;"\n-      tal:attributes="content string:text/html;;charset=$charset;"/>\n-\n-<title>Zope</title>\n-<link rel="stylesheet" type="text/css" href="/manage_page_style.css" />\n-\n-</head>\n-<body bgcolor="#ffffff" link="#000099" alink="#000099" vlink="#000099">\n-\n-  <div class="form-title">\n-  Add Propertysheet\n-  </div>\n-\n-<form action="manage_addPropertySheet" method="post">\n-    <div class="form-help">\n-    Enter an ID and title to add a new PropertySheet.\n-    </div>\n-    <div class="form-label">\n-    Id\n-    </div>\n-    <input type="text" name="id" size="40" />\n-\n-    <div class="form-label">\n-    Title\n-    </div>\n-    <input type="text" name="title" size="40" value="" />\n-\n-    <div class="form-element">\n-    <input class="form-element" type="submit" name="submit"\n-     value=" Add PropertySheet " />\n-    </div>\n-</form>\n-\n-  </body>\n-</html>\ndiff --git a/news/125.breaking b/news/125.breaking\nindex 6c3870d67e..f12c128d5c 100644\n--- a/news/125.breaking\n+++ b/news/125.breaking\n@@ -1,3 +1,4 @@\n Remove `propertiestool` import step and usage of `portal_properties`.\n Remove `site_properties` from `main_template.pt` and ajax template.\n+Remove `PropertiesTool` module.\n [maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-07-31T23:23:45+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/cecaeae5936003fdc60618cde6f956b0fbc8d26d

Merge pull request #3990 from plone/remove-portal_properties-tool-class

Remove PropertiesTool module.

Files changed:
M Products/CMFPlone/__init__.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/tests/testInterfaces.py
M news/125.breaking
D Products/CMFPlone/PropertiesTool.py
D Products/CMFPlone/www/addPropertySheet.zpt

b'diff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\ndeleted file mode 100644\nindex 4cc6feb44e..0000000000\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from AccessControl import ClassSecurityInfo\n-from AccessControl.class_init import InitializeClass\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n-from App.special_dtml import DTMLFile\n-from OFS.Folder import Folder\n-from OFS.PropertyManager import PropertyManager\n-from OFS.SimpleItem import SimpleItem\n-from plone.base.interfaces import IPropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n-from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFCore.permissions import ManagePortal\n-from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.utils import WWW_DIR\n-from Products.MailHost.interfaces import IMailHost\n-from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n-from zope.component import getUtility\n-from zope.component import queryUtility\n-from zope.deprecation import deprecate\n-from zope.interface import implementer\n-\n-\n-@implementer(IPropertiesTool)\n-class PropertiesTool(PloneBaseTool, Folder, UniqueObject):\n-    """Plone properties tool"""\n-\n-    id = "portal_properties"\n-    toolicon = "skins/plone_images/topic_icon.png"\n-\n-    meta_type = "Plone Properties Tool"\n-    meta_types = (\n-        {"name": "Plone Property Sheet", "action": "manage_addPropertySheetForm"},\n-    )\n-\n-    manage_options = (\n-        (Folder.manage_options[0],)\n-        + ({"label": "Overview", "action": "manage_overview"},)\n-        + SimpleItem.manage_options\n-    )\n-\n-    manage_addPropertySheetForm = PageTemplateFile("www/addPropertySheet", globals())\n-\n-    security = ClassSecurityInfo()\n-\n-    security.declareProtected(ManagePortal, "manage_overview")\n-    manage_overview = DTMLFile("explainPropertiesTool", WWW_DIR)\n-\n-    def all_meta_types(self, interfaces=None):\n-        return self.meta_types\n-\n-    security.declareProtected(ManagePortal, "addPropertySheet")\n-\n-    def addPropertySheet(self, id, title="", propertysheet=None):\n-        # Add a new PropertySheet.\n-        o = SimpleItemWithProperties(id, title)\n-\n-        # copy the propertysheet values onto the new instance\n-        if propertysheet is not None:\n-            if not hasattr(propertysheet, "propertyIds"):\n-                raise TypeError("propertysheet needs to be a PropertyManager")\n-\n-            for property in propertysheet.propertyMap():\n-                pid = property.get("id")\n-                ptype = property.get("type")\n-                pvalue = propertysheet.getProperty(pid)\n-                if not hasattr(o, pid):\n-                    o._setProperty(pid, pvalue, ptype)\n-\n-        self._setObject(id, o)\n-\n-    security.declareProtected(ManagePortal, "manage_addPropertySheet")\n-\n-    def manage_addPropertySheet(self, id, title="", propertysheet=None, REQUEST=None):\n-        """Add a instance of a Property Sheet if handed a\n-        propertysheet put the properties into new propertysheet.\n-        """\n-        self.addPropertySheet(id, title, propertysheet)\n-\n-        if REQUEST is not None:\n-            return self.manage_main()\n-\n-    #\n-    #   \'portal_properties\' interface methods\n-    #\n-    security.declareProtected(ManagePortal, "editProperties")\n-\n-    def editProperties(self, props):\n-        # Change portal settings.\n-        aq_parent(aq_inner(self)).manage_changeProperties(props)\n-        if hasattr(self, "propertysheets"):\n-            ps = self.propertysheets\n-            if hasattr(ps, "props"):\n-                ps.props.manage_changeProperties(props)\n-\n-    def title(self):\n-        site = queryUtility(ISiteRoot)\n-        if site is None:\n-            # fallback\n-            return aq_parent(aq_inner(self)).title\n-        return site.title\n-\n-    def smtp_server(self):\n-        return getUtility(IMailHost).smtp_host\n-\n-    @deprecate(\n-        "The portal portal_properties tool will be removed in Plone 6.1. "\n-        "Use the portal_registry instead. "\n-        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n-        "for more details."\n-    )\n-    def hasProperty(self, id):\n-        return super().hasProperty(id)\n-\n-\n-InitializeClass(PropertiesTool)\n-\n-\n-@implementer(ISimpleItemWithProperties)\n-class SimpleItemWithProperties(PropertyManager, SimpleItem):\n-    """\n-    A common base class for objects with configurable\n-    properties in a fixed schema.\n-    """\n-\n-    def __init__(self, id, title=""):\n-        self.id = id\n-        self.title = title\n-\n-    meta_type = "Plone Property Sheet"\n-\n-    manage_options = PropertyManager.manage_options + SimpleItem.manage_options\n-\n-    @deprecate(\n-        "The portal portal_properties tool will be removed in Plone 6.1. "\n-        "Use the portal_registry instead. "\n-        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n-        "for more details."\n-    )\n-    def hasProperty(self, id):\n-        return super().hasProperty(id)\n-\n-\n-InitializeClass(SimpleItemWithProperties)\ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex ff52822e9e..f9fab8c26f 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -153,7 +153,6 @@ def initialize(context):\n     from Products.CMFPlone import patches  # noqa\n     from Products.CMFPlone import PloneControlPanel\n     from Products.CMFPlone import PloneTool\n-    from Products.CMFPlone import PropertiesTool\n     from Products.CMFPlone import RegistrationTool\n     from Products.CMFPlone import SkinsTool\n     from Products.CMFPlone import TranslationServiceTool\n@@ -166,7 +165,6 @@ def initialize(context):\n         PloneTool.PloneTool,\n         WorkflowTool.WorkflowTool,\n         CachingPolicyManager.CachingPolicyManager,\n-        PropertiesTool.PropertiesTool,\n         MigrationTool.MigrationTool,\n         PloneControlPanel.PloneControlPanel,\n         RegistrationTool.RegistrationTool,\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex afb3e1df15..b275ed2efd 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -51,8 +51,6 @@\n     IPasswordResetToolView="plone.base.interfaces.password_reset:IPasswordResetToolView",\n     IPWResetTool="plone.base.interfaces.password_reset:IPWResetTool",\n     IPatternsSettings="plone.base.interfaces.patterns:IPatternsSettings",\n-    IPropertiesTool="plone.base.interfaces.properties:IPropertiesTool",\n-    ISimpleItemWithProperties="plone.base.interfaces.properties:ISimpleItemWithProperties",\n     IBundleRegistry="plone.base.interfaces.resources:IBundleRegistry",\n     IResourceRegistry="plone.base.interfaces.resources:IResourceRegistry",\n     IMigratingPloneSiteRoot="plone.base.interfaces.siteroot:IMigratingPloneSiteRoot",\ndiff --git a/Products/CMFPlone/tests/testInterfaces.py b/Products/CMFPlone/tests/testInterfaces.py\nindex a44348e62f..1766742b07 100644\n--- a/Products/CMFPlone/tests/testInterfaces.py\n+++ b/Products/CMFPlone/tests/testInterfaces.py\n@@ -6,8 +6,6 @@\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n from Products.CMFPlone.PloneTool import PloneTool\n from Products.CMFPlone.Portal import PloneSite\n-from Products.CMFPlone.PropertiesTool import PropertiesTool\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n from Products.CMFPlone.RegistrationTool import RegistrationTool\n from Products.CMFPlone.SkinsTool import SkinsTool\n from Products.CMFPlone.TypesTool import TypesTool\n@@ -300,8 +298,6 @@ def _testStuff(self):\n     (PloneConfiglet, ()),\n     (PloneTool, ()),\n     (PloneSite, ()),\n-    (PropertiesTool, ()),\n-    (SimpleItemWithProperties, ()),\n     (RegistrationTool, ()),\n     (SkinsTool, ()),\n     (TypesTool, ()),\ndiff --git a/Products/CMFPlone/www/addPropertySheet.zpt b/Products/CMFPlone/www/addPropertySheet.zpt\ndeleted file mode 100644\nindex 2d01f3bcda..0000000000\n--- a/Products/CMFPlone/www/addPropertySheet.zpt\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n-<html>\n-<head>\n-<meta http-equiv="content-type" content="text/html;charset=utf-8"\n-      tal:define="charset context/management_page_charset | string:utf-8;"\n-      tal:attributes="content string:text/html;;charset=$charset;"/>\n-\n-<title>Zope</title>\n-<link rel="stylesheet" type="text/css" href="/manage_page_style.css" />\n-\n-</head>\n-<body bgcolor="#ffffff" link="#000099" alink="#000099" vlink="#000099">\n-\n-  <div class="form-title">\n-  Add Propertysheet\n-  </div>\n-\n-<form action="manage_addPropertySheet" method="post">\n-    <div class="form-help">\n-    Enter an ID and title to add a new PropertySheet.\n-    </div>\n-    <div class="form-label">\n-    Id\n-    </div>\n-    <input type="text" name="id" size="40" />\n-\n-    <div class="form-label">\n-    Title\n-    </div>\n-    <input type="text" name="title" size="40" value="" />\n-\n-    <div class="form-element">\n-    <input class="form-element" type="submit" name="submit"\n-     value=" Add PropertySheet " />\n-    </div>\n-</form>\n-\n-  </body>\n-</html>\ndiff --git a/news/125.breaking b/news/125.breaking\nindex 6c3870d67e..f12c128d5c 100644\n--- a/news/125.breaking\n+++ b/news/125.breaking\n@@ -1,3 +1,4 @@\n Remove `propertiestool` import step and usage of `portal_properties`.\n Remove `site_properties` from `main_template.pt` and ajax template.\n+Remove `PropertiesTool` module.\n [maurits]\n'

