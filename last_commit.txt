Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2024-02-17T18:00:29+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/1389350bc33232076c6ab54d35a5084460fcee44

chore(upgrades): report progress

Upgrading a large site with +700k comments is no fun if you don't see
any progress report about what the server is doing.

Files changed:
M plone/app/discussion/upgrades.py

b'diff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex 7e646324..dc78ea76 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -3,6 +3,7 @@\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n+from Products.ZCatalog.ProgressHandler import ZLogHandler\n from zope.component import getUtility\n \n import logging\n@@ -57,7 +58,13 @@ def upgrade_comment_workflows_apply_rolemapping(context):\n     wf_tool = getToolByName(context, "portal_workflow")\n     new_chain = list(wf_tool.getChainFor(portal_type))\n     workflows = [wf_tool.getWorkflowById(wf_id) for wf_id in new_chain]\n-    for brain in catalog.unrestrictedSearchResults(portal_type=portal_type):\n+\n+    brains = catalog.unrestrictedSearchResults(portal_type=portal_type)\n+    num_objects = len(brains)\n+    pghandler = ZLogHandler(1000)\n+    pghandler.init("Apply rolemap changes on comments", num_objects)\n+    for index, brain in enumerate(brains, 1):\n+        pghandler.report(index)\n         try:\n             comment = brain.getObject()\n             for wf in workflows:\n@@ -65,6 +72,7 @@ def upgrade_comment_workflows_apply_rolemapping(context):\n             comment.reindexObjectSecurity()\n         except (AttributeError, KeyError):\n             logger.info(f"Could not reindex comment {brain.getURL()}")\n+    pghandler.finish()\n \n \n def upgrade_comment_workflows(context):\n@@ -88,7 +96,12 @@ def set_timezone_on_dates(context):\n     modifieds = 0\n     logger.info("Setting timezone information on comment dates")\n     comments = pc.search({"Type": "Comment"})\n-    for cbrain in comments:\n+\n+    num_objects = len(comments)\n+    pghandler = ZLogHandler(1000)\n+    pghandler.init("Set timezone on comments", num_objects)\n+    for index, cbrain in enumerate(comments, 1):\n+        pghandler.report(index)\n         comment = cbrain.getObject()\n         if not comment.creation_date.tzinfo:\n             creations += 1\n@@ -98,6 +111,7 @@ def set_timezone_on_dates(context):\n             comment.modification_date = comment.modification_date.astimezone(\n                 timezone.utc\n             )\n+    pghandler.finish()\n     logger.info(\n         "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n     )\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2024-02-17T18:02:03+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/c67fe2b865b7545941d393ec12832a0e7a985377

Add news entry

Files changed:
A news/+ignore.bugfix

b'diff --git a/news/+ignore.bugfix b/news/+ignore.bugfix\nnew file mode 100644\nindex 00000000..910cf778\n--- /dev/null\n+++ b/news/+ignore.bugfix\n@@ -0,0 +1,3 @@\n+Report the upgrade steps progress,\n+really useful for sites with lots of comments.\n+[gforcada]\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2024-02-19T08:07:06+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/422a454af3d86be087572cf8031889df0c0cd466

Merge pull request #224 from plone/report-progress

Report progress

Files changed:
A news/+ignore.bugfix
M plone/app/discussion/upgrades.py

b'diff --git a/news/+ignore.bugfix b/news/+ignore.bugfix\nnew file mode 100644\nindex 00000000..910cf778\n--- /dev/null\n+++ b/news/+ignore.bugfix\n@@ -0,0 +1,3 @@\n+Report the upgrade steps progress,\n+really useful for sites with lots of comments.\n+[gforcada]\ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex 7e646324..dc78ea76 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -3,6 +3,7 @@\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n+from Products.ZCatalog.ProgressHandler import ZLogHandler\n from zope.component import getUtility\n \n import logging\n@@ -57,7 +58,13 @@ def upgrade_comment_workflows_apply_rolemapping(context):\n     wf_tool = getToolByName(context, "portal_workflow")\n     new_chain = list(wf_tool.getChainFor(portal_type))\n     workflows = [wf_tool.getWorkflowById(wf_id) for wf_id in new_chain]\n-    for brain in catalog.unrestrictedSearchResults(portal_type=portal_type):\n+\n+    brains = catalog.unrestrictedSearchResults(portal_type=portal_type)\n+    num_objects = len(brains)\n+    pghandler = ZLogHandler(1000)\n+    pghandler.init("Apply rolemap changes on comments", num_objects)\n+    for index, brain in enumerate(brains, 1):\n+        pghandler.report(index)\n         try:\n             comment = brain.getObject()\n             for wf in workflows:\n@@ -65,6 +72,7 @@ def upgrade_comment_workflows_apply_rolemapping(context):\n             comment.reindexObjectSecurity()\n         except (AttributeError, KeyError):\n             logger.info(f"Could not reindex comment {brain.getURL()}")\n+    pghandler.finish()\n \n \n def upgrade_comment_workflows(context):\n@@ -88,7 +96,12 @@ def set_timezone_on_dates(context):\n     modifieds = 0\n     logger.info("Setting timezone information on comment dates")\n     comments = pc.search({"Type": "Comment"})\n-    for cbrain in comments:\n+\n+    num_objects = len(comments)\n+    pghandler = ZLogHandler(1000)\n+    pghandler.init("Set timezone on comments", num_objects)\n+    for index, cbrain in enumerate(comments, 1):\n+        pghandler.report(index)\n         comment = cbrain.getObject()\n         if not comment.creation_date.tzinfo:\n             creations += 1\n@@ -98,6 +111,7 @@ def set_timezone_on_dates(context):\n             comment.modification_date = comment.modification_date.astimezone(\n                 timezone.utc\n             )\n+    pghandler.finish()\n     logger.info(\n         "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n     )\n'

