Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-09-24T10:05:12+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.restapi/commit/4306c6d1e39630d7b8560e9ea6cfeebd983ded4a

Fix tests with Products.MailHost 4.10.

Part of https://github.com/plone/Products.CMFPlone/issues/3178

Files changed:
A news/3178.bugfix
M src/plone/restapi/tests/test_services_email_notification.py
M src/plone/restapi/tests/test_services_email_send.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 000000000..c62697d90\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 60a729b1b..7909ba406 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -69,10 +69,14 @@ def test_email_notification(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue("Subject: [No Subject]" in self.mailhost.messages[0])\n-        self.assertTrue("To: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("Subject: [No Subject]" in msg)\n+        self.assertTrue("To: info@plone.org" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\n \n     def test_email_notification_all_parameters(self):\n         response = self.api_session.post(\n@@ -87,8 +91,12 @@ def test_email_notification_all_parameters(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue("=?utf-8?q?This_is_the_subject" in self.mailhost.messages[0])\n-        self.assertTrue("To: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("John Doe" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("=?utf-8?q?This_is_the_subject" in msg)\n+        self.assertTrue("To: info@plone.org" in msg)\n+        self.assertTrue("John Doe" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\ndiff --git a/src/plone/restapi/tests/test_services_email_send.py b/src/plone/restapi/tests/test_services_email_send.py\nindex 15669f0a6..1bbbb3e50 100644\n--- a/src/plone/restapi/tests/test_services_email_send.py\n+++ b/src/plone/restapi/tests/test_services_email_send.py\n@@ -62,13 +62,14 @@ def test_email_send(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue(\n-            "Subject: =?utf-8?q?A_portal_user_via_Plone_site?="\n-            in self.mailhost.messages[0]\n-        )\n-        self.assertTrue("From: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("Subject: =?utf-8?q?A_portal_user_via_Plone_site?=" in msg)\n+        self.assertTrue("From: info@plone.org" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\n \n     def test_email_send_all_parameters(self):\n         response = self.api_session.post(\n@@ -84,11 +85,15 @@ def test_email_send_all_parameters(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue("=?utf-8?q?This_is_the_subject" in self.mailhost.messages[0])\n-        self.assertTrue("From: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("John Doe" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("=?utf-8?q?This_is_the_subject" in msg)\n+        self.assertTrue("From: info@plone.org" in msg)\n+        self.assertTrue("John Doe" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\n \n     def test_email_send_anonymous(self):\n         response = self.anon_api_session.post(\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 40b37fe80..d3ec43f38 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -208,7 +208,11 @@ def test_add_user_with_sendPasswordRest_sends_email(self):\n         transaction.commit()\n \n         self.assertEqual(201, response.status_code)\n-        self.assertTrue("To: howard.zinn@example.com" in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("To: howard.zinn@example.com" in msg)\n \n     def test_add_user_send_properties(self):\n         response = self.api_session.post(\n@@ -822,7 +826,11 @@ def test_anonymous_without_enable_user_pwd_choice_sends_mail(self):\n         transaction.commit()\n \n         self.assertEqual(201, response.status_code)\n-        self.assertTrue("To: avram.chomsky@example.com" in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("To: avram.chomsky@example.com" in msg)\n \n     def test_anonymous_can_set_password_with_enable_user_pwd_choice(self):\n         security_settings = getAdapter(self.portal, ISecuritySchema)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-09-25T12:15:59+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/9e6afae8115409dfbe528385d4f85df6b900dd5a

Merge pull request #991 from plone/mailhost-410

Fix tests with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M src/plone/restapi/tests/test_services_email_notification.py
M src/plone/restapi/tests/test_services_email_send.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 000000000..c62697d90\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/src/plone/restapi/tests/test_services_email_notification.py b/src/plone/restapi/tests/test_services_email_notification.py\nindex 60a729b1b..7909ba406 100644\n--- a/src/plone/restapi/tests/test_services_email_notification.py\n+++ b/src/plone/restapi/tests/test_services_email_notification.py\n@@ -69,10 +69,14 @@ def test_email_notification(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue("Subject: [No Subject]" in self.mailhost.messages[0])\n-        self.assertTrue("To: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("Subject: [No Subject]" in msg)\n+        self.assertTrue("To: info@plone.org" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\n \n     def test_email_notification_all_parameters(self):\n         response = self.api_session.post(\n@@ -87,8 +91,12 @@ def test_email_notification_all_parameters(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue("=?utf-8?q?This_is_the_subject" in self.mailhost.messages[0])\n-        self.assertTrue("To: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("John Doe" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("=?utf-8?q?This_is_the_subject" in msg)\n+        self.assertTrue("To: info@plone.org" in msg)\n+        self.assertTrue("John Doe" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\ndiff --git a/src/plone/restapi/tests/test_services_email_send.py b/src/plone/restapi/tests/test_services_email_send.py\nindex 15669f0a6..1bbbb3e50 100644\n--- a/src/plone/restapi/tests/test_services_email_send.py\n+++ b/src/plone/restapi/tests/test_services_email_send.py\n@@ -62,13 +62,14 @@ def test_email_send(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue(\n-            "Subject: =?utf-8?q?A_portal_user_via_Plone_site?="\n-            in self.mailhost.messages[0]\n-        )\n-        self.assertTrue("From: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("Subject: =?utf-8?q?A_portal_user_via_Plone_site?=" in msg)\n+        self.assertTrue("From: info@plone.org" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\n \n     def test_email_send_all_parameters(self):\n         response = self.api_session.post(\n@@ -84,11 +85,15 @@ def test_email_send_all_parameters(self):\n         transaction.commit()\n \n         self.assertEqual(response.status_code, 204)\n-        self.assertTrue("=?utf-8?q?This_is_the_subject" in self.mailhost.messages[0])\n-        self.assertTrue("From: info@plone.org" in self.mailhost.messages[0])\n-        self.assertTrue("John Doe" in self.mailhost.messages[0])\n-        self.assertTrue("Reply-To: john@doe.com" in self.mailhost.messages[0])\n-        self.assertTrue("Just want to say hi." in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("=?utf-8?q?This_is_the_subject" in msg)\n+        self.assertTrue("From: info@plone.org" in msg)\n+        self.assertTrue("John Doe" in msg)\n+        self.assertTrue("Reply-To: john@doe.com" in msg)\n+        self.assertTrue("Just want to say hi." in msg)\n \n     def test_email_send_anonymous(self):\n         response = self.anon_api_session.post(\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 40b37fe80..d3ec43f38 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -208,7 +208,11 @@ def test_add_user_with_sendPasswordRest_sends_email(self):\n         transaction.commit()\n \n         self.assertEqual(201, response.status_code)\n-        self.assertTrue("To: howard.zinn@example.com" in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("To: howard.zinn@example.com" in msg)\n \n     def test_add_user_send_properties(self):\n         response = self.api_session.post(\n@@ -822,7 +826,11 @@ def test_anonymous_without_enable_user_pwd_choice_sends_mail(self):\n         transaction.commit()\n \n         self.assertEqual(201, response.status_code)\n-        self.assertTrue("To: avram.chomsky@example.com" in self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        if isinstance(msg, bytes) and bytes is not str:\n+            # Python 3 with Products.MailHost 4.10+\n+            msg = msg.decode("utf-8")\n+        self.assertTrue("To: avram.chomsky@example.com" in msg)\n \n     def test_anonymous_can_set_password_with_enable_user_pwd_choice(self):\n         security_settings = getAdapter(self.portal, ISecuritySchema)\n'

