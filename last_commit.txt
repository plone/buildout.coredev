Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-15T21:59:51+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/9da41bca64fc4899472191bfc75e9cb916fb1d6a

Fixed use of own utils.isDefaultPage, which should be defaultpage.check_default_page_via_view.

You get a deprecation warning.

Files changed:
A news/3130.bugfix.3
M Products/CMFPlone/browser/navigation.py

b"diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex 90b17e3ca3..40c73a101a 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -11,6 +11,7 @@\n from Products.CMFPlone.browser.interfaces import INavigationTabs\n from Products.CMFPlone.browser.interfaces import ISiteMap\n from Products.CMFPlone.browser.navtree import SitemapQueryBuilder\n+from Products.CMFPlone.defaultpage import check_default_page_via_view\n from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n from Products.CMFPlone.interfaces import INavigationSchema\n from Products.Five import BrowserView\n@@ -184,7 +185,7 @@ def breadcrumbs(self):\n \n         # Check to see if the current page is a folder default view, if so\n         # get breadcrumbs from the parent folder\n-        if utils.isDefaultPage(context, self.request):\n+        if check_default_page_via_view(context, self.request):\n             currentPath = '/'.join(utils.parent(context).getPhysicalPath())\n         else:\n             currentPath = '/'.join(context.getPhysicalPath())\n@@ -245,7 +246,7 @@ def breadcrumbs(self):\n \n         # don't show default pages in breadcrumbs or pages above the navigation\n         # root\n-        if not utils.isDefaultPage(context, request) \\\n+        if not check_default_page_via_view(context, request) \\\n            and not rootPath.startswith(itemPath):\n             base += ({\n                 'absolute_url': item_url,\ndiff --git a/news/3130.bugfix.3 b/news/3130.bugfix.3\nnew file mode 100644\nindex 0000000000..cd3f6d8005\n--- /dev/null\n+++ b/news/3130.bugfix.3\n@@ -0,0 +1,2 @@\n+Fixed use of own ``utils.isDefaultPage``, which should be ``defaultpage.check_default_page_via_view``.\n+[maurits]\n"

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-15T22:06:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/383257462b64c91c4cb1c928cd12eb6a35648b14

Fixed more invalid escape sequences.

Files changed:
M Products/CMFPlone/tests/PloneTestCase.py
M Products/CMFPlone/tests/testSyndication.py
M Products/CMFPlone/tests/testURLTool.py

b'diff --git a/Products/CMFPlone/tests/PloneTestCase.py b/Products/CMFPlone/tests/PloneTestCase.py\nindex 027cda1f27..0c83868c31 100644\n--- a/Products/CMFPlone/tests/PloneTestCase.py\n+++ b/Products/CMFPlone/tests/PloneTestCase.py\n@@ -25,7 +25,7 @@ def setRequestMethod(self, method):\n \n     def getAuthenticator(self):\n         tag = AuthenticatorView(\'context\', \'request\').authenticator()\n-        pattern = \'<input .*name="(\\w+)".*value="(\\w+)"\'\n+        pattern = r\'<input .*name="(\\w+)".*value="(\\w+)"\'\n         return match(pattern, tag).groups()\n \n     def setupAuthenticator(self):\ndiff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py\nindex 185d8b5346..3ec8577763 100644\n--- a/Products/CMFPlone/tests/testSyndication.py\n+++ b/Products/CMFPlone/tests/testSyndication.py\n@@ -234,19 +234,19 @@ def afterSetUp(self):\n     def test_atom(self):\n         xml = self.folder.restrictedTraverse("@@atom.xml")()\n         self.assertTrue(len(re.findall(\'<entry>\', xml)) == 5)\n-        news1_feed = \'<entry>\\s*<title>News 1</title>\\s*\' \\\n-                     \'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n-                     \'<id>urn:syndication:{1}</id>\\s*\' \\\n-                     \'<summary>The news item #1</summary>\\s*\' \\\n-                     \'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news1.absolute_url(),\n+        news1_feed = r\'<entry>\\s*<title>News 1</title>\\s*\' \\\n+                     r\'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n+                     r\'<id>urn:syndication:{1}</id>\\s*\' \\\n+                     r\'<summary>The news item #1</summary>\\s*\' \\\n+                     r\'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news1.absolute_url(),\n                                                                                                        self.news1.UID(),\n                                                                                                        self.folder.absolute_url())\n         self.assertTrue(re.search(news1_feed, xml) is not None)\n         self.assertTrue(re.search(BODY_TEXT, xml) is not None)\n-        news2_feed = \'<entry>\\s*<title>News 2</title>\\s*\' \\\n-                     \'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n-                     \'<id>urn:syndication:{1}</id>\\s*\' \\\n-                     \'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news2.absolute_url(),\n+        news2_feed = r\'<entry>\\s*<title>News 2</title>\\s*\' \\\n+                     r\'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n+                     r\'<id>urn:syndication:{1}</id>\\s*\' \\\n+                     r\'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news2.absolute_url(),\n                                                                                                        self.news2.UID(),\n                                                                                                        self.folder.absolute_url())\n         self.assertTrue(re.search(news2_feed, xml) is not None)\n@@ -257,29 +257,29 @@ def test_atom(self):\n     def test_rss1(self):\n         xml = self.folder.restrictedTraverse("@@RSS")()\n         self.assertTrue(len(re.findall(\'<item \', xml)) == 5)\n-        news_feed = \'<item rdf:about="{0}">\\s*<title>News 1</title>\\s*\' \\\n-                    \'<link>{0}</link>\\s*\' \\\n-                    \'<description>The news item #1</description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n+        news_feed = r\'<item rdf:about="{0}">\\s*<title>News 1</title>\\s*\' \\\n+                    r\'<link>{0}</link>\\s*\' \\\n+                    r\'<description>The news item #1</description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n                         self.news1.absolute_url())\n         self.assertTrue(re.search(news_feed, xml) is not None)\n-        news_feed = \'<item rdf:about="{0}">\\s*<title>News 2</title>\\s*\' \\\n-                    \'<link>{0}</link>\\s*\' \\\n-                    \'<description></description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n+        news_feed = r\'<item rdf:about="{0}">\\s*<title>News 2</title>\\s*\' \\\n+                    r\'<link>{0}</link>\\s*\' \\\n+                    r\'<description></description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n                         self.news2.absolute_url())\n         self.assertTrue(re.search(news_feed, xml) is not None)\n \n     def test_rss2(self):\n         xml = self.folder.restrictedTraverse("@@rss.xml")()\n         self.assertTrue(len(re.findall(\'<item>\', xml)) == 5)\n-        news_feed = \'<item>\\s*<title>News 1</title>\\s*\' \\\n-                    \'<description>The news item #1</description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n+        news_feed = r\'<item>\\s*<title>News 1</title>\\s*\' \\\n+                    r\'<description>The news item #1</description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n         self.assertTrue(re.search(news_feed, xml) is not None)\n-        news_feed = \'<item>\\s*<title>News 2</title>\\s*\' \\\n-                    \'<description></description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n+        news_feed = r\'<item>\\s*<title>News 2</title>\\s*\' \\\n+                    r\'<description></description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n         self.assertTrue(re.search(news_feed, xml) is not None)\n \n \ndiff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py\nindex 8c6e3dcf02..45ac973422 100644\n--- a/Products/CMFPlone/tests/testURLTool.py\n+++ b/Products/CMFPlone/tests/testURLTool.py\n@@ -141,9 +141,9 @@ def test_double_back_slash(self):\n     def test_escape(self):\n         url_tool = self._makeOne()\n         iURLiP = url_tool.isURLInPortal\n-        self.assertFalse(iURLiP(\'\\/\\/www.example.com\'))\n-        self.assertFalse(iURLiP(\'\\%2F\\%2Fwww.example.com\'))\n-        self.assertFalse(iURLiP(\'\\%2f\\%2fwww.example.com\'))\n+        self.assertFalse(iURLiP(r\'\\/\\/www.example.com\'))\n+        self.assertFalse(iURLiP(r\'\\%2F\\%2Fwww.example.com\'))\n+        self.assertFalse(iURLiP(r\'\\%2f\\%2fwww.example.com\'))\n         self.assertFalse(iURLiP(\'%2F%2Fwww.example.com\'))\n         self.assertFalse(iURLiP(\'%2f%2fwww.example.com\'))\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-15T22:34:25+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/a159f2429316fd0ac489eda78b3421240976ec6e

Added missing import of OFS.ObjectManager.REPLACEABLE.

The deprecated ReplaceableWrapper cannot really have worked without this.

Files changed:
M Products/CMFPlone/PloneFolder.py

b'diff --git a/Products/CMFPlone/PloneFolder.py b/Products/CMFPlone/PloneFolder.py\nindex 6df2524380..48fa56cc93 100644\n--- a/Products/CMFPlone/PloneFolder.py\n+++ b/Products/CMFPlone/PloneFolder.py\n@@ -8,6 +8,7 @@\n from Acquisition import aq_parent\n from ComputedAttribute import ComputedAttribute\n from OFS.Folder import Folder\n+from OFS.ObjectManager import REPLACEABLE\n from OFS.OrderSupport import OrderSupport\n from plone.memoize import view\n from Products.CMFCore.CMFCatalogAware import CatalogAware\n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-15T22:34:25+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/d91c110d9f5c6df1dcf6a3606c4dae838f4f38ae

Removed unused import of ReplaceableWrapper in Portal.py.

Files changed:
M Products/CMFPlone/Portal.py

b'diff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 8dec1d662c..1efe6ca447 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -17,7 +17,6 @@\n from Products.CMFPlone import bbb\n from Products.CMFPlone.DublinCore import DefaultDublinCoreImpl\n from Products.CMFPlone.PloneFolder import OrderedContainer\n-from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n from Products.CMFPlone.interfaces.syndication import ISyndicatable\n from Products.CMFPlone.permissions import AddPortalContent\n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-15T22:34:25+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/ca99b35832d5341576f06dde3a6d3293759162e2

Use encodebytes instead of deprecated encodestring, where possible.

Files changed:
M Products/CMFPlone/tests/testCookieAuth.py

b"diff --git a/Products/CMFPlone/tests/testCookieAuth.py b/Products/CMFPlone/tests/testCookieAuth.py\nindex 9be55ad09b..9ae8ae1810 100644\n--- a/Products/CMFPlone/tests/testCookieAuth.py\n+++ b/Products/CMFPlone/tests/testCookieAuth.py\n@@ -5,9 +5,13 @@\n from plone.testing.zope import Browser\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \n-import base64\n import unittest\n \n+try:\n+    from base64 import encodebytes\n+except ImportError:\n+    from base64 import encodestring as encodebytes\n+\n \n class TestCookieAuth(unittest.TestCase):\n \n@@ -18,7 +22,7 @@ def setUp(self):\n         self.folder = self.portal['test-folder']\n         self.browser = Browser(self.layer['app'])\n         self.auth_info = '%s:%s' % (TEST_USER_NAME, TEST_USER_PASSWORD)\n-        self.cookie = base64.encodestring(self.auth_info.encode('utf8'))[:-1]\n+        self.cookie = encodebytes(self.auth_info.encode('utf8'))[:-1]\n         self.folder.manage_permission('View', ['Manager'], acquire=0)\n         logout()\n \n"

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-15T22:34:26+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/162b232906c2a572566e5e4159415e549a000d27

Fixed various deprecation warnings in tests.

Files changed:
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
M Products/CMFPlone/tests/pwreset_browser.rst
M Products/CMFPlone/tests/test_nogopip.py

b'diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\nindex 82d0d9f680..a9d33c4632 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n@@ -27,8 +27,7 @@ def setUp(self):\n         # we have to create a user on the zope root. this just does not work\n         # with plone.app.testing and TEST_USER or SITE_OWNER\n         self.app.acl_users.userFolderAddUser(\'app\', \'secret\', [\'Manager\'], [])\n-        from plone.testing import z2\n-        z2.login(self.app[\'acl_users\'], \'app\')\n+        login(self.app[\'acl_users\'], \'app\')\n \n         import transaction\n         transaction.commit()\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\nindex 554d1655ec..62fbbc1953 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n@@ -190,7 +190,7 @@ def test_dont_update_settings_when_switch_types(self):\n         self.assertTrue(\n             \'Redirect immediately to link target\' in self.browser.contents\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             self.browser.getControl(\n                 \'Redirect immediately to link target\').selected,\n             True\n@@ -221,7 +221,7 @@ def test_dont_update_redirect_links_when_not_in_link_settings(self):\n         self.assertTrue(\n             \'Redirect immediately to link target\' in self.browser.contents\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             self.browser.getControl(\n                 \'Redirect immediately to link target\').selected,\n             True\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 65bd1d1315..7afcfa10ae 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -418,7 +418,7 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> address = re.search(b\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  >>> address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n \n Now that we have the address, we will reset our password:\n \n@@ -504,7 +504,7 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> address = re.search(b\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  >>> address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n \n Now that we have the address, we will reset our password:\n \ndiff --git a/Products/CMFPlone/tests/test_nogopip.py b/Products/CMFPlone/tests/test_nogopip.py\nindex 5de41dea86..9dd653bfbc 100644\n--- a/Products/CMFPlone/tests/test_nogopip.py\n+++ b/Products/CMFPlone/tests/test_nogopip.py\n@@ -26,12 +26,10 @@ def query(self, **kw):\n     def testGetObjPositionInParentIndex(self):\n         from plone.folder.nogopip import GopipIndex\n         catalog = self.portal.portal_catalog\n-        self.failUnless(\'getObjPositionInParent\' in catalog.indexes())\n-        self.failUnless(\n-            isinstance(\n-                catalog.Indexes[\'getObjPositionInParent\'],\n-                GopipIndex\n-            )\n+        self.assertIn(\'getObjPositionInParent\', catalog.indexes())\n+        self.assertIsInstance(\n+            catalog.Indexes[\'getObjPositionInParent\'],\n+            GopipIndex\n         )\n \n     def testSearchOneFolder(self):\n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-16T09:08:44+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/2d58184318ffc5873433765759cd6e286bb05e8d

Fixed tests after fixing deprecation warnings.

Files changed:
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py
M Products/CMFPlone/tests/pwreset_browser.rst

b'diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\nindex a9d33c4632..71cffa0fd5 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n@@ -3,6 +3,7 @@\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n+from plone.testing.zope import login\n import unittest\n from App.ApplicationManager import ApplicationManager\n from pkg_resources import get_distribution\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 7afcfa10ae..892352dce5 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -418,7 +418,11 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  >>> import six\n+  >>> if six.PY2:\n+  ...     address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  ... else:\n+  ...     address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n \n Now that we have the address, we will reset our password:\n \n@@ -504,7 +508,10 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  >>> if six.PY2:\n+  ...     address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  ... else:\n+  ...     address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n \n Now that we have the address, we will reset our password:\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-16T11:04:35+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/d50dbb1d15e7559ca846ba3eb222a61b92746a32

Fixed SyntaxError on Py 2 in tests.

`rb'string'` is a SyntaxError on Python 2, and I though I could fix this with six, but it did not work.

Files changed:
M Products/CMFPlone/tests/pwreset_browser.rst

b'diff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 892352dce5..7cc16a1a76 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -418,11 +418,12 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> import six\n-  >>> if six.PY2:\n-  ...     address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n-  ... else:\n-  ...     address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+\n+We need to be careful to keep this working in both Python 2 and 3 without invalid escape sequences.\n+It is best to convert msgtext to text first.\n+\n+  >>> msgtext = msgtext.decode()\n+  >>> address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0]\n \n Now that we have the address, we will reset our password:\n \n@@ -508,10 +509,8 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> if six.PY2:\n-  ...     address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n-  ... else:\n-  ...     address = re.search(rb\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  >>> msgtext = msgtext.decode()\n+  >>> address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0]\n \n Now that we have the address, we will reset our password:\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-16T13:32:04+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/325fc05d42c5c6ef1e7f7c528c0ca060b37eddff

Merge pull request #3174 from plone/maurits/fix-warnings-2

Fix various deprecation warning, mostly in tests [5.2]

Files changed:
A news/3130.bugfix.3
M Products/CMFPlone/PloneFolder.py
M Products/CMFPlone/Portal.py
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py
M Products/CMFPlone/tests/PloneTestCase.py
M Products/CMFPlone/tests/pwreset_browser.rst
M Products/CMFPlone/tests/testCookieAuth.py
M Products/CMFPlone/tests/testSyndication.py
M Products/CMFPlone/tests/testURLTool.py
M Products/CMFPlone/tests/test_nogopip.py

b'diff --git a/Products/CMFPlone/PloneFolder.py b/Products/CMFPlone/PloneFolder.py\nindex 6df2524380..48fa56cc93 100644\n--- a/Products/CMFPlone/PloneFolder.py\n+++ b/Products/CMFPlone/PloneFolder.py\n@@ -8,6 +8,7 @@\n from Acquisition import aq_parent\n from ComputedAttribute import ComputedAttribute\n from OFS.Folder import Folder\n+from OFS.ObjectManager import REPLACEABLE\n from OFS.OrderSupport import OrderSupport\n from plone.memoize import view\n from Products.CMFCore.CMFCatalogAware import CatalogAware\ndiff --git a/Products/CMFPlone/Portal.py b/Products/CMFPlone/Portal.py\nindex 8dec1d662c..1efe6ca447 100644\n--- a/Products/CMFPlone/Portal.py\n+++ b/Products/CMFPlone/Portal.py\n@@ -17,7 +17,6 @@\n from Products.CMFPlone import bbb\n from Products.CMFPlone.DublinCore import DefaultDublinCoreImpl\n from Products.CMFPlone.PloneFolder import OrderedContainer\n-from Products.CMFPlone.PloneFolder import ReplaceableWrapper\n from Products.CMFPlone.interfaces.siteroot import IPloneSiteRoot\n from Products.CMFPlone.interfaces.syndication import ISyndicatable\n from Products.CMFPlone.permissions import AddPortalContent\ndiff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex 90b17e3ca3..40c73a101a 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -11,6 +11,7 @@\n from Products.CMFPlone.browser.interfaces import INavigationTabs\n from Products.CMFPlone.browser.interfaces import ISiteMap\n from Products.CMFPlone.browser.navtree import SitemapQueryBuilder\n+from Products.CMFPlone.defaultpage import check_default_page_via_view\n from Products.CMFPlone.interfaces import IHideFromBreadcrumbs\n from Products.CMFPlone.interfaces import INavigationSchema\n from Products.Five import BrowserView\n@@ -184,7 +185,7 @@ def breadcrumbs(self):\n \n         # Check to see if the current page is a folder default view, if so\n         # get breadcrumbs from the parent folder\n-        if utils.isDefaultPage(context, self.request):\n+        if check_default_page_via_view(context, self.request):\n             currentPath = \'/\'.join(utils.parent(context).getPhysicalPath())\n         else:\n             currentPath = \'/\'.join(context.getPhysicalPath())\n@@ -245,7 +246,7 @@ def breadcrumbs(self):\n \n         # don\'t show default pages in breadcrumbs or pages above the navigation\n         # root\n-        if not utils.isDefaultPage(context, request) \\\n+        if not check_default_page_via_view(context, request) \\\n            and not rootPath.startswith(itemPath):\n             base += ({\n                 \'absolute_url\': item_url,\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\nindex 82d0d9f680..71cffa0fd5 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_maintenance.py\n@@ -3,6 +3,7 @@\n from plone.app.testing import TEST_USER_NAME\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.testing.zope import Browser\n+from plone.testing.zope import login\n import unittest\n from App.ApplicationManager import ApplicationManager\n from pkg_resources import get_distribution\n@@ -27,8 +28,7 @@ def setUp(self):\n         # we have to create a user on the zope root. this just does not work\n         # with plone.app.testing and TEST_USER or SITE_OWNER\n         self.app.acl_users.userFolderAddUser(\'app\', \'secret\', [\'Manager\'], [])\n-        from plone.testing import z2\n-        z2.login(self.app[\'acl_users\'], \'app\')\n+        login(self.app[\'acl_users\'], \'app\')\n \n         import transaction\n         transaction.commit()\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\nindex 554d1655ec..62fbbc1953 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_types.py\n@@ -190,7 +190,7 @@ def test_dont_update_settings_when_switch_types(self):\n         self.assertTrue(\n             \'Redirect immediately to link target\' in self.browser.contents\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             self.browser.getControl(\n                 \'Redirect immediately to link target\').selected,\n             True\n@@ -221,7 +221,7 @@ def test_dont_update_redirect_links_when_not_in_link_settings(self):\n         self.assertTrue(\n             \'Redirect immediately to link target\' in self.browser.contents\n         )\n-        self.assertEquals(\n+        self.assertEqual(\n             self.browser.getControl(\n                 \'Redirect immediately to link target\').selected,\n             True\ndiff --git a/Products/CMFPlone/tests/PloneTestCase.py b/Products/CMFPlone/tests/PloneTestCase.py\nindex 027cda1f27..0c83868c31 100644\n--- a/Products/CMFPlone/tests/PloneTestCase.py\n+++ b/Products/CMFPlone/tests/PloneTestCase.py\n@@ -25,7 +25,7 @@ def setRequestMethod(self, method):\n \n     def getAuthenticator(self):\n         tag = AuthenticatorView(\'context\', \'request\').authenticator()\n-        pattern = \'<input .*name="(\\w+)".*value="(\\w+)"\'\n+        pattern = r\'<input .*name="(\\w+)".*value="(\\w+)"\'\n         return match(pattern, tag).groups()\n \n     def setupAuthenticator(self):\ndiff --git a/Products/CMFPlone/tests/pwreset_browser.rst b/Products/CMFPlone/tests/pwreset_browser.rst\nindex 65bd1d1315..7cc16a1a76 100644\n--- a/Products/CMFPlone/tests/pwreset_browser.rst\n+++ b/Products/CMFPlone/tests/pwreset_browser.rst\n@@ -418,7 +418,12 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> address = re.search(b\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+\n+We need to be careful to keep this working in both Python 2 and 3 without invalid escape sequences.\n+It is best to convert msgtext to text first.\n+\n+  >>> msgtext = msgtext.decode()\n+  >>> address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0]\n \n Now that we have the address, we will reset our password:\n \n@@ -504,7 +509,8 @@ then we extract the address that lets us reset our password:\n   >>> msgtext = quopri.decodestring(message.get_payload())\n   >>> b"Please activate it by visiting" in msgtext\n   True\n-  >>> address = re.search(b\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0].decode()\n+  >>> msgtext = msgtext.decode()\n+  >>> address = re.search(r\'(http://nohost/plone/passwordreset/[a-z0-9]+\\?userid=[\\w]*)\\s\', msgtext).groups()[0]\n \n Now that we have the address, we will reset our password:\n \ndiff --git a/Products/CMFPlone/tests/testCookieAuth.py b/Products/CMFPlone/tests/testCookieAuth.py\nindex 9be55ad09b..9ae8ae1810 100644\n--- a/Products/CMFPlone/tests/testCookieAuth.py\n+++ b/Products/CMFPlone/tests/testCookieAuth.py\n@@ -5,9 +5,13 @@\n from plone.testing.zope import Browser\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_FUNCTIONAL_TESTING\n \n-import base64\n import unittest\n \n+try:\n+    from base64 import encodebytes\n+except ImportError:\n+    from base64 import encodestring as encodebytes\n+\n \n class TestCookieAuth(unittest.TestCase):\n \n@@ -18,7 +22,7 @@ def setUp(self):\n         self.folder = self.portal[\'test-folder\']\n         self.browser = Browser(self.layer[\'app\'])\n         self.auth_info = \'%s:%s\' % (TEST_USER_NAME, TEST_USER_PASSWORD)\n-        self.cookie = base64.encodestring(self.auth_info.encode(\'utf8\'))[:-1]\n+        self.cookie = encodebytes(self.auth_info.encode(\'utf8\'))[:-1]\n         self.folder.manage_permission(\'View\', [\'Manager\'], acquire=0)\n         logout()\n \ndiff --git a/Products/CMFPlone/tests/testSyndication.py b/Products/CMFPlone/tests/testSyndication.py\nindex 185d8b5346..3ec8577763 100644\n--- a/Products/CMFPlone/tests/testSyndication.py\n+++ b/Products/CMFPlone/tests/testSyndication.py\n@@ -234,19 +234,19 @@ def afterSetUp(self):\n     def test_atom(self):\n         xml = self.folder.restrictedTraverse("@@atom.xml")()\n         self.assertTrue(len(re.findall(\'<entry>\', xml)) == 5)\n-        news1_feed = \'<entry>\\s*<title>News 1</title>\\s*\' \\\n-                     \'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n-                     \'<id>urn:syndication:{1}</id>\\s*\' \\\n-                     \'<summary>The news item #1</summary>\\s*\' \\\n-                     \'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news1.absolute_url(),\n+        news1_feed = r\'<entry>\\s*<title>News 1</title>\\s*\' \\\n+                     r\'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n+                     r\'<id>urn:syndication:{1}</id>\\s*\' \\\n+                     r\'<summary>The news item #1</summary>\\s*\' \\\n+                     r\'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news1.absolute_url(),\n                                                                                                        self.news1.UID(),\n                                                                                                        self.folder.absolute_url())\n         self.assertTrue(re.search(news1_feed, xml) is not None)\n         self.assertTrue(re.search(BODY_TEXT, xml) is not None)\n-        news2_feed = \'<entry>\\s*<title>News 2</title>\\s*\' \\\n-                     \'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n-                     \'<id>urn:syndication:{1}</id>\\s*\' \\\n-                     \'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news2.absolute_url(),\n+        news2_feed = r\'<entry>\\s*<title>News 2</title>\\s*\' \\\n+                     r\'<link rel="alternate" type="text/html" href="{0}" />\\s*\' \\\n+                     r\'<id>urn:syndication:{1}</id>\\s*\' \\\n+                     r\'<content type="xhtml" xml:base="{2}" xml:lang="en" xml:space="preserve">\'.format(self.news2.absolute_url(),\n                                                                                                        self.news2.UID(),\n                                                                                                        self.folder.absolute_url())\n         self.assertTrue(re.search(news2_feed, xml) is not None)\n@@ -257,29 +257,29 @@ def test_atom(self):\n     def test_rss1(self):\n         xml = self.folder.restrictedTraverse("@@RSS")()\n         self.assertTrue(len(re.findall(\'<item \', xml)) == 5)\n-        news_feed = \'<item rdf:about="{0}">\\s*<title>News 1</title>\\s*\' \\\n-                    \'<link>{0}</link>\\s*\' \\\n-                    \'<description>The news item #1</description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n+        news_feed = r\'<item rdf:about="{0}">\\s*<title>News 1</title>\\s*\' \\\n+                    r\'<link>{0}</link>\\s*\' \\\n+                    r\'<description>The news item #1</description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n                         self.news1.absolute_url())\n         self.assertTrue(re.search(news_feed, xml) is not None)\n-        news_feed = \'<item rdf:about="{0}">\\s*<title>News 2</title>\\s*\' \\\n-                    \'<link>{0}</link>\\s*\' \\\n-                    \'<description></description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n+        news_feed = r\'<item rdf:about="{0}">\\s*<title>News 2</title>\\s*\' \\\n+                    r\'<link>{0}</link>\\s*\' \\\n+                    r\'<description></description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'.format(\n                         self.news2.absolute_url())\n         self.assertTrue(re.search(news_feed, xml) is not None)\n \n     def test_rss2(self):\n         xml = self.folder.restrictedTraverse("@@rss.xml")()\n         self.assertTrue(len(re.findall(\'<item>\', xml)) == 5)\n-        news_feed = \'<item>\\s*<title>News 1</title>\\s*\' \\\n-                    \'<description>The news item #1</description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n+        news_feed = r\'<item>\\s*<title>News 1</title>\\s*\' \\\n+                    r\'<description>The news item #1</description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n         self.assertTrue(re.search(news_feed, xml) is not None)\n-        news_feed = \'<item>\\s*<title>News 2</title>\\s*\' \\\n-                    \'<description></description>\\s*\' \\\n-                    \'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n+        news_feed = r\'<item>\\s*<title>News 2</title>\\s*\' \\\n+                    r\'<description></description>\\s*\' \\\n+                    r\'<content:encoded xmlns:content="http://purl.org/rss/1.0/modules/content/"\'\n         self.assertTrue(re.search(news_feed, xml) is not None)\n \n \ndiff --git a/Products/CMFPlone/tests/testURLTool.py b/Products/CMFPlone/tests/testURLTool.py\nindex 8c6e3dcf02..45ac973422 100644\n--- a/Products/CMFPlone/tests/testURLTool.py\n+++ b/Products/CMFPlone/tests/testURLTool.py\n@@ -141,9 +141,9 @@ def test_double_back_slash(self):\n     def test_escape(self):\n         url_tool = self._makeOne()\n         iURLiP = url_tool.isURLInPortal\n-        self.assertFalse(iURLiP(\'\\/\\/www.example.com\'))\n-        self.assertFalse(iURLiP(\'\\%2F\\%2Fwww.example.com\'))\n-        self.assertFalse(iURLiP(\'\\%2f\\%2fwww.example.com\'))\n+        self.assertFalse(iURLiP(r\'\\/\\/www.example.com\'))\n+        self.assertFalse(iURLiP(r\'\\%2F\\%2Fwww.example.com\'))\n+        self.assertFalse(iURLiP(r\'\\%2f\\%2fwww.example.com\'))\n         self.assertFalse(iURLiP(\'%2F%2Fwww.example.com\'))\n         self.assertFalse(iURLiP(\'%2f%2fwww.example.com\'))\n \ndiff --git a/Products/CMFPlone/tests/test_nogopip.py b/Products/CMFPlone/tests/test_nogopip.py\nindex 5de41dea86..9dd653bfbc 100644\n--- a/Products/CMFPlone/tests/test_nogopip.py\n+++ b/Products/CMFPlone/tests/test_nogopip.py\n@@ -26,12 +26,10 @@ def query(self, **kw):\n     def testGetObjPositionInParentIndex(self):\n         from plone.folder.nogopip import GopipIndex\n         catalog = self.portal.portal_catalog\n-        self.failUnless(\'getObjPositionInParent\' in catalog.indexes())\n-        self.failUnless(\n-            isinstance(\n-                catalog.Indexes[\'getObjPositionInParent\'],\n-                GopipIndex\n-            )\n+        self.assertIn(\'getObjPositionInParent\', catalog.indexes())\n+        self.assertIsInstance(\n+            catalog.Indexes[\'getObjPositionInParent\'],\n+            GopipIndex\n         )\n \n     def testSearchOneFolder(self):\ndiff --git a/news/3130.bugfix.3 b/news/3130.bugfix.3\nnew file mode 100644\nindex 0000000000..cd3f6d8005\n--- /dev/null\n+++ b/news/3130.bugfix.3\n@@ -0,0 +1,2 @@\n+Fixed use of own ``utils.isDefaultPage``, which should be ``defaultpage.check_default_page_via_view``.\n+[maurits]\n'

