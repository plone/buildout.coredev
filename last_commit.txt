Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-10T23:05:22+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/64f4fec7bdae01dad8e715fca357b47397bf1e44

Added test for saving the advanced control panel.

This should help surface some `WrongType`  exceptions.

Files changed:
M src/plone/app/theming/tests/test_controlpanel.py

b'diff --git a/src/plone/app/theming/tests/test_controlpanel.py b/src/plone/app/theming/tests/test_controlpanel.py\nindex 53fcdb5..ce0f5a4 100644\n--- a/src/plone/app/theming/tests/test_controlpanel.py\n+++ b/src/plone/app/theming/tests/test_controlpanel.py\n@@ -39,6 +39,15 @@ def goto_controlpanel(self):\n             self.portal.absolute_url() + \'/@@theming-controlpanel\'\n         )\n \n+    def test_save_advanced(self):\n+        # Simply saving the advanced panel without changes could already give a WrongType error.\n+        # See for example https://github.com/plone/plone.app.theming/issues/179\n+        # but there are more.\n+        self.browser.handleErrors = False\n+        self.goto_controlpanel()\n+        button = self.browser.getControl(name="form.button.AdvancedSave")\n+        button.click()\n+\n     def test_create_theme(self):\n         pass\n     #     self.goto_controlpanel()\n@@ -75,7 +84,7 @@ def test_upload_theme_file_withdata(self):\n Content-Type: image/png\n \n \n----blah---           \n+---blah---\n             """,\n # Bug in testbrowser prevents this working\n #            content_type=\'multipart/form-data; boundary=---blah---\'\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-10T23:07:58+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/865d37bda7dc73af66c196637a067be80bbaf884

Revert "Do not call processInputs."

This reverts commit dd4f7fc15d1d7ec890780b1f64ad433efaf4fb9e.

Files changed:
M src/plone/app/theming/browser/controlpanel.py
M src/plone/app/theming/browser/mapper.py

b'diff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex d53ba8b..aadca25 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -22,6 +22,7 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.interfaces import ILinkSchema\n+from Products.Five.browser.decode import processInputs\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -111,6 +112,7 @@ def set_ext_links_open_new_window(self, value):\n \n     def update(self):\n         # XXX: complexity too high: refactoring needed\n+        processInputs(self.request)\n         self._setup()\n         self.errors = {}\n         form = self.request.form\ndiff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex af5c2fe..27c7e3e 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -17,6 +17,7 @@\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.resources import add_bundle_on_request\n+from Products.Five.browser.decode import processInputs\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from repoze.xmliter.utils import getHTMLSerializer\n@@ -60,6 +61,7 @@ def development(self):\n \n     def setup(self):\n         self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n+        processInputs(self.request)\n \n         self.resourceDirectory = self.context\n         self.theme = getThemeFromResourceDirectory(self.context)\n@@ -216,6 +218,9 @@ def getFrame(self):\n         - a query string parameter ``title`` can be set to give a new page\n           title\n         """\n+\n+        processInputs(self.request)\n+\n         path = self.request.form.get(\'path\', \'/\')\n         theme = self.request.form.get(\'theme\', \'off\')\n         links = self.request.form.get(\'links\', None)\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-10T23:17:02+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/12e382fa754fbf8f9e32698a697ce5021c9b4505

Import processInputs conditionally.

Files changed:
M src/plone/app/theming/browser/controlpanel.py
M src/plone/app/theming/browser/mapper.py

b'diff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex aadca25..4acef1c 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -22,7 +22,6 @@\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import safe_unicode\n from Products.CMFPlone.interfaces import ILinkSchema\n-from Products.Five.browser.decode import processInputs\n from Products.statusmessages.interfaces import IStatusMessage\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n@@ -35,6 +34,14 @@\n import zipfile\n \n \n+try:\n+    # Zope 4\n+    from Products.Five.browser.decode import processInputs\n+except ImportError:\n+    # Zope 5\n+    processInputs = None\n+\n+\n logger = logging.getLogger(\'plone.app.theming\')\n \n \n@@ -112,7 +119,8 @@ def set_ext_links_open_new_window(self, value):\n \n     def update(self):\n         # XXX: complexity too high: refactoring needed\n-        processInputs(self.request)\n+        if processInputs is not None:\n+            processInputs(self.request)\n         self._setup()\n         self.errors = {}\n         form = self.request.form\ndiff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex 27c7e3e..5008c35 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -17,7 +17,6 @@\n from Products.CMFCore.utils import _getAuthenticatedUser\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.resources import add_bundle_on_request\n-from Products.Five.browser.decode import processInputs\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n from repoze.xmliter.utils import getHTMLSerializer\n@@ -36,6 +35,14 @@\n import six\n \n \n+try:\n+    # Zope 4\n+    from Products.Five.browser.decode import processInputs\n+except ImportError:\n+    # Zope 5\n+    processInputs = None\n+\n+\n class ThemeMapper(BrowserView):\n \n     theme_error_template = ViewPageTemplateFile("theme-error.pt")\n@@ -61,7 +68,8 @@ def development(self):\n \n     def setup(self):\n         self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n-        processInputs(self.request)\n+        if processInputs is not None:\n+            processInputs(self.request)\n \n         self.resourceDirectory = self.context\n         self.theme = getThemeFromResourceDirectory(self.context)\n@@ -218,8 +226,8 @@ def getFrame(self):\n         - a query string parameter ``title`` can be set to give a new page\n           title\n         """\n-\n-        processInputs(self.request)\n+        if processInputs is not None:\n+            processInputs(self.request)\n \n         path = self.request.form.get(\'path\', \'/\')\n         theme = self.request.form.get(\'theme\', \'off\')\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-10T23:21:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/e6d07c7000189a8844038325b72cdb61b1c1cf64

Do not make a string from custom_css.

The field is SourceText, which is unicode on Python 2, and str on Python 3.
So on Python 2, creating a string of it results in a WrongType error.
See https://github.com/plone/plone.app.theming/issues/183

Files changed:
M src/plone/app/theming/browser/controlpanel.py

b'diff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex 4acef1c..819ec0f 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -216,7 +216,7 @@ def update(self):\n                 self.theme_settings.hostnameBlacklist = self.hostname_blacklist\n                 if custom_css != self.theme_settings.custom_css:\n                     self.theme_settings.custom_css_timestamp = datetime.now()\n-                self.theme_settings.custom_css = str(custom_css)\n+                self.theme_settings.custom_css = custom_css\n                 self.theme_settings.doctype = doctype\n \n                 # Theme base settings\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-10T23:28:43+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/9c64d46bf54ebf5259a8ccf400d329991a2cb70a

Revert "fix hostnameBlacklist (Theming ControlPanel) in Py3"

This reverts commit d6db78dbb930837c296aae87cea16bacde391a9b.

No longer needed after calling processInputs.

Files changed:
M src/plone/app/theming/browser/controlpanel.pt
M src/plone/app/theming/browser/controlpanel.py

b'diff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex 674f8b4..51de391 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -460,7 +460,7 @@\n                     <div\n                         tal:define="error errors/hostnameBlacklist | nothing;\n                                     hostnameBlacklist view/theme_settings/hostnameBlacklist | python:[];\n-                                    hostnameBlacklist python: view.hostname_blacklist or hostnameBlacklist"\n+                                    hostnameBlacklist python:request.get(\'hostnameBlacklist\', hostnameBlacklist)"\n                         tal:attributes="class python:\'field error\' if error else \'field\'">\n \n                         <label for="hostnameBlacklist" i18n:translate="label_hostname_blacklist">Unthemed host names</label>\n@@ -481,7 +481,7 @@\n                             id="hostnameBlacklist"\n                             rows="5"\n                             cols="50"\n-                            tal:content="python: \'\\n\'.join(hostnameBlacklist)"\n+                            tal:content="python:\'\\n\'.join(hostnameBlacklist)"\n                             ></textarea>\n \n                     </div>\ndiff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex 819ec0f..3a51928 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -60,11 +60,6 @@ def site_url(self):\n         """\n         return getSite().absolute_url()\n \n-    @property\n-    def hostname_blacklist(self):\n-        hostname_blacklist = self.request.get(\'hostnameBlacklist\', [])\n-        return [host.decode() for host in hostname_blacklist]\n-\n     def __call__(self):\n         self.pskin = getToolByName(self.context, \'portal_skins\')\n         if self.update():\n@@ -180,6 +175,8 @@ def update(self):\n             prefix = form.get(\'absolutePrefix\', None)\n             doctype = str(form.get(\'doctype\', ""))\n \n+            hostnameBlacklist = form.get(\'hostnameBlacklist\', [])\n+\n             parameterExpressions = {}\n             parameterExpressionsList = form.get(\'parameterExpressions\', [])\n \n@@ -213,7 +210,7 @@ def update(self):\n                 self.theme_settings.rules = rules\n                 self.theme_settings.absolutePrefix = prefix\n                 self.theme_settings.parameterExpressions = parameterExpressions\n-                self.theme_settings.hostnameBlacklist = self.hostname_blacklist\n+                self.theme_settings.hostnameBlacklist = hostnameBlacklist\n                 if custom_css != self.theme_settings.custom_css:\n                     self.theme_settings.custom_css_timestamp = datetime.now()\n                 self.theme_settings.custom_css = custom_css\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-10T23:38:32+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/5cb479cb9e8ed343de15ce48ba35853fb8d1e0fd

Added changelog entry for #183 fix.

Files changed:
A news/183.bugfix

b'diff --git a/news/183.bugfix b/news/183.bugfix\nnew file mode 100644\nindex 0000000..f7cbb05\n--- /dev/null\n+++ b/news/183.bugfix\n@@ -0,0 +1,4 @@\n+Fix various ``WrongType`` exceptions when saving the control panel.\n+This was introduces by the ``processInputs`` change in version 4.0.5.\n+See `issue 183 <https://github.com/plone/plone.app.theming/issues/183>`_.\n+[maurits]\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-11T10:11:25+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/a360731d9a56f506480a1146965ac1299f0d82e7

Added upgrade step to reload the theming registry.

Otherwise when you upgrade from Plone 5.2.1, and try to save the theming control panel, you get an error:

```
Traceback (innermost last):
  Module ZPublisher.WSGIPublisher, line 162, in transaction_pubevents
  Module ZPublisher.WSGIPublisher, line 359, in publish_module
  Module ZPublisher.WSGIPublisher, line 262, in publish
  Module ZPublisher.mapply, line 85, in mapply
  Module ZPublisher.WSGIPublisher, line 63, in call_object
  Module plone.app.theming.browser.controlpanel, line 65, in __call__
  Module plone.app.theming.browser.controlpanel, line 215, in update
  Module plone.registry.recordsproxy, line 59, in __setattr__
AttributeError: custom_css_timestamp
```

Files changed:
M src/plone/app/theming/configure.zcml
M src/plone/app/theming/profiles/default/metadata.xml

b'diff --git a/src/plone/app/theming/configure.zcml b/src/plone/app/theming/configure.zcml\nindex 7e6daca..c3f46bc 100644\n--- a/src/plone/app/theming/configure.zcml\n+++ b/src/plone/app/theming/configure.zcml\n@@ -26,15 +26,6 @@\n         provides="Products.GenericSetup.interfaces.EXTENSION"\n         />\n \n-    <gs:upgradeStep\n-        title="Update registry"\n-        source="*"\n-        destination="1000"\n-        handler=".upgrade.update_registry"\n-        sortkey="1"\n-        profile="plone.app.theming:default"\n-        />\n-\n     <gs:upgradeStep\n         title="Combine Theming control panels"\n         source="1000"\n@@ -44,6 +35,14 @@\n         profile="plone.app.theming:default"\n         />\n \n+    <gs:upgradeStep\n+        title="Update registry"\n+        source="1001"\n+        destination="1002"\n+        handler=".upgrade.update_registry"\n+        profile="plone.app.theming:default"\n+        />\n+\n     <!-- Transform order 8850 - apply theme transform -->\n     <adapter\n         name="plone.app.theming.transform"\ndiff --git a/src/plone/app/theming/profiles/default/metadata.xml b/src/plone/app/theming/profiles/default/metadata.xml\nindex 0da5f31..f286126 100644\n--- a/src/plone/app/theming/profiles/default/metadata.xml\n+++ b/src/plone/app/theming/profiles/default/metadata.xml\n@@ -1,5 +1,5 @@\n <metadata>\n-    <version>1001</version>\n+    <version>1002</version>\n     <dependencies>\n         <dependency>profile-plone.app.registry:default</dependency>\n     </dependencies>\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-06-11T20:31:42+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.theming/commit/fdbb576850211748bf523d04dfb6382f36bfa08a

Merge pull request #184 from plone/maurits/issue-183-save-advanced-controlpanel-wrongtype

Call processInputs when available, fixing WrongType

Files changed:
A news/183.bugfix
M src/plone/app/theming/browser/controlpanel.pt
M src/plone/app/theming/browser/controlpanel.py
M src/plone/app/theming/browser/mapper.py
M src/plone/app/theming/configure.zcml
M src/plone/app/theming/profiles/default/metadata.xml
M src/plone/app/theming/tests/test_controlpanel.py

b'diff --git a/news/183.bugfix b/news/183.bugfix\nnew file mode 100644\nindex 0000000..f7cbb05\n--- /dev/null\n+++ b/news/183.bugfix\n@@ -0,0 +1,4 @@\n+Fix various ``WrongType`` exceptions when saving the control panel.\n+This was introduces by the ``processInputs`` change in version 4.0.5.\n+See `issue 183 <https://github.com/plone/plone.app.theming/issues/183>`_.\n+[maurits]\ndiff --git a/src/plone/app/theming/browser/controlpanel.pt b/src/plone/app/theming/browser/controlpanel.pt\nindex 674f8b4..51de391 100644\n--- a/src/plone/app/theming/browser/controlpanel.pt\n+++ b/src/plone/app/theming/browser/controlpanel.pt\n@@ -460,7 +460,7 @@\n                     <div\n                         tal:define="error errors/hostnameBlacklist | nothing;\n                                     hostnameBlacklist view/theme_settings/hostnameBlacklist | python:[];\n-                                    hostnameBlacklist python: view.hostname_blacklist or hostnameBlacklist"\n+                                    hostnameBlacklist python:request.get(\'hostnameBlacklist\', hostnameBlacklist)"\n                         tal:attributes="class python:\'field error\' if error else \'field\'">\n \n                         <label for="hostnameBlacklist" i18n:translate="label_hostname_blacklist">Unthemed host names</label>\n@@ -481,7 +481,7 @@\n                             id="hostnameBlacklist"\n                             rows="5"\n                             cols="50"\n-                            tal:content="python: \'\\n\'.join(hostnameBlacklist)"\n+                            tal:content="python:\'\\n\'.join(hostnameBlacklist)"\n                             ></textarea>\n \n                     </div>\ndiff --git a/src/plone/app/theming/browser/controlpanel.py b/src/plone/app/theming/browser/controlpanel.py\nindex d53ba8b..3a51928 100644\n--- a/src/plone/app/theming/browser/controlpanel.py\n+++ b/src/plone/app/theming/browser/controlpanel.py\n@@ -34,6 +34,14 @@\n import zipfile\n \n \n+try:\n+    # Zope 4\n+    from Products.Five.browser.decode import processInputs\n+except ImportError:\n+    # Zope 5\n+    processInputs = None\n+\n+\n logger = logging.getLogger(\'plone.app.theming\')\n \n \n@@ -52,11 +60,6 @@ def site_url(self):\n         """\n         return getSite().absolute_url()\n \n-    @property\n-    def hostname_blacklist(self):\n-        hostname_blacklist = self.request.get(\'hostnameBlacklist\', [])\n-        return [host.decode() for host in hostname_blacklist]\n-\n     def __call__(self):\n         self.pskin = getToolByName(self.context, \'portal_skins\')\n         if self.update():\n@@ -111,6 +114,8 @@ def set_ext_links_open_new_window(self, value):\n \n     def update(self):\n         # XXX: complexity too high: refactoring needed\n+        if processInputs is not None:\n+            processInputs(self.request)\n         self._setup()\n         self.errors = {}\n         form = self.request.form\n@@ -170,6 +175,8 @@ def update(self):\n             prefix = form.get(\'absolutePrefix\', None)\n             doctype = str(form.get(\'doctype\', ""))\n \n+            hostnameBlacklist = form.get(\'hostnameBlacklist\', [])\n+\n             parameterExpressions = {}\n             parameterExpressionsList = form.get(\'parameterExpressions\', [])\n \n@@ -203,10 +210,10 @@ def update(self):\n                 self.theme_settings.rules = rules\n                 self.theme_settings.absolutePrefix = prefix\n                 self.theme_settings.parameterExpressions = parameterExpressions\n-                self.theme_settings.hostnameBlacklist = self.hostname_blacklist\n+                self.theme_settings.hostnameBlacklist = hostnameBlacklist\n                 if custom_css != self.theme_settings.custom_css:\n                     self.theme_settings.custom_css_timestamp = datetime.now()\n-                self.theme_settings.custom_css = str(custom_css)\n+                self.theme_settings.custom_css = custom_css\n                 self.theme_settings.doctype = doctype\n \n                 # Theme base settings\ndiff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex af5c2fe..5008c35 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -35,6 +35,14 @@\n import six\n \n \n+try:\n+    # Zope 4\n+    from Products.Five.browser.decode import processInputs\n+except ImportError:\n+    # Zope 5\n+    processInputs = None\n+\n+\n class ThemeMapper(BrowserView):\n \n     theme_error_template = ViewPageTemplateFile("theme-error.pt")\n@@ -60,6 +68,8 @@ def development(self):\n \n     def setup(self):\n         self.request.response.setHeader(\'X-Theme-Disabled\', \'1\')\n+        if processInputs is not None:\n+            processInputs(self.request)\n \n         self.resourceDirectory = self.context\n         self.theme = getThemeFromResourceDirectory(self.context)\n@@ -216,6 +226,9 @@ def getFrame(self):\n         - a query string parameter ``title`` can be set to give a new page\n           title\n         """\n+        if processInputs is not None:\n+            processInputs(self.request)\n+\n         path = self.request.form.get(\'path\', \'/\')\n         theme = self.request.form.get(\'theme\', \'off\')\n         links = self.request.form.get(\'links\', None)\ndiff --git a/src/plone/app/theming/configure.zcml b/src/plone/app/theming/configure.zcml\nindex 7e6daca..c3f46bc 100644\n--- a/src/plone/app/theming/configure.zcml\n+++ b/src/plone/app/theming/configure.zcml\n@@ -26,15 +26,6 @@\n         provides="Products.GenericSetup.interfaces.EXTENSION"\n         />\n \n-    <gs:upgradeStep\n-        title="Update registry"\n-        source="*"\n-        destination="1000"\n-        handler=".upgrade.update_registry"\n-        sortkey="1"\n-        profile="plone.app.theming:default"\n-        />\n-\n     <gs:upgradeStep\n         title="Combine Theming control panels"\n         source="1000"\n@@ -44,6 +35,14 @@\n         profile="plone.app.theming:default"\n         />\n \n+    <gs:upgradeStep\n+        title="Update registry"\n+        source="1001"\n+        destination="1002"\n+        handler=".upgrade.update_registry"\n+        profile="plone.app.theming:default"\n+        />\n+\n     <!-- Transform order 8850 - apply theme transform -->\n     <adapter\n         name="plone.app.theming.transform"\ndiff --git a/src/plone/app/theming/profiles/default/metadata.xml b/src/plone/app/theming/profiles/default/metadata.xml\nindex 0da5f31..f286126 100644\n--- a/src/plone/app/theming/profiles/default/metadata.xml\n+++ b/src/plone/app/theming/profiles/default/metadata.xml\n@@ -1,5 +1,5 @@\n <metadata>\n-    <version>1001</version>\n+    <version>1002</version>\n     <dependencies>\n         <dependency>profile-plone.app.registry:default</dependency>\n     </dependencies>\ndiff --git a/src/plone/app/theming/tests/test_controlpanel.py b/src/plone/app/theming/tests/test_controlpanel.py\nindex 53fcdb5..ce0f5a4 100644\n--- a/src/plone/app/theming/tests/test_controlpanel.py\n+++ b/src/plone/app/theming/tests/test_controlpanel.py\n@@ -39,6 +39,15 @@ def goto_controlpanel(self):\n             self.portal.absolute_url() + \'/@@theming-controlpanel\'\n         )\n \n+    def test_save_advanced(self):\n+        # Simply saving the advanced panel without changes could already give a WrongType error.\n+        # See for example https://github.com/plone/plone.app.theming/issues/179\n+        # but there are more.\n+        self.browser.handleErrors = False\n+        self.goto_controlpanel()\n+        button = self.browser.getControl(name="form.button.AdvancedSave")\n+        button.click()\n+\n     def test_create_theme(self):\n         pass\n     #     self.goto_controlpanel()\n@@ -75,7 +84,7 @@ def test_upload_theme_file_withdata(self):\n Content-Type: image/png\n \n \n----blah---           \n+---blah---\n             """,\n # Bug in testbrowser prevents this working\n #            content_type=\'multipart/form-data; boundary=---blah---\'\n'

