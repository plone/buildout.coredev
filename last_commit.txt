Repository: plone.schema


Branch: refs/heads/master
Date: 2021-03-22T11:15:26+01:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.schema/commit/dd861be0f67a05fc610b14d1ac241b38fabbe777

Adjust JSONField to include widget name

Files changed:
A news/10.feature
M plone/schema/jsonfield.py

b'diff --git a/news/10.feature b/news/10.feature\nnew file mode 100644\nindex 0000000..ef00261\n--- /dev/null\n+++ b/news/10.feature\n@@ -0,0 +1,2 @@\n+Adjust JSONField to include widget name\n+[sneridagh]\ndiff --git a/plone/schema/jsonfield.py b/plone/schema/jsonfield.py\nindex d07b7b8..1c92b9f 100644\n--- a/plone/schema/jsonfield.py\n+++ b/plone/schema/jsonfield.py\n@@ -17,27 +17,24 @@\n     JSONDecodeError = ValueError\n \n \n-DEFAULT_JSON_SCHEMA = json.dumps({\n-    \'type\': \'object\',\n-    \'properties\': {}\n-})\n+DEFAULT_JSON_SCHEMA = json.dumps({"type": "object", "properties": {}})\n \n \n class IJSONField(IField):\n     """A text field that stores A JSON."""\n \n-    schema = Attribute(\n-        "schema",\n-        _("The JSON schema string serialization.")\n-    )\n+    schema = Attribute("schema", _("The JSON schema string serialization."))\n \n \n @implementer(IJSONField, IFromUnicode)\n class JSONField(Field):\n-\n-    def __init__(self, schema=DEFAULT_JSON_SCHEMA, **kw):\n+    def __init__(self, schema=DEFAULT_JSON_SCHEMA, widget=None, **kw):\n         if not isinstance(schema, str):\n             raise WrongType\n+        if widget and not isinstance(widget, str):\n+            raise WrongType\n+\n+        self.widget = widget\n \n         try:\n             self.json_schema = json.loads(schema)\n@@ -54,7 +51,7 @@ def _validate(self, value):\n             raise WrongContainedType(e.message, self.__name__)\n \n     def fromUnicode(self, value):\n-        """ Get value from unicode.\n+        """Get value from unicode.\n \n         Value can be a valid JSON object:\n \n'

Repository: plone.schema


Branch: refs/heads/master
Date: 2021-03-24T09:39:56+01:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.schema/commit/58135cc14a38a08fa4bafaface0fe255e6e7b086

Merge pull request #11 from plone/widgetproponjsonfield

Adjust JSONField to include widget name

Files changed:
A news/10.feature
M plone/schema/jsonfield.py

b'diff --git a/news/10.feature b/news/10.feature\nnew file mode 100644\nindex 0000000..ef00261\n--- /dev/null\n+++ b/news/10.feature\n@@ -0,0 +1,2 @@\n+Adjust JSONField to include widget name\n+[sneridagh]\ndiff --git a/plone/schema/jsonfield.py b/plone/schema/jsonfield.py\nindex d07b7b8..1c92b9f 100644\n--- a/plone/schema/jsonfield.py\n+++ b/plone/schema/jsonfield.py\n@@ -17,27 +17,24 @@\n     JSONDecodeError = ValueError\n \n \n-DEFAULT_JSON_SCHEMA = json.dumps({\n-    \'type\': \'object\',\n-    \'properties\': {}\n-})\n+DEFAULT_JSON_SCHEMA = json.dumps({"type": "object", "properties": {}})\n \n \n class IJSONField(IField):\n     """A text field that stores A JSON."""\n \n-    schema = Attribute(\n-        "schema",\n-        _("The JSON schema string serialization.")\n-    )\n+    schema = Attribute("schema", _("The JSON schema string serialization."))\n \n \n @implementer(IJSONField, IFromUnicode)\n class JSONField(Field):\n-\n-    def __init__(self, schema=DEFAULT_JSON_SCHEMA, **kw):\n+    def __init__(self, schema=DEFAULT_JSON_SCHEMA, widget=None, **kw):\n         if not isinstance(schema, str):\n             raise WrongType\n+        if widget and not isinstance(widget, str):\n+            raise WrongType\n+\n+        self.widget = widget\n \n         try:\n             self.json_schema = json.loads(schema)\n@@ -54,7 +51,7 @@ def _validate(self, value):\n             raise WrongContainedType(e.message, self.__name__)\n \n     def fromUnicode(self, value):\n-        """ Get value from unicode.\n+        """Get value from unicode.\n \n         Value can be a valid JSON object:\n \n'

