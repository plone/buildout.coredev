Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-07T15:55:33+02:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/474aaa59df78517bcda6d2c99e83236be2b9d978

Add next and previous feature (#901)

* Document next and previous feature

* Typo

* Undo changelog changes

* Code review

* TDD

* Implement feature; Fixes on tests

* Fix @id attribute

* Check if behavior is provided

* Typo

* Fix serializer test for AT

* Fix tests

* Add performance tests graph

* Revert "Add performance tests graph"

This reverts commit 398528fb1aebd045302a72214596d3762223fb80.

* Use a proper variable name

* Add performance tests for next/previous.

* Always show next/prev

* Error in the site root

* Fixes for Plone root

* Revert "Fixes for Plone root"

This reverts commit e451b2421d46552236e1f24999576e76822166f4.

* Revert "Error in the site root"

This reverts commit c6590d0550d2311b3f3b89144dcf30d5a8b5855d.

* Update docs

* Revert "Revert "Error in the site root""

This reverts commit 34e67b9ecd3a3c416d98d0961fb5ef222721bf11.

* Revert "Revert "Fixes for Plone root""

This reverts commit 96bafbc1667073662d2c37072438a91cbe06b8e0.

* Bring back fixes for next previous on element at Plone root; update docs

* Add more tests for Plone root object

* Add more tests for plone root (AT)

* Typo

* Fix test

Co-authored-by: Timo Stollenwerk &lt;stollenwerk@kitconcept.com&gt;

Files changed:
A news/900.feature
A performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-anonymous-read.png
A performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-read.png
A performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-write.png
A src/plone/restapi/serializer/nextprev.py
M Jenkinsfile
M docs/source/serialization.rst
M performance.jmx
M src/plone/restapi/serializer/atcontent.py
M src/plone/restapi/serializer/dxcontent.py
M src/plone/restapi/tests/http-examples/collection.resp
M src/plone/restapi/tests/http-examples/collection_fullobjects.resp
M src/plone/restapi/tests/http-examples/content_get.resp
M src/plone/restapi/tests/http-examples/content_get_folder.resp
M src/plone/restapi/tests/http-examples/content_patch_representation.resp
M src/plone/restapi/tests/http-examples/content_post.resp
M src/plone/restapi/tests/http-examples/document.resp
M src/plone/restapi/tests/http-examples/event.resp
M src/plone/restapi/tests/http-examples/expansion.resp
M src/plone/restapi/tests/http-examples/expansion_expanded.resp
M src/plone/restapi/tests/http-examples/expansion_expanded_full.resp
M src/plone/restapi/tests/http-examples/file.resp
M src/plone/restapi/tests/http-examples/folder.resp
M src/plone/restapi/tests/http-examples/image.resp
M src/plone/restapi/tests/http-examples/link.resp
M src/plone/restapi/tests/http-examples/newsitem.resp
M src/plone/restapi/tests/http-examples/search_fullobjects.resp
M src/plone/restapi/tests/http-examples/translations_link_on_post.resp
M src/plone/restapi/tests/performance.py
M src/plone/restapi/tests/test_atcontent_serializer.py
M src/plone/restapi/tests/test_dxcontent_serializer.py

b'diff --git a/Jenkinsfile b/Jenkinsfile\nindex a8484773..8b225286 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -9,7 +9,7 @@ pipeline {\n   }\n \n   options {\n-    buildDiscarder(logRotator(numToKeepStr:\'30\'))\n+    buildDiscarder(logRotator(numToKeepStr:\'100\'))\n     timeout(time: 30, unit: \'MINUTES\')\n     disableConcurrentBuilds()\n   }\ndiff --git a/docs/source/serialization.rst b/docs/source/serialization.rst\nindex 4f3fa5ea..bb6a1bc4 100644\n--- a/docs/source/serialization.rst\n+++ b/docs/source/serialization.rst\n@@ -193,3 +193,56 @@ Specify relations by intid:\n     "relatedItems": [347127075, 347127076]\n   }\n \n+Next/Previous/Parent Navigation\n+-------------------------------\n+\n+The response body of a GET request contains three attributes that allows navigating to the parent and the next and previous sibling in the container the current document is located.\n+\n+Parent\n+^^^^^^\n+\n+The "parent" attribute points to the parent container of the current content object.\n+\n+.. code-block:: json\n+\n+  {\n+    "parent": {\n+      "@id": "http://nohost/plone/folder-with-items", \n+      "@type": "Folder", \n+      "title": "Folder with items",\n+      "description": "This is a folder with two documents", \n+    }\n+  }\n+\n+Previous Item\n+^^^^^^^^^^^^^\n+\n+The "previous_item" attribute points to the sibling that is located before the current element in the parent container (Plone uses the getObjectPositionInParent attribute to sort content objects within a folderish container).\n+\n+.. code-block:: json\n+\n+  {\n+    "previous_item": {\n+      "@id": "http://nohost/plone/folder-with-items/item-1", \n+      "@type": "Document",\n+      "title": "Item 1",\n+      "description": "This the previous item"\n+    }\n+  }\n+\n+Next Item\n+^^^^^^^^^\n+\n+The "next_item" attribute points to the sibling that is located after the current element in the parent container (Plone uses the getObjectPositionInParent attribute to sort content objects within a folderish container).\n+\n+.. code-block:: json\n+\n+  {\n+    "next_item": {\n+      "@id": "http://nohost/plone/folder-with-items/item-2", \n+      "@type": "Document",\n+      "title": "Item 2",\n+      "description": "This the next item"\n+    }\n+  }\n+\ndiff --git a/news/900.feature b/news/900.feature\nnew file mode 100644\nindex 00000000..83111ccb\n--- /dev/null\n+++ b/news/900.feature\n@@ -0,0 +1,2 @@\n+Add next_item and previous_item attributes to allow to navigate to the previous and next sibling in the container the document is located.\n+[rodfersou]\ndiff --git a/performance.jmx b/performance.jmx\nindex 126edf31..6b6076cc 100644\n--- a/performance.jmx\n+++ b/performance.jmx\n@@ -27,7 +27,7 @@\n       <stringProp name="TestPlan.user_define_classpath"></stringProp>\n     </TestPlan>\n     <hashTree>\n-      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Authenticated Users (Create)" enabled="true">\n+      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Authenticated Users (Write)" enabled="true">\n         <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>\n         <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">\n           <boolProp name="LoopController.continue_forever">false</boolProp>\n@@ -491,6 +491,33 @@\n           <stringProp name="HTTPSampler.response_timeout"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree/>\n+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Document (next/prev)" enabled="true">\n+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">\n+            <collectionProp name="Arguments.arguments">\n+              <elementProp name="Accept" elementType="HTTPArgument">\n+                <boolProp name="HTTPArgument.always_encode">false</boolProp>\n+                <stringProp name="Argument.value">application/json</stringProp>\n+                <stringProp name="Argument.metadata">=</stringProp>\n+                <boolProp name="HTTPArgument.use_equals">true</boolProp>\n+                <stringProp name="Argument.name">Accept</stringProp>\n+              </elementProp>\n+            </collectionProp>\n+          </elementProp>\n+          <stringProp name="HTTPSampler.domain"></stringProp>\n+          <stringProp name="HTTPSampler.port"></stringProp>\n+          <stringProp name="HTTPSampler.protocol"></stringProp>\n+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>\n+          <stringProp name="HTTPSampler.path">/Plone/${testfolder-read}/folder-with-10-items-next-prev-enabled/doc5</stringProp>\n+          <stringProp name="HTTPSampler.method">GET</stringProp>\n+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>\n+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>\n+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>\n+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>\n+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>\n+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>\n+          <stringProp name="HTTPSampler.response_timeout"></stringProp>\n+        </HTTPSamplerProxy>\n+        <hashTree/>\n         <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="News Item" enabled="true">\n           <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">\n             <collectionProp name="Arguments.arguments">\n@@ -901,6 +928,33 @@\n           <stringProp name="HTTPSampler.response_timeout"></stringProp>\n         </HTTPSamplerProxy>\n         <hashTree/>\n+        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Document (next/prev)" enabled="true">\n+          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">\n+            <collectionProp name="Arguments.arguments">\n+              <elementProp name="Accept" elementType="HTTPArgument">\n+                <boolProp name="HTTPArgument.always_encode">false</boolProp>\n+                <stringProp name="Argument.value">application/json</stringProp>\n+                <stringProp name="Argument.metadata">=</stringProp>\n+                <boolProp name="HTTPArgument.use_equals">true</boolProp>\n+                <stringProp name="Argument.name">Accept</stringProp>\n+              </elementProp>\n+            </collectionProp>\n+          </elementProp>\n+          <stringProp name="HTTPSampler.domain"></stringProp>\n+          <stringProp name="HTTPSampler.port"></stringProp>\n+          <stringProp name="HTTPSampler.protocol"></stringProp>\n+          <stringProp name="HTTPSampler.contentEncoding"></stringProp>\n+          <stringProp name="HTTPSampler.path">/Plone/${testfolder-read}/folder-with-10-items-next-prev-enabled/doc5</stringProp>\n+          <stringProp name="HTTPSampler.method">GET</stringProp>\n+          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>\n+          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>\n+          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>\n+          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>\n+          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>\n+          <stringProp name="HTTPSampler.connect_timeout"></stringProp>\n+          <stringProp name="HTTPSampler.response_timeout"></stringProp>\n+        </HTTPSamplerProxy>\n+        <hashTree/>\n         <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="News Item" enabled="true">\n           <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">\n             <collectionProp name="Arguments.arguments">\ndiff --git a/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-anonymous-read.png b/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-anonymous-read.png\nnew file mode 100644\nindex 00000000..70d8b5b2\nBinary files /dev/null and b/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-anonymous-read.png differ\ndiff --git a/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-read.png b/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-read.png\nnew file mode 100644\nindex 00000000..5890f3af\nBinary files /dev/null and b/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-read.png differ\ndiff --git a/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-write.png b/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-write.png\nnew file mode 100644\nindex 00000000..fd45fd52\nBinary files /dev/null and b/performance/plone-5.2.1-py3-imac-pro-20200404/jmeter-authenticated-write.png differ\ndiff --git a/src/plone/restapi/serializer/atcontent.py b/src/plone/restapi/serializer/atcontent.py\nindex 36d22391..e09ade4d 100644\n--- a/src/plone/restapi/serializer/atcontent.py\n+++ b/src/plone/restapi/serializer/atcontent.py\n@@ -7,6 +7,7 @@\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.interfaces import ISerializeToJsonSummary\n from plone.restapi.serializer.expansion import expandable_elements\n+from plone.restapi.serializer.nextprev import NextPrevious\n from Products.Archetypes.interfaces import IBaseFolder\n from Products.Archetypes.interfaces import IBaseObject\n from Products.CMFCore.utils import getToolByName\n@@ -51,6 +52,13 @@ def __call__(self, version=None, include_items=False):\n             "is_folderish": False,\n         }\n \n+        # Insert next/prev information\n+        nextprevious = NextPrevious(obj)\n+        result.update({\n+            "previous_item": nextprevious.previous,\n+            "next_item": nextprevious.next,\n+        })\n+\n         # Insert expandable elements\n         result.update(expandable_elements(self.context, self.request))\n \ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex ae928e2f..b5b7d22d 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -15,6 +15,7 @@\n from plone.restapi.interfaces import ISerializeToJsonSummary\n from plone.restapi.serializer.converters import json_compatible\n from plone.restapi.serializer.expansion import expandable_elements\n+from plone.restapi.serializer.nextprev import NextPrevious\n from plone.rfc822.interfaces import IPrimaryFieldInfo\n from plone.supermodel.utils import mergedTaggedValueDict\n from Products.CMFCore.utils import getToolByName\n@@ -67,6 +68,13 @@ def __call__(self, version=None, include_items=True):\n             "is_folderish": False,\n         }\n \n+        # Insert next/prev information\n+        nextprevious = NextPrevious(obj)\n+        result.update({\n+            "previous_item": nextprevious.previous,\n+            "next_item": nextprevious.next,\n+        })\n+\n         # Insert expandable elements\n         result.update(expandable_elements(self.context, self.request))\n \ndiff --git a/src/plone/restapi/serializer/nextprev.py b/src/plone/restapi/serializer/nextprev.py\nnew file mode 100644\nindex 00000000..c0010c72\n--- /dev/null\n+++ b/src/plone/restapi/serializer/nextprev.py\n@@ -0,0 +1,56 @@\n+# -*- coding: utf-8 -*-\n+from AccessControl import getSecurityManager\n+from Acquisition import aq_inner\n+from Acquisition import aq_parent\n+from plone.app.dexterity.behaviors.nextprevious import NextPreviousBase\n+from plone.registry.interfaces import IRegistry\n+from zope.component import getUtility\n+\n+\n+class NextPreviousFixed(NextPreviousBase):\n+    """\n+    Based on plone.app.dexterity.behaviors.nextprevious.NextPreviousBase\n+    but works for IPloneSite object\n+    """\n+\n+    def __init__(self, context):\n+        self.context = context\n+        registry = getUtility(IRegistry)\n+        self.vat = registry.get(\'plone.types_use_view_action_in_listings\', [])\n+        self.security = getSecurityManager()\n+        self.order = self.context.objectIds()\n+\n+\n+class NextPrevious(object):\n+    """Facade with more pythonic interface"""\n+\n+    def __init__(self, context):\n+        self.context = context\n+        parent = aq_parent(aq_inner(context))\n+        self.nextprev = NextPreviousFixed(parent)\n+\n+    @property\n+    def next(self):\n+        """ return info about the next item in the container """\n+        data = self.nextprev.getNextItem(self.context)\n+        if data is None:\n+            return {}\n+        return {\n+            "@id": data["url"].lstrip(\'/view\'),\n+            "@type": data["portal_type"],\n+            "title": data["title"],\n+            "description": data["description"],\n+        }\n+\n+    @property\n+    def previous(self):\n+        """ return info about the previous item in the container """\n+        data = self.nextprev.getPreviousItem(self.context)\n+        if data is None:\n+            return {}\n+        return {\n+            "@id": data["url"].lstrip(\'/view\'),\n+            "@type": data["portal_type"],\n+            "title": data["title"],\n+            "description": data["description"],\n+        }\ndiff --git a/src/plone/restapi/tests/http-examples/collection.resp b/src/plone/restapi/tests/http-examples/collection.resp\nindex 06c7ab16..a84a7b3d 100644\n--- a/src/plone/restapi/tests/http-examples/collection.resp\n+++ b/src/plone/restapi/tests/http-examples/collection.resp\n@@ -81,12 +81,24 @@ Content-Type: application/json\n   "layout": "listing_view", \n   "limit": 1000, \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {\n+    "@id": "http://localhost:55001/plone/doc1", \n+    "@type": "Document", \n+    "description": "", \n+    "title": "Document 1"\n+  }, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "query": [\n     {\n       "i": "portal_type", \ndiff --git a/src/plone/restapi/tests/http-examples/collection_fullobjects.resp b/src/plone/restapi/tests/http-examples/collection_fullobjects.resp\nindex 5f7a24d6..4f47bc4a 100644\n--- a/src/plone/restapi/tests/http-examples/collection_fullobjects.resp\n+++ b/src/plone/restapi/tests/http-examples/collection_fullobjects.resp\n@@ -91,12 +91,19 @@ Content-Type: application/json\n       "language": "", \n       "layout": "document_view", \n       "modified": "1995-07-31T17:30:00", \n+      "next_item": {\n+        "@id": "http://localhost:55001/plone/collection", \n+        "@type": "Collection", \n+        "description": "This is a collection with two documents", \n+        "title": "My Collection"\n+      }, \n       "parent": {\n         "@id": "http://localhost:55001/plone", \n         "@type": "Plone Site", \n         "description": "", \n         "title": "Plone site"\n       }, \n+      "previous_item": {}, \n       "relatedItems": [], \n       "review_state": "private", \n       "rights": "", \n@@ -148,12 +155,24 @@ Content-Type: application/json\n       "language": "", \n       "layout": "document_view", \n       "modified": "1995-07-31T17:30:00", \n+      "next_item": {\n+        "@id": "http://localhost:55001/plone/doc2", \n+        "@type": "Document", \n+        "description": "", \n+        "title": "Document 2"\n+      }, \n       "parent": {\n         "@id": "http://localhost:55001/plone", \n         "@type": "Plone Site", \n         "description": "", \n         "title": "Plone site"\n       }, \n+      "previous_item": {\n+        "@id": "http://localhost:55001/plone/collection", \n+        "@type": "Collection", \n+        "description": "This is a collection with two documents", \n+        "title": "My Collection"\n+      }, \n       "relatedItems": [], \n       "review_state": "private", \n       "rights": "", \n@@ -201,12 +220,19 @@ Content-Type: application/json\n       "language": "", \n       "layout": "document_view", \n       "modified": "1995-07-31T17:30:00", \n+      "next_item": {}, \n       "parent": {\n         "@id": "http://localhost:55001/plone", \n         "@type": "Plone Site", \n         "description": "", \n         "title": "Plone site"\n       }, \n+      "previous_item": {\n+        "@id": "http://localhost:55001/plone/doc1", \n+        "@type": "Document", \n+        "description": "", \n+        "title": "Document 1"\n+      }, \n       "relatedItems": [], \n       "review_state": "private", \n       "rights": "", \n@@ -223,12 +249,24 @@ Content-Type: application/json\n   "layout": "listing_view", \n   "limit": 1000, \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {\n+    "@id": "http://localhost:55001/plone/doc1", \n+    "@type": "Document", \n+    "description": "", \n+    "title": "Document 1"\n+  }, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "query": [\n     {\n       "i": "portal_type", \ndiff --git a/src/plone/restapi/tests/http-examples/content_get.resp b/src/plone/restapi/tests/http-examples/content_get.resp\nindex 8d9de0ef..d3c5dc64 100644\n--- a/src/plone/restapi/tests/http-examples/content_get.resp\n+++ b/src/plone/restapi/tests/http-examples/content_get.resp\n@@ -38,6 +38,7 @@ Content-Type: application/json\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone/folder", \n     "@type": "Folder", \n@@ -45,6 +46,12 @@ Content-Type: application/json\n     "review_state": "private", \n     "title": "My Folder"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/folder/doc2", \n+    "@type": "Document", \n+    "description": "", \n+    "title": "A document within a folder"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/content_get_folder.resp b/src/plone/restapi/tests/http-examples/content_get_folder.resp\nindex 9cb293ac..e2644988 100644\n--- a/src/plone/restapi/tests/http-examples/content_get_folder.resp\n+++ b/src/plone/restapi/tests/http-examples/content_get_folder.resp\n@@ -68,12 +68,19 @@ Content-Type: application/json\n   "layout": "listing_view", \n   "modified": "1995-07-31T17:30:00", \n   "nextPreviousEnabled": false, \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/content_patch_representation.resp b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\nindex 73502381..d6122edd 100644\n--- a/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n+++ b/src/plone/restapi/tests/http-examples/content_patch_representation.resp\n@@ -38,6 +38,7 @@ Content-Type: application/json\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone/folder", \n     "@type": "Folder", \n@@ -45,6 +46,12 @@ Content-Type: application/json\n     "review_state": "private", \n     "title": "My Folder"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/folder/doc2", \n+    "@type": "Document", \n+    "description": "", \n+    "title": "A document within a folder"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/content_post.resp b/src/plone/restapi/tests/http-examples/content_post.resp\nindex 6125a412..97061c8a 100644\n--- a/src/plone/restapi/tests/http-examples/content_post.resp\n+++ b/src/plone/restapi/tests/http-examples/content_post.resp\n@@ -39,6 +39,7 @@ Location: http://localhost:55001/plone/folder/my-document\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone/folder", \n     "@type": "Folder", \n@@ -46,6 +47,12 @@ Location: http://localhost:55001/plone/folder/my-document\n     "review_state": "private", \n     "title": "My Folder"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/folder/doc2", \n+    "@type": "Document", \n+    "description": "", \n+    "title": "A document within a folder"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/document.resp b/src/plone/restapi/tests/http-examples/document.resp\nindex ff48ef82..1f771c51 100644\n--- a/src/plone/restapi/tests/http-examples/document.resp\n+++ b/src/plone/restapi/tests/http-examples/document.resp\n@@ -38,12 +38,14 @@ Content-Type: application/json\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {}, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/event.resp b/src/plone/restapi/tests/http-examples/event.resp\nindex fb5ccd52..d162d046 100644\n--- a/src/plone/restapi/tests/http-examples/event.resp\n+++ b/src/plone/restapi/tests/http-examples/event.resp\n@@ -45,6 +45,7 @@ Content-Type: application/json\n   "layout": "event_view", \n   "location": null, \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "open_end": false, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n@@ -52,6 +53,12 @@ Content-Type: application/json\n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "recurrence": null, \n   "relatedItems": [], \n   "review_state": "private", \ndiff --git a/src/plone/restapi/tests/http-examples/expansion.resp b/src/plone/restapi/tests/http-examples/expansion.resp\nindex ff48ef82..1f771c51 100644\n--- a/src/plone/restapi/tests/http-examples/expansion.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion.resp\n@@ -38,12 +38,14 @@ Content-Type: application/json\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {}, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded.resp b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\nindex 0d7d884e..f2e91ba8 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded.resp\n@@ -44,12 +44,14 @@ Content-Type: application/json\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {}, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\nindex 5226e53d..a4c51b36 100644\n--- a/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n+++ b/src/plone/restapi/tests/http-examples/expansion_expanded_full.resp\n@@ -220,12 +220,14 @@ Content-Type: application/json\n   "language": "", \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {}, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/file.resp b/src/plone/restapi/tests/http-examples/file.resp\nindex 18d9b3ff..7c4ed242 100644\n--- a/src/plone/restapi/tests/http-examples/file.resp\n+++ b/src/plone/restapi/tests/http-examples/file.resp\n@@ -43,12 +43,19 @@ Content-Type: application/json\n   "language": "", \n   "layout": "file_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "relatedItems": [], \n   "review_state": null, \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/folder.resp b/src/plone/restapi/tests/http-examples/folder.resp\nindex 6552c62c..66cfba52 100644\n--- a/src/plone/restapi/tests/http-examples/folder.resp\n+++ b/src/plone/restapi/tests/http-examples/folder.resp\n@@ -55,12 +55,19 @@ Content-Type: application/json\n   "layout": "listing_view", \n   "modified": "1995-07-31T17:30:00", \n   "nextPreviousEnabled": false, \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/image.resp b/src/plone/restapi/tests/http-examples/image.resp\nindex 709cc737..10f4fd42 100644\n--- a/src/plone/restapi/tests/http-examples/image.resp\n+++ b/src/plone/restapi/tests/http-examples/image.resp\n@@ -82,12 +82,19 @@ Content-Type: application/json\n   "language": "", \n   "layout": "image_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "relatedItems": [], \n   "review_state": null, \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/link.resp b/src/plone/restapi/tests/http-examples/link.resp\nindex c2aa29fa..f6b46612 100644\n--- a/src/plone/restapi/tests/http-examples/link.resp\n+++ b/src/plone/restapi/tests/http-examples/link.resp\n@@ -38,12 +38,19 @@ Content-Type: application/json\n   "language": "", \n   "layout": "link_redirect_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "remoteUrl": null, \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/newsitem.resp b/src/plone/restapi/tests/http-examples/newsitem.resp\nindex d70b314a..391a125e 100644\n--- a/src/plone/restapi/tests/http-examples/newsitem.resp\n+++ b/src/plone/restapi/tests/http-examples/newsitem.resp\n@@ -84,12 +84,19 @@ Content-Type: application/json\n   "language": "", \n   "layout": "newsitem_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone", \n     "@type": "Plone Site", \n     "description": "", \n     "title": "Plone site"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/front-page", \n+    "@type": "Document", \n+    "description": "Congratulations! You have successfully installed Plone.", \n+    "title": "Welcome to Plone"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/search_fullobjects.resp b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\nindex 34670ad7..0a45147b 100644\n--- a/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n+++ b/src/plone/restapi/tests/http-examples/search_fullobjects.resp\n@@ -41,12 +41,19 @@ Content-Type: application/json\n       "language": "", \n       "layout": "document_view", \n       "modified": "1995-07-31T17:30:00", \n+      "next_item": {}, \n       "parent": {\n         "@id": "http://localhost:55001/plone", \n         "@type": "Plone Site", \n         "description": "", \n         "title": "Plone site"\n       }, \n+      "previous_item": {\n+        "@id": "http://localhost:55001/plone/front-page", \n+        "@type": "Document", \n+        "description": "Congratulations! You have successfully installed Plone.", \n+        "title": "Welcome to Plone"\n+      }, \n       "relatedItems": [], \n       "review_state": "private", \n       "rights": "", \ndiff --git a/src/plone/restapi/tests/http-examples/translations_link_on_post.resp b/src/plone/restapi/tests/http-examples/translations_link_on_post.resp\nindex 5ee38eef..d29a9960 100644\n--- a/src/plone/restapi/tests/http-examples/translations_link_on_post.resp\n+++ b/src/plone/restapi/tests/http-examples/translations_link_on_post.resp\n@@ -45,6 +45,7 @@ Location: http://localhost:55001/plone/de/mydocument\n   }, \n   "layout": "document_view", \n   "modified": "1995-07-31T17:30:00", \n+  "next_item": {}, \n   "parent": {\n     "@id": "http://localhost:55001/plone/de", \n     "@type": "LRF", \n@@ -52,6 +53,12 @@ Location: http://localhost:55001/plone/de/mydocument\n     "review_state": "published", \n     "title": "Deutsch"\n   }, \n+  "previous_item": {\n+    "@id": "http://localhost:55001/plone/de/Assets", \n+    "@type": "LIF", \n+    "description": "", \n+    "title": "Assets"\n+  }, \n   "relatedItems": [], \n   "review_state": "private", \n   "rights": "", \ndiff --git a/src/plone/restapi/tests/performance.py b/src/plone/restapi/tests/performance.py\nindex bf3b57b1..cc9513f7 100644\n--- a/src/plone/restapi/tests/performance.py\n+++ b/src/plone/restapi/tests/performance.py\n@@ -36,7 +36,8 @@ def set_image(obj):\n         from plone.namedfile.file import NamedBlobImage\n \n         filename = os.path.join(os.path.dirname(__file__), u"image.png")\n-        obj.image = NamedBlobImage(data=open(filename, "rb").read(), filename=filename)\n+        obj.image = NamedBlobImage(\n+            data=open(filename, "rb").read(), filename=filename)\n     else:\n         filename = os.path.join(os.path.dirname(__file__), u"image.png")\n         obj.setImage(open(filename, "rb").read())\n@@ -73,11 +74,13 @@ def step_setup_content(context):\n     portal = getSite()\n \n     # Testfolder WRITE\n-    portal.invokeFactory("Folder", id="testfolder-write", title="Testfolder Write")\n+    portal.invokeFactory("Folder", id="testfolder-write",\n+                         title="Testfolder Write")\n     publish(portal["testfolder-write"])\n \n     # Testfolder READ\n-    portal.invokeFactory("Folder", id="testfolder-read", title="Testfolder Read")\n+    portal.invokeFactory("Folder", id="testfolder-read",\n+                         title="Testfolder Read")\n     publish(portal["testfolder-read"])\n     portal = portal["testfolder-read"]\n \n@@ -102,7 +105,8 @@ def step_setup_content(context):\n     publish(portal.folder)\n \n     # Folder with 10 Items\n-    portal.invokeFactory("Folder", id="folder-with-10-items", title="Folder 10")\n+    portal.invokeFactory(\n+        "Folder", id="folder-with-10-items", title="Folder 10")\n     folder10 = portal["folder-with-10-items"]\n     set_description(folder10)\n     publish(folder10)\n@@ -113,7 +117,8 @@ def step_setup_content(context):\n         publish(folder10["doc{}".format(i)])\n \n     # Folder with 100 Items\n-    portal.invokeFactory("Folder", id="folder-with-100-items", title="Folder 100")\n+    portal.invokeFactory(\n+        "Folder", id="folder-with-100-items", title="Folder 100")\n     folder100 = portal["folder-with-100-items"]\n     set_description(folder100)\n     publish(folder100)\n@@ -124,7 +129,8 @@ def step_setup_content(context):\n         publish(folder100["doc{}".format(i)])\n \n     # Folder with 1000 Items\n-    portal.invokeFactory("Folder", id="folder-with-1000-items", title="Folder 1000")\n+    portal.invokeFactory(\n+        "Folder", id="folder-with-1000-items", title="Folder 1000")\n     folder1000 = portal["folder-with-1000-items"]\n     set_description(folder1000)\n     publish(folder1000)\n@@ -134,6 +140,19 @@ def step_setup_content(context):\n         )\n         publish(folder1000["doc{}".format(i)])\n \n+    # Folder with 10 Items and next/previous enabled\n+    portal.invokeFactory("Folder", id="folder-with-10-items-next-prev-enabled",\n+                         title="Folder 10 (next/prev enabled)")\n+    folder10np = portal["folder-with-10-items-next-prev-enabled"]\n+    folder10np.nextPreviousEnabled = True\n+    set_description(folder10np)\n+    publish(folder10np)\n+    for i in range(1, 11):\n+        folder10np.invokeFactory(\n+            "Document", id="doc{}".format(i), title="Doc {}".format(i)\n+        )\n+        publish(folder10np["doc{}".format(i)])\n+\n     # Collection\n     portal.invokeFactory("Collection", id="collection", title="Collection")\n     set_description(portal.collection)\ndiff --git a/src/plone/restapi/tests/test_atcontent_serializer.py b/src/plone/restapi/tests/test_atcontent_serializer.py\nindex 75590a56..fe20f1ae 100644\n--- a/src/plone/restapi/tests/test_atcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_atcontent_serializer.py\n@@ -1,5 +1,6 @@\n # -*- coding: utf-8 -*-\n from DateTime import DateTime\n+from plone import api\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.interfaces import IExpandableElement\n@@ -193,3 +194,209 @@ def test_get_is_folderish_in_folder(self):\n         obj = serializer()\n         self.assertIn("is_folderish", obj)\n         self.assertEqual(True, obj["is_folderish"])\n+\n+    def test_nextprev_no_nextprev(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="ATTestFolder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 1",\n+            description="One item alone in the folder"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_has_prev(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="ATTestFolder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 1",\n+            description="Previous item"\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-1",\n+                "@type": "ATTestDocument",\n+                "title": "Item 1",\n+                "description": "Previous item"\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_has_next(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="ATTestFolder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 1",\n+            description="Current item"\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 2",\n+            description="Next item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-2",\n+                "@type": "ATTestDocument",\n+                "title": "Item 2",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n+    def test_nextprev_has_nextprev(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="ATTestFolder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 1",\n+            description="Previous item"\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="ATTestDocument",\n+            title="Item 3",\n+            description="Next item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-1",\n+                "@type": "ATTestDocument",\n+                "title": "Item 1",\n+                "description": "Previous item"\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-3",\n+                "@type": "ATTestDocument",\n+                "title": "Item 3",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n+    def test_nextprev_root_no_nextprev(self):\n+        data = self.serialize(self.doc1)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_root_has_prev(self):\n+        doc = api.content.create(\n+            container=self.portal,\n+            type="ATTestDocument",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/doc1",\n+                "@type": "ATTestDocument",\n+                "title": "Test Document",\n+                "description": ""\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_root_has_next(self):\n+        api.content.create(\n+            container=self.portal,\n+            type="ATTestDocument",\n+            title="Item 2",\n+            description="Next item"\n+        )\n+        data = self.serialize(self.doc1)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/item-2",\n+                "@type": "ATTestDocument",\n+                "title": "Item 2",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n+    def test_nextprev_root_has_nextprev(self):\n+        api.content.create(\n+            container=self.portal,\n+            type="ATTestDocument",\n+            title="Item 1",\n+            description="Previous item"\n+        )\n+        doc = api.content.create(\n+            container=self.portal,\n+            type="ATTestDocument",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        api.content.create(\n+            container=self.portal,\n+            type="ATTestDocument",\n+            title="Item 3",\n+            description="Next item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/item-1",\n+                "@type": "ATTestDocument",\n+                "title": "Item 1",\n+                "description": "Previous item"\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/item-3",\n+                "@type": "ATTestDocument",\n+                "title": "Item 3",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\ndiff --git a/src/plone/restapi/tests/test_dxcontent_serializer.py b/src/plone/restapi/tests/test_dxcontent_serializer.py\nindex 8d3016c5..54acfb0a 100644\n--- a/src/plone/restapi/tests/test_dxcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_dxcontent_serializer.py\n@@ -4,6 +4,7 @@\n from datetime import time\n from datetime import timedelta\n from DateTime import DateTime\n+from plone import api\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.app.testing import logout\n from plone.app.testing import setRoles\n@@ -88,8 +89,10 @@ def setUp(self):\n         self.portal.doc1.modification_date = DateTime("2015-04-27T10:24:11+00:00")\n         IMutableUUID(self.portal.doc1).set("30314724b77a4ec0abbad03d262837aa")\n \n-    def serialize(self):\n-        serializer = getMultiAdapter((self.portal.doc1, self.request), ISerializeToJson)\n+    def serialize(self, obj=None):\n+        if obj is None:\n+            obj = self.portal.doc1\n+        serializer = getMultiAdapter((obj, self.request), ISerializeToJson)\n         return serializer()\n \n     def test_serializer_returns_json_serializeable_object(self):\n@@ -186,6 +189,212 @@ def test_get_is_folderish_in_folder(self):\n         self.assertIn("is_folderish", obj)\n         self.assertEqual(True, obj["is_folderish"])\n \n+    def test_nextprev_no_nextprev(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="Folder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 1",\n+            description="One item alone in the folder"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_has_prev(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="Folder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 1",\n+            description="Previous item"\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-1",\n+                "@type": "Document",\n+                "title": "Item 1",\n+                "description": "Previous item"\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_has_next(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="Folder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 1",\n+            description="Current item"\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 2",\n+            description="Next item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-2",\n+                "@type": "Document",\n+                "title": "Item 2",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n+    def test_nextprev_has_nextprev(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="Folder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 1",\n+            description="Previous item"\n+        )\n+        doc = api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 3",\n+            description="Next item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-1",\n+                "@type": "Document",\n+                "title": "Item 1",\n+                "description": "Previous item"\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/folder-with-items/item-3",\n+                "@type": "Document",\n+                "title": "Item 3",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n+    def test_nextprev_root_no_nextprev(self):\n+        data = self.serialize()\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_root_has_prev(self):\n+        doc = api.content.create(\n+            container=self.portal,\n+            type="Document",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/doc1",\n+                "@type": "DXTestDocument",\n+                "title": "",\n+                "description": ""\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual({}, data["next_item"])\n+\n+    def test_nextprev_root_has_next(self):\n+        api.content.create(\n+            container=self.portal,\n+            type="Document",\n+            title="Item 2",\n+            description="Next item"\n+        )\n+        data = self.serialize()\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/item-2",\n+                "@type": "Document",\n+                "title": "Item 2",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n+    def test_nextprev_root_has_nextprev(self):\n+        api.content.create(\n+            container=self.portal,\n+            type="Document",\n+            title="Item 1",\n+            description="Previous item"\n+        )\n+        doc = api.content.create(\n+            container=self.portal,\n+            type="Document",\n+            title="Item 2",\n+            description="Current item"\n+        )\n+        api.content.create(\n+            container=self.portal,\n+            type="Document",\n+            title="Item 3",\n+            description="Next item"\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/item-1",\n+                "@type": "Document",\n+                "title": "Item 1",\n+                "description": "Previous item"\n+            },\n+            data["previous_item"]\n+        )\n+        self.assertEqual(\n+            {\n+                "@id": "http://nohost/plone/item-3",\n+                "@type": "Document",\n+                "title": "Item 3",\n+                "description": "Next item"\n+            },\n+            data["next_item"]\n+        )\n+\n     def test_richtext_serializer_context(self):\n         """This checks if the context is passed in correctly.\n \n'

