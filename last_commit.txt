Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-05-07T13:22:03Z
Author: Guido A.J. Stevens (gyst) <guido.stevens@cosent.nl>
Commit: https://github.com/plone/plone.app.event/commit/ac5a6db91117f3cc9dcc382a57e77e7e7508ee90

Don't error out on 'Africa/Abidjan' timezone [gyst]

Fixes #393

Files changed:
A news/393.bugfix
M plone/app/event/ical/exporter.py
M plone/app/event/tests/test_icalendar.py

b'diff --git a/news/393.bugfix b/news/393.bugfix\nnew file mode 100644\nindex 00000000..ab9396fa\n--- /dev/null\n+++ b/news/393.bugfix\n@@ -0,0 +1 @@\n+Don\'t error out on \'Africa/Abidjan\' timezone [gyst]\ndiff --git a/plone/app/event/ical/exporter.py b/plone/app/event/ical/exporter.py\nindex bd9f8156..f313903c 100644\n--- a/plone/app/event/ical/exporter.py\n+++ b/plone/app/event/ical/exporter.py\n@@ -111,7 +111,6 @@ def add_to_zones_map(tzmap, tzid, dt):\n     if tzid.lower() == "utc" or not is_datetime(dt):\n         # no need to define UTC nor timezones for date objects.\n         return tzmap\n-    null = datetime(1, 1, 1)\n     tz = pytz.timezone(tzid)\n     transitions = getattr(tz, "_utc_transition_times", None)\n     if not transitions:\n@@ -125,7 +124,7 @@ def add_to_zones_map(tzmap, tzid, dt):\n     #     datetime, which wouldn\'t create a match within the max-function. this\n     #     way we get the maximum transition time which is smaller than the\n     #     given datetime.\n-    transition = max(transitions, key=lambda item: item if item <= dtzl else null)\n+    transition = max(transitions, key=lambda item: item if item <= dtzl else dt.min)\n \n     # get previous transition to calculate tzoffsetfrom\n     idx = transitions.index(transition)\n@@ -133,10 +132,10 @@ def add_to_zones_map(tzmap, tzid, dt):\n     prev_transition = transitions[prev_idx]\n \n     def localize(tz, dt):\n-        if dt is null:\n+        if dt is datetime.min:\n             # dummy time, edge case\n-            # (dt at beginning of all transitions, see above.)\n-            return null\n+            # (dt at beginning of all transitions)\n+            return dt.min\n         return pytz.utc.localize(dt).astimezone(tz)  # naive to utc + localize\n \n     transition = localize(tz, transition)\ndiff --git a/plone/app/event/tests/test_icalendar.py b/plone/app/event/tests/test_icalendar.py\nindex c68e4ada..553434d7 100644\n--- a/plone/app/event/tests/test_icalendar.py\n+++ b/plone/app/event/tests/test_icalendar.py\n@@ -1,6 +1,7 @@\n from datetime import datetime\n from plone.app.event import base\n from plone.app.event.dx.traverser import OccurrenceTraverser as OccTravDX\n+from plone.app.event.ical.exporter import add_to_zones_map\n from plone.app.event.ical.importer import ical_import\n from plone.app.event.testing import make_fake_response\n from plone.app.event.testing import PAEventDX_FUNCTIONAL_TESTING\n@@ -499,3 +500,7 @@ def test_import_from_ics__sync_keep_theirs(self):\n         self.assertNotEqual(desc21, desc22)\n         self.assertTrue(start21 < start22)\n         self.assertTrue(end21 < end22)\n+\n+    def test_add_to_zones_map(self):\n+        tzmap = add_to_zones_map({}, \'Africa/Abidjan\', datetime(2013, 1, 1, 0, 0))\n+        self.assertTrue(\'Africa/Abidjan\' in tzmap)\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-05-07T15:34:15+02:00
Author: Guido A.J. Stevens (gyst) <guido.stevens@cosent.nl>
Commit: https://github.com/plone/plone.app.event/commit/589117475e9a999915902cfc0b7efb447215d853

black

Files changed:
M plone/app/event/tests/test_icalendar.py

b'diff --git a/plone/app/event/tests/test_icalendar.py b/plone/app/event/tests/test_icalendar.py\nindex 553434d7..c3a30eb1 100644\n--- a/plone/app/event/tests/test_icalendar.py\n+++ b/plone/app/event/tests/test_icalendar.py\n@@ -502,5 +502,5 @@ def test_import_from_ics__sync_keep_theirs(self):\n         self.assertTrue(end21 < end22)\n \n     def test_add_to_zones_map(self):\n-        tzmap = add_to_zones_map({}, \'Africa/Abidjan\', datetime(2013, 1, 1, 0, 0))\n-        self.assertTrue(\'Africa/Abidjan\' in tzmap)\n+        tzmap = add_to_zones_map({}, "Africa/Abidjan", datetime(2013, 1, 1, 0, 0))\n+        self.assertTrue("Africa/Abidjan" in tzmap)\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-06-04T18:24:06-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.event/commit/6317a4669d49191593d33cd15d460feb43612e82

Merge branch 'master' into 393_africa_abidjan

Files changed:
M CHANGES.rst
M setup.py
D news/3923.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex dd41804f..3db0a192 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,16 @@ Changelog\n \n .. towncrier release notes start\n \n+5.1.3 (2024-05-30)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Conditionally load the zcml for our portlets.\n+  [maurits] (#3923)\n+\n+\n 5.1.2 (2024-04-16)\n ------------------\n \ndiff --git a/news/3923.bugfix b/news/3923.bugfix\ndeleted file mode 100644\nindex 14de9d74..00000000\n--- a/news/3923.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Conditionally load the zcml for our portlets.\n-[maurits]\ndiff --git a/setup.py b/setup.py\nindex 6beb563c..7fd5ed78 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -3,7 +3,7 @@\n from setuptools import setup\n \n \n-version = "5.1.3.dev0"\n+version = "5.1.4.dev0"\n \n \n long_description = "\\n\\n".join(\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-06-05T05:23:20-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.event/commit/d024c1927a087c1cce00311cefb8b3a57cfc8d5e

Merge pull request #394 from plone/393_africa_abidjan

Don't error out on 'Africa/Abidjan' timezone [gyst]

Files changed:
A news/393.bugfix
M plone/app/event/ical/exporter.py
M plone/app/event/tests/test_icalendar.py

b'diff --git a/news/393.bugfix b/news/393.bugfix\nnew file mode 100644\nindex 000000000..ab9396faa\n--- /dev/null\n+++ b/news/393.bugfix\n@@ -0,0 +1 @@\n+Don\'t error out on \'Africa/Abidjan\' timezone [gyst]\ndiff --git a/plone/app/event/ical/exporter.py b/plone/app/event/ical/exporter.py\nindex bd9f81566..f313903c0 100644\n--- a/plone/app/event/ical/exporter.py\n+++ b/plone/app/event/ical/exporter.py\n@@ -111,7 +111,6 @@ def add_to_zones_map(tzmap, tzid, dt):\n     if tzid.lower() == "utc" or not is_datetime(dt):\n         # no need to define UTC nor timezones for date objects.\n         return tzmap\n-    null = datetime(1, 1, 1)\n     tz = pytz.timezone(tzid)\n     transitions = getattr(tz, "_utc_transition_times", None)\n     if not transitions:\n@@ -125,7 +124,7 @@ def add_to_zones_map(tzmap, tzid, dt):\n     #     datetime, which wouldn\'t create a match within the max-function. this\n     #     way we get the maximum transition time which is smaller than the\n     #     given datetime.\n-    transition = max(transitions, key=lambda item: item if item <= dtzl else null)\n+    transition = max(transitions, key=lambda item: item if item <= dtzl else dt.min)\n \n     # get previous transition to calculate tzoffsetfrom\n     idx = transitions.index(transition)\n@@ -133,10 +132,10 @@ def add_to_zones_map(tzmap, tzid, dt):\n     prev_transition = transitions[prev_idx]\n \n     def localize(tz, dt):\n-        if dt is null:\n+        if dt is datetime.min:\n             # dummy time, edge case\n-            # (dt at beginning of all transitions, see above.)\n-            return null\n+            # (dt at beginning of all transitions)\n+            return dt.min\n         return pytz.utc.localize(dt).astimezone(tz)  # naive to utc + localize\n \n     transition = localize(tz, transition)\ndiff --git a/plone/app/event/tests/test_icalendar.py b/plone/app/event/tests/test_icalendar.py\nindex c68e4adaa..c3a30eb1b 100644\n--- a/plone/app/event/tests/test_icalendar.py\n+++ b/plone/app/event/tests/test_icalendar.py\n@@ -1,6 +1,7 @@\n from datetime import datetime\n from plone.app.event import base\n from plone.app.event.dx.traverser import OccurrenceTraverser as OccTravDX\n+from plone.app.event.ical.exporter import add_to_zones_map\n from plone.app.event.ical.importer import ical_import\n from plone.app.event.testing import make_fake_response\n from plone.app.event.testing import PAEventDX_FUNCTIONAL_TESTING\n@@ -499,3 +500,7 @@ def test_import_from_ics__sync_keep_theirs(self):\n         self.assertNotEqual(desc21, desc22)\n         self.assertTrue(start21 < start22)\n         self.assertTrue(end21 < end22)\n+\n+    def test_add_to_zones_map(self):\n+        tzmap = add_to_zones_map({}, "Africa/Abidjan", datetime(2013, 1, 1, 0, 0))\n+        self.assertTrue("Africa/Abidjan" in tzmap)\n'

