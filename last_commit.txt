Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T19:43:09+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/2baf4e94f7d8d9cc7fc5b3f859ae8870559a8f7b

Only register the add site form and root Zope overview if `plone.distribution` is not available.

Files changed:
A news/3961.breaking.1
M Products/CMFPlone/browser/admin.zcml

b'diff --git a/Products/CMFPlone/browser/admin.zcml b/Products/CMFPlone/browser/admin.zcml\nindex 8d6696c408..04af682344 100644\n--- a/Products/CMFPlone/browser/admin.zcml\n+++ b/Products/CMFPlone/browser/admin.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n   <browser:view\n@@ -10,21 +11,34 @@\n       permission="zope.Public"\n       />\n \n-  <browser:page\n-      name="plone-addsite"\n-      for="OFS.interfaces.IApplication"\n-      class=".admin.AddPloneSite"\n-      template="templates/plone-addsite.pt"\n-      permission="zope2.ViewManagementScreens"\n-      />\n+  <configure zcml:condition="not-installed plone.distribution">\n+    <adapter factory=".admin.AppTraverser" />\n \n-  <browser:page\n-      name="plone-addsite"\n-      for="OFS.Folder.Folder"\n-      class=".admin.AddPloneSite"\n-      template="templates/plone-addsite.pt"\n-      permission="zope2.ViewManagementScreens"\n-      />\n+    <browser:page\n+        name="plone-overview"\n+        for="OFS.interfaces.IApplication"\n+        class=".admin.Overview"\n+        template="templates/plone-overview.pt"\n+        permission="zope.Public"\n+        />\n+\n+    <browser:page\n+        name="plone-addsite"\n+        for="OFS.interfaces.IApplication"\n+        class=".admin.AddPloneSite"\n+        template="templates/plone-addsite.pt"\n+        permission="zope2.ViewManagementScreens"\n+        />\n+\n+    <browser:page\n+        name="plone-addsite"\n+        for="OFS.Folder.Folder"\n+        class=".admin.AddPloneSite"\n+        template="templates/plone-addsite.pt"\n+        permission="zope2.ViewManagementScreens"\n+        />\n+\n+  </configure>\n \n   <browser:page\n       name="plone-upgrade"\n@@ -34,14 +48,6 @@\n       permission="cmf.ManagePortal"\n       />\n \n-  <browser:page\n-      name="plone-overview"\n-      for="OFS.interfaces.IApplication"\n-      class=".admin.Overview"\n-      template="templates/plone-overview.pt"\n-      permission="zope.Public"\n-      />\n-\n   <browser:page\n       name="plone-root-login"\n       for="OFS.interfaces.IApplication"\n@@ -56,8 +62,6 @@\n       permission="zope.Public"\n       />\n \n-  <adapter factory=".admin.AppTraverser" />\n-\n   <browser:resource\n       name="plone-admin-ui.css"\n       file="static/plone-admin-ui.css"\ndiff --git a/news/3961.breaking.1 b/news/3961.breaking.1\nnew file mode 100644\nindex 0000000000..0bd48e1547\n--- /dev/null\n+++ b/news/3961.breaking.1\n@@ -0,0 +1,2 @@\n+Only register the add site form and root Zope overview if `plone.distribution` is not available.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T20:17:39+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/3ffd4ac4168c2db1f77397d6fc33c91de3d2a8f0

Remove advanced options from Add Plone Site form.

If you need more options, you should add a Plone Distribution to your packages.
The main ones are `plone.volto` and `plone.classicui`.
We now only create a basic Plone site without default example content.

Files changed:
A news/3961.breaking.2
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/templates/plone-addsite.pt
M Products/CMFPlone/browser/templates/plone-overview.pt

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex e6273a812a..504faee48b 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -5,7 +5,6 @@\n from importlib.metadata import distribution\n from importlib.metadata import PackageNotFoundError\n from OFS.interfaces import IApplication\n-from plone.base.interfaces import INonInstallable\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.utils import get_installer\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n@@ -16,14 +15,10 @@\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.GenericSetup import BASE\n-from Products.GenericSetup import EXTENSION\n-from Products.GenericSetup import profile_registry\n from Products.GenericSetup.upgrade import normalize_version\n from urllib import parse\n from ZODB.broken import Broken\n from zope.component import adapter\n-from zope.component import getAllUtilitiesRegisteredFor\n from zope.component import getUtility\n from zope.component import queryMultiAdapter\n from zope.component import queryUtility\n@@ -45,6 +40,11 @@\n     HAS_VOLTO = True\n except PackageNotFoundError:\n     HAS_VOLTO = False\n+try:\n+    distribution("plone.app.caching")\n+    HAS_CACHING = True\n+except PackageNotFoundError:\n+    HAS_CACHING = False\n try:\n     distribution("plone.app.upgrade")\n     HAS_UPGRADE = True\n@@ -66,8 +66,6 @@ def publishTraverse(self, request, name):\n \n \n class Overview(BrowserView):\n-    has_volto = HAS_VOLTO\n-\n     def sites(self, root=None):\n         if root is None:\n             root = self.context\n@@ -154,67 +152,14 @@ class FrontPage(BrowserView):\n \n \n class AddPloneSite(BrowserView):\n-    # Profiles that are installed by default,\n-    # but can be removed later.\n-    default_extension_profiles = (\n-        "plone.app.caching:default",\n-        "plonetheme.barceloneta:default",\n-    )\n-    # Let\'s have a separate list for Volto.\n-    volto_default_extension_profiles = (\n-        "plone.app.caching:default",\n-        "plonetheme.barceloneta:default",\n-        "plone.volto:default",\n-    )\n-\n-    def profiles(self):\n-        base_profiles = []\n-        extension_profiles = []\n-        if HAS_VOLTO and not self.request.get("classic"):\n-            selected_extension_profiles = self.volto_default_extension_profiles\n-        else:\n-            selected_extension_profiles = self.default_extension_profiles\n-\n-        # profiles available for install/uninstall, but hidden at the time\n-        # the Plone site is created\n-        not_installable = [\n-            "Products.CMFPlacefulWorkflow:CMFPlacefulWorkflow",\n-        ]\n-        utils = getAllUtilitiesRegisteredFor(INonInstallable)\n-        for util in utils:\n-            not_installable.extend(\n-                util.getNonInstallableProfiles()\n-                if hasattr(util, "getNonInstallableProfiles")\n-                else []\n-            )\n-\n-        for info in profile_registry.listProfileInfo():\n-            if info.get("type") == EXTENSION and info.get("for") in (\n-                IPloneSiteRoot,\n-                None,\n-            ):\n-                profile_id = info.get("id")\n-                if profile_id not in not_installable:\n-                    if profile_id in selected_extension_profiles:\n-                        info["selected"] = "selected"\n-                    extension_profiles.append(info)\n-\n-        def _key(v):\n-            # Make sure implicitly selected items come first\n-            selected = v.get("selected") and "automatic" or "manual"\n-            return "{}-{}".format(selected, v.get("title", ""))\n-\n-        extension_profiles.sort(key=_key)\n-\n-        for info in profile_registry.listProfileInfo():\n-            if info.get("type") == BASE and info.get("for") in (IPloneSiteRoot, None):\n-                base_profiles.append(info)\n-\n-        return dict(\n-            base=tuple(base_profiles),\n-            default=_DEFAULT_PROFILE,\n-            extensions=tuple(extension_profiles),\n-        )\n+    @property\n+    def default_extension_profiles(self):\n+        # Profiles that are installed by default,\n+        # but can be removed later.\n+        profiles = ["plonetheme.barceloneta:default"]\n+        if HAS_CACHING:\n+            profiles.insert(0, "plone.app.caching:default")\n+        return profiles\n \n     def browser_language(self):\n         language = "en"\n@@ -307,9 +252,9 @@ def __call__(self):\n                 context,\n                 site_id,\n                 title=form.get("title", ""),\n-                profile_id=form.get("profile_id", _DEFAULT_PROFILE),\n-                extension_ids=form.get("extension_ids", ()),\n-                setup_content=form.get("setup_content", False),\n+                profile_id=_DEFAULT_PROFILE,\n+                extension_ids=self.default_extension_profiles,\n+                setup_content=False,\n                 default_language=form.get("default_language", "en"),\n                 portal_timezone=form.get("portal_timezone", "UTC"),\n             )\ndiff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt\nindex c4ff0769e1..e3c10222e0 100644\n--- a/Products/CMFPlone/browser/templates/plone-addsite.pt\n+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt\n@@ -31,12 +31,7 @@\n     </header>\n     <form action="#"\n     method="post"\n-    tal:attributes="action string:${context/absolute_url}/@@plone-addsite"\n-    tal:define="profiles view/profiles;\n-                base_profiles profiles/base;\n-                default_profile profiles/default;\n-                extension_profiles profiles/extensions;\n-                advanced request/advanced|nothing;">\n+    tal:attributes="action string:${context/absolute_url}/@@plone-addsite">\n       <article class="row">\n         <div class="col-md-12">\n           <h1><span i18n:translate="">Create a Plone site</span></h1>\n@@ -120,92 +115,6 @@\n             </div>\n           </div>\n \n-          <div class="col-md-12 mb-3"\n-               tal:condition="advanced">\n-            <div class="form-check">\n-              <input class="form-check-input"\n-                    id="example-content"\n-                    type="checkbox"\n-                    name="setup_content:boolean"\n-                    checked="checked" />\n-              <label class="form-check-label"\n-                    for="example-content"\n-                    i18n:translate="">Example content</label>\n-              <div class="form-text" i18n:translate="">\n-                Should the default example content be added to the site?\n-              </div>\n-            </div>\n-          </div>\n-\n-          <input tal:condition="not:advanced"\n-                  type="hidden" name="setup_content:boolean" value="true" />\n-\n-          <div class="col-md-12"\n-               tal:condition="python: len(base_profiles) > 1">\n-            <div class="mb-3">\n-              <p class="lead" i18n:translate="">Base configuration</p>\n-\n-              <div tal:repeat="info base_profiles"\n-                  class="form-check mb-3">\n-                <input type="radio"\n-                      name="profile_id:string"\n-                      value="profile"\n-                      class="form-check-input"\n-                      tal:attributes="id info/id;\n-                                      value info/id;\n-                                      checked python: default_profile==info[\'id\'] and \'checked\' or nothing" />\n-                <label class="form-check-label" tal:attributes="for info/id">${info/title}</label>\n-                <div class="form-text" tal:content="info/description">${info/description}</div>\n-              </div>\n-\n-              <div class="form-text" i18n:translate="">\n-                You normally don\'t need to change anything here unless you have specific reasons and know what you are doing.\n-              </div>\n-\n-            </div>\n-          </div>\n-\n-\n-          <div class="col-md-12 mt-3"\n-               tal:define="has_selected python:[p for p in extension_profiles if p.get(\'selected\', None)]"\n-               tal:condition="python: extension_profiles or advanced"\n-               tal:omit-tag="python: has_selected and not advanced">\n-            <tal:block condition="python: advanced">\n-              <h2 i18n:translate="">Add-ons</h2>\n-\n-              <div class="lead"\n-                   i18n:translate="" >\n-                Select any add-ons you want to activate immediately.\n-                You can also activate add-ons after the site has been created using the Add-ons control panel.\n-              </div>\n-            </tal:block>\n-\n-            <tal:loop tal:repeat="info extension_profiles">\n-              <tal:set tal:define="selected info/selected|nothing">\n-                <tal:normal tal:condition="python: not selected or advanced">\n-                  <div class="form-check mb-3"\n-                      tal:condition="python: advanced">\n-                    <input type="checkbox"\n-                          name="extension_ids:list"\n-                          value="${info/id}"\n-                          id="${info/id}"\n-                          class="form-check-input"\n-                          tal:attributes="checked info/selected|nothing;" />\n-                    <label class="form-check-label" for="${info/id}" >${info/title}</label>\n-                    <div class="form-text"\n-                        tal:condition="python: advanced and info[\'description\']">\n-                      ${info/description}\n-                    </div>\n-                  </div>\n-                </tal:normal>\n-                <tal:hidden tal:condition="python: selected and not advanced">\n-                  <input type="hidden"\n-                        name="extension_ids:list"\n-                        value="${info/id}" />\n-                </tal:hidden>\n-              </tal:set>\n-            </tal:loop>\n-          </div>\n           <div class="col-md-12 mt-3">\n             <input type="hidden" name="form.submitted:boolean" value="True" />\n             <button class="btn btn-success mt-3" type="submit" name="submit" i18n:translate="">Create Plone Site</button>\ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex 035f0b4856..487b60fdca 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -87,24 +87,9 @@\n                 <input type="hidden" name="site_id" value="Plone${site_number}" />\n                 <button type="submit"\n                         class="btn btn-${python:\'success\' if sites else \'primary\'}"\n-                        i18n:translate="">Create a new Plone site</button>\n-                <a class="btn btn-info"\n-                    i18n:translate=""\n-                    tal:condition="view/has_volto"\n-                    href="${action}?site_id=Plone${site_number}&amp;classic=1"\n-                    >Create Classic UI Plone site</a>\n-                <a class="btn btn-secondary"\n-                    i18n:translate=""\n-                    href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n-                    >Advanced</a>\n+                        i18n:translate="">Create Classic UI Plone site</button>\n             </form>\n             <br/>\n-            <p i18n:translate="help_create_plone_site_buttons_1">\n-                Starting with Plone 6, \'Create a new Plone site\' applies a\n-                profile and creates default content for the new React based\n-                default frontend Volto. You are however required to set up and run\n-                an additional frontend service to use this setup.\n-            </p>\n             <p i18n:translate="help_create_plone_site_buttons_2">\n                 The \'Create Classic UI Plone site\' button creates a Plone site configured\n                 for HTML based output, as was already supported by previous Plone versions.\n@@ -117,6 +102,11 @@\n                 these frontends and possible upgrade paths from older Plone versions\n                 to Plone 6.\n             </p>\n+            <p i18n:translate="help_create_plone_site_buttons_3">\n+                Starting with Plone 6.1, you should add the <code>plone.classicui</code>\n+                package if you want to create the default content.\n+                If you see this text, that means you do not have this package yet.\n+            </p>\n         </div>\n     </article>\n \ndiff --git a/news/3961.breaking.2 b/news/3961.breaking.2\nnew file mode 100644\nindex 0000000000..6b21bc0d27\n--- /dev/null\n+++ b/news/3961.breaking.2\n@@ -0,0 +1,5 @@\n+Remove advanced options from Add Plone Site form.\n+If you need more options, you should add a Plone Distribution to your packages.\n+The main ones are `plone.volto` and `plone.classicui`.\n+We now only create a basic Plone site without default example content.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T20:22:23+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/432b26cbbc2e49a00b48300a0ef7f26f14c95dc6

Remove broken patch that adds a link to the ZMI to add a plonesite.

This was already disabled in 2018.
Instead, probably since the same time, we show the plone-overview page on the Zope site root, by using our AppTraverser.

Files changed:
M Products/CMFPlone/patches/__init__.py
D Products/CMFPlone/patches/addzmiplonesite.py

b'diff --git a/Products/CMFPlone/patches/__init__.py b/Products/CMFPlone/patches/__init__.py\nindex e8234dc395..a931d15b38 100644\n--- a/Products/CMFPlone/patches/__init__.py\n+++ b/Products/CMFPlone/patches/__init__.py\n@@ -1,7 +1,3 @@\n-# FIXME: This no longer works with the new ZMI\n-# from . import addzmiplonesite          # Add an explicit link to add a new Plone\n-# site to the ZMI for faster access\n-\n from . import addzmisecuritywarning  # Add a warning to the ZMI security tab\n from . import csrf  # Protects most important methods from\n from . import dateIndexPatch  # Avoid OverflowErrors in Date*Indexes\ndiff --git a/Products/CMFPlone/patches/addzmiplonesite.py b/Products/CMFPlone/patches/addzmiplonesite.py\ndeleted file mode 100644\nindex a772ab71cd..0000000000\n--- a/Products/CMFPlone/patches/addzmiplonesite.py\n+++ /dev/null\n@@ -1,42 +0,0 @@\n-from OFS.ObjectManager import ObjectManager\n-\n-\n-# FIXME: This no longer works with the new ZMI\n-\n-ADD_PLONE_SITE_HTML = """\n-<dtml-if "_.len(this().getPhysicalPath()) == 1 or this().meta_type == \'Folder\' and \'PloneSite\' not in [o.__class__.__name__ for o in this().aq_chain]">\n-  <!-- Add Plone site action-->\n-  <form method="get"\n-        action="&dtml-URL1;/@@plone-addsite"\n-        style="text-align: right; margin-top:0.5em; margin-bottom:0em;"\n-        target="_top">\n-    <input type="hidden" name="site_id" value="Plone" />\n-    <input type="submit" value="Add Plone Site" />\n-    <label><input type="checkbox" name="advanced">advanced</label>\n-  </form>\n-</dtml-if>\n-<dtml-if "this().meta_type == \'Plone Site\'">\n-  <!-- Warn if outdated -->\n-  <dtml-if "this().portal_migration.needUpgrading()">\n-    <div style="background: url(/misc_/PageTemplates/exclamation.gif) top left no-repeat;\n-                padding: 0 0 0 1.2em; font-weight: bold; font-size: 125%;\n-                margin-top: 1em;">\n-      The site configuration is outdated and needs to be upgraded.\n-      <a href="&dtml-URL1;/@@plone-upgrade" title="Go to the upgrade page">\n-        Please continue with the upgrade.\n-      </a>\n-    </div>\n-  </dtml-if>\n-</dtml-if>\n-"""\n-\n-main = ObjectManager.manage_main\n-orig = main.read()\n-pos = orig.find("<!-- Add object widget -->")\n-\n-# Add in our button html at the right position\n-new = orig[:pos] + ADD_PLONE_SITE_HTML + orig[pos:]\n-\n-# Modify the manage_main\n-main.edited_source = new\n-main._v_cooked = main.cook()\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T21:04:11+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/b09a5922a52daf4926ce6e50fba401c8a31a0d7d

`factory.addPloneSite`: ignore the `setup_content` and `content_profile_id` keyword arguments.

Show a deprecation warning when these are used.

We never setup content anymore.  Use a Plone Distribution if you need this.
Or pass an extra profile id in the `extension_ids` keyword argument.

Our fallback Add Plone Site form (shown if `plone.distribution` is not available),
now passes the following extension ids:

1. the `factory._TYPES_PROFILE`: `plone.app.contenttypes:default`
2. `plone.app.caching:default` if the package is available.
3. `plonetheme.barceloneta:default`

Files changed:
A news/3961.breaking.3
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/factory.py

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 504faee48b..84b9c7ac97 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -13,6 +13,7 @@\n from plone.protect.interfaces import IDisableCSRFProtection\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n+from Products.CMFPlone.factory import _TYPES_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.GenericSetup.upgrade import normalize_version\n@@ -156,9 +157,10 @@ class AddPloneSite(BrowserView):\n     def default_extension_profiles(self):\n         # Profiles that are installed by default,\n         # but can be removed later.\n-        profiles = ["plonetheme.barceloneta:default"]\n+        profiles = [_TYPES_PROFILE]\n         if HAS_CACHING:\n-            profiles.insert(0, "plone.app.caching:default")\n+            profiles.append("plone.app.caching:default")\n+        profiles.append("plonetheme.barceloneta:default")\n         return profiles\n \n     def browser_language(self):\n@@ -254,7 +256,6 @@ def __call__(self):\n                 title=form.get("title", ""),\n                 profile_id=_DEFAULT_PROFILE,\n                 extension_ids=self.default_extension_profiles,\n-                setup_content=False,\n                 default_language=form.get("default_language", "en"),\n                 portal_timezone=form.get("portal_timezone", "UTC"),\n             )\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex e536921af7..1761ab570b 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -10,6 +10,8 @@\n from zope.interface import implementer\n from zope.lifecycleevent import ObjectCreatedEvent\n \n+import warnings\n+\n \n _TOOL_ID = "portal_setup"\n _DEFAULT_PROFILE = "Products.CMFPlone:plone"\n@@ -133,14 +135,27 @@ def addPloneSite(\n     title="Plone site",\n     description="",\n     profile_id=_DEFAULT_PROFILE,\n-    content_profile_id=None,\n     snapshot=False,\n+    content_profile_id=None,\n     extension_ids=(),\n-    setup_content=True,\n+    setup_content=None,\n     default_language="en",\n     portal_timezone="UTC",\n ):\n     """Add a PloneSite to the context."""\n+    if content_profile_id is not None:\n+        warnings.warn(\n+            "addPloneSite ignores the content_profile_id keyword argument "\n+            "since Plone 6.1. In Plone 7 it will be removed.",\n+            DeprecationWarning,\n+        )\n+    if setup_content is not None:\n+        warnings.warn(\n+            "addPloneSite ignores the setup_content keyword argument "\n+            "since Plone 6.1, treating it as always False. "\n+            "In Plone 7 it will be removed.",\n+            DeprecationWarning,\n+        )\n \n     site = PloneSite(site_id)\n     notify(ObjectCreatedEvent(site))\n@@ -172,24 +187,6 @@ def addPloneSite(\n         reg["plone.available_languages"] = [default_language]\n         reg["plone.site_title"] = title\n \n-        # Install default content types profile if user do not select "example content"\n-        # during site creation.\n-        if setup_content:\n-            if content_profile_id:\n-                content_profiles = [content_profile_id]\n-            elif "plone.volto:default" in extension_ids:\n-                content_profiles = [\n-                    _TYPES_PROFILE,\n-                    "plone.volto:default-homepage",\n-                ]\n-            else:\n-                content_profiles = [_CONTENT_PROFILE]\n-        else:\n-            content_profiles = [_TYPES_PROFILE]\n-\n-        for profile_id in content_profiles:\n-            setup_tool.runAllImportStepsFromProfile(f"profile-{profile_id}")\n-\n         props = dict(\n             title=title,\n             description=description,\ndiff --git a/news/3961.breaking.3 b/news/3961.breaking.3\nnew file mode 100644\nindex 0000000000..fbf50aa40f\n--- /dev/null\n+++ b/news/3961.breaking.3\n@@ -0,0 +1,4 @@\n+`factory.addPloneSite`: remove `setup_content` and `content_profile_id` keyword arguments.\n+We never setup content anymore.  Use a Plone Distribution if you need this.\n+Or pass an extra profile id in the `extension_ids` keyword argument.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T21:33:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/47e28230b48b8119eae574acc2cbd7df2ec68f68

Fix tests for portal creation and factory.

Currently, lots of tests fail.  To fix that, we need to add the contenttypes profile
in `plone.app.testing.layers.PloneFixture`:

```
    # Extension profiles to be installed with site setup
    extensionProfiles = (
        "plone.app.contenttypes:default",
        "plonetheme.barceloneta:default",
    )
```

Or we change our factory to have those two as default extension_ids, and remove that part from the plone-addsite view.

Files changed:
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/test_factory.py

b'diff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 080d3c6beb..34f0ac222d 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -1,4 +1,6 @@\n from Acquisition import aq_base\n+from importlib.metadata import distribution\n+from importlib.metadata import PackageNotFoundError\n from plone.base.interfaces import IFilterSchema\n from plone.base.interfaces import INavigationSchema\n from plone.base.interfaces import ISearchSchema\n@@ -34,6 +36,15 @@\n from zope.interface.interfaces import IComponentRegistry\n from zope.location.interfaces import ISite\n \n+import unittest\n+\n+\n+try:\n+    distribution("plone.distribution")\n+    HAS_DISTRIBUTION = True\n+except PackageNotFoundError:\n+    HAS_DISTRIBUTION = False\n+\n \n class TestPortalCreation(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n@@ -955,6 +966,10 @@ def testManagementPageCharset(self):\n         self.assertEqual(manage_charset, "utf-8")\n \n \n+@unittest.skipIf(\n+    HAS_DISTRIBUTION,\n+    "@@plone-addsite is not available because plone.distribution is used.",\n+)\n class TestAddPloneSite(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n         self.request = self.app.REQUEST\n@@ -965,7 +980,6 @@ def addsite(self):\n         form = self.request.form\n         form["form.submitted"] = 1\n         form["site_id"] = "plonesite1"\n-        form["setup_content"] = 1\n         self.request["_authenticator"] = createToken()\n         addsite = self.app.restrictedTraverse("@@plone-addsite")\n         addsite()\n@@ -981,6 +995,6 @@ def test_addsite_en_as_nl(self):\n         # because translations are not available in the tests.\n         self.assertIn("Learn more about Plone", plonesite.text.raw)\n \n-        # XXX maybe it is better to reset the sire in the @@plone-addsite view\n+        # XXX maybe it is better to reset the site in the @@plone-addsite view\n         # or somewhere else?\n         setSite(None)\ndiff --git a/Products/CMFPlone/tests/test_factory.py b/Products/CMFPlone/tests/test_factory.py\nindex b876f730eb..bcbf875394 100644\n--- a/Products/CMFPlone/tests/test_factory.py\n+++ b/Products/CMFPlone/tests/test_factory.py\n@@ -18,7 +18,7 @@ def setUp(self):\n \n     def testPlonesiteWithUnicodeTitle(self):\n         TITLE = "Plon\xc3\xa9"\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE, setup_content=False)\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE)\n         ploneSiteTitleProperty = ploneSite.getProperty("title")\n         # CMF stores title as string only so Plone should keep the same track\n         self.assertTrue(isinstance(ploneSiteTitleProperty, str))\n@@ -29,7 +29,7 @@ def testPlonesiteWithUnicodeTitle(self):\n \n     def testPlonesiteWithoutUnicodeTitle(self):\n         TITLE = "Plone"\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE, setup_content=False)\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE)\n         ploneSiteTitleProperty = ploneSite.getProperty("title")\n         # CMF stores title as string only so Plone should keep the same track\n         self.assertTrue(isinstance(ploneSiteTitleProperty, str))\n@@ -38,21 +38,32 @@ def testPlonesiteWithoutUnicodeTitle(self):\n         self.assertTrue(isinstance(ploneSiteTitle, str))\n         self.assertEqual(ploneSiteTitle, TITLE)\n \n-    def test_site_creation_without_content_but_with_dexterity(self):\n-        """Test site creation without example content have dexterity installed."""\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo", setup_content=False)\n+    def test_site_creation_has_no_dexterity(self):\n+        """Test site creation does not even have dexterity installed.\n+\n+        If you want it, you need to pass more extension_ids,\n+        like the plone-addsite view does.\n+        """\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo")\n         qi = get_installer(ploneSite, self.request)\n-        self.assertTrue(qi.is_product_installed("plone.app.dexterity"))\n+        self.assertFalse(qi.is_product_installed("plone.app.dexterity"))\n+\n+    def test_site_creation_has_no_content_types(self):\n+        """Test site creation has no content types.\n \n-    def test_site_creation_without_content_but_with_content_types(self):\n-        """Test site creation without example content have content types."""\n-        addPloneSite(self.app, "ploneFoo", title="Foo", setup_content=False)\n+        If you want them, you need to pass more extension_ids,\n+        like the plone-addsite view does.\n+        """\n+        addPloneSite(self.app, "ploneFoo", title="Foo")\n         # Folder\n         fti = queryUtility(IDexterityFTI, name="Folder")\n+        self.assertIsNone(fti)\n+        # For good measure we check that there is at least on FTI.\n+        fti = queryUtility(IDexterityFTI, name="Plone Site")\n         self.assertIsNotNone(fti)\n \n     def test_site_creation_title_is_set_in_registry(self):\n         """Plone site title should be stored in registry"""\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo", setup_content=False)\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo")\n         registry = getUtility(IRegistry, context=ploneSite)\n         self.assertEqual(registry["plone.site_title"], "Foo")\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-27T19:29:33+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/121da7e3da3cdfa9099306aafe3accb44677685f

Update news/3961.breaking.3

Co-authored-by: Steve Piercy &lt;web@stevepiercy.com&gt;

Files changed:
M news/3961.breaking.3

b'diff --git a/news/3961.breaking.3 b/news/3961.breaking.3\nindex fbf50aa40f..38030bb3b4 100644\n--- a/news/3961.breaking.3\n+++ b/news/3961.breaking.3\n@@ -1,4 +1,4 @@\n `factory.addPloneSite`: remove `setup_content` and `content_profile_id` keyword arguments.\n-We never setup content anymore.  Use a Plone Distribution if you need this.\n+We no longer load default content. Use a Plone Distribution if you need this.\n Or pass an extra profile id in the `extension_ids` keyword argument.\n [maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-27T19:31:26+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/ae16bc096e8eac8bdeabf459b59edf203381b6ae

Merge branch 'master' into distributions

Files changed:
A news/3982.internal
M .github/ISSUE_TEMPLATE/PLIP.md

b'diff --git a/.github/ISSUE_TEMPLATE/PLIP.md b/.github/ISSUE_TEMPLATE/PLIP.md\nindex 271a1c9345..2e8cddcf6a 100644\n--- a/.github/ISSUE_TEMPLATE/PLIP.md\n+++ b/.github/ISSUE_TEMPLATE/PLIP.md\n@@ -2,7 +2,7 @@\n name: "\\U0001F680 PLIP"\n about: Plone Improvement Proposal\n title: \'\'\n-labels: \'\'\n+labels: \'03 type: feature (plip)\'\n assignees: \'\'\n \n ---\n@@ -11,9 +11,7 @@ assignees: \'\'\n \n <!--\n \n-Read http://docs.plone.org/develop/coredev/docs/plips.html first!\n-\n-Set "03 type: feature: plip" as label.\n+Read https://5.docs.plone.org/develop/coredev/docs/plips.html first!\n \n Mention the @plone/framework-team when the PLIP is information complete!\n \ndiff --git a/news/3982.internal b/news/3982.internal\nnew file mode 100644\nindex 0000000000..f2a9d60744\n--- /dev/null\n+++ b/news/3982.internal\n@@ -0,0 +1 @@\n+Automatically set the label to `03 type: feature (plip)` for PLIPs. @stevepiercy\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-27T19:32:42+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/31bfe559011d00bc075c20cdec0df5ef49a4bc5b

Change help_create_plone_site_buttons_3 text.

Suggestion by @stevepiercy.

Files changed:
M Products/CMFPlone/browser/templates/plone-overview.pt

b'diff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex 487b60fdca..42217e8180 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -103,9 +103,9 @@\n                 to Plone 6.\n             </p>\n             <p i18n:translate="help_create_plone_site_buttons_3">\n-                Starting with Plone 6.1, you should add the <code>plone.classicui</code>\n-                package if you want to create the default content.\n-                If you see this text, that means you do not have this package yet.\n+                Starting with Plone 6.1, default content is not loaded into the site.\n+                If you want to load the default content, you should install the <code>plone.classicui</code> package.\n+                If you see this text, that means you have not installed that package yet.\n             </p>\n         </div>\n     </article>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-09-05T16:40:11-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/347837206e8a5a48036bef508c16e112142cd9b0

Merge branch 'master' into distributions

Files changed:
M .github/ISSUE_TEMPLATE/PLIP.md
M CHANGES.md
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/URLTool.py
M Products/CMFPlone/__init__.py
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/browser/templates/ajax_main_template.pt
M Products/CMFPlone/browser/templates/main_template.pt
M Products/CMFPlone/browser/templates/search.pt
M Products/CMFPlone/configure.zcml
M Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt
M Products/CMFPlone/controlpanel/browser/types.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/factory.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/profiles/default/componentregistry.xml
M Products/CMFPlone/profiles/default/metadata.xml
M Products/CMFPlone/profiles/default/toolset.xml
M Products/CMFPlone/profiles/default/types.xml
M Products/CMFPlone/profiles/default/types/Plone_Site.xml
M Products/CMFPlone/profiles/default/types/TempFolder.xml
M Products/CMFPlone/profiles/default/workflows.xml
M Products/CMFPlone/profiles/dependencies/metadata.xml
M Products/CMFPlone/tests/robot/test_controlpanel_types.robot
M Products/CMFPlone/tests/testInterfaces.py
M Products/CMFPlone/tests/testMigrationTool.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPloneTool.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testSearch.py
M Products/CMFPlone/tests/testSecurity.py
M Products/CMFPlone/tests/testSiteAdminRole.py
M Products/CMFPlone/tests/testWebDAV.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_zmi.py
M Products/CMFPlone/utils.py
M setup.py
D Products/CMFPlone/PropertiesTool.py
D Products/CMFPlone/exportimport/propertiestool.py
D Products/CMFPlone/exportimport/tests/testPropertiesTool.py
D Products/CMFPlone/profiles/default/propertiestool.xml
D Products/CMFPlone/profiles/default/types/Discussion_Item.xml
D Products/CMFPlone/www/addPropertySheet.zpt
D news/3756.bugfix
D news/3765-1.bugfix
D news/3765-2.bugfix
D news/3765-3.bugfix
D news/3765-4.bugfix
D news/3942.bugfix
D news/3942.internal
D news/3945.bugfix
D news/3946.bugfix
D news/3949.bugfix
D news/3952.bugfix
D news/3960.bugfix
D news/3962.bugfix
D news/3964.bugfix
D news/3965.bugfix
D news/3966.bugfix
D news/3967.bugfix
D news/3968.bugfix
D news/3975.bugfix.1
D news/3975.bugfix.2
D news/3982.internal
D news/6103.internal

b'diff --git a/.github/ISSUE_TEMPLATE/PLIP.md b/.github/ISSUE_TEMPLATE/PLIP.md\nindex 2e8cddcf6a..df9efd7ad5 100644\n--- a/.github/ISSUE_TEMPLATE/PLIP.md\n+++ b/.github/ISSUE_TEMPLATE/PLIP.md\n@@ -4,6 +4,7 @@ about: Plone Improvement Proposal\n title: \'\'\n labels: \'03 type: feature (plip)\'\n assignees: \'\'\n+projects: \'plone/47\'\n \n ---\n \n@@ -11,7 +12,7 @@ assignees: \'\'\n \n <!--\n \n-Read https://5.docs.plone.org/develop/coredev/docs/plips.html first!\n+Read https://6.docs.plone.org/contributing/core/plips.html first!\n \n Mention the @plone/framework-team when the PLIP is information complete!\n \ndiff --git a/CHANGES.md b/CHANGES.md\nindex de2bfdcf2c..f16e3beadc 100644\n--- a/CHANGES.md\n+++ b/CHANGES.md\n@@ -15,6 +15,102 @@\n \n <!-- towncrier release notes start -->\n \n+## 6.1.0a5 (2024-09-05)\n+\n+\n+### Breaking changes:\n+\n+- Use `Products.isurlinportal` directly, instead of relying on it patching our `URLTool`.\n+  This solves a cyclic dependency.\n+  [maurits] #12\n+- Turn plone.app.discussion in a core-addon.\n+  [@jensens] #3782\n+\n+\n+### Bug fixes:\n+\n+- Sort portal types in search filter according to `ReallyUserFriendlyTypes` using `unidecode` in `plone.app.vocabularies`. @rohnsha0 #3860\n+- Do not use deprecated `base_hasattr` in `utils.py`.\n+  [maurits] #3998\n+- Use `five.registerPackage` so an editable install with `pip` works.\n+  [maurits] #4002\n+- Fix help text for redirect target path. @davisagli #4007\n+\n+\n+### Internal:\n+\n+- Updated metadata version to 6104.\n+  [maurits] #6104\n+\n+## 6.1.0a4 (2024-08-01)\n+\n+\n+### Breaking changes:\n+\n+- Remove `propertiestool` import step and usage of `portal_properties`.\n+  Remove `site_properties` from `main_template.pt` and ajax template.\n+  Remove `PropertiesTool` module.\n+  [maurits] #125\n+\n+\n+### Internal:\n+\n+- Update the link to the PLIPs page for Plone 6 Documentation. @stevepiercy #3988\n+\n+## 6.1.0a4.dev0 (2024-07-08)\n+\n+\n+### Bug fixes:\n+\n+- Mockup TinyMCE settings: Remove unused loadingBaseUrl option. 3765-1\n+- Mockup TinyMCE settings: Remove deprecated AtD plugin settings. 3765-2\n+- Mockup TinyMCE settings: Remove unused AtD related views. 3765-3\n+- Mockup TinyMCE settings: Remove unused ITinyMCESpellCheckerSchema and ITinyMCESpellCheckerForm. 3765-4\n+- Fix deprecation warnings in "navtree" code + some micro optimizations\n+  [jensens] #3756\n+- Use details element for collapsibles in the resource registry.\n+  Makes it possible to toggle elements even with broken or missing javascript.\n+  Also properly connect form labels with their inputs.\n+  Fixes #3942\n+- Import INavigationRoot from plone.base, removes DeprecationWarning.\n+  [@jensens] #3945\n+- Use `context` instead of `here` in templates.\n+  Call `@@main_template` (with prefix `@@`) to optimize lookup.\n+  [@jensens] #3946\n+- Reduce DeprecationWarnings. [@jensens] #3949\n+- Fix TypeError in getGroups sorting\n+  [@rohnsha0] #3952\n+- Remove queryCatalog and getFolderContents skins script.\n+  This includes a refactoring in the search RSS and updates to soe tests\n+  [@jensens] #3960\n+- Products.CMFPlone  must not depend on plone.api [@jensens] #3962\n+- Removes duplicate `<article id="content">` in controlpanel templates\n+  [@szakitibi] #3964\n+- Do not test types_not_searched for a element that is not part of the underlying vocabulary.\n+  [@jensens] #3965\n+- Remove unused leftover reference to the Zope2 package from test. [@jensens] #3966\n+- Fix: Traceback in maintenance control panel on shutdown if feature is not available.\n+  Hide button if action is not possible.\n+  [@jensens] #3967\n+- Fixed RegistrationTool to take user email with `__+__@abc.com`.\n+  [@rohnsha0] #3968\n+- Plone upgrade page: show error when upgrade is needed but no upgrades are available.\n+  Especially show a note when the `plone.app.upgrade` package is not available.\n+  [maurits] #3975\n+- Plone upgrade page: show list of previously installed packages that are currently missing.\n+  For example: `plone.app.discussion` may be missing in Plone 6.1, unless you explicitly add it, or depend on the `Plone` package.\n+  [maurits] #3975\n+\n+\n+### Internal:\n+\n+- Resourceregistry controlpanel: zprettify template.\n+  [thet] #3942\n+- Automatically set the label to `03 type: feature (plip)` for PLIPs. @stevepiercy #3982\n+- Automatically add a PLIP issue to the PLIP project board. @stevepiercy #3984\n+- Updated metadata version to 6103.\n+  [maurits] #6103\n+\n ## 6.1.0a3 (2024-04-26)\n \n \ndiff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 1b45f330a1..723d71e8b9 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -10,7 +10,6 @@\n from BTrees.Length import Length\n from DateTime import DateTime\n from OFS.interfaces import IOrderedContainer\n-from plone.app.discussion.interfaces import DISCUSSION_ANNOTATION_KEY\n from plone.base.interfaces import INonStructuralFolder\n from plone.base.interfaces import IPloneCatalogTool\n from plone.base.utils import base_hasattr\n@@ -46,6 +45,13 @@\n \n \n logger = logging.getLogger("Plone")\n+try:\n+    from plone.app.discussion.interfaces import DISCUSSION_ANNOTATION_KEY\n+except ImportError:  # pragma: no cover\n+    DISCUSSION_ANNOTATION_KEY = None\n+\n+\n+logger = logging.getLogger(\'Plone\')\n \n _marker = object()\n \n@@ -455,9 +461,13 @@ def indexObject(obj, path):\n             ):\n                 try:\n                     self.reindexObject(obj, idxs=idxs)\n-                    # index conversions from plone.app.discussion\n+                    # index conversations from plone.app.discussion\n                     annotions = IAnnotations(obj)\n-                    if DISCUSSION_ANNOTATION_KEY in annotions:\n+                    if (\n+                        DISCUSSION_ANNOTATION_KEY is not None\n+                        and DISCUSSION_ANNOTATION_KEY in annotions\n+\n+                    ):\n                         conversation = annotions[DISCUSSION_ANNOTATION_KEY]\n                         conversation = conversation.__of__(obj)\n                         for comment in conversation.getComments():\ndiff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 886d93ff63..0c549327a2 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -623,9 +623,8 @@ def browserDefault(self, obj):\n         # 3. If the object has a property default_page set and this gives a list\n         #     of, or single, object id, and that object is is found in the\n         #     folder or is the name of a skin template, return that id\n-        # 4. If the property default_page is set in site_properties and that\n-        #     property contains a list of ids of which one id is found in the\n-        #     folder, return that id\n+        # 4. Look up the property plone.default_page in the registry for\n+        #     magic ids and test these.\n         # 5. If the object implements IBrowserDefault, try to get the selected\n         #     layout.\n         # 6. If the type has a \'folderlisting\' action and no default page is\n@@ -758,7 +757,7 @@ def acquireLocalRoles(self, obj, status=1, REQUEST=None):\n         # If status is 1, allow acquisition of local roles (regular\n         # behaviour).\n         # If it\'s 0, prohibit it (it will allow some kind of local role\n-        # blacklisting).\n+        # denylisting).\n         mt = getToolByName(self, "portal_membership")\n         if not mt.checkPermission(ModifyPortalContent, obj):\n             raise Unauthorized\n@@ -928,7 +927,7 @@ def getUserFriendlyTypes(self, typesList=None):\n         # and selection purposes.\n         #\n         # This is the list of types available in the portal, minus those\n-        # defined in the types_not_searched property in site_properties, if it\n+        # defined in the types_not_searched property in the registry, if it\n         # exists.\n         #\n         # If typesList is given, this is used as the base list; else all types\n@@ -937,7 +936,7 @@ def getUserFriendlyTypes(self, typesList=None):\n             typesList = []\n         registry = getUtility(IRegistry)\n         search_settings = registry.forInterface(ISearchSchema, prefix="plone")\n-        blacklistedTypes = search_settings.types_not_searched\n+        denylistedTypes = search_settings.types_not_searched\n \n         ttool = getToolByName(self, "portal_types")\n         tool_types = ttool.keys()\n@@ -946,7 +945,7 @@ def getUserFriendlyTypes(self, typesList=None):\n         else:\n             types = tool_types\n \n-        friendlyTypes = set(types) - set(blacklistedTypes)\n+        friendlyTypes = set(types) - set(denylistedTypes)\n         return list(friendlyTypes)\n \n     @security.public\ndiff --git a/Products/CMFPlone/PropertiesTool.py b/Products/CMFPlone/PropertiesTool.py\ndeleted file mode 100644\nindex 4cc6feb44e..0000000000\n--- a/Products/CMFPlone/PropertiesTool.py\n+++ /dev/null\n@@ -1,144 +0,0 @@\n-from AccessControl import ClassSecurityInfo\n-from AccessControl.class_init import InitializeClass\n-from Acquisition import aq_inner\n-from Acquisition import aq_parent\n-from App.special_dtml import DTMLFile\n-from OFS.Folder import Folder\n-from OFS.PropertyManager import PropertyManager\n-from OFS.SimpleItem import SimpleItem\n-from plone.base.interfaces import IPropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n-from Products.CMFCore.interfaces import ISiteRoot\n-from Products.CMFCore.permissions import ManagePortal\n-from Products.CMFCore.utils import UniqueObject\n-from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n-from Products.CMFPlone.utils import WWW_DIR\n-from Products.MailHost.interfaces import IMailHost\n-from Products.PageTemplates.PageTemplateFile import PageTemplateFile\n-from zope.component import getUtility\n-from zope.component import queryUtility\n-from zope.deprecation import deprecate\n-from zope.interface import implementer\n-\n-\n-@implementer(IPropertiesTool)\n-class PropertiesTool(PloneBaseTool, Folder, UniqueObject):\n-    """Plone properties tool"""\n-\n-    id = "portal_properties"\n-    toolicon = "skins/plone_images/topic_icon.png"\n-\n-    meta_type = "Plone Properties Tool"\n-    meta_types = (\n-        {"name": "Plone Property Sheet", "action": "manage_addPropertySheetForm"},\n-    )\n-\n-    manage_options = (\n-        (Folder.manage_options[0],)\n-        + ({"label": "Overview", "action": "manage_overview"},)\n-        + SimpleItem.manage_options\n-    )\n-\n-    manage_addPropertySheetForm = PageTemplateFile("www/addPropertySheet", globals())\n-\n-    security = ClassSecurityInfo()\n-\n-    security.declareProtected(ManagePortal, "manage_overview")\n-    manage_overview = DTMLFile("explainPropertiesTool", WWW_DIR)\n-\n-    def all_meta_types(self, interfaces=None):\n-        return self.meta_types\n-\n-    security.declareProtected(ManagePortal, "addPropertySheet")\n-\n-    def addPropertySheet(self, id, title="", propertysheet=None):\n-        # Add a new PropertySheet.\n-        o = SimpleItemWithProperties(id, title)\n-\n-        # copy the propertysheet values onto the new instance\n-        if propertysheet is not None:\n-            if not hasattr(propertysheet, "propertyIds"):\n-                raise TypeError("propertysheet needs to be a PropertyManager")\n-\n-            for property in propertysheet.propertyMap():\n-                pid = property.get("id")\n-                ptype = property.get("type")\n-                pvalue = propertysheet.getProperty(pid)\n-                if not hasattr(o, pid):\n-                    o._setProperty(pid, pvalue, ptype)\n-\n-        self._setObject(id, o)\n-\n-    security.declareProtected(ManagePortal, "manage_addPropertySheet")\n-\n-    def manage_addPropertySheet(self, id, title="", propertysheet=None, REQUEST=None):\n-        """Add a instance of a Property Sheet if handed a\n-        propertysheet put the properties into new propertysheet.\n-        """\n-        self.addPropertySheet(id, title, propertysheet)\n-\n-        if REQUEST is not None:\n-            return self.manage_main()\n-\n-    #\n-    #   \'portal_properties\' interface methods\n-    #\n-    security.declareProtected(ManagePortal, "editProperties")\n-\n-    def editProperties(self, props):\n-        # Change portal settings.\n-        aq_parent(aq_inner(self)).manage_changeProperties(props)\n-        if hasattr(self, "propertysheets"):\n-            ps = self.propertysheets\n-            if hasattr(ps, "props"):\n-                ps.props.manage_changeProperties(props)\n-\n-    def title(self):\n-        site = queryUtility(ISiteRoot)\n-        if site is None:\n-            # fallback\n-            return aq_parent(aq_inner(self)).title\n-        return site.title\n-\n-    def smtp_server(self):\n-        return getUtility(IMailHost).smtp_host\n-\n-    @deprecate(\n-        "The portal portal_properties tool will be removed in Plone 6.1. "\n-        "Use the portal_registry instead. "\n-        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n-        "for more details."\n-    )\n-    def hasProperty(self, id):\n-        return super().hasProperty(id)\n-\n-\n-InitializeClass(PropertiesTool)\n-\n-\n-@implementer(ISimpleItemWithProperties)\n-class SimpleItemWithProperties(PropertyManager, SimpleItem):\n-    """\n-    A common base class for objects with configurable\n-    properties in a fixed schema.\n-    """\n-\n-    def __init__(self, id, title=""):\n-        self.id = id\n-        self.title = title\n-\n-    meta_type = "Plone Property Sheet"\n-\n-    manage_options = PropertyManager.manage_options + SimpleItem.manage_options\n-\n-    @deprecate(\n-        "The portal portal_properties tool will be removed in Plone 6.1. "\n-        "Use the portal_registry instead. "\n-        "Check https://github.com/plone/Products.CMFPlone/issues/125 "\n-        "for more details."\n-    )\n-    def hasProperty(self, id):\n-        return super().hasProperty(id)\n-\n-\n-InitializeClass(SimpleItemWithProperties)\ndiff --git a/Products/CMFPlone/URLTool.py b/Products/CMFPlone/URLTool.py\nindex 76ccbb2f39..71aecab897 100644\n--- a/Products/CMFPlone/URLTool.py\n+++ b/Products/CMFPlone/URLTool.py\n@@ -6,6 +6,7 @@\n from Products.CMFCore.URLTool import URLTool as BaseTool\n from Products.CMFPlone.patches.gtbn import rewrap_in_request_container\n from Products.CMFPlone.PloneBaseTool import PloneBaseTool\n+from Products.isurlinportal import isURLInPortal\n from zope.component import getUtility\n \n \n@@ -14,26 +15,10 @@ class URLTool(PloneBaseTool, BaseTool):\n     security = ClassSecurityInfo()\n     toolicon = "skins/plone_images/link_icon.png"\n \n-    @security.public\n-    def isURLInPortal(self, url, context=None):\n-        # Note: no docstring, because the method is publicly available\n-        # but does not need to be callable on site-url/portal_url/isURLInPortal.\n-        #\n-        # This method is overridden by Products.isurlinportal,\n-        # but the public declaration still seems needed.\n-        #\n-        # Also, in tests/testURLTool.py we do not use layers,\n-        # which means the Products code is not loaded,\n-        # so we need to import it explicitly.\n-        # This is done once.\n-        try:\n-            from Products.isurlinportal import isURLInPortal\n-        except ImportError:\n-            # If this somehow fails, it seems better to have a safe fallback,\n-            # instead of a hard failure.\n-            return False\n-\n-        return isURLInPortal(self, url, context=context)\n+    # The implementation of this method was moved to Products.isurlinportal\n+    # to be able to more quickly do a security release in case there is a\n+    # problem in this part.\n+    isURLInPortal = isURLInPortal\n \n     def getPortalObject(self):\n         portal = aq_parent(aq_inner(self))\ndiff --git a/Products/CMFPlone/__init__.py b/Products/CMFPlone/__init__.py\nindex ff52822e9e..f9fab8c26f 100644\n--- a/Products/CMFPlone/__init__.py\n+++ b/Products/CMFPlone/__init__.py\n@@ -153,7 +153,6 @@ def initialize(context):\n     from Products.CMFPlone import patches  # noqa\n     from Products.CMFPlone import PloneControlPanel\n     from Products.CMFPlone import PloneTool\n-    from Products.CMFPlone import PropertiesTool\n     from Products.CMFPlone import RegistrationTool\n     from Products.CMFPlone import SkinsTool\n     from Products.CMFPlone import TranslationServiceTool\n@@ -166,7 +165,6 @@ def initialize(context):\n         PloneTool.PloneTool,\n         WorkflowTool.WorkflowTool,\n         CachingPolicyManager.CachingPolicyManager,\n-        PropertiesTool.PropertiesTool,\n         MigrationTool.MigrationTool,\n         PloneControlPanel.PloneControlPanel,\n         RegistrationTool.RegistrationTool,\ndiff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex 644099ea71..2b0fef236c 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -5,7 +5,6 @@\n from plone.base.interfaces.controlpanel import IMailSchema\n from plone.base.utils import pretty_title_or_id\n from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser import BrowserView\n from Products.MailHost.interfaces import IMailHost\n@@ -201,11 +200,7 @@ def home_folder(self, username):\n         return self.membership_tool.getHomeFolder(id=username)\n \n     def __call__(self):\n-        self.portal_properties = getUtility(IPropertiesTool)\n-\n         self.portal_catalog = getToolByName(self.context, "portal_catalog")\n-\n-        # XXX: getUtility call does not work.\n         self.membership_tool = getToolByName(self.context, "portal_membership")\n \n         self.portal_state = getMultiAdapter(\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex ae4d6cbe27..505f493748 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -14,6 +14,7 @@\n from zope.component import queryUtility\n from zope.i18nmessageid import MessageFactory\n from zope.publisher.browser import BrowserView\n+from zope.schema.interfaces import IVocabularyFactory\n from ZTUtils import make_query\n \n import json\n@@ -183,7 +184,28 @@ def filter_types(self, types):\n         plone_utils = getToolByName(self.context, "plone_utils")\n         if not isinstance(types, list):\n             types = [types]\n-        return plone_utils.getUserFriendlyTypes(types)\n+\n+        # We want to have the configured types to be exposed in the search sorted for humans (by translated Title).\n+        # Those are stored in the Plone registry. They are called here UserFriendlyTypes.\n+        #\n+        # Confusingly, on the other hand we have the ReallyUserFriendlyTypes vocabulary from\n+        # plone.app.vocabularies, which is already sorted accordingly and contain all possible types,\n+        # except "Temp Folder", "Plone Site" and deprecated types.\n+\n+        # fetch the sorted ReallyUserFriendlyTypes vocabulary\n+        vocab_factory = queryUtility(\n+            IVocabularyFactory, "plone.app.vocabularies.ReallyUserFriendlyTypes"\n+        )\n+        vocab = vocab_factory(self.context)\n+\n+        # get the configured values from the registry and pass the input types to be reduced to possible values\n+        user_friendly_types = plone_utils.getUserFriendlyTypes(types)\n+\n+        # Filter the sorted ReallyUserFriendlyTypes down to the configured values from the registry,\n+        #  but keep the order.\n+        sorted_types = [term.value for term in vocab if term.value in user_friendly_types]\n+\n+        return sorted_types\n \n     def types_list(self):\n         # only show those types that have any content\ndiff --git a/Products/CMFPlone/browser/templates/ajax_main_template.pt b/Products/CMFPlone/browser/templates/ajax_main_template.pt\nindex 81eab03a4a..f4efc3b8e7 100644\n--- a/Products/CMFPlone/browser/templates/ajax_main_template.pt\n+++ b/Products/CMFPlone/browser/templates/ajax_main_template.pt\n@@ -15,7 +15,6 @@\n           dummy python: plone_layout.mark_view(view);\n           portal_url python:portal_state.portal_url();\n           checkPermission python:context.restrictedTraverse(\'portal_membership\').checkPermission;\n-          site_properties python:context.restrictedTraverse(\'portal_properties\').site_properties;\n           ajax_include_head python:request.get(\'ajax_include_head\', False);\n           ajax_load python:False;"\n       i18n:domain="plone"\ndiff --git a/Products/CMFPlone/browser/templates/main_template.pt b/Products/CMFPlone/browser/templates/main_template.pt\nindex 9bffd9a9bb..efe9eac05e 100644\n--- a/Products/CMFPlone/browser/templates/main_template.pt\n+++ b/Products/CMFPlone/browser/templates/main_template.pt\n@@ -15,7 +15,6 @@\n           dummy python: plone_layout.mark_view(view);\n           portal_url python:portal_state.portal_url();\n           checkPermission python:context.restrictedTraverse(\'portal_membership\').checkPermission;\n-          site_properties python:context.restrictedTraverse(\'portal_properties\').site_properties;\n           ajax_include_head python:request.get(\'ajax_include_head\', False);\n           ajax_load python:False;"\n       i18n:domain="plone"\ndiff --git a/Products/CMFPlone/browser/templates/search.pt b/Products/CMFPlone/browser/templates/search.pt\nindex 3e0d611acf..5e89454238 100644\n--- a/Products/CMFPlone/browser/templates/search.pt\n+++ b/Products/CMFPlone/browser/templates/search.pt\n@@ -87,7 +87,7 @@\n             </a>\n           </div>\n \n-          <div class="nav-item dropdown" id="search-filter">\n+          <div class="nav-item dropdown me-3" id="search-filter">\n             <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false" id="search-filter-toggle" i18n:translate="narrow_search_options">\n               Filter the results\n             </a>\ndiff --git a/Products/CMFPlone/configure.zcml b/Products/CMFPlone/configure.zcml\nindex c1a3ba041d..b0f6a96eb3 100644\n--- a/Products/CMFPlone/configure.zcml\n+++ b/Products/CMFPlone/configure.zcml\n@@ -2,11 +2,13 @@\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n     xmlns:cmf="http://namespaces.zope.org/cmf"\n+    xmlns:five="http://namespaces.zope.org/five"\n     xmlns:i18n="http://namespaces.zope.org/i18n"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     i18n_domain="plone"\n     >\n \n+  <five:registerPackage package="." initialize=".initialize" />\n   <!-- basic zope/cmf -->\n   <include package="zope.app.locales" />\n   <include package="Products.CMFCore" />\n@@ -44,12 +46,10 @@\n   <include package="plone.app.contenttypes" />\n   <include package="plone.app.customerize" />\n   <include package="plone.app.dexterity" />\n-  <include package="plone.app.discussion" />\n   <include package="plone.app.i18n" />\n   <include package="plone.app.layout" />\n   <include package="plone.app.linkintegrity" />\n   <include package="plone.app.locales" />\n-  <include zcml:condition="installed plone.app.multilingual" package="plone.app.multilingual" />\n   <include package="plone.app.portlets" />\n   <include package="plone.app.redirector" />\n   <include package="plone.app.registry" />\n@@ -65,12 +65,22 @@\n   <include package="plone.portlet.collection" />\n   <include package="plonetheme.barceloneta" />\n \n-  <!-- conditional -->\n+  <!-- plone.app.* optional/conditional Core Add-ons -->\n+  <include\n+      package="plone.app.discussion"\n+      zcml:condition="installed plone.app.discussion"\n+      />\n+  <include\n+      package="plone.app.multilingual"\n+      zcml:condition="installed plone.app.multilingual"\n+      />\n   <include\n       package="plone.app.upgrade"\n       zcml:condition="installed plone.app.upgrade"\n       />\n \n+\n+\n   <include package=".resources" />\n   <include package=".patterns" />\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt b/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\nindex c2ab5a5ee3..dc1f3bc5b3 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\n+++ b/Products/CMFPlone/controlpanel/browser/redirects-controlpanel.pt\n@@ -124,7 +124,7 @@\n             </div>\n \n             <small class="formHelp form-text text-muted" i18n:translate="help_target_path">\n-              Enter the absolute path of the target. The path must start with \'/\'.\n+              Enter the absolute path of the target.\n               Target must exist or be an existing alternative url path to the target.\n             </small>\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/types.py b/Products/CMFPlone/controlpanel/browser/types.py\nindex 2e4361594b..09f38ef9b0 100644\n--- a/Products/CMFPlone/controlpanel/browser/types.py\n+++ b/Products/CMFPlone/controlpanel/browser/types.py\n@@ -169,12 +169,12 @@ def __call__(self):\n \n                 searchable = form.get("searchable", False)\n                 site_settings = registry.forInterface(ISearchSchema, prefix="plone")\n-                blacklisted = [i for i in site_settings.types_not_searched]\n-                if searchable and type_id in blacklisted:\n-                    blacklisted.remove(type_id)\n-                elif not searchable and type_id not in blacklisted:\n-                    blacklisted.append(type_id)\n-                site_settings.types_not_searched = tuple(blacklisted)\n+                denylisted = [i for i in site_settings.types_not_searched]\n+                if searchable and type_id in denylisted:\n+                    denylisted.remove(type_id)\n+                elif not searchable and type_id not in denylisted:\n+                    denylisted.append(type_id)\n+                site_settings.types_not_searched = tuple(denylisted)\n \n                 default_page_type = form.get("default_page_type", False)\n                 types_settings = registry.forInterface(ITypesSchema, prefix="plone")\n@@ -307,8 +307,8 @@ def current_versioning_policy(self):\n     def is_searchable(self):\n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(ISearchSchema, prefix="plone")\n-        blacklisted = settings.types_not_searched\n-        return self.type_id not in blacklisted\n+        denylisted = settings.types_not_searched\n+        return self.type_id not in denylisted\n \n     def is_default_page_type(self):\n         registry = getUtility(IRegistry)\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\nindex bfc28b52f4..ec6159b0c6 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_navigation.py\n@@ -80,7 +80,6 @@ def test_displayed_types(self):\n         settings = registry.forInterface(INavigationSchema, prefix="plone")\n         self.browser.open("%s/@@navigation-controlpanel" % self.portal_url)\n         self.browser.getControl("Collection", index=0).selected = True\n-        self.browser.getControl("Comment").selected = True\n         self.browser.getControl("Event").selected = True\n         self.browser.getControl("File").selected = True\n         self.browser.getControl("Folder").selected = True\n@@ -91,7 +90,6 @@ def test_displayed_types(self):\n         self.browser.getControl("Save").click()\n \n         self.assertTrue("Collection" in settings.displayed_types)\n-        self.assertTrue("Discussion Item" in settings.displayed_types)\n         self.assertTrue("Event" in settings.displayed_types)\n         self.assertTrue("File" in settings.displayed_types)\n         self.assertTrue("Folder" in settings.displayed_types)\n@@ -111,7 +109,7 @@ def test_workflow_settings(self):\n         self.browser.getControl(\n             "Internally published [internally_published]"\n         ).selected = True  # noqa\n-        self.browser.getControl("Pending [pending]").selected = True\n+        self.browser.getControl("Pending review [pending]").selected = True\n         self.browser.getControl("Private [private]").selected = True\n         self.browser.getControl("Public draft [visible]").selected = True\n         self.browser.getControl("Published [published]").selected = True\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex f2cc9bf507..f0b6c31daa 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -58,12 +58,10 @@ def test_enable_livesearch(self):\n     def test_types_not_searched(self):\n         self.browser.open("%s/@@search-controlpanel" % self.portal_url)\n         self.browser.getControl(name="form.widgets.types_not_searched:list").value = [\n-            "Discussion Item",\n             "News Item",\n         ]\n         self.browser.getControl("Save").click()\n \n         registry = getUtility(IRegistry)\n         settings = registry.forInterface(ISearchSchema, prefix="plone")\n-        self.assertTrue("Discussion Item" in settings.types_not_searched)\n         self.assertTrue("News Item" in settings.types_not_searched)\ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex ca451845e8..b3fe625468 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -54,19 +54,9 @@\n     <depends name="catalog" />\n     <depends name="viewlets" />\n     <depends name="controlpanel" />\n-    <depends name="propertiestool" />\n     <depends name="workflow" />\n   </genericsetup:importStep>\n \n-  <genericsetup:importStep\n-      name="propertiestool"\n-      title="Plone Properties"\n-      description="Import plone properties tool and subobjects."\n-      handler="Products.CMFPlone.exportimport.propertiestool.importPloneProperties"\n-      >\n-    <depends name="componentregistry" />\n-  </genericsetup:importStep>\n-\n   <genericsetup:importStep\n       name="update-workflow-rolemap"\n       title="Update workflow role mappings"\n@@ -105,13 +95,6 @@\n       handler="Products.CMFPlone.exportimport.memberdata_properties.exportMemberDataProperties"\n       />\n \n-  <genericsetup:exportStep\n-      name="propertiestool"\n-      title="Plone Properties"\n-      description="Export plone properties tool and subobjects."\n-      handler="Products.CMFPlone.exportimport.propertiestool.exportPloneProperties"\n-      />\n-\n   <genericsetup:exportStep\n       name="viewlets"\n       title="Viewlet Settings"\n@@ -119,34 +102,12 @@\n       handler="plone.app.viewletmanager.exportimport.storage.exportViewletSettingsStorage"\n       />\n \n-  <adapter\n-      factory=".propertiestool.PlonePropertiesToolXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="plone.base.interfaces.IPropertiesTool\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      />\n-\n-  <adapter\n-      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="plone.base.interfaces.ISimpleItemWithProperties\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      />\n-\n   <adapter\n       factory="Products.CMFCore.exportimport.content.StructureFolderWalkingAdapter"\n       provides="Products.GenericSetup.interfaces.IFilesystemImporter"\n       for="Products.CMFCore.interfaces.ISiteRoot"\n       />\n \n-  <adapter\n-      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="Products.CMFCore.interfaces.IMemberDataTool\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      zcml:condition="not-installed Products.CMFCore.exportimport.memberdata"\n-      />\n-\n   <adapter\n       factory=".controlpanel.ControlPanelXMLAdapter"\n       provides="Products.GenericSetup.interfaces.IBody"\ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\ndeleted file mode 100644\nindex 94e21a1326..0000000000\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ /dev/null\n@@ -1,140 +0,0 @@\n-"""Plone Properties tool setup handlers.\n-\n-$Id:$\n-"""\n-\n-from plone.base.interfaces import IPropertiesTool as IPlonePropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.interfaces import INode\n-from Products.GenericSetup.utils import ObjectManagerHelpers\n-from Products.GenericSetup.utils import PropertyManagerHelpers\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-\n-\n-_FILENAME = "propertiestool.xml"\n-\n-\n-def importPloneProperties(context):\n-    """Import plone properties tool."""\n-    site = context.getSite()\n-    logger = context.getLogger("propertiestool")\n-    ptool = getToolByName(site, "portal_properties")\n-\n-    body = context.readDataFile(_FILENAME)\n-    if body is None:\n-        return\n-\n-    importer = queryMultiAdapter((ptool, context), IBody)\n-    if importer is None:\n-        logger.warning("Import adapter missing.")\n-        return\n-\n-    importer.body = body\n-    logger.info("Properties tool imported.")\n-\n-\n-def exportPloneProperties(context):\n-    """Export plone properties tool."""\n-    site = context.getSite()\n-    logger = context.getLogger("propertiestool")\n-    ptool = getToolByName(site, "portal_properties", None)\n-    if ptool is None:\n-        return\n-\n-    exporter = queryMultiAdapter((ptool, context), IBody)\n-    # IBody(ptool)\n-    if exporter is None:\n-        logger.warning("Export adapter missing.")\n-        return\n-\n-    context.writeDataFile(_FILENAME, exporter.body, exporter.mime_type)\n-    logger.info("Properties tool exported.")\n-\n-\n-class SimpleItemWithPropertiesXMLAdapter(XMLAdapterBase, PropertyManagerHelpers):\n-\n-    """Node im- and exporter for SimpleItemWithProperties."""\n-\n-    __used_for__ = ISimpleItemWithProperties\n-\n-    def _exportNode(self):\n-        """Export the object as a DOM node."""\n-        # self._doc = doc\n-        node = self._getObjectNode("object")\n-        node.appendChild(self._extractProperties())\n-        return node\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        self._initProperties(node)\n-\n-    node = property(_exportNode, _importNode)\n-\n-\n-class PlonePropertiesToolXMLAdapter(XMLAdapterBase, ObjectManagerHelpers):\n-\n-    """Node im- and exporter for Plone PropertiesTool."""\n-\n-    __used_for__ = IPlonePropertiesTool\n-\n-    def _exportNode(self):\n-        """Export the object as a DOM node."""\n-        # self._doc = doc\n-        node = self._getObjectNode("object")\n-        # node.setAttribute(\'xmlns:i18n\', I18NURI)\n-        node.appendChild(self._extractObjects())\n-        return node\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.environ.shouldPurge():\n-            self._purgeObjects()\n-\n-        self._initObjects(node)\n-\n-    def _initObjects(self, node):\n-        """Import subobjects"""\n-        # XXX: We could just use the _initObjects() from\n-        # ObjectManagerHelpers except that it looks up the object\n-        # constructor from Products.meta_type and\n-        # SimpleItemWithProperties doesn\'t get registered there.\n-        for child in node.childNodes:\n-            if child.nodeName != "object":\n-                continue\n-            if child.hasAttribute("deprecated"):\n-                continue\n-            parent = self.context\n-\n-            obj_id = str(child.getAttribute("name"))\n-            if obj_id not in parent:\n-                parent._setObject(obj_id, SimpleItemWithProperties(obj_id))\n-\n-            if child.hasAttribute("insert-before"):\n-                insert_before = child.getAttribute("insert-before")\n-                if insert_before == "*":\n-                    parent.moveObjectsToTop(obj_id)\n-                else:\n-                    try:\n-                        position = parent.getObjectPosition(insert_before)\n-                        parent.moveObjectToPosition(obj_id, position)\n-                    except ValueError:\n-                        pass\n-            elif child.hasAttribute("insert-after"):\n-                insert_after = child.getAttribute("insert-after")\n-                if insert_after == "*":\n-                    parent.moveObjectsToBottom(obj_id)\n-                else:\n-                    try:\n-                        position = parent.getObjectPosition(insert_after)\n-                        parent.moveObjectToPosition(obj_id, position + 1)\n-                    except ValueError:\n-                        pass\n-\n-            obj = getattr(self.context, obj_id)\n-            importer = queryMultiAdapter((obj, self.environ), INode)\n-            if importer:\n-                importer.node = child\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\ndeleted file mode 100644\nindex 48e13f8075..0000000000\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n-from Products.CMFPlone.PropertiesTool import PropertiesTool\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from zope.component import provideAdapter\n-\n-\n-_PROPERTYSHEET_XML = b"""\\\n-<?xml version="1.0" encoding="utf-8"?>\n-<object name="site_properties" meta_type="Plone Property Sheet">\n- <property name="title">Site wide properties</property>\n- <property name="displayPublicationDateInByline"\n-    type="boolean">True</property>\n-</object>\n-"""\n-\n-_PROPERTIESTOOL_XML = b"""\\\n-<?xml version="1.0" encoding="utf-8"?>\n-<object name="portal_properties" meta_type="Plone Properties Tool">\n- <object name="site_properties" meta_type="Plone Property Sheet">\n-  <property name="title">Site wide properties</property>\n-  <property name="displayPublicationDateInByline"\n-     type="boolean">True</property>\n- </object>\n-</object>\n-"""\n-\n-\n-class PropertySheetXMLAdapterTests(BodyAdapterTestCase):\n-    def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            SimpleItemWithPropertiesXMLAdapter,\n-        )\n-\n-        return SimpleItemWithPropertiesXMLAdapter\n-\n-    def _populate(self, obj):\n-        obj.manage_changeProperties(title="Site wide properties")\n-        obj.manage_addProperty("displayPublicationDateInByline", True, "boolean")\n-\n-    def setUp(self):\n-        from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.GenericSetup.interfaces import IBody\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n-\n-        provideAdapter(\n-            self._getTargetClass(), (ISimpleItemWithProperties, ISetupEnviron), IBody\n-        )\n-\n-        self._obj = SimpleItemWithProperties("site_properties")\n-        self._BODY = _PROPERTYSHEET_XML\n-\n-\n-class PropertiesToolXMLAdapterTests(BodyAdapterTestCase):\n-    def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            PlonePropertiesToolXMLAdapter,\n-        )\n-\n-        return PlonePropertiesToolXMLAdapter\n-\n-    def _populate(self, obj):\n-        obj._setObject("site_properties", SimpleItemWithProperties("site_properties"))\n-        obj.site_properties.manage_changeProperties(title="Site wide properties")\n-        obj.site_properties.manage_addProperty(\n-            "displayPublicationDateInByline", True, "boolean"\n-        )\n-\n-    def setUp(self):\n-        from plone.base.interfaces import IPropertiesTool\n-        from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            SimpleItemWithPropertiesXMLAdapter,\n-        )\n-        from Products.GenericSetup.interfaces import IBody\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n-\n-        provideAdapter(self._getTargetClass(), (IPropertiesTool, ISetupEnviron), IBody)\n-        provideAdapter(\n-            SimpleItemWithPropertiesXMLAdapter,\n-            (ISimpleItemWithProperties, ISetupEnviron),\n-            IBody,\n-        )\n-\n-        self._obj = PropertiesTool()\n-        self._BODY = _PROPERTIESTOOL_XML\n-\n-\n-def test_suite():\n-    from unittest import makeSuite\n-    from unittest import TestSuite\n-\n-    suite = TestSuite()\n-    suite.addTest(makeSuite(PropertySheetXMLAdapterTests))\n-    suite.addTest(makeSuite(PropertiesToolXMLAdapterTests))\n-    return suite\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 1761ab570b..4e6b42b724 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -64,7 +64,6 @@ def getNonInstallableProducts(self):\n             "borg.localrole",\n             "plone.app.caching",\n             "plone.app.dexterity",\n-            "plone.app.discussion",\n             "plone.app.event",\n             "plone.app.intid",\n             "plone.app.linkintegrity",\n@@ -108,7 +107,6 @@ def getNonInstallableProfiles(self):\n             "plone.protect:default",\n             "plone.app.contenttypes:default",\n             "plone.app.dexterity:default",\n-            "plone.app.discussion:default",\n             "plone.app.event:default",\n             "plone.app.linkintegrity:default",\n             "plone.app.registry:default",\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex afb3e1df15..b275ed2efd 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -51,8 +51,6 @@\n     IPasswordResetToolView="plone.base.interfaces.password_reset:IPasswordResetToolView",\n     IPWResetTool="plone.base.interfaces.password_reset:IPWResetTool",\n     IPatternsSettings="plone.base.interfaces.patterns:IPatternsSettings",\n-    IPropertiesTool="plone.base.interfaces.properties:IPropertiesTool",\n-    ISimpleItemWithProperties="plone.base.interfaces.properties:ISimpleItemWithProperties",\n     IBundleRegistry="plone.base.interfaces.resources:IBundleRegistry",\n     IResourceRegistry="plone.base.interfaces.resources:IResourceRegistry",\n     IMigratingPloneSiteRoot="plone.base.interfaces.siteroot:IMigratingPloneSiteRoot",\ndiff --git a/Products/CMFPlone/profiles/default/componentregistry.xml b/Products/CMFPlone/profiles/default/componentregistry.xml\nindex f35d005476..f1195c4eb2 100644\n--- a/Products/CMFPlone/profiles/default/componentregistry.xml\n+++ b/Products/CMFPlone/profiles/default/componentregistry.xml\n@@ -68,9 +68,6 @@\n     <utility factory="plone.app.viewletmanager.storage.ViewletSettingsStorage"\n              interface="plone.app.viewletmanager.interfaces.IViewletSettingsStorage"\n     />\n-    <utility interface="Products.CMFCore.interfaces.IPropertiesTool"\n-             object="portal_properties"\n-    />\n     <utility interface="Products.CMFCore.interfaces.ISiteRoot"\n              object=""\n     />\ndiff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex d6d72c30c5..74dbe99aa0 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>6103</version>\n+  <version>6104</version>\n </metadata>\ndiff --git a/Products/CMFPlone/profiles/default/propertiestool.xml b/Products/CMFPlone/profiles/default/propertiestool.xml\ndeleted file mode 100644\nindex d90844dacd..0000000000\n--- a/Products/CMFPlone/profiles/default/propertiestool.xml\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-<?xml version="1.0" encoding="utf-8"?>\n-<object meta_type="Plone Properties Tool"\n-        name="portal_properties"\n->\n-  <object meta_type="Plone Property Sheet"\n-          name="navtree_properties"\n-  >\n-    <property name="title">NavigationTree properties</property>\n-  </object>\n-  <object meta_type="Plone Property Sheet"\n-          name="site_properties"\n-  >\n-    <property name="title">Site wide properties</property>\n-  </object>\n-</object>\ndiff --git a/Products/CMFPlone/profiles/default/toolset.xml b/Products/CMFPlone/profiles/default/toolset.xml\nindex dfbff83fe0..1a225138d1 100644\n--- a/Products/CMFPlone/profiles/default/toolset.xml\n+++ b/Products/CMFPlone/profiles/default/toolset.xml\n@@ -42,9 +42,6 @@\n   <required class="Products.CMFPlone.PasswordResetTool.PasswordResetTool"\n             tool_id="portal_password_reset"\n   />\n-  <required class="Products.CMFPlone.PropertiesTool.PropertiesTool"\n-            tool_id="portal_properties"\n-  />\n   <required class="Products.CMFPlone.RegistrationTool.RegistrationTool"\n             tool_id="portal_registration"\n   />\ndiff --git a/Products/CMFPlone/profiles/default/types.xml b/Products/CMFPlone/profiles/default/types.xml\nindex ea78dfcba6..55bf830c30 100644\n--- a/Products/CMFPlone/profiles/default/types.xml\n+++ b/Products/CMFPlone/profiles/default/types.xml\n@@ -3,9 +3,6 @@\n         name="portal_types"\n >\n   <property name="title">Controls the available content types in your portal</property>\n-  <object meta_type="Factory-based Type Information"\n-          name="Discussion Item"\n-  />\n   <object meta_type="Factory-based Type Information"\n           name="TempFolder"\n   />\ndiff --git a/Products/CMFPlone/profiles/default/types/Discussion_Item.xml b/Products/CMFPlone/profiles/default/types/Discussion_Item.xml\ndeleted file mode 100644\nindex d3c321ac3e..0000000000\n--- a/Products/CMFPlone/profiles/default/types/Discussion_Item.xml\n+++ /dev/null\n@@ -1,49 +0,0 @@\n-<?xml version="1.0" encoding="utf-8"?>\n-<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n-        meta_type="Factory-based Type Information"\n-        name="Discussion Item"\n-        i18n:domain="plone"\n->\n-  <property name="title"\n-            i18n:translate=""\n-  />\n-  <property name="description"\n-            i18n:translate=""\n-  >Discussion Items are documents which reply to other content.\n-  They should *not* be addable through the standard \'folder_factories\' interface.</property>\n-  <property name="icon_expr">string:${portal_url}/discussionitem_icon.png</property>\n-  <property name="content_meta_type">Discussion Item</property>\n-  <property name="product" />\n-  <property name="factory" />\n-  <property name="immediate_view" />\n-  <property name="global_allow">True</property>\n-  <property name="filter_content_types">True</property>\n-  <property name="allowed_content_types" />\n-  <property name="allow_discussion">False</property>\n-  <alias from="(Default)"\n-         to="discussionitem_view"\n-  />\n-  <alias from="view"\n-         to="discussionitem_view"\n-  />\n-  <action action_id="view"\n-          category="object"\n-          condition_expr=""\n-          title="View"\n-          url_expr="string:${object_url}/discussionitem_view"\n-          visible="True"\n-          i18n:attributes="title"\n-  >\n-    <permission value="View" />\n-  </action>\n-  <action action_id="external_edit"\n-          category="object"\n-          condition_expr=""\n-          title="External Edit"\n-          url_expr="string:$object_url/external_edit"\n-          visible="False"\n-          i18n:attributes="title"\n-  >\n-    <permission value="Modify portal content" />\n-  </action>\n-</object>\ndiff --git a/Products/CMFPlone/profiles/default/types/Plone_Site.xml b/Products/CMFPlone/profiles/default/types/Plone_Site.xml\nindex f6b324d8e1..b7cdf1c072 100644\n--- a/Products/CMFPlone/profiles/default/types/Plone_Site.xml\n+++ b/Products/CMFPlone/profiles/default/types/Plone_Site.xml\n@@ -38,7 +38,6 @@\n     <element value="plone.richtext" />\n     <element value="plone.relateditems" />\n     <element value="plone.locking" />\n-    <element value="plone.allowdiscussion" />\n     <element value="plone.excludefromnavigation" />\n     <element value="plone.tableofcontents" />\n   </property>\ndiff --git a/Products/CMFPlone/profiles/default/types/TempFolder.xml b/Products/CMFPlone/profiles/default/types/TempFolder.xml\nindex aa3e58c625..3fd51aa7e3 100644\n--- a/Products/CMFPlone/profiles/default/types/TempFolder.xml\n+++ b/Products/CMFPlone/profiles/default/types/TempFolder.xml\n@@ -18,7 +18,6 @@\n   <property name="global_allow">False</property>\n   <property name="filter_content_types">False</property>\n   <property name="allowed_content_types">\n-    <element value="Discussion Item" />\n     <element value="Document" />\n     <element value="Event" />\n     <element value="File" />\ndiff --git a/Products/CMFPlone/profiles/default/workflows.xml b/Products/CMFPlone/profiles/default/workflows.xml\nindex d9b00d3aae..e1efd4185f 100644\n--- a/Products/CMFPlone/profiles/default/workflows.xml\n+++ b/Products/CMFPlone/profiles/default/workflows.xml\n@@ -38,7 +38,6 @@\n     <type type_id="ATSimpleIntCriterion" />\n     <type type_id="ATSimpleStringCriterion" />\n     <type type_id="ATSortCriterion" />\n-    <type type_id="Discussion Item" />\n     <type type_id="File" />\n     <type type_id="Image" />\n     <type type_id="Plone Site" />\ndiff --git a/Products/CMFPlone/profiles/dependencies/metadata.xml b/Products/CMFPlone/profiles/dependencies/metadata.xml\nindex 191b32119e..a00e76d0ac 100644\n--- a/Products/CMFPlone/profiles/dependencies/metadata.xml\n+++ b/Products/CMFPlone/profiles/dependencies/metadata.xml\n@@ -6,7 +6,6 @@\n     <dependency>profile-Products.PortalTransforms:PortalTransforms</dependency>\n     <dependency>profile-Products.CMFEditions:CMFEditions</dependency>\n     <dependency>profile-Products.PlonePAS:PlonePAS</dependency>\n-    <dependency>profile-plone.app.discussion:default</dependency>\n     <dependency>profile-plone.app.linkintegrity:default</dependency>\n     <dependency>profile-plone.app.registry:default</dependency>\n     <dependency>profile-plone.app.theming:default</dependency>\ndiff --git a/Products/CMFPlone/tests/robot/test_controlpanel_types.robot b/Products/CMFPlone/tests/robot/test_controlpanel_types.robot\nindex 56fed5385a..b611a93109 100644\n--- a/Products/CMFPlone/tests/robot/test_controlpanel_types.robot\n+++ b/Products/CMFPlone/tests/robot/test_controlpanel_types.robot\n@@ -13,17 +13,6 @@ Test Teardown  Run keywords  Plone Test Teardown\n \n \n *** Test Cases ***************************************************************\n-\n-Scenario: Allow comments for Link Type\n-  Given a logged-in manager\n-    and Globally enabled comments\n-    and the types control panel\n-   When I select \'Link\' in types dropdown\n-    and Allow discussion\n-   Then Wait until page contains  Content Settings\n-   When I add new Link \'my_link\'\n-    Then Link \'my_link\' should have comments enabled\n-\n Scenario: Change default workflow\n   Given a logged-in site administrator\n     and the types control panel\n@@ -36,32 +25,12 @@ Scenario: Change default workflow\n *** Keywords *****************************************************************\n \n # --- GIVEN ------------------------------------------------------------------\n-\n-a logged-in manager\n-  Enable autologin as  Manager\n-\n the types control panel\n   Go to  ${PLONE_URL}/@@content-controlpanel\n   Wait until page contains  Content Settings\n \n-Globally enabled comments\n-  Go to  ${PLONE_URL}/@@discussion-settings\n-  Wait until page contains  Discussion settings\n-  Select checkbox  name=form.widgets.globally_enabled:list\n-  Click button  Save\n-\n-\n \n # --- WHEN -------------------------------------------------------------------\n-\n-I select \'${content_type}\' in types dropdown\n-  Select from list by label  name=type_id  ${content_type}\n-  Wait until page contains  Globally addable\n-\n-Allow discussion\n-  Select checkbox  name=allow_discussion:boolean\n-  Click Button  Save\n-\n I select \'${workflow}\' workflow\n   Select from list by label  name=new_workflow  ${workflow}\n   Click Button  Save\n@@ -74,11 +43,6 @@ I add new Link \'${id}\'\n \n # --- THEN -------------------------------------------------------------------\n \n-Link \'${id}\' should have comments enabled\n-  Go to  ${PLONE_URL}/${id}\n-  Wait until page contains  ${id}\n-  Page should contain element  xpath=//div[@id="commenting"]\n-\n Link \'${id}\' should have Single State Workflow enabled\n   Go to  ${PLONE_URL}/${id}\n   Wait until page contains  ${id}\ndiff --git a/Products/CMFPlone/tests/testInterfaces.py b/Products/CMFPlone/tests/testInterfaces.py\nindex a44348e62f..1766742b07 100644\n--- a/Products/CMFPlone/tests/testInterfaces.py\n+++ b/Products/CMFPlone/tests/testInterfaces.py\n@@ -6,8 +6,6 @@\n from Products.CMFPlone.PloneControlPanel import PloneControlPanel\n from Products.CMFPlone.PloneTool import PloneTool\n from Products.CMFPlone.Portal import PloneSite\n-from Products.CMFPlone.PropertiesTool import PropertiesTool\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n from Products.CMFPlone.RegistrationTool import RegistrationTool\n from Products.CMFPlone.SkinsTool import SkinsTool\n from Products.CMFPlone.TypesTool import TypesTool\n@@ -300,8 +298,6 @@ def _testStuff(self):\n     (PloneConfiglet, ()),\n     (PloneTool, ()),\n     (PloneSite, ()),\n-    (PropertiesTool, ()),\n-    (SimpleItemWithProperties, ()),\n     (RegistrationTool, ()),\n     (SkinsTool, ()),\n     (TypesTool, ()),\ndiff --git a/Products/CMFPlone/tests/testMigrationTool.py b/Products/CMFPlone/tests/testMigrationTool.py\nindex e9a820f3d4..bd697372d5 100644\n--- a/Products/CMFPlone/tests/testMigrationTool.py\n+++ b/Products/CMFPlone/tests/testMigrationTool.py\n@@ -177,14 +177,14 @@ def test_upgrade_all(self):\n \n         # real ones:\n         cmfeditions = Addon(profile_id="Products.CMFEditions:CMFEditions")\n-        discussion = Addon(profile_id="plone.app.discussion:default")\n+        pae = Addon(profile_id="plone.app.event:default")\n         # real one with failing check_module:\n         dexterity = Addon(\n             profile_id="plone.app.dexterity:default", check_module="no.such.module"\n         )\n         # non-existing one:\n         foo = Addon(profile_id="foo")\n-        addonlist = AddonList([cmfeditions, discussion, dexterity, foo])\n+        addonlist = AddonList([cmfeditions, pae, dexterity, foo])\n         # Calling it should give no errors.\n         addonlist.upgrade_all(self.portal)\n \n@@ -198,7 +198,7 @@ def test_upgrade_all(self):\n         setup.setLastVersionForProfile(dexterity.profile_id, "0.1")\n         # \'unknown\' needs special handling, otherwise the version will\n         # become a tuple (\'unknown\',):\n-        setup._profile_upgrade_versions[discussion.profile_id] = "unknown"\n+        setup._profile_upgrade_versions[pae.profile_id] = "unknown"\n \n         # Run the upgrade again.\n         addonlist.upgrade_all(self.portal)\n@@ -208,10 +208,10 @@ def test_upgrade_all(self):\n         self.assertEqual(\n             setup.getLastVersionForProfile(cmfeditions.profile_id), cmfeditions_version\n         )\n-        # We had set discussion to unknown, so it will not have been\n+        # We had set pae to unknown, so it will not have been\n         # upgraded:\n         self.assertEqual(\n-            setup.getLastVersionForProfile(discussion.profile_id), "unknown"\n+            setup.getLastVersionForProfile(pae.profile_id), "unknown"\n         )\n         # We had given dexterity a failing check_module, so it will\n         # not have been upgraded:\n@@ -228,28 +228,23 @@ def test_plone_addonlist_upgrade_all(self):\n         # Several addons did not get fully upgraded in the past, which\n         # is why this list was created.\n         cmfeditions_id = "Products.CMFEditions:CMFEditions"\n-        discussion_id = "plone.app.discussion:default"\n         querystring_id = "plone.app.querystring:default"\n         # Note the current versions.\n         setup = getToolByName(self.portal, "portal_setup")\n         getversion = setup.getLastVersionForProfile\n         cmfeditions_version = getversion(cmfeditions_id)\n-        discussion_version = getversion(discussion_id)\n         querystring_version = getversion(querystring_id)\n         # Check that they are not unknown\n         self.assertNotEqual(cmfeditions_version, "unknown")\n-        self.assertNotEqual(discussion_version, "unknown")\n         self.assertNotEqual(querystring_version, "unknown")\n         # So let\'s mess with some profile versions.  We get some older\n         # versions that really exist.\n         setversion = setup.setLastVersionForProfile\n         setversion(cmfeditions_id, "2.0")\n-        setversion(discussion_id, "100")\n         setversion(querystring_id, "7")\n         # Check that it worked, that the profile versions really are\n         # different.\n         self.assertNotEqual(cmfeditions_version, getversion(cmfeditions_id))\n-        self.assertNotEqual(discussion_version, getversion(discussion_id))\n         self.assertNotEqual(querystring_version, getversion(querystring_id))\n \n         # Run the upgrade.\n@@ -258,7 +253,6 @@ def test_plone_addonlist_upgrade_all(self):\n         # Check that it worked, that the profiles are now at their\n         # original versions.\n         self.assertEqual(cmfeditions_version, getversion(cmfeditions_id))\n-        self.assertEqual(discussion_version, getversion(discussion_id))\n         self.assertEqual(querystring_version, getversion(querystring_id))\n \n \ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex fa8d525a6b..aeddd0ba26 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -121,29 +121,6 @@ def path(x):\n         self.assertEqual(subfolder221map["item"].getPath(), path(subfolder221))\n         self.assertEqual(len(subfolder221map["children"]), 0)\n \n-    def testSitemapUnchangedWithTopLevel(self):\n-        # Test that setting topLevel does not alter the sitemap\n-        ntp = self.portal.portal_properties.navtree_properties\n-        for topLevel in range(0, 5):\n-            ntp.manage_changeProperties(topLevel=topLevel)\n-            view = self.view_class(self.portal, self.request)\n-            sitemap = view.siteMap()\n-            self.assertEqual(\n-                sitemap["children"][-1]["item"].getPath(), "/plone/folder2"\n-            )\n-\n-    def testSitemapUnchangedWithBottomLevel(self):\n-        # Test that setting bottomLevel does not alter the sitemap\n-        ntp = self.portal.portal_properties.navtree_properties\n-        for bottomLevel in range(0, 5):\n-            ntp.manage_changeProperties(bottomLevel=bottomLevel)\n-            view = self.view_class(self.portal, self.request)\n-            sitemap = view.siteMap()\n-            self.assertEqual(\n-                sitemap["children"][-1]["item"].getPath(), "/plone/folder2"\n-            )\n-            self.assertTrue(len(sitemap["children"][-1]["children"]) > 0)\n-\n     def testSitemapWithNavigationRoot(self):\n         self.navigation_settings.root = "/folder2"\n         view = self.view_class(self.portal, self.request)\n@@ -270,7 +247,7 @@ def testTabInfo(self):\n         self.assertTrue("review_state" in tab and tab["review_state"])\n \n     def testDisableFolderTabs(self):\n-        # Setting the site_property disable_folder_sections should remove\n+        # Setting the registry setting generate_tabs to False should remove\n         # all folder based tabs\n         self.navigation_settings.generate_tabs = False\n         view = self.view_class(self.portal, self.request)\ndiff --git a/Products/CMFPlone/tests/testPloneTool.py b/Products/CMFPlone/tests/testPloneTool.py\nindex 712dbb04aa..3e3be2c3ea 100644\n--- a/Products/CMFPlone/tests/testPloneTool.py\n+++ b/Products/CMFPlone/tests/testPloneTool.py\n@@ -134,17 +134,17 @@ def testGetUserFriendlyTypes(self):\n         types = set(ttool.keys())\n         registry = getUtility(IRegistry)\n         search_settings = registry.forInterface(ISearchSchema, prefix="plone")\n-        blacklistedTypes = search_settings.types_not_searched\n+        denylistedTypes = search_settings.types_not_searched\n \n-        # \'ChangeSet\' is blacklisted, but not in the types by default,\n+        # \'ChangeSet\' is denylisted, but not in the types by default,\n         # so we filter that out.\n-        blacklistedTypes = {t for t in blacklistedTypes if t in types}\n+        denylistedTypes = {t for t in denylistedTypes if t in types}\n         # No black listed types should be returned.\n         self.assertEqual(\n-            [t for t in self.utils.getUserFriendlyTypes() if t in blacklistedTypes], []\n+            [t for t in self.utils.getUserFriendlyTypes() if t in denylistedTypes], []\n         )\n         self.assertEqual(\n-            len(self.utils.getUserFriendlyTypes()), len(types) - len(blacklistedTypes)\n+            len(self.utils.getUserFriendlyTypes()), len(types) - len(denylistedTypes)\n         )\n         # Non-existing types should be filtered out.\n         self.assertEqual(self.utils.getUserFriendlyTypes(["File"]), ["File"])\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 34f0ac222d..200c18217c 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -53,7 +53,6 @@ def afterSetUp(self):\n         self.types = self.portal.portal_types\n         self.cp = self.portal.portal_controlpanel\n         self.actions = self.portal.portal_actions\n-        self.properties = self.portal.portal_properties\n         self.memberdata = self.portal.portal_memberdata\n         self.catalog = self.portal.portal_catalog\n         self.groups = self.portal.portal_groups\n@@ -157,35 +156,11 @@ def testNoPortalNavigationTool(self):\n         # portal_navigation should have been removed\n         self.assertFalse("portal_navigation" in self.portal)\n \n-    def testNoFormProperties(self):\n-        # form_properties should have been removed\n-        self.assertFalse("form_properties" in self.properties)\n-\n-    def testNoNavigationProperties(self):\n-        # navigation_properties should have been removed\n-        self.assertFalse("navigation_properties" in self.properties)\n-\n     def testFormToolTipsProperty(self):\n         # formtooltips should have been removed\n         self.assertFalse(self.memberdata.hasProperty("formtooltips"))\n \n     def testNavTreeProperties(self):\n-        # navtree_properties should contain the new properties\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("parentMetaTypesNotToQuery")\n-        )\n-        self.assertFalse(self.properties.navtree_properties.hasProperty("sitemapDepth"))\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("showAllParents")\n-        )\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("metaTypesNotToList")\n-        )  # noqa\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("sortAttribute")\n-        )\n-        self.assertFalse(self.properties.navtree_properties.hasProperty("sortOrder"))\n-\n         registry = getUtility(IRegistry)\n         self.assertTrue("plone.workflow_states_to_show" in registry)\n         self.assertTrue("plone.filter_on_workflow" in registry)\n@@ -618,13 +593,6 @@ def testMemberHasViewGroupsPermission(self):\n         ][0]\n         self.assertTrue(member_has_permission["selected"])\n \n-    def testDiscussionItemWorkflow(self):\n-        # By default the discussion item has the comment_one_state_workflow\n-        self.assertEqual(\n-            self.workflow.getChainForPortalType("Discussion Item"),\n-            ("comment_one_state_workflow",),\n-        )\n-\n     def testFolderHasFolderListingView(self):\n         # Folder type should allow \'folder_listing\'\n         self.assertTrue("listing_view" in self.types.Folder.view_methods)\n@@ -957,9 +925,6 @@ def testFinalStepsWithMembersFolderDeleted(self):\n \n \n class TestManagementPageCharset(PloneTestCase.PloneTestCase):\n-    def afterSetUp(self):\n-        self.properties = self.portal.portal_properties\n-\n     def testManagementPageCharset(self):\n         manage_charset = getattr(self.portal, "management_page_charset", None)\n         self.assertTrue(manage_charset)\ndiff --git a/Products/CMFPlone/tests/testSearch.py b/Products/CMFPlone/tests/testSearch.py\nindex e1d00b8567..7c8eb6b483 100644\n--- a/Products/CMFPlone/tests/testSearch.py\n+++ b/Products/CMFPlone/tests/testSearch.py\n@@ -135,8 +135,8 @@ def crumbs(item):\n         title = crumbs(second_level_folder.third_level_document)[0]["Title"]\n         self.assertEqual(title, "First Level Folder")\n \n-    def test_blacklisted_types_in_results(self):\n-        """Make sure we don\'t break types\' blacklisting in the new search\n+    def test_Denylisted_types_in_results(self):\n+        """Make sure we don\'t break types\' Denylisting in the new search\n         results view.\n         """\n         portal = self.layer["portal"]\n@@ -154,7 +154,7 @@ def test_blacklisted_types_in_results(self):\n         res = portal.restrictedTraverse("@@search").results(query=q, batch=False)\n         self.assertFalse(\n             "my-page1" in [r.getId() for r in res],\n-            \'Blacklisted type "Document" has been found in search results.\',\n+            \'Denylisted type "Document" has been found in search results.\',\n         )\n \n     def test_default_search_order_relevance(self):\ndiff --git a/Products/CMFPlone/tests/testSecurity.py b/Products/CMFPlone/tests/testSecurity.py\nindex 62b8f4eae1..ade829a54f 100644\n--- a/Products/CMFPlone/tests/testSecurity.py\n+++ b/Products/CMFPlone/tests/testSecurity.py\n@@ -71,7 +71,7 @@ def test_gtbn_funcglobals(self):\n             self.fail("getToolByName should block access to non CMF tools")\n \n     def test_widget_traversal_1(self):\n-        res = self.publish("/plone/@@discussion-settings/++widget++moderator_email")\n+        res = self.publish("/plone/@@mail-controlpanel/++widget++email_from_address")\n         self.assertEqual(302, res.status)\n         self.assertTrue(\n             res.headers["location"].startswith(\n@@ -81,8 +81,7 @@ def test_widget_traversal_1(self):\n \n     def test_widget_traversal_2(self):\n         res = self.publish(\n-            "/plone/@@discussion-settings/++widget++captcha/terms/field/interface/setTaggedValue?tag=cake&value=lovely"\n-        )\n+            "/plone/@@mail-controlpanel/++widget++email_from_address/terms/field/interface/setTaggedValue?tag=cake&value=lovely")\n         self.assertEqual(404, res.status)\n         # self.assertTrue(res.headers[\'location\'].startswith(\n         #     \'http://nohost/plone/acl_users/credentials_cookie_auth/require_login\'))\ndiff --git a/Products/CMFPlone/tests/testSiteAdminRole.py b/Products/CMFPlone/tests/testSiteAdminRole.py\nindex 836c9c2992..ca0d7013b7 100644\n--- a/Products/CMFPlone/tests/testSiteAdminRole.py\n+++ b/Products/CMFPlone/tests/testSiteAdminRole.py\n@@ -18,8 +18,8 @@ def testExpectedPermissions(self):\n             "Access contents information": 1,\n             "Access inactive portal content": 1,\n             "Add Accelerated HTTP Cache Managers": 0,\n-            "Add BTreeFolder2s": 0,\n             "Add Browser Id Manager": 0,\n+            "Add BTreeFolder2s": 0,\n             "Add CMF Action Icons Tools": 0,\n             "Add CMF Caching Policy Managers": 0,\n             "Add CMF Calendar Tools": 0,\n@@ -52,15 +52,21 @@ def testExpectedPermissions(self):\n             "Add Placeful Workflow Tools": 0,\n             "Add Plone Language Tools": 0,\n             "Add Plone Tools": 0,\n+            "Add plone.app.customerizes": 0,\n             "Add PlonePAS Tools": 0,\n             "Add Pluggable Index": 0,\n             "Add Plugin Registrys": 0,\n+            "Add portal content": 1,\n+            "Add portal events": 1,\n+            "Add portal folders": 1,\n+            "Add portal member": 1,\n             "Add PortalTransforms Tools": 0,\n             "Add Python Scripts": 0,\n             "Add RAM Cache Managers": 0,\n-            "Add ReStructuredText Documents": 0,\n             "Add Repositories": 0,\n             "Add ResourceRegistries Tools": 0,\n+            "Add ReStructuredText Documents": 0,\n+            "Add secure MailHost objects": 0,\n             "Add Session Data Manager": 0,\n             "Add Site Roots": 0,\n             "Add Temporary Folder": 0,\n@@ -72,36 +78,30 @@ def testExpectedPermissions(self):\n             "Add Workflow Policy": 0,\n             "Add ZCatalogs": 0,\n             "Add ZODB Mount Points": 0,\n-            "Add plone.app.customerizes": 0,\n-            "Add portal content": 1,\n-            "Add portal events": 1,\n-            "Add portal folders": 1,\n-            "Add portal member": 1,\n-            "Add secure MailHost objects": 0,\n             "Allow sendto": 1,\n-            "CMFEditions: Access previous versions": 1,\n-            "CMFEditions: Apply version control": 1,\n-            "CMFEditions: Checkout to location": 1,\n-            "CMFEditions: Manage versioning policies": 1,\n-            "CMFEditions: Purge version": 1,\n-            "CMFEditions: Revert to previous versions": 1,\n-            "CMFEditions: Save new version": 1,\n+            "Change bindings": 0,\n             "Change Browser Id Manager": 0,\n+            "Change cache managers": 0,\n+            "Change cache settings": 0,\n+            "Change configuration": 0,\n+            "Change Database Methods": 0,\n             "Change DTML Documents": 0,\n             "Change DTML Methods": 0,\n-            "Change Database Methods": 0,\n             "Change External Methods": 0,\n             "Change Images and Files": 0,\n-            "Change Page Templates": 0,\n-            "Change Python Scripts": 0,\n-            "Change Session Data Manager": 0,\n-            "Change bindings": 0,\n-            "Change cache managers": 0,\n-            "Change cache settings": 0,\n-            "Change configuration": 0,\n             "Change local roles": 1,\n+            "Change Page Templates": 0,\n             "Change permissions": 0,\n             "Change proxy roles": 0,\n+            "Change Python Scripts": 0,\n+            "Change Session Data Manager": 0,\n+            "CMFEditions: Access previous versions": 1,\n+            "CMFEditions: Apply version control": 1,\n+            "CMFEditions: Checkout to location": 1,\n+            "CMFEditions: Manage versioning policies": 1,\n+            "CMFEditions: Purge version": 1,\n+            "CMFEditions: Revert to previous versions": 1,\n+            "CMFEditions: Save new version": 1,\n             "Content rules: Manage rules": 1,\n             "Copy or Move": 1,\n             "Create Transient Objects": 0,\n@@ -109,8 +109,8 @@ def testExpectedPermissions(self):\n             "Delete Groups": 0,\n             "Delete objects": 1,\n             "Edit ReStructuredText": 0,\n-            "FTP access": 1,\n             "Five: Add TTW View Template": 0,\n+            "FTP access": 1,\n             "Import/Export objects": 0,\n             "List folder contents": 1,\n             "List portal members": 1,\n@@ -121,29 +121,31 @@ def testExpectedPermissions(self):\n             "Manage Access Rules": 0,\n             "Manage Five local sites": 0,\n             "Manage Groups": 0,\n+            "Manage portal": 0,\n+            "Manage properties": 1,\n+            "Manage repositories": 0,\n             "Manage Site": 0,\n             "Manage Transient Object Container": 0,\n+            "Manage users": 0,\n             "Manage Vocabulary": 0,\n             "Manage WebDAV Locks": 0,\n             "Manage ZCatalog Entries": 0,\n             "Manage ZCatalogIndex Entries": 0,\n-            "Manage portal": 0,\n-            "Manage properties": 1,\n-            "Manage repositories": 0,\n-            "Manage users": 0,\n             "Modify Cookie Crumblers": 0,\n             "Modify portal content": 1,\n             "Modify view template": 1,\n             "Open/Close Database Connections": 0,\n             "Plone Site Setup: Overview": 1,\n+            "plone.portlet.collection: Add collection portlet": 1,\n+            "plone.portlet.static: Add static portlet": 1,\n             "Portlets: Manage own portlets": 1,\n             "Portlets: Manage portlets": 1,\n             "Portlets: View dashboard": 1,\n             "Query Vocabulary": 0,\n             "Request review": 1,\n             "Review portal content": 1,\n-            "Search ZCatalog": 1,\n             "Search for principals": 0,\n+            "Search ZCatalog": 1,\n             "Set Group Ownership": 0,\n             "Set own password": 1,\n             "Set own properties": 1,\n@@ -156,15 +158,12 @@ def testExpectedPermissions(self):\n             "Undo changes": 1,\n             "Use mailhost services": 1,\n             "Use version control": 1,\n-            "Reply to item": 0,\n-            "View": 1,\n             "View Groups": 1,\n             "View management screens": 0,\n+            "View": 1,\n+            "WebDAV access": 1,\n             "WebDAV Lock items": 1,\n             "WebDAV Unlock items": 1,\n-            "WebDAV access": 1,\n-            "plone.portlet.collection: Add collection portlet": 1,\n-            "plone.portlet.static: Add static portlet": 1,\n         }\n         try:\n             import plone.app.iterate\ndiff --git a/Products/CMFPlone/tests/testWebDAV.py b/Products/CMFPlone/tests/testWebDAV.py\nindex 2105ae4390..e3938407ef 100644\n--- a/Products/CMFPlone/tests/testWebDAV.py\n+++ b/Products/CMFPlone/tests/testWebDAV.py\n@@ -18,17 +18,6 @@\n """\n \n \n-class TestDAVProperties(PloneTestCase.PloneTestCase):\n-    def testPropertiesToolTitle(self):\n-        ptool = getToolByName(self.portal, "portal_properties")\n-        psets = dict(ptool.propertysheets.items())\n-        self.assertTrue("webdav" in psets.keys())\n-        default = psets["webdav"]\n-        items = dict(default.propertyItems())\n-        self.assertTrue("displayname" in items.keys())\n-        self.assertEqual(items["displayname"], ptool.title)\n-\n-\n class TestPUTObjects(PloneTestCase.PloneTestCase):\n     # PUT objects into Plone including special cases like index_html.\n     # Confirms fix for http://dev.plone.org/plone/ticket/1375\ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex 3be7eafd7d..ac633b5d6b 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -106,8 +106,8 @@ def test_get_default_page_step_3_2(self):\n         self.assertEqual("d1", get_default_page(self.folder))\n \n     def test_get_default_page_step_4(self):\n-        # 4. Else, look up the property default_page in site_properties for\n-        #   magic ids and test these\n+        # 4. Else, look up the property plone.default_page in the registry for\n+        #    magic ids and test these\n         registry = getUtility(IRegistry)\n         registry["plone.default_page"] = ["d1"]\n         self.folder.invokeFactory("Document", "d1", title="Doc 1")\ndiff --git a/Products/CMFPlone/tests/test_zmi.py b/Products/CMFPlone/tests/test_zmi.py\nindex 3ec5997246..8be5e75e98 100644\n--- a/Products/CMFPlone/tests/test_zmi.py\n+++ b/Products/CMFPlone/tests/test_zmi.py\n@@ -121,11 +121,6 @@ def test_portal_modifier(self):\n         view = self.portal.restrictedTraverse(url)\n         self.assertTrue(view(), msg=f"{url} is broken")\n \n-    def test_portal_properties(self):\n-        url = "portal_properties/manage_main"\n-        view = self.portal.restrictedTraverse(url)\n-        self.assertTrue(view(), msg=f"{url} is broken")\n-\n     def test_portal_purgepolicy(self):\n         url = "portal_purgepolicy/manage_propertiesForm"\n         view = self.portal.restrictedTraverse(url)\ndiff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 11bead9cb7..03ffff10cc 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -163,11 +163,11 @@ def isExpired(content):\n     # convert to a DateTime\n \n     # Try DC accessor first\n-    if base_hasattr(content, "ExpirationDate"):\n+    if base_utils.base_hasattr(content, "ExpirationDate"):\n         expiry = content.ExpirationDate\n \n     # Try the direct way\n-    if not expiry and base_hasattr(content, "expires"):\n+    if not expiry and base_utils.base_hasattr(content, "expires"):\n         expiry = content.expires\n \n     # See if we have a callable\n@@ -675,13 +675,13 @@ def _check_for_collision(contained_by, id, **kwargs):\n     # Check for an existing object.\n     if id in contained_by:\n         existing_obj = getattr(contained_by, id, None)\n-        if base_hasattr(existing_obj, "portal_type"):\n+        if base_utils.base_hasattr(existing_obj, "portal_type"):\n             return _(\n                 "There is already an item named ${name} in this folder.",\n                 mapping={"name": id},\n             )\n \n-    if base_hasattr(contained_by, "checkIdAvailable"):\n+    if base_utils.base_hasattr(contained_by, "checkIdAvailable"):\n         # This used to be called from the check_id skin script,\n         # which would check the permission automatically,\n         # and the code would catch the Unauthorized exception.\n@@ -690,7 +690,7 @@ def _check_for_collision(contained_by, id, **kwargs):\n                 return _("${name} is reserved.", mapping={"name": id})\n \n     # containers may implement this hook to further restrict ids\n-    if base_hasattr(contained_by, "checkValidId"):\n+    if base_utils.base_hasattr(contained_by, "checkValidId"):\n         try:\n             contained_by.checkValidId(id)\n         except ConflictError:\ndiff --git a/Products/CMFPlone/www/addPropertySheet.zpt b/Products/CMFPlone/www/addPropertySheet.zpt\ndeleted file mode 100644\nindex 2d01f3bcda..0000000000\n--- a/Products/CMFPlone/www/addPropertySheet.zpt\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-<tal:doctype tal:replace="structure string:&lt;!DOCTYPE html&gt;" />\n-<html>\n-<head>\n-<meta http-equiv="content-type" content="text/html;charset=utf-8"\n-      tal:define="charset context/management_page_charset | string:utf-8;"\n-      tal:attributes="content string:text/html;;charset=$charset;"/>\n-\n-<title>Zope</title>\n-<link rel="stylesheet" type="text/css" href="/manage_page_style.css" />\n-\n-</head>\n-<body bgcolor="#ffffff" link="#000099" alink="#000099" vlink="#000099">\n-\n-  <div class="form-title">\n-  Add Propertysheet\n-  </div>\n-\n-<form action="manage_addPropertySheet" method="post">\n-    <div class="form-help">\n-    Enter an ID and title to add a new PropertySheet.\n-    </div>\n-    <div class="form-label">\n-    Id\n-    </div>\n-    <input type="text" name="id" size="40" />\n-\n-    <div class="form-label">\n-    Title\n-    </div>\n-    <input type="text" name="title" size="40" value="" />\n-\n-    <div class="form-element">\n-    <input class="form-element" type="submit" name="submit"\n-     value=" Add PropertySheet " />\n-    </div>\n-</form>\n-\n-  </body>\n-</html>\ndiff --git a/news/3756.bugfix b/news/3756.bugfix\ndeleted file mode 100644\nindex 4f3c022774..0000000000\n--- a/news/3756.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix deprecation warnings in "navtree" code + some micro optimizations\n-[jensens]\ndiff --git a/news/3765-1.bugfix b/news/3765-1.bugfix\ndeleted file mode 100644\nindex befe772169..0000000000\n--- a/news/3765-1.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove unused loadingBaseUrl option.\ndiff --git a/news/3765-2.bugfix b/news/3765-2.bugfix\ndeleted file mode 100644\nindex 64cdb7bfc9..0000000000\n--- a/news/3765-2.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove deprecated AtD plugin settings.\ndiff --git a/news/3765-3.bugfix b/news/3765-3.bugfix\ndeleted file mode 100644\nindex 0f699fdb93..0000000000\n--- a/news/3765-3.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove unused AtD related views.\ndiff --git a/news/3765-4.bugfix b/news/3765-4.bugfix\ndeleted file mode 100644\nindex 47a716e6a4..0000000000\n--- a/news/3765-4.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove unused ITinyMCESpellCheckerSchema and ITinyMCESpellCheckerForm.\ndiff --git a/news/3942.bugfix b/news/3942.bugfix\ndeleted file mode 100644\nindex a939eff395..0000000000\n--- a/news/3942.bugfix\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-Use details element for collapsibles in the resource registry\n-\n-Makes it possible to toggle elements even with broken or missing javascript.\n-Also properly connect form labels with their inputs.\n-\n-Fixes #3942\ndiff --git a/news/3942.internal b/news/3942.internal\ndeleted file mode 100644\nindex 062c197fa0..0000000000\n--- a/news/3942.internal\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Resourceregistry controlpanel: zprettify template.\n-[thet]\ndiff --git a/news/3945.bugfix b/news/3945.bugfix\ndeleted file mode 100644\nindex d6e4076422..0000000000\n--- a/news/3945.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Import INavigationRoot from plone.base, removes DeprecationWarning.\n-[@jensens]\n\\ No newline at end of file\ndiff --git a/news/3946.bugfix b/news/3946.bugfix\ndeleted file mode 100644\nindex 1853b16830..0000000000\n--- a/news/3946.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Use `context` instead of `here` in templates.\n-Call `@@main_template` (with prefix `@@`) to optimize lookup.\n-[@jensens]\n\\ No newline at end of file\ndiff --git a/news/3949.bugfix b/news/3949.bugfix\ndeleted file mode 100644\nindex bf15b1c268..0000000000\n--- a/news/3949.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Reduce DeprecationWarnings. [@jensens]\ndiff --git a/news/3952.bugfix b/news/3952.bugfix\ndeleted file mode 100644\nindex a63571e60a..0000000000\n--- a/news/3952.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix TypeError in getGroups sorting\n-[@rohnsha0]\n\\ No newline at end of file\ndiff --git a/news/3960.bugfix b/news/3960.bugfix\ndeleted file mode 100644\nindex b1fe215568..0000000000\n--- a/news/3960.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Remove queryCatalog and getFolderContents skins script.\n-This includes a refactoring in the search RSS and updates to soe tests\n-[@jensens]\ndiff --git a/news/3962.bugfix b/news/3962.bugfix\ndeleted file mode 100644\nindex d49decfcd7..0000000000\n--- a/news/3962.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Products.CMFPlone  must not depend on plone.api [@jensens]\ndiff --git a/news/3964.bugfix b/news/3964.bugfix\ndeleted file mode 100644\nindex 08994471a3..0000000000\n--- a/news/3964.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Removes duplicate `<article id="content">` in controlpanel templates\n-[@szakitibi]\ndiff --git a/news/3965.bugfix b/news/3965.bugfix\ndeleted file mode 100644\nindex de4d0d6091..0000000000\n--- a/news/3965.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Do not test types_not_searched for a element that is not part of the underlying vocabulary.\n-[@jensens]\ndiff --git a/news/3966.bugfix b/news/3966.bugfix\ndeleted file mode 100644\nindex 1c962a9e34..0000000000\n--- a/news/3966.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Remove unused leftover reference to the Zope2 package from test. [@jensens]\ndiff --git a/news/3967.bugfix b/news/3967.bugfix\ndeleted file mode 100644\nindex 8cbd922fef..0000000000\n--- a/news/3967.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Fix: Traceback in maintenance control panel on shutdown if feature is not available.\n-Hide button if action is not possible.\n-[@jensens]\ndiff --git a/news/3968.bugfix b/news/3968.bugfix\ndeleted file mode 100644\nindex c81fb575d7..0000000000\n--- a/news/3968.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed RegistrationTool to take user email with `__+__@abc.com`.\n-[@rohnsha0]\n\\ No newline at end of file\ndiff --git a/news/3975.bugfix.1 b/news/3975.bugfix.1\ndeleted file mode 100644\nindex e93d7ef4ab..0000000000\n--- a/news/3975.bugfix.1\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Plone upgrade page: show error when upgrade is needed but no upgrades are available.\n-Especially show a note when the `plone.app.upgrade` package is not available.\n-[maurits]\ndiff --git a/news/3975.bugfix.2 b/news/3975.bugfix.2\ndeleted file mode 100644\nindex ffd645a7c0..0000000000\n--- a/news/3975.bugfix.2\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Plone upgrade page: show list of previously installed packages that are currently missing.\n-For example: `plone.app.discussion` may be missing in Plone 6.1, unless you explicitly add it, or depend on the `Plone` package.\n-[maurits]\ndiff --git a/news/3982.internal b/news/3982.internal\ndeleted file mode 100644\nindex f2a9d60744..0000000000\n--- a/news/3982.internal\n+++ /dev/null\n@@ -1 +0,0 @@\n-Automatically set the label to `03 type: feature (plip)` for PLIPs. @stevepiercy\ndiff --git a/news/6103.internal b/news/6103.internal\ndeleted file mode 100644\nindex efbd58ca7e..0000000000\n--- a/news/6103.internal\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Updated metadata version to 6103.\n-[maurits]\ndiff --git a/setup.py b/setup.py\nindex 52f7d51108..dda7aaba3f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n from setuptools import setup\n \n \n-version = "6.1.0a4.dev0"\n+version = "6.1.0a6.dev0"\n \n \n setup(\n@@ -60,7 +60,6 @@\n         "plone.app.contenttypes",\n         "plone.app.customerize",\n         "plone.app.dexterity",\n-        "plone.app.discussion",\n         "plone.app.i18n",\n         "plone.app.layout >= 2.5.15",\n         "plone.app.linkintegrity >=1.0.3",\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-09-06T10:24:56-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/bf5d2efe69fc1356ad2dcf62441b52c004ace9b9

Merge remote-tracking branch 'origin/master' into distributions

Files changed:
A news/6105.internal
M Products/CMFPlone/profiles/default/metadata.xml

b'diff --git a/Products/CMFPlone/profiles/default/metadata.xml b/Products/CMFPlone/profiles/default/metadata.xml\nindex 74dbe99aa0..4f6c87a9ed 100644\n--- a/Products/CMFPlone/profiles/default/metadata.xml\n+++ b/Products/CMFPlone/profiles/default/metadata.xml\n@@ -1,4 +1,4 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>6104</version>\n+  <version>6105</version>\n </metadata>\ndiff --git a/news/6105.internal b/news/6105.internal\nnew file mode 100644\nindex 0000000000..4b8bcb2c84\n--- /dev/null\n+++ b/news/6105.internal\n@@ -0,0 +1,2 @@\n+Updated metadata version to 6105.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-09-12T12:46:36+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/ef89e53ebaf07f8c9502ebeb5aa2badbb09916fb

Merge branch 'master' into distributions

Files changed:
A news/139.bugfix
A news/4009.feature
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py
M Products/CMFPlone/factory.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex 46b128ca75..9ddd6a2f97 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -1,4 +1,5 @@\n from csv import writer\n+import warnings\n from DateTime import DateTime\n from DateTime.interfaces import DateTimeError\n from io import StringIO\n@@ -163,7 +164,7 @@ def view_url(self):\n \n \n class RedirectionSet:\n-    def __init__(self, query="", created="", manual=""):\n+    def __init__(self, query="", created="", manual="", start="", end=""):\n         self.storage = getUtility(IRedirectionStorage)\n \n         portal = getSite()\n@@ -190,20 +191,35 @@ def __init__(self, query="", created="", manual=""):\n             else:\n                 manual = ""\n         if created:\n+            end = created\n+            warnings.warn(\n+                "The \'created\' parameter is deprecated. Use \'end\' parameter instead.",\n+                DeprecationWarning,\n+            )\n+        if start:\n+            try:\n+                start = DateTime(start)\n+            except DateTimeError:\n+                logger.warning("Failed to parse as DateTime: %s", start)\n+                start = ""\n+        if end:\n             try:\n-                created = DateTime(created)\n+                end = DateTime(end)\n             except DateTimeError:\n-                logger.warning("Failed to parse as DateTime: %s", created)\n-                created = ""\n-        if created or manual != "":\n+                logger.warning("Failed to parse as DateTime: %s", end)\n+                end = ""\n+        if start or end or manual != "":\n             chosen = []\n             for redirect in self.data:\n                 info = self.storage.get_full(redirect)\n                 if manual != "":\n                     if info[2] != manual:\n                         continue\n-                if created and info[1]:\n-                    if info[1] >= created:\n+                if start and info[1]:\n+                    if info[1] < start:\n+                        continue\n+                if end and info[1]:\n+                    if info[1] >= end:\n                         continue\n                 chosen.append(redirect)\n             self.data = chosen\n@@ -256,6 +272,8 @@ def redirects(self):\n             RedirectionSet(\n                 query=self.request.form.get("q", ""),\n                 created=self.request.form.get("datetime", ""),\n+                start=self.request.form.get("start", ""),\n+                end=self.request.form.get("end", ""),\n                 manual=self.request.form.get("manual", ""),\n             ),\n             int(self.request.form.get("b_size", "15")),\n@@ -280,9 +298,17 @@ def __call__(self):\n             else:\n                 query = self.request.form.get("q", "")\n                 created = self.request.form.get("datetime", "")\n+                start = self.request.form.get("start", "")\n+                end = self.request.form.get("end", "")\n                 manual = self.request.form.get("manual", "")\n-                if created or manual or (query and query != "/"):\n-                    rset = RedirectionSet(query=query, created=created, manual=manual)\n+                if created or start or end or manual or (query and query != "/"):\n+                    rset = RedirectionSet(\n+                        query=query,\n+                        created=created,\n+                        manual=manual,\n+                        start=start,\n+                        end=end,\n+                    )\n                     redirects = list(rset.data)\n                 else:\n                     redirects = []\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\nindex 4099a0f60f..8e8d3057ab 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n@@ -336,7 +336,7 @@ def test_redirection_controlpanel_filter_date(self):\n \n         redirects = RedirectionSet()\n         self.assertEqual(len(redirects), 400)\n-        # created can be anything that can be parsed by DateTime.\n+        # created can be anything that can be parsed by DateTime. (deprecated)\n         # Otherwise it is ignored.\n         self.assertEqual(len(RedirectionSet(created="2019-01-01")), 400)\n         self.assertEqual(len(RedirectionSet(created="1999-01-01")), 0)\n@@ -346,38 +346,57 @@ def test_redirection_controlpanel_filter_date(self):\n         self.assertEqual(len(RedirectionSet(created="2001-02-01 00:00:00")), 31)\n         self.assertEqual(len(RedirectionSet(created="2001-02-01 00:00:01")), 32)\n         self.assertEqual(len(RedirectionSet(created="badvalue")), 400)\n+        # start is inclusive and can be anything that can be parsed by DateTime.\n+        # Otherwise it is ignored.\n+        self.assertEqual(len(RedirectionSet(start="2019-01-01")), 0)\n+        self.assertEqual(len(RedirectionSet(start="2001-01-02")), 399)\n+        self.assertEqual(len(RedirectionSet(start="2001-02-01 00:00:00")), 369)\n+        self.assertEqual(len(RedirectionSet(start="2001-02-01 00:00:01")), 368)\n+        self.assertEqual(len(RedirectionSet(start="badvalue")), 400)\n+\n+        # End is exclisive and can be anything that can be parsed by DateTime.\n+        # Otherwise it is ignored.\n+        self.assertEqual(len(RedirectionSet(end="1999-01-01")), 0)\n+        self.assertEqual(len(RedirectionSet(end="2000-01-01")), 0)\n+        self.assertEqual(len(RedirectionSet(end="2001-02-01")), 31)\n+        self.assertEqual(len(RedirectionSet(end="2001-02-01 00:00:00")), 31)\n+        self.assertEqual(len(RedirectionSet(end="2001-02-01 00:00:01")), 32)\n+        self.assertEqual(len(RedirectionSet(end="badvalue")), 400)\n+\n+        self.assertEqual(len(RedirectionSet(start="2001-01-01", end="2001-01-01")), 0)\n+        self.assertEqual(len(RedirectionSet(start="2001-01-01", end="2001-01-02")), 1)\n \n         # DateTime(\'2002-01-01\') results in a timezone GMT+0\n-        self.assertEqual(len(RedirectionSet(created="2002-01-01")), 365)\n+        self.assertEqual(len(RedirectionSet(end="2002-01-01")), 365)\n         # DateTime(\'2002/01/01\') results in a timezone GMT+1 for me,\n         # or a different zone depending on where in the world you are.\n         # So we need to be lenient in the tests.\n-        self.assertGreaterEqual(len(RedirectionSet(created="2002/01/01")), 364)\n-        self.assertLessEqual(len(RedirectionSet(created="2002/01/01")), 366)\n+        self.assertGreaterEqual(len(RedirectionSet(end="2002/01/01")), 364)\n+        self.assertLessEqual(len(RedirectionSet(end="2002/01/01")), 366)\n \n         request = self.layer["request"].clone()\n-        request.form["datetime"] = ""\n+        request.form["start"] = ""\n         view = getMultiAdapter(\n             (self.layer["portal"], request), name="redirection-controlpanel"\n         )\n         self.assertEqual(view.redirects().numpages, math.ceil(400 / 15.0))\n \n         request = self.layer["request"].clone()\n-        request.form["datetime"] = "2001-01-27"\n+        request.form["end"] = "2001-01-27"\n         view = getMultiAdapter(\n             (self.layer["portal"], request), name="redirection-controlpanel"\n         )\n         self.assertEqual(view.redirects().numpages, math.ceil(27 / 15.0))\n \n         request = self.layer["request"].clone()\n-        request.form["datetime"] = "2002-01-01"\n+        request.form["end"] = "2002-01-01"\n         view = getMultiAdapter(\n             (self.layer["portal"], request), name="redirection-controlpanel"\n         )\n         self.assertEqual(view.redirects().numpages, math.ceil(365 / 15.0))\n \n         request = self.layer["request"].clone()\n-        request.form["datetime"] = "2019-01-01"\n+        request.form["end"] = "2019-01-01"\n         view = getMultiAdapter(\n             (self.layer["portal"], request), name="redirection-controlpanel"\n         )\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 4e6b42b724..ef8aa065bd 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -62,7 +62,6 @@ def getNonInstallableProducts(self):\n             "Products.CMFEditions",\n             "Products.NuPlone",\n             "borg.localrole",\n-            "plone.app.caching",\n             "plone.app.dexterity",\n             "plone.app.event",\n             "plone.app.intid",\ndiff --git a/news/139.bugfix b/news/139.bugfix\nnew file mode 100644\nindex 0000000000..bbce64eda0\n--- /dev/null\n+++ b/news/139.bugfix\n@@ -0,0 +1,3 @@\n+No longer hide plone.app.caching from Add-ons control panel.\n+It is a core add-on, so you should be able to activate it if you add the package later.\n+[maurits]\ndiff --git a/news/4009.feature b/news/4009.feature\nnew file mode 100644\nindex 0000000000..1a58fdb77f\n--- /dev/null\n+++ b/news/4009.feature\n@@ -0,0 +1 @@\n+Redirection control panel: Added support for start and end filters. @Faakhir30\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-09-12T14:58:34+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/bea0b3d38754383ae5ebfd818156df1c6a3fd742

You can pass a distribution_name to factory.addPloneSite.

We then pass all other arguments and keyword arguments to the `plone.distribution` site api.

Files changed:
A news/3961.feature.1
M Products/CMFPlone/factory.py
M Products/CMFPlone/tests/configure.zcml
M Products/CMFPlone/tests/test_factory.py

b'diff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex ef8aa065bd..4b652b0e5c 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -138,8 +138,34 @@ def addPloneSite(\n     setup_content=None,\n     default_language="en",\n     portal_timezone="UTC",\n+    distribution_name=None,\n+    **kwargs,\n ):\n     """Add a PloneSite to the context."""\n+    if distribution_name:\n+        from plone.distribution.api import site as site_api\n+\n+        # Pass all arguments and keyword arguments in the answers,\n+        # But the \'distribution_name\' is not needed there.\n+        answers = {\n+            "site_id": site_id,\n+            "title": title,\n+            "description": description,\n+            "profile_id": profile_id,\n+            "snapshot": snapshot,\n+            "content_profile_id": content_profile_id,\n+            "extension_ids": extension_ids,\n+            "setup_content": setup_content,\n+            "default_language": default_language,\n+            "portal_timezone": portal_timezone,\n+        }\n+        answers.update(kwargs)\n+        site = site_api._create_site(\n+            context=context, distribution_name=distribution_name, answers=answers\n+        )\n+        setSite(site)\n+        return site\n+\n     if content_profile_id is not None:\n         warnings.warn(\n             "addPloneSite ignores the content_profile_id keyword argument "\ndiff --git a/Products/CMFPlone/tests/configure.zcml b/Products/CMFPlone/tests/configure.zcml\nindex bd6ca7c2db..1f730fd5c1 100644\n--- a/Products/CMFPlone/tests/configure.zcml\n+++ b/Products/CMFPlone/tests/configure.zcml\n@@ -1,6 +1,8 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n     i18n_domain="plone"\n     >\n \n@@ -11,4 +13,14 @@\n       permission="zope2.View"\n       />\n \n+  <configure zcml:condition="installed plone.distribution">\n+    <include package="plone.distribution" />\n+    <plone:distribution\n+        name="testdistro"\n+        title="Plone Site"\n+        headless="false"\n+        post_handler="plone.distribution.handler.post_handler"\n+        />\n+  </configure>\n+\n </configure>\ndiff --git a/Products/CMFPlone/tests/test_factory.py b/Products/CMFPlone/tests/test_factory.py\nindex bcbf875394..79e441a9ba 100644\n--- a/Products/CMFPlone/tests/test_factory.py\n+++ b/Products/CMFPlone/tests/test_factory.py\n@@ -1,3 +1,4 @@\n+from importlib.metadata import distribution\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.factory import addPloneSite\n@@ -9,6 +10,13 @@\n import unittest\n \n \n+try:\n+    distribution("plone.distribution")\n+    HAS_DISTRIBUTION = True\n+except PackageNotFoundError:\n+    HAS_DISTRIBUTION = False\n+\n+\n class TestFactoryPloneSite(unittest.TestCase):\n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \n@@ -67,3 +75,20 @@ def test_site_creation_title_is_set_in_registry(self):\n         ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo")\n         registry = getUtility(IRegistry, context=ploneSite)\n         self.assertEqual(registry["plone.site_title"], "Foo")\n+\n+    @unittest.skipIf(\n+        not HAS_DISTRIBUTION,\n+        "Passing a distribution_name needs plone.distribution.",\n+    )\n+    def test_site_creation_distribution(self):\n+        """Create a Plone Site using a distribution"""\n+        ploneSite = addPloneSite(\n+            self.app,\n+            "ploneFoo",\n+            title="Foo",\n+            distribution_name="testdistro",\n+            default_language="nl",\n+        )\n+        self.assertEqual(ploneSite.getId(), "ploneFoo")\n+        self.assertEqual(ploneSite.title, "Foo")\n+        self.assertEqual(ploneSite.Language(), "nl")\ndiff --git a/news/3961.feature.1 b/news/3961.feature.1\nnew file mode 100644\nindex 0000000000..da7c79fa52\n--- /dev/null\n+++ b/news/3961.feature.1\n@@ -0,0 +1,3 @@\n+You can pass a `distribution_name` to `factory.addPloneSite`.\n+We then pass all other arguments and keyword arguments to the `plone.distribution` site api.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-09-24T18:57:04+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/f6cfb9814e300f196008a49a8a220668caa52be0

Merge branch 'master' into distributions

Files changed:
A Products/CMFPlone/tests/robot/test_contentbrowser.robot
A news/3980.bugfix
A news/4011.bugfix
M Products/CMFPlone/patterns/settings.py
M Products/CMFPlone/tests/robot/test_edit.robot
M Products/CMFPlone/tests/robot/test_linkintegrity.robot
M Products/CMFPlone/tests/robot/test_tinymce.robot

b'diff --git a/Products/CMFPlone/patterns/settings.py b/Products/CMFPlone/patterns/settings.py\nindex 5573868983..786248f6f4 100644\n--- a/Products/CMFPlone/patterns/settings.py\n+++ b/Products/CMFPlone/patterns/settings.py\n@@ -48,8 +48,8 @@ def structure_updater(self):\n             data = {\n                 "data-pat-structureupdater": json.dumps(\n                     {\n-                        "titleSelector": ".documentFirstHeading",\n-                        "descriptionSelector": ".documentDescription",\n+                        "titleSelector": "header > h1",\n+                        "descriptionSelector": "p.lead",\n                     }\n                 )\n             }\ndiff --git a/Products/CMFPlone/tests/robot/test_contentbrowser.robot b/Products/CMFPlone/tests/robot/test_contentbrowser.robot\nnew file mode 100644\nindex 0000000000..577fbf2b32\n--- /dev/null\n+++ b/Products/CMFPlone/tests/robot/test_contentbrowser.robot\n@@ -0,0 +1,284 @@\n+*** Settings *****************************************************************\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n+Resource  keywords.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Variables  Products/CMFPlone/tests/robot/variables.py\n+\n+# use this for a ful browser window if you develop the tests\n+# Test Setup  Run keywords  Plone Test Setup    Maximize Browser Window\n+Test Setup  Run keywords  Plone Test Setup\n+Test Teardown  Run keywords  Plone Test Teardown\n+\n+*** Variables ***\n+\n+${ASSET_FOLDER}    asset-folder\n+${DOCUMENT_ID}    doc\n+\n+*** Test cases ***************************************************************\n+\n+\n+Scenario: Select a related Item\n+     Given a logged-in site administrator\n+       and a document\n+       and a nested asset folder\n+      When I select a related item image via contentbrowser\n+      Then a image is selected as related item\n+\n+Scenario: Select more than one related Items\n+    Given a logged-in site administrator\n+      and a document\n+      and a nested asset folder\n+     When I select two related item images via contentbrowser\n+     Then two images are selected as related item\n+\n+Scenario: add an internal Link via contentbrowser\n+    Given a logged-in site administrator\n+      and a document\n+      and a nested asset folder\n+     When I set an internal link via contentbrowser\n+      and I save the document\n+     Then the document contain the internal link\n+\n+Scenario: add an image via contentbrowser\n+    Given a logged-in site administrator\n+      and a document\n+      and a nested asset folder\n+     When I set an image via contentbrowser\n+      and I save the document\n+     Then the document contain the image\n+\n+Scenario: upload an image via contentbrowser\n+    Given a logged-in site administrator\n+      and a document\n+      and a nested asset folder\n+     When I upload an image via contentbrowser\n+      and I save the document\n+     Then the document contain the uploaded image\n+\n+Scenario: search and select an image via contentbrowser\n+    Given a logged-in site administrator\n+      and a document\n+      and a nested asset folder\n+     When I search and select an image via contentbrowser\n+      and I save the document\n+     Then the document contain the image by search\n+\n+\n+*** Keywords *****************************************************************\n+\n+# --- GIVEN ------------------------------------------------------------------\n+\n+a nested asset folder\n+    #\n+    # + Assets\n+    #  + Mixed\n+    #   - File1\n+    #   - Image1\n+    #   - Document1\n+    #   - News Item1\n+    #   + Files\n+    #    - File1\n+    #    - File2\n+    #    + Images\n+    #     - Image1\n+    #     - Image2\n+    #\n+    ${folder_assets_uid}=  Create content    type=Folder    title=Assets    id=${ASSET_FOLDER}\n+\n+    ${folder_mixed_uid}=  Create content    type=Folder    title=Mixed    container=${folder_assets_uid}\n+    Create content    type=File    title=File1    container=${folder_mixed_uid}\n+    Create content    type=Image    title=Image1    container=${folder_mixed_uid}\n+    Create content    type=Document    title=Document1    container=${folder_mixed_uid}\n+    Create content    type=News Item    title=News Item1    container=${folder_mixed_uid}\n+\n+    ${folder_files_uid}=  Create content    type=Folder    title=Files    container=${folder_mixed_uid}\n+    Create content    type=File    title=File1    container=${folder_files_uid}\n+    Create content    type=File    title=File2    container=${folder_files_uid}\n+\n+    ${folder_images_uid}=  Create content    type=Folder    title=Images    container=${folder_files_uid}\n+    Create content    type=Image    id=image-1    title=Image1    container=${folder_images_uid}\n+    Create content    type=Image    id=image-2    title=Image2    container=${folder_images_uid}\n+    Create content    type=Image    id=image-3    title=My Image    container=${folder_images_uid}\n+    Create content    type=Image    id=image-4    title=Another Image    container=${folder_images_uid}\n+\n+a document\n+    Create content  type=Document  id=${DOCUMENT_ID}    title=My Page\n+\n+# --- WHEN ------------------------------------------------------------------\n+\n+I select a related item image via contentbrowser\n+   Go to  ${PLONE_URL}/${DOCUMENT_ID}/edit\n+   # Click the Categorization Tab\n+   Wait For Then Click Element    //a[@id="autotoc-item-autotoc-2"]\n+   # Click the select button\n+   Wait For Then Click Element    //div[@id="formfield-form-widgets-IRelatedItems-relatedItems"]//button\n+   # Click third element in first column, that is the "Assets" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[4]\n+   # Click first element in second column, that is the "Mixed" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[2]/div[contains(@class, "levelItems")]/div[1]\n+   # Click fifth element in third column, that is the "Files" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[3]/div[contains(@class, "levelItems")]/div[5]\n+   # Click third element in fourth column, that is the "Images" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[4]/div[contains(@class, "levelItems")]/div[3]\n+   # Click second element in fifth column, that is the "Image2" Object\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[5]/div[contains(@class, "levelItems")]/div[2]\n+   # Click the select Button in the Toolbar of column 6\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[6]/div[contains(@class, "levelToolbar")]/button\n+\n+\n+I select two related item images via contentbrowser\n+   Go to  ${PLONE_URL}/${DOCUMENT_ID}/edit\n+   # Click the Categorization Tab\n+   Wait For Then Click Element    //a[@id="autotoc-item-autotoc-2"]\n+   # Click the select button\n+   Wait For Then Click Element    //div[@id="formfield-form-widgets-IRelatedItems-relatedItems"]//button\n+   # Click third element in first column, that is the "Assets" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[4]\n+   # Click first element in second column, that is the "Mixed" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[2]/div[contains(@class, "levelItems")]/div[1]\n+   # Click fifth element in third column, that is the "Files" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[3]/div[contains(@class, "levelItems")]/div[5]\n+   # Click third element in fourth column, that is the "Images" folder\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[4]/div[contains(@class, "levelItems")]/div[3]\n+\n+   # now we select two items in a colum via Shift+Click\n+   # Click first element in fifth column, that is the "Image1" Object\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[5]/div[contains(@class, "levelItems")]/div[1]\n+   # Click second element in fifth column with SHIFT, that is the "Image2" Object\n+   Wait For Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[5]/div[contains(@class, "levelItems")]/div[2]\n+   Click Element        //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[5]/div[contains(@class, "levelItems")]/div[2]    SHIFT\n+   # Click the select Button in the Toolbar of column 6\n+   Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[6]/div[contains(@class, "levelToolbar")]/button\n+\n+\n+I set an internal link via contentbrowser\n+    Go to  ${PLONE_URL}/${DOCUMENT_ID}/edit\n+    Fill text to tinymce editor    Susi Sorglos and John Doe\n+    Execute Javascript    function selectText() {\n+    ...    var iframe_document = document.querySelector(".tox-edit-area iframe").contentDocument;\n+    ...    var body = iframe_document.body;\n+    ...    var p = body.firstChild;\n+    ...    var range = new Range();\n+    ...    range.setStart(p.firstChild, 5);\n+    ...    range.setEnd(p.firstChild, 12);\n+    ...    iframe_document.getSelection().removeAllRanges();\n+    ...    iframe_document.getSelection().addRange(range);\n+    ...    }; selectText();\n+    Click Button    //button[@aria-label=\'Insert/edit link\']\n+    Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+    Click item in column    1    3\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+    Wait Until Element Is Not Visible    //div[contains(@class,"content-browser-position-wrapper")]\n+    Wait For Then Click Element    //div[contains(@class, \'modal-footer\')]//input[contains(@name, \'insert\')]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n+\n+I set an image via contentbrowser\n+    Go to  ${PLONE_URL}/${DOCUMENT_ID}/edit\n+    Fill text to tinymce editor    Susi Sorglos and John Doe\n+    Click Button    //button[@aria-label=\'Insert/edit image\']\n+    Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+    Click item in column    1    3\n+    Click item in column    2    1\n+    Click item in column    3    1\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+    Wait Until Element Is Not Visible    //div[contains(@class,"content-browser-position-wrapper")]\n+    Wait For Then Click Element    //div[contains(@class, \'modal-footer\')]//input[contains(@name, \'insert\')]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n+\n+I upload an image via contentbrowser\n+    Go to  ${PLONE_URL}/${DOCUMENT_ID}/edit\n+    Fill text to tinymce editor    Susi Sorglos and John Doe\n+    Click Button  //button[@aria-label="Insert/edit image"]\n+    Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+    Click item in column    1    3\n+    Click item in column    2    1\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "toolBar")]/button[contains(@class,"upload")]\n+    Choose File    //div[contains(@class,"pat-upload")]//input[@class="dz-hidden-input"]    ${PATH_TO_TEST_FILES}/plone-logo.png\n+    Wait For Then Click Element  //div[contains(@class,"pat-upload")]//button[contains(@class,"upload-all")]\n+    Click item in column    3    3\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+    Wait Until Element Is Not Visible    //div[contains(@class,"content-browser-position-wrapper")]\n+    Wait For Then Click Element    //div[contains(@class, \'modal-footer\')]//input[contains(@name, \'insert\')]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n+\n+I search and select an image via contentbrowser\n+    Go to  ${PLONE_URL}/${DOCUMENT_ID}/edit\n+    Fill text to tinymce editor    Susi Sorglos and John Doe\n+    Click Button  //button[@aria-label="Insert/edit image"]\n+    Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+    Click item in column    1    3\n+    Click item in column    2    1\n+    Click item in column    3    2\n+    Click item in column    4    1\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "toolBar")]//input[contains(@name,"filter")]\n+    Press Keys    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "toolBar")]//input[contains(@name,"filter")]    Anot\n+    # here we need a timeout, because the search filter is not so fast like the testbrowser, it looks like a asynch operation\n+    ${speed}    Get Selenium Speed\n+    Set Selenium Speed    1 seconds\n+    Click item in column    5    1\n+    Set Selenium Speed    ${speed}\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+    Wait Until Element Is Not Visible    //div[contains(@class,"content-browser-position-wrapper")]\n+    Wait For Then Click Element    //div[contains(@class, \'modal-footer\')]//input[contains(@name, \'insert\')]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n+\n+I save the document\n+    Click Button    //button[@id="form-buttons-save"]\n+\n+\n+\n+# --- THEN ------------------------------------------------------------------\n+\n+a image is selected as related item\n+    image is releated item    //div[contains(@class, "content-browser-selected-items")]/div[1]/img    /asset-folder/mixed/files/images/image-2/@@images/image/mini\n+\n+\n+two images are selected as related item\n+    image is releated item    //div[contains(@class, "content-browser-selected-items")]/div[1]/img    /asset-folder/mixed/files/images/image-1/@@images/image/mini\n+    image is releated item    //div[contains(@class, "content-browser-selected-items")]/div[2]/img    /asset-folder/mixed/files/images/image-2/@@images/image/mini\n+\n+the document contain the internal link\n+    Element exists    //div[@id="parent-fieldname-text"]//a    href    /plone/doc\n+\n+the document contain the image\n+    rendered textfield contain the image with title    Image1\n+\n+the document contain the image by search\n+    rendered textfield contain the image with title    Another Image\n+\n+the document contain the uploaded image\n+    rendered textfield contain the image with title    plone-logo.png\n+\n+\n+#--- Helper DRY -------------------------------------------------------------\n+\n+Fill text to tinymce editor\n+    [arguments]    ${text}\n+    Wait Until Element Is Visible    css=.tox-edit-area iframe\n+    Select Frame    css=.tox-edit-area iframe\n+    Input Text    //body[@id="tinymce"]    ${text}\n+    UnSelect Frame\n+\n+image is releated item\n+    [arguments]    ${xpath}    ${imagepath}\n+    Element exists    ${xpath}    src    ${imagepath}\n+\n+rendered textfield contain the image with title\n+    [arguments]  ${imagetitle}\n+    Element exists    //div[@id="parent-fieldname-text"]//picture/img    title    ${imagetitle}\n+\n+Element exists\n+    [arguments]  ${xpath}    ${attr}    ${value}\n+    ${element}=    Set Variable    ${xpath}\n+    Element Should Be Visible    ${element}\n+    ${_attr}=  Get Element Attribute    ${element}    ${attr}\n+    Should End With    ${_attr}    ${value}\n+\n+Click item in column\n+    [arguments]  ${colnumber}    ${itemposition}\n+    Wait For Then Click Element  //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[${colnumber}]/div[contains(@class, "levelItems")]/div[${itemposition}]\ndiff --git a/Products/CMFPlone/tests/robot/test_edit.robot b/Products/CMFPlone/tests/robot/test_edit.robot\nindex 944595e38e..169b44418d 100644\n--- a/Products/CMFPlone/tests/robot/test_edit.robot\n+++ b/Products/CMFPlone/tests/robot/test_edit.robot\n@@ -15,8 +15,10 @@ Test Teardown  Run keywords  Plone Test Teardown\n *** Variables ****************************************************************\n \n ${TITLE}  An edited page\n+${LINK_TITLE}  An edited link item\n ${PAGE_ID}  an-edited-page\n-\n+${LINK_ID}  an-edited-link-item\n+${SELENIUM_RUN_ON_FAILURE}  Capture Page Screenshot and log source\n \n *** Test cases ***************************************************************\n \n@@ -62,6 +64,20 @@ Scenario: Form dropdowns follows DateTime widget values\n       and i select a date using the widget\n      Then form dropdowns should not have the default values anymore\n \n+Scenario: A link item is opened to edit\n+    Given a logged-in site administrator\n+      and an edited link item\n+     Then i have the title input field\n+      and i can only see the default tab\n+\n+Scenario: Add an internal link to linked item\n+    Given a logged-in site administrator\n+      and at least one other item\n+      and an edited link item\n+      and i select a linked item\n+      and i save the page\n+     Then the linked item is shown in the page\n+      and Capture page screenshot and log source\n \n *** Keywords *****************************************************************\n \n@@ -72,6 +88,11 @@ an edited page\n     Go to  ${PLONE_URL}/${PAGE_ID}/edit\n     Wait until page contains  Edit Page\n \n+an edited link item\n+    Create content  type=Link  title=${LINK_TITLE}\n+    Go to  ${PLONE_URL}/${LINK_ID}/edit\n+    Wait until page contains  Edit Link\n+\n \n # --- WHEN -------------------------------------------------------------------\n \n@@ -89,8 +110,21 @@ I click the ${tab} tab\n     Click link  ${tab}\n \n I select a related item\n-    Wait For Then Click Element  jquery=.pat-relateditems-container ul.select2-choices:visible\n-    Wait For Then Click Element  jquery=a.pat-relateditems-result-select:first\n+    # Click the select button\n+    Wait For Then Click Element  //div[@id="formfield-form-widgets-IRelatedItems-relatedItems"]//button\n+    # Click first element in first column\n+    Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[1]\n+    # Click the select Button in the Toolbar of column 2\n+    Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[2]/div[contains(@class, "levelToolbar")]/button\n+\n+I select a linked item\n+    # Click the select button\n+    Wait For Then Click Element  //div[@id="formfield-form-widgets-remoteUrl"]//button\n+    # Click first element in first column\n+    Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[1]\n+    # Click the select Button in the Toolbar of column 2\n+    # This selects the "test-folder"\n+    Wait For Then Click Element    //div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[2]/div[contains(@class, "levelToolbar")]/button\n \n I save the page\n    Click Button  Save\n@@ -119,6 +153,10 @@ form dropdowns should not have the default values anymore\n the related item is shown in the page\n     Page should contain element  css=#section-related\n \n+the linked item is shown in the page\n+    # check if the selected testfolder is linked\n+    Page should contain element  xpath=//a[@href=\'${PLONE_URL}/test-folder\']\n+\n an overlay pops up\n     Wait Until Page Contains Element  xpath=//div[contains(@class, \'overlay\')]//input[@class=\'insertreference\']\n \ndiff --git a/Products/CMFPlone/tests/robot/test_linkintegrity.robot b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\nindex b0c6fa4dbb..b45dc121ac 100644\n--- a/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n+++ b/Products/CMFPlone/tests/robot/test_linkintegrity.robot\n@@ -21,6 +21,10 @@ Resource  keywords.robot\n Test Setup  Run keywords  Plone Test Setup\n Test Teardown  Run keywords  Plone Test Teardown\n \n+*** Variables ****************************************************************\n+\n+${SELENIUM_RUN_ON_FAILURE}  Capture page screenshot and log source\n+\n \n *** Test Cases ***************************************************************\n \n@@ -74,18 +78,17 @@ a link in rich text\n   Input text  css=.mce-content-body  foo\n   Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n   UnSelect Frame\n-  Click Button  css=button[aria-label="Insert/edit link"]\n \n-  Given patterns are loaded\n-  Wait until element is visible  css=.pat-relateditems .select2-input.select2-default\n-  Click Element  css=.pat-relateditems .select2-input.select2-default\n-  Wait until element is visible  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n-  Click Element  css=.pat-relateditems-result.one-level-up a.pat-relateditems-result-browse\n-  Wait until element is visible  xpath=(//span[contains(., \'Foo\')])\n-  Sleep  2s\n-  Click Element  xpath=(//span[contains(., \'Foo\')])\n-  Wait until element is visible  css=.pat-relateditems-item-title\n-  Wait For Then Click Element  css=.modal-footer .btn-primary\n+  Click Button  css=button[aria-label="Insert/edit link"]\n+  Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+  Wait For Then Click Element  xpath=//div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[3]\n+  Wait For Then Click Element  xpath=//div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+  Wait Until Element Is Not Visible    xpath=//div[contains(@class,"content-browser-position-wrapper")]\n+  Wait For Then Click Element  css=.modal-footer input[name="insert"]\n+  Select Frame  css=.tox-edit-area iframe\n+  Execute Javascript  window.getSelection().removeAllRanges()\n+  UnSelect Frame\n+  Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n   Wait For Then Click Element  css=#form-buttons-save\n \n \ndiff --git a/Products/CMFPlone/tests/robot/test_tinymce.robot b/Products/CMFPlone/tests/robot/test_tinymce.robot\nindex 75eb8d00c7..69eb813598 100644\n--- a/Products/CMFPlone/tests/robot/test_tinymce.robot\n+++ b/Products/CMFPlone/tests/robot/test_tinymce.robot\n@@ -47,19 +47,26 @@ an uploaded image\n text inserted into wysiwyg\n     Wait Until Element Is Visible  css=.tox-edit-area iframe\n     Select Frame  css=.tox-edit-area iframe\n-    Input text  css=.mce-content-body  foobar\n+    Press Keys    //body[@id="tinymce"]    Susi Sorglos and John Doe\n     UnSelect Frame\n \n insert link\n-    Select Frame  css=.tox-edit-area iframe\n-    Execute Javascript    function selectElementContents(el) {var range = document.createRange(); range.selectNodeContents(el); var sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(range);} var el = document.getElementById("tinymce"); selectElementContents(el);\n-    UnSelect Frame\n+    Execute Javascript    function selectText() {\n+    ...    var iframe_document = document.querySelector(".tox-edit-area iframe").contentDocument;\n+    ...    var body = iframe_document.body;\n+    ...    var p = body.firstChild;\n+    ...    var range = new Range();\n+    ...    range.setStart(p.firstChild, 5);\n+    ...    range.setEnd(p.firstChild, 12);\n+    ...    iframe_document.getSelection().removeAllRanges();\n+    ...    iframe_document.getSelection().addRange(range);\n+    ...    }; selectText();\n     Click Button  css=button[aria-label="Insert/edit link"]\n-    Click Button  css=.pat-relateditems-container button.favorites\n-    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n-    Click Link  css=.pat-relateditems-result-select.selectable\n-    Click Button  css=.modal-footer input[name="insert"]\n+    Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+    Wait For Then Click Element  xpath=//div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[3]\n+    Wait For Then Click Element  xpath=//div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+    Wait Until Element Is Not Visible    xpath=//div[contains(@class,"content-browser-position-wrapper")]\n+    Wait For Then Click Element  css=.modal-footer input[name="insert"]\n     Select Frame  css=.tox-edit-area iframe\n     Execute Javascript  window.getSelection().removeAllRanges()\n     UnSelect Frame\n@@ -67,11 +74,12 @@ insert link\n \n insert image\n     Click Button  css=button[aria-label="Insert/edit image"]\n-    Click Button  css=.pat-relateditems-container button.favorites\n-    Click Link  css=.pat-relateditems-container .favorites a.fav[href=\'/\']\n-    Wait Until Element Is Visible  css=.pat-relateditems-result-select.selectable\n-    Click Link  css=.pat-relateditems-result-select.selectable\n+    Wait For Then Click Element  css=.linkModal .content-browser-selected-items-wrapper button.btn-primary\n+    Wait For Then Click Element  xpath=//div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[1]/div[contains(@class, "levelItems")]/div[3]\n+    Capture Page Screenshot\n+    Wait For Then Click Element  xpath=//div[contains(@class, "content-browser-wrapper")]//div[contains(@class, "levelColumns")]/div[contains(@class, "preview")]/div[contains(@class, "levelToolbar")]/button\n+    Wait Until Element Is Not Visible    xpath=//div[contains(@class,"content-browser-position-wrapper")]\n     Input Text  css=.modal-body [name="title"]  SomeTitle\n     Input Text  css=.modal-body [name="alt"]  SomeAlt\n     Click Button  css=.modal-footer input[name="insert"]\n-    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n+    Wait Until Element Is Not Visible  css=.modal-footer input[name="insert"]\n\\ No newline at end of file\ndiff --git a/news/3980.bugfix b/news/3980.bugfix\nnew file mode 100644\nindex 0000000000..db21c66371\n--- /dev/null\n+++ b/news/3980.bugfix\n@@ -0,0 +1,6 @@\n+Update robot tests for new `pat-contentbrowser` pattern.\n+[petschki]\n+\n+- Make tests more robust for new `pat-contentbrowser` pattern.\n+- add more robot tests for `pat-contentbrowser` pattern.\n+[1letter]\ndiff --git a/news/4011.bugfix b/news/4011.bugfix\nnew file mode 100644\nindex 0000000000..11b24d3c17\n--- /dev/null\n+++ b/news/4011.bugfix\n@@ -0,0 +1,2 @@\n+Update `pat-structureupdater` selectors.\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-09-24T19:59:55+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/ec4601c2eabbd4839c6b963e5f01c87218477018

Fix three tests by changing one other test to use a separate layer.

One of the `test_factory.py` tests now uses a new layer using the new `PRODUCTS_CMFPLONE_DISTRIBUTIONS_FIXTURE`.
This is the only layer that defines a dummy distribution in `tests/configure-distributions.zcml`.

Somehow, with the `plone.distribution` zcml loaded, a few tests throw an error when visiting `@@search`:

`zExceptions.NotFound: plone.restapi.controlpanels.registry.SearchControlpanel object at 0x116ea02f0`

Files changed:
A Products/CMFPlone/tests/configure-distributions.zcml
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/testing.py
M Products/CMFPlone/tests/configure.zcml
M Products/CMFPlone/tests/test_factory.py

b'diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex f0b6c31daa..8598ada339 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -29,7 +29,9 @@ def setUp(self):\n \n     def test_search_control_panel_link(self):\n         self.browser.open("%s/@@overview-controlpanel" % self.portal_url)\n-        self.browser.getLink("Search").click()\n+        # The first "Search" link actually points to "Advanced Search"...\n+        # self.browser.getLink("Search").click()\n+        self.browser.getLink(url=f"{self.portal_url}/@@search-controlpanel").click()\n \n     def test_search_control_panel_backlink(self):\n         self.browser.open("%s/@@search-controlpanel" % self.portal_url)\ndiff --git a/Products/CMFPlone/testing.py b/Products/CMFPlone/testing.py\nindex 4b178f00b0..63f65ce3b9 100644\n--- a/Products/CMFPlone/testing.py\n+++ b/Products/CMFPlone/testing.py\n@@ -89,4 +89,29 @@ def tearDownPloneSite(self, portal):\n     name="CMFPloneLayer:Acceptance",\n )\n \n+\n+class ProductsCMFPloneDistributionsLayer(ProductsCMFPloneLayer):\n+    defaultBases = (PRODUCTS_CMFPLONE_FIXTURE,)\n+\n+    def setUpZope(self, app, configurationContext):\n+        import Products.CMFPlone\n+\n+        xmlconfig.file(\n+            "configure-distributions.zcml",\n+            Products.CMFPlone.tests,\n+            context=configurationContext,\n+        )\n+\n+    def setUpPloneSite(self, portal):\n+        # ProductsCMFPloneLayer already does enough setup.\n+        pass\n+\n+\n+PRODUCTS_CMFPLONE_DISTRIBUTIONS_FIXTURE = ProductsCMFPloneDistributionsLayer()\n+\n+PRODUCTS_CMFPLONE_DISTRIBUTIONS_INTEGRATION_TESTING = IntegrationTesting(\n+    bases=(PRODUCTS_CMFPLONE_DISTRIBUTIONS_FIXTURE,),\n+    name="CMFPloneLayer:DistributionsIntegration",\n+)\n+\n optionflags = doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE\ndiff --git a/Products/CMFPlone/tests/configure-distributions.zcml b/Products/CMFPlone/tests/configure-distributions.zcml\nnew file mode 100644\nindex 0000000000..eb1428852e\n--- /dev/null\n+++ b/Products/CMFPlone/tests/configure-distributions.zcml\n@@ -0,0 +1,18 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone"\n+    >\n+\n+  <configure zcml:condition="installed plone.distribution">\n+    <include package="plone.distribution" />\n+    <plone:distribution\n+        name="testdistro"\n+        title="Plone Site"\n+        headless="false"\n+        post_handler="plone.distribution.handler.post_handler"\n+        />\n+  </configure>\n+\n+</configure>\ndiff --git a/Products/CMFPlone/tests/configure.zcml b/Products/CMFPlone/tests/configure.zcml\nindex 1f730fd5c1..29f6057348 100644\n--- a/Products/CMFPlone/tests/configure.zcml\n+++ b/Products/CMFPlone/tests/configure.zcml\n@@ -13,14 +13,4 @@\n       permission="zope2.View"\n       />\n \n-  <configure zcml:condition="installed plone.distribution">\n-    <include package="plone.distribution" />\n-    <plone:distribution\n-        name="testdistro"\n-        title="Plone Site"\n-        headless="false"\n-        post_handler="plone.distribution.handler.post_handler"\n-        />\n-  </configure>\n-\n </configure>\ndiff --git a/Products/CMFPlone/tests/test_factory.py b/Products/CMFPlone/tests/test_factory.py\nindex 79e441a9ba..435c2f5a1d 100644\n--- a/Products/CMFPlone/tests/test_factory.py\n+++ b/Products/CMFPlone/tests/test_factory.py\n@@ -3,6 +3,9 @@\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.factory import addPloneSite\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from Products.CMFPlone.testing import (\n+    PRODUCTS_CMFPLONE_DISTRIBUTIONS_INTEGRATION_TESTING,\n+)\n from Products.CMFPlone.utils import get_installer\n from zope.component import getUtility\n from zope.component import queryUtility\n@@ -76,6 +79,14 @@ def test_site_creation_title_is_set_in_registry(self):\n         registry = getUtility(IRegistry, context=ploneSite)\n         self.assertEqual(registry["plone.site_title"], "Foo")\n \n+\n+class TestFactoryDistributionPloneSite(unittest.TestCase):\n+    layer = PRODUCTS_CMFPLONE_DISTRIBUTIONS_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.request = self.layer["request"]\n+\n     @unittest.skipIf(\n         not HAS_DISTRIBUTION,\n         "Passing a distribution_name needs plone.distribution.",\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-10-07T17:45:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/f62110ef5b98e45e4f1b6808156ca33a25457d53

Merge branch 'master' into distributions

Files changed:
A news/4015.bugfix
M Products/CMFPlone/browser/admin.py

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 84b9c7ac97..1c91c8e97d 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -2,6 +2,7 @@\n from AccessControl.Permissions import view as View\n from collections import OrderedDict\n from functools import cached_property\n+from importlib import import_module\n from importlib.metadata import distribution\n from importlib.metadata import PackageNotFoundError\n from OFS.interfaces import IApplication\n@@ -300,7 +301,12 @@ def missing_packages(self):\n             try:\n                 distribution(package)\n             except PackageNotFoundError:\n-                missing.append(package)\n+                try:\n+                    # profiles can live in submodules of packages.\n+                    # check if we can import the module namespace\n+                    import_module(package)\n+                except ModuleNotFoundError:\n+                    missing.append(package)\n         return missing\n \n     def versions(self):\ndiff --git a/news/4015.bugfix b/news/4015.bugfix\nnew file mode 100644\nindex 0000000000..1c13769dd1\n--- /dev/null\n+++ b/news/4015.bugfix\n@@ -0,0 +1,2 @@\n+Do not warn about missing profiles when they are registered in submodules of packages.\n+[petschki]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-10-08T11:11:31+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/0e91d5ae8bc7a3de9ebfc6fcc99891dcb2fb76cb

Merge pull request #3981 from plone/distributions

Refactor site creation

Files changed:
A Products/CMFPlone/tests/configure-distributions.zcml
A news/3961.breaking.1
A news/3961.breaking.2
A news/3961.breaking.3
A news/3961.feature.1
M Products/CMFPlone/browser/admin.py
M Products/CMFPlone/browser/admin.zcml
M Products/CMFPlone/browser/templates/plone-addsite.pt
M Products/CMFPlone/browser/templates/plone-overview.pt
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py
M Products/CMFPlone/factory.py
M Products/CMFPlone/patches/__init__.py
M Products/CMFPlone/testing.py
M Products/CMFPlone/tests/configure.zcml
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/test_factory.py
D Products/CMFPlone/patches/addzmiplonesite.py

b'diff --git a/Products/CMFPlone/browser/admin.py b/Products/CMFPlone/browser/admin.py\nindex 0e1df304b4..1c91c8e97d 100644\n--- a/Products/CMFPlone/browser/admin.py\n+++ b/Products/CMFPlone/browser/admin.py\n@@ -6,7 +6,6 @@\n from importlib.metadata import distribution\n from importlib.metadata import PackageNotFoundError\n from OFS.interfaces import IApplication\n-from plone.base.interfaces import INonInstallable\n from plone.base.interfaces import IPloneSiteRoot\n from plone.base.utils import get_installer\n from plone.i18n.locales.interfaces import IContentLanguageAvailability\n@@ -15,16 +14,13 @@\n from plone.protect.interfaces import IDisableCSRFProtection\n from Products.CMFCore.permissions import ManagePortal\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n+from Products.CMFPlone.factory import _TYPES_PROFILE\n from Products.CMFPlone.factory import addPloneSite\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.GenericSetup import BASE\n-from Products.GenericSetup import EXTENSION\n-from Products.GenericSetup import profile_registry\n from Products.GenericSetup.upgrade import normalize_version\n from urllib import parse\n from ZODB.broken import Broken\n from zope.component import adapter\n-from zope.component import getAllUtilitiesRegisteredFor\n from zope.component import getUtility\n from zope.component import queryMultiAdapter\n from zope.component import queryUtility\n@@ -46,6 +42,11 @@\n     HAS_VOLTO = True\n except PackageNotFoundError:\n     HAS_VOLTO = False\n+try:\n+    distribution("plone.app.caching")\n+    HAS_CACHING = True\n+except PackageNotFoundError:\n+    HAS_CACHING = False\n try:\n     distribution("plone.app.upgrade")\n     HAS_UPGRADE = True\n@@ -67,8 +68,6 @@ def publishTraverse(self, request, name):\n \n \n class Overview(BrowserView):\n-    has_volto = HAS_VOLTO\n-\n     def sites(self, root=None):\n         if root is None:\n             root = self.context\n@@ -155,67 +154,15 @@ class FrontPage(BrowserView):\n \n \n class AddPloneSite(BrowserView):\n-    # Profiles that are installed by default,\n-    # but can be removed later.\n-    default_extension_profiles = (\n-        "plone.app.caching:default",\n-        "plonetheme.barceloneta:default",\n-    )\n-    # Let\'s have a separate list for Volto.\n-    volto_default_extension_profiles = (\n-        "plone.app.caching:default",\n-        "plonetheme.barceloneta:default",\n-        "plone.volto:default",\n-    )\n-\n-    def profiles(self):\n-        base_profiles = []\n-        extension_profiles = []\n-        if HAS_VOLTO and not self.request.get("classic"):\n-            selected_extension_profiles = self.volto_default_extension_profiles\n-        else:\n-            selected_extension_profiles = self.default_extension_profiles\n-\n-        # profiles available for install/uninstall, but hidden at the time\n-        # the Plone site is created\n-        not_installable = [\n-            "Products.CMFPlacefulWorkflow:CMFPlacefulWorkflow",\n-        ]\n-        utils = getAllUtilitiesRegisteredFor(INonInstallable)\n-        for util in utils:\n-            not_installable.extend(\n-                util.getNonInstallableProfiles()\n-                if hasattr(util, "getNonInstallableProfiles")\n-                else []\n-            )\n-\n-        for info in profile_registry.listProfileInfo():\n-            if info.get("type") == EXTENSION and info.get("for") in (\n-                IPloneSiteRoot,\n-                None,\n-            ):\n-                profile_id = info.get("id")\n-                if profile_id not in not_installable:\n-                    if profile_id in selected_extension_profiles:\n-                        info["selected"] = "selected"\n-                    extension_profiles.append(info)\n-\n-        def _key(v):\n-            # Make sure implicitly selected items come first\n-            selected = v.get("selected") and "automatic" or "manual"\n-            return "{}-{}".format(selected, v.get("title", ""))\n-\n-        extension_profiles.sort(key=_key)\n-\n-        for info in profile_registry.listProfileInfo():\n-            if info.get("type") == BASE and info.get("for") in (IPloneSiteRoot, None):\n-                base_profiles.append(info)\n-\n-        return dict(\n-            base=tuple(base_profiles),\n-            default=_DEFAULT_PROFILE,\n-            extensions=tuple(extension_profiles),\n-        )\n+    @property\n+    def default_extension_profiles(self):\n+        # Profiles that are installed by default,\n+        # but can be removed later.\n+        profiles = [_TYPES_PROFILE]\n+        if HAS_CACHING:\n+            profiles.append("plone.app.caching:default")\n+        profiles.append("plonetheme.barceloneta:default")\n+        return profiles\n \n     def browser_language(self):\n         language = "en"\n@@ -308,9 +255,8 @@ def __call__(self):\n                 context,\n                 site_id,\n                 title=form.get("title", ""),\n-                profile_id=form.get("profile_id", _DEFAULT_PROFILE),\n-                extension_ids=form.get("extension_ids", ()),\n-                setup_content=form.get("setup_content", False),\n+                profile_id=_DEFAULT_PROFILE,\n+                extension_ids=self.default_extension_profiles,\n                 default_language=form.get("default_language", "en"),\n                 portal_timezone=form.get("portal_timezone", "UTC"),\n             )\ndiff --git a/Products/CMFPlone/browser/admin.zcml b/Products/CMFPlone/browser/admin.zcml\nindex 8d6696c408..04af682344 100644\n--- a/Products/CMFPlone/browser/admin.zcml\n+++ b/Products/CMFPlone/browser/admin.zcml\n@@ -1,6 +1,7 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n     >\n \n   <browser:view\n@@ -10,21 +11,34 @@\n       permission="zope.Public"\n       />\n \n-  <browser:page\n-      name="plone-addsite"\n-      for="OFS.interfaces.IApplication"\n-      class=".admin.AddPloneSite"\n-      template="templates/plone-addsite.pt"\n-      permission="zope2.ViewManagementScreens"\n-      />\n+  <configure zcml:condition="not-installed plone.distribution">\n+    <adapter factory=".admin.AppTraverser" />\n \n-  <browser:page\n-      name="plone-addsite"\n-      for="OFS.Folder.Folder"\n-      class=".admin.AddPloneSite"\n-      template="templates/plone-addsite.pt"\n-      permission="zope2.ViewManagementScreens"\n-      />\n+    <browser:page\n+        name="plone-overview"\n+        for="OFS.interfaces.IApplication"\n+        class=".admin.Overview"\n+        template="templates/plone-overview.pt"\n+        permission="zope.Public"\n+        />\n+\n+    <browser:page\n+        name="plone-addsite"\n+        for="OFS.interfaces.IApplication"\n+        class=".admin.AddPloneSite"\n+        template="templates/plone-addsite.pt"\n+        permission="zope2.ViewManagementScreens"\n+        />\n+\n+    <browser:page\n+        name="plone-addsite"\n+        for="OFS.Folder.Folder"\n+        class=".admin.AddPloneSite"\n+        template="templates/plone-addsite.pt"\n+        permission="zope2.ViewManagementScreens"\n+        />\n+\n+  </configure>\n \n   <browser:page\n       name="plone-upgrade"\n@@ -34,14 +48,6 @@\n       permission="cmf.ManagePortal"\n       />\n \n-  <browser:page\n-      name="plone-overview"\n-      for="OFS.interfaces.IApplication"\n-      class=".admin.Overview"\n-      template="templates/plone-overview.pt"\n-      permission="zope.Public"\n-      />\n-\n   <browser:page\n       name="plone-root-login"\n       for="OFS.interfaces.IApplication"\n@@ -56,8 +62,6 @@\n       permission="zope.Public"\n       />\n \n-  <adapter factory=".admin.AppTraverser" />\n-\n   <browser:resource\n       name="plone-admin-ui.css"\n       file="static/plone-admin-ui.css"\ndiff --git a/Products/CMFPlone/browser/templates/plone-addsite.pt b/Products/CMFPlone/browser/templates/plone-addsite.pt\nindex c4ff0769e1..e3c10222e0 100644\n--- a/Products/CMFPlone/browser/templates/plone-addsite.pt\n+++ b/Products/CMFPlone/browser/templates/plone-addsite.pt\n@@ -31,12 +31,7 @@\n     </header>\n     <form action="#"\n     method="post"\n-    tal:attributes="action string:${context/absolute_url}/@@plone-addsite"\n-    tal:define="profiles view/profiles;\n-                base_profiles profiles/base;\n-                default_profile profiles/default;\n-                extension_profiles profiles/extensions;\n-                advanced request/advanced|nothing;">\n+    tal:attributes="action string:${context/absolute_url}/@@plone-addsite">\n       <article class="row">\n         <div class="col-md-12">\n           <h1><span i18n:translate="">Create a Plone site</span></h1>\n@@ -120,92 +115,6 @@\n             </div>\n           </div>\n \n-          <div class="col-md-12 mb-3"\n-               tal:condition="advanced">\n-            <div class="form-check">\n-              <input class="form-check-input"\n-                    id="example-content"\n-                    type="checkbox"\n-                    name="setup_content:boolean"\n-                    checked="checked" />\n-              <label class="form-check-label"\n-                    for="example-content"\n-                    i18n:translate="">Example content</label>\n-              <div class="form-text" i18n:translate="">\n-                Should the default example content be added to the site?\n-              </div>\n-            </div>\n-          </div>\n-\n-          <input tal:condition="not:advanced"\n-                  type="hidden" name="setup_content:boolean" value="true" />\n-\n-          <div class="col-md-12"\n-               tal:condition="python: len(base_profiles) > 1">\n-            <div class="mb-3">\n-              <p class="lead" i18n:translate="">Base configuration</p>\n-\n-              <div tal:repeat="info base_profiles"\n-                  class="form-check mb-3">\n-                <input type="radio"\n-                      name="profile_id:string"\n-                      value="profile"\n-                      class="form-check-input"\n-                      tal:attributes="id info/id;\n-                                      value info/id;\n-                                      checked python: default_profile==info[\'id\'] and \'checked\' or nothing" />\n-                <label class="form-check-label" tal:attributes="for info/id">${info/title}</label>\n-                <div class="form-text" tal:content="info/description">${info/description}</div>\n-              </div>\n-\n-              <div class="form-text" i18n:translate="">\n-                You normally don\'t need to change anything here unless you have specific reasons and know what you are doing.\n-              </div>\n-\n-            </div>\n-          </div>\n-\n-\n-          <div class="col-md-12 mt-3"\n-               tal:define="has_selected python:[p for p in extension_profiles if p.get(\'selected\', None)]"\n-               tal:condition="python: extension_profiles or advanced"\n-               tal:omit-tag="python: has_selected and not advanced">\n-            <tal:block condition="python: advanced">\n-              <h2 i18n:translate="">Add-ons</h2>\n-\n-              <div class="lead"\n-                   i18n:translate="" >\n-                Select any add-ons you want to activate immediately.\n-                You can also activate add-ons after the site has been created using the Add-ons control panel.\n-              </div>\n-            </tal:block>\n-\n-            <tal:loop tal:repeat="info extension_profiles">\n-              <tal:set tal:define="selected info/selected|nothing">\n-                <tal:normal tal:condition="python: not selected or advanced">\n-                  <div class="form-check mb-3"\n-                      tal:condition="python: advanced">\n-                    <input type="checkbox"\n-                          name="extension_ids:list"\n-                          value="${info/id}"\n-                          id="${info/id}"\n-                          class="form-check-input"\n-                          tal:attributes="checked info/selected|nothing;" />\n-                    <label class="form-check-label" for="${info/id}" >${info/title}</label>\n-                    <div class="form-text"\n-                        tal:condition="python: advanced and info[\'description\']">\n-                      ${info/description}\n-                    </div>\n-                  </div>\n-                </tal:normal>\n-                <tal:hidden tal:condition="python: selected and not advanced">\n-                  <input type="hidden"\n-                        name="extension_ids:list"\n-                        value="${info/id}" />\n-                </tal:hidden>\n-              </tal:set>\n-            </tal:loop>\n-          </div>\n           <div class="col-md-12 mt-3">\n             <input type="hidden" name="form.submitted:boolean" value="True" />\n             <button class="btn btn-success mt-3" type="submit" name="submit" i18n:translate="">Create Plone Site</button>\ndiff --git a/Products/CMFPlone/browser/templates/plone-overview.pt b/Products/CMFPlone/browser/templates/plone-overview.pt\nindex 035f0b4856..42217e8180 100644\n--- a/Products/CMFPlone/browser/templates/plone-overview.pt\n+++ b/Products/CMFPlone/browser/templates/plone-overview.pt\n@@ -87,24 +87,9 @@\n                 <input type="hidden" name="site_id" value="Plone${site_number}" />\n                 <button type="submit"\n                         class="btn btn-${python:\'success\' if sites else \'primary\'}"\n-                        i18n:translate="">Create a new Plone site</button>\n-                <a class="btn btn-info"\n-                    i18n:translate=""\n-                    tal:condition="view/has_volto"\n-                    href="${action}?site_id=Plone${site_number}&amp;classic=1"\n-                    >Create Classic UI Plone site</a>\n-                <a class="btn btn-secondary"\n-                    i18n:translate=""\n-                    href="${action}?site_id=Plone${site_number}&amp;advanced=1"\n-                    >Advanced</a>\n+                        i18n:translate="">Create Classic UI Plone site</button>\n             </form>\n             <br/>\n-            <p i18n:translate="help_create_plone_site_buttons_1">\n-                Starting with Plone 6, \'Create a new Plone site\' applies a\n-                profile and creates default content for the new React based\n-                default frontend Volto. You are however required to set up and run\n-                an additional frontend service to use this setup.\n-            </p>\n             <p i18n:translate="help_create_plone_site_buttons_2">\n                 The \'Create Classic UI Plone site\' button creates a Plone site configured\n                 for HTML based output, as was already supported by previous Plone versions.\n@@ -117,6 +102,11 @@\n                 these frontends and possible upgrade paths from older Plone versions\n                 to Plone 6.\n             </p>\n+            <p i18n:translate="help_create_plone_site_buttons_3">\n+                Starting with Plone 6.1, default content is not loaded into the site.\n+                If you want to load the default content, you should install the <code>plone.classicui</code> package.\n+                If you see this text, that means you have not installed that package yet.\n+            </p>\n         </div>\n     </article>\n \ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\nindex f0b6c31daa..8598ada339 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_search.py\n@@ -29,7 +29,9 @@ def setUp(self):\n \n     def test_search_control_panel_link(self):\n         self.browser.open("%s/@@overview-controlpanel" % self.portal_url)\n-        self.browser.getLink("Search").click()\n+        # The first "Search" link actually points to "Advanced Search"...\n+        # self.browser.getLink("Search").click()\n+        self.browser.getLink(url=f"{self.portal_url}/@@search-controlpanel").click()\n \n     def test_search_control_panel_backlink(self):\n         self.browser.open("%s/@@search-controlpanel" % self.portal_url)\ndiff --git a/Products/CMFPlone/factory.py b/Products/CMFPlone/factory.py\nindex 5506b7bb02..4b652b0e5c 100644\n--- a/Products/CMFPlone/factory.py\n+++ b/Products/CMFPlone/factory.py\n@@ -10,6 +10,8 @@\n from zope.interface import implementer\n from zope.lifecycleevent import ObjectCreatedEvent\n \n+import warnings\n+\n \n _TOOL_ID = "portal_setup"\n _DEFAULT_PROFILE = "Products.CMFPlone:plone"\n@@ -130,14 +132,53 @@ def addPloneSite(\n     title="Plone site",\n     description="",\n     profile_id=_DEFAULT_PROFILE,\n-    content_profile_id=None,\n     snapshot=False,\n+    content_profile_id=None,\n     extension_ids=(),\n-    setup_content=True,\n+    setup_content=None,\n     default_language="en",\n     portal_timezone="UTC",\n+    distribution_name=None,\n+    **kwargs,\n ):\n     """Add a PloneSite to the context."""\n+    if distribution_name:\n+        from plone.distribution.api import site as site_api\n+\n+        # Pass all arguments and keyword arguments in the answers,\n+        # But the \'distribution_name\' is not needed there.\n+        answers = {\n+            "site_id": site_id,\n+            "title": title,\n+            "description": description,\n+            "profile_id": profile_id,\n+            "snapshot": snapshot,\n+            "content_profile_id": content_profile_id,\n+            "extension_ids": extension_ids,\n+            "setup_content": setup_content,\n+            "default_language": default_language,\n+            "portal_timezone": portal_timezone,\n+        }\n+        answers.update(kwargs)\n+        site = site_api._create_site(\n+            context=context, distribution_name=distribution_name, answers=answers\n+        )\n+        setSite(site)\n+        return site\n+\n+    if content_profile_id is not None:\n+        warnings.warn(\n+            "addPloneSite ignores the content_profile_id keyword argument "\n+            "since Plone 6.1. In Plone 7 it will be removed.",\n+            DeprecationWarning,\n+        )\n+    if setup_content is not None:\n+        warnings.warn(\n+            "addPloneSite ignores the setup_content keyword argument "\n+            "since Plone 6.1, treating it as always False. "\n+            "In Plone 7 it will be removed.",\n+            DeprecationWarning,\n+        )\n \n     site = PloneSite(site_id)\n     notify(ObjectCreatedEvent(site))\n@@ -169,24 +210,6 @@ def addPloneSite(\n         reg["plone.available_languages"] = [default_language]\n         reg["plone.site_title"] = title\n \n-        # Install default content types profile if user do not select "example content"\n-        # during site creation.\n-        if setup_content:\n-            if content_profile_id:\n-                content_profiles = [content_profile_id]\n-            elif "plone.volto:default" in extension_ids:\n-                content_profiles = [\n-                    _TYPES_PROFILE,\n-                    "plone.volto:default-homepage",\n-                ]\n-            else:\n-                content_profiles = [_CONTENT_PROFILE]\n-        else:\n-            content_profiles = [_TYPES_PROFILE]\n-\n-        for profile_id in content_profiles:\n-            setup_tool.runAllImportStepsFromProfile(f"profile-{profile_id}")\n-\n         props = dict(\n             title=title,\n             description=description,\ndiff --git a/Products/CMFPlone/patches/__init__.py b/Products/CMFPlone/patches/__init__.py\nindex e8234dc395..a931d15b38 100644\n--- a/Products/CMFPlone/patches/__init__.py\n+++ b/Products/CMFPlone/patches/__init__.py\n@@ -1,7 +1,3 @@\n-# FIXME: This no longer works with the new ZMI\n-# from . import addzmiplonesite          # Add an explicit link to add a new Plone\n-# site to the ZMI for faster access\n-\n from . import addzmisecuritywarning  # Add a warning to the ZMI security tab\n from . import csrf  # Protects most important methods from\n from . import dateIndexPatch  # Avoid OverflowErrors in Date*Indexes\ndiff --git a/Products/CMFPlone/patches/addzmiplonesite.py b/Products/CMFPlone/patches/addzmiplonesite.py\ndeleted file mode 100644\nindex a772ab71cd..0000000000\n--- a/Products/CMFPlone/patches/addzmiplonesite.py\n+++ /dev/null\n@@ -1,42 +0,0 @@\n-from OFS.ObjectManager import ObjectManager\n-\n-\n-# FIXME: This no longer works with the new ZMI\n-\n-ADD_PLONE_SITE_HTML = """\n-<dtml-if "_.len(this().getPhysicalPath()) == 1 or this().meta_type == \'Folder\' and \'PloneSite\' not in [o.__class__.__name__ for o in this().aq_chain]">\n-  <!-- Add Plone site action-->\n-  <form method="get"\n-        action="&dtml-URL1;/@@plone-addsite"\n-        style="text-align: right; margin-top:0.5em; margin-bottom:0em;"\n-        target="_top">\n-    <input type="hidden" name="site_id" value="Plone" />\n-    <input type="submit" value="Add Plone Site" />\n-    <label><input type="checkbox" name="advanced">advanced</label>\n-  </form>\n-</dtml-if>\n-<dtml-if "this().meta_type == \'Plone Site\'">\n-  <!-- Warn if outdated -->\n-  <dtml-if "this().portal_migration.needUpgrading()">\n-    <div style="background: url(/misc_/PageTemplates/exclamation.gif) top left no-repeat;\n-                padding: 0 0 0 1.2em; font-weight: bold; font-size: 125%;\n-                margin-top: 1em;">\n-      The site configuration is outdated and needs to be upgraded.\n-      <a href="&dtml-URL1;/@@plone-upgrade" title="Go to the upgrade page">\n-        Please continue with the upgrade.\n-      </a>\n-    </div>\n-  </dtml-if>\n-</dtml-if>\n-"""\n-\n-main = ObjectManager.manage_main\n-orig = main.read()\n-pos = orig.find("<!-- Add object widget -->")\n-\n-# Add in our button html at the right position\n-new = orig[:pos] + ADD_PLONE_SITE_HTML + orig[pos:]\n-\n-# Modify the manage_main\n-main.edited_source = new\n-main._v_cooked = main.cook()\ndiff --git a/Products/CMFPlone/testing.py b/Products/CMFPlone/testing.py\nindex 4b178f00b0..63f65ce3b9 100644\n--- a/Products/CMFPlone/testing.py\n+++ b/Products/CMFPlone/testing.py\n@@ -89,4 +89,29 @@ def tearDownPloneSite(self, portal):\n     name="CMFPloneLayer:Acceptance",\n )\n \n+\n+class ProductsCMFPloneDistributionsLayer(ProductsCMFPloneLayer):\n+    defaultBases = (PRODUCTS_CMFPLONE_FIXTURE,)\n+\n+    def setUpZope(self, app, configurationContext):\n+        import Products.CMFPlone\n+\n+        xmlconfig.file(\n+            "configure-distributions.zcml",\n+            Products.CMFPlone.tests,\n+            context=configurationContext,\n+        )\n+\n+    def setUpPloneSite(self, portal):\n+        # ProductsCMFPloneLayer already does enough setup.\n+        pass\n+\n+\n+PRODUCTS_CMFPLONE_DISTRIBUTIONS_FIXTURE = ProductsCMFPloneDistributionsLayer()\n+\n+PRODUCTS_CMFPLONE_DISTRIBUTIONS_INTEGRATION_TESTING = IntegrationTesting(\n+    bases=(PRODUCTS_CMFPLONE_DISTRIBUTIONS_FIXTURE,),\n+    name="CMFPloneLayer:DistributionsIntegration",\n+)\n+\n optionflags = doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE\ndiff --git a/Products/CMFPlone/tests/configure-distributions.zcml b/Products/CMFPlone/tests/configure-distributions.zcml\nnew file mode 100644\nindex 0000000000..eb1428852e\n--- /dev/null\n+++ b/Products/CMFPlone/tests/configure-distributions.zcml\n@@ -0,0 +1,18 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone"\n+    >\n+\n+  <configure zcml:condition="installed plone.distribution">\n+    <include package="plone.distribution" />\n+    <plone:distribution\n+        name="testdistro"\n+        title="Plone Site"\n+        headless="false"\n+        post_handler="plone.distribution.handler.post_handler"\n+        />\n+  </configure>\n+\n+</configure>\ndiff --git a/Products/CMFPlone/tests/configure.zcml b/Products/CMFPlone/tests/configure.zcml\nindex bd6ca7c2db..29f6057348 100644\n--- a/Products/CMFPlone/tests/configure.zcml\n+++ b/Products/CMFPlone/tests/configure.zcml\n@@ -1,6 +1,8 @@\n <configure\n     xmlns="http://namespaces.zope.org/zope"\n     xmlns:browser="http://namespaces.zope.org/browser"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n     i18n_domain="plone"\n     >\n \ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 57d7959e3c..200c18217c 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -1,4 +1,6 @@\n from Acquisition import aq_base\n+from importlib.metadata import distribution\n+from importlib.metadata import PackageNotFoundError\n from plone.base.interfaces import IFilterSchema\n from plone.base.interfaces import INavigationSchema\n from plone.base.interfaces import ISearchSchema\n@@ -34,6 +36,15 @@\n from zope.interface.interfaces import IComponentRegistry\n from zope.location.interfaces import ISite\n \n+import unittest\n+\n+\n+try:\n+    distribution("plone.distribution")\n+    HAS_DISTRIBUTION = True\n+except PackageNotFoundError:\n+    HAS_DISTRIBUTION = False\n+\n \n class TestPortalCreation(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n@@ -920,6 +931,10 @@ def testManagementPageCharset(self):\n         self.assertEqual(manage_charset, "utf-8")\n \n \n+@unittest.skipIf(\n+    HAS_DISTRIBUTION,\n+    "@@plone-addsite is not available because plone.distribution is used.",\n+)\n class TestAddPloneSite(PloneTestCase.PloneTestCase):\n     def afterSetUp(self):\n         self.request = self.app.REQUEST\n@@ -930,7 +945,6 @@ def addsite(self):\n         form = self.request.form\n         form["form.submitted"] = 1\n         form["site_id"] = "plonesite1"\n-        form["setup_content"] = 1\n         self.request["_authenticator"] = createToken()\n         addsite = self.app.restrictedTraverse("@@plone-addsite")\n         addsite()\n@@ -946,6 +960,6 @@ def test_addsite_en_as_nl(self):\n         # because translations are not available in the tests.\n         self.assertIn("Learn more about Plone", plonesite.text.raw)\n \n-        # XXX maybe it is better to reset the sire in the @@plone-addsite view\n+        # XXX maybe it is better to reset the site in the @@plone-addsite view\n         # or somewhere else?\n         setSite(None)\ndiff --git a/Products/CMFPlone/tests/test_factory.py b/Products/CMFPlone/tests/test_factory.py\nindex b876f730eb..435c2f5a1d 100644\n--- a/Products/CMFPlone/tests/test_factory.py\n+++ b/Products/CMFPlone/tests/test_factory.py\n@@ -1,7 +1,11 @@\n+from importlib.metadata import distribution\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.registry.interfaces import IRegistry\n from Products.CMFPlone.factory import addPloneSite\n from Products.CMFPlone.testing import PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n+from Products.CMFPlone.testing import (\n+    PRODUCTS_CMFPLONE_DISTRIBUTIONS_INTEGRATION_TESTING,\n+)\n from Products.CMFPlone.utils import get_installer\n from zope.component import getUtility\n from zope.component import queryUtility\n@@ -9,6 +13,13 @@\n import unittest\n \n \n+try:\n+    distribution("plone.distribution")\n+    HAS_DISTRIBUTION = True\n+except PackageNotFoundError:\n+    HAS_DISTRIBUTION = False\n+\n+\n class TestFactoryPloneSite(unittest.TestCase):\n     layer = PRODUCTS_CMFPLONE_INTEGRATION_TESTING\n \n@@ -18,7 +29,7 @@ def setUp(self):\n \n     def testPlonesiteWithUnicodeTitle(self):\n         TITLE = "Plon\xc3\xa9"\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE, setup_content=False)\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE)\n         ploneSiteTitleProperty = ploneSite.getProperty("title")\n         # CMF stores title as string only so Plone should keep the same track\n         self.assertTrue(isinstance(ploneSiteTitleProperty, str))\n@@ -29,7 +40,7 @@ def testPlonesiteWithUnicodeTitle(self):\n \n     def testPlonesiteWithoutUnicodeTitle(self):\n         TITLE = "Plone"\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE, setup_content=False)\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title=TITLE)\n         ploneSiteTitleProperty = ploneSite.getProperty("title")\n         # CMF stores title as string only so Plone should keep the same track\n         self.assertTrue(isinstance(ploneSiteTitleProperty, str))\n@@ -38,21 +49,57 @@ def testPlonesiteWithoutUnicodeTitle(self):\n         self.assertTrue(isinstance(ploneSiteTitle, str))\n         self.assertEqual(ploneSiteTitle, TITLE)\n \n-    def test_site_creation_without_content_but_with_dexterity(self):\n-        """Test site creation without example content have dexterity installed."""\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo", setup_content=False)\n+    def test_site_creation_has_no_dexterity(self):\n+        """Test site creation does not even have dexterity installed.\n+\n+        If you want it, you need to pass more extension_ids,\n+        like the plone-addsite view does.\n+        """\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo")\n         qi = get_installer(ploneSite, self.request)\n-        self.assertTrue(qi.is_product_installed("plone.app.dexterity"))\n+        self.assertFalse(qi.is_product_installed("plone.app.dexterity"))\n \n-    def test_site_creation_without_content_but_with_content_types(self):\n-        """Test site creation without example content have content types."""\n-        addPloneSite(self.app, "ploneFoo", title="Foo", setup_content=False)\n+    def test_site_creation_has_no_content_types(self):\n+        """Test site creation has no content types.\n+\n+        If you want them, you need to pass more extension_ids,\n+        like the plone-addsite view does.\n+        """\n+        addPloneSite(self.app, "ploneFoo", title="Foo")\n         # Folder\n         fti = queryUtility(IDexterityFTI, name="Folder")\n+        self.assertIsNone(fti)\n+        # For good measure we check that there is at least on FTI.\n+        fti = queryUtility(IDexterityFTI, name="Plone Site")\n         self.assertIsNotNone(fti)\n \n     def test_site_creation_title_is_set_in_registry(self):\n         """Plone site title should be stored in registry"""\n-        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo", setup_content=False)\n+        ploneSite = addPloneSite(self.app, "ploneFoo", title="Foo")\n         registry = getUtility(IRegistry, context=ploneSite)\n         self.assertEqual(registry["plone.site_title"], "Foo")\n+\n+\n+class TestFactoryDistributionPloneSite(unittest.TestCase):\n+    layer = PRODUCTS_CMFPLONE_DISTRIBUTIONS_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.app = self.layer["app"]\n+        self.request = self.layer["request"]\n+\n+    @unittest.skipIf(\n+        not HAS_DISTRIBUTION,\n+        "Passing a distribution_name needs plone.distribution.",\n+    )\n+    def test_site_creation_distribution(self):\n+        """Create a Plone Site using a distribution"""\n+        ploneSite = addPloneSite(\n+            self.app,\n+            "ploneFoo",\n+            title="Foo",\n+            distribution_name="testdistro",\n+            default_language="nl",\n+        )\n+        self.assertEqual(ploneSite.getId(), "ploneFoo")\n+        self.assertEqual(ploneSite.title, "Foo")\n+        self.assertEqual(ploneSite.Language(), "nl")\ndiff --git a/news/3961.breaking.1 b/news/3961.breaking.1\nnew file mode 100644\nindex 0000000000..0bd48e1547\n--- /dev/null\n+++ b/news/3961.breaking.1\n@@ -0,0 +1,2 @@\n+Only register the add site form and root Zope overview if `plone.distribution` is not available.\n+[maurits]\ndiff --git a/news/3961.breaking.2 b/news/3961.breaking.2\nnew file mode 100644\nindex 0000000000..6b21bc0d27\n--- /dev/null\n+++ b/news/3961.breaking.2\n@@ -0,0 +1,5 @@\n+Remove advanced options from Add Plone Site form.\n+If you need more options, you should add a Plone Distribution to your packages.\n+The main ones are `plone.volto` and `plone.classicui`.\n+We now only create a basic Plone site without default example content.\n+[maurits]\ndiff --git a/news/3961.breaking.3 b/news/3961.breaking.3\nnew file mode 100644\nindex 0000000000..38030bb3b4\n--- /dev/null\n+++ b/news/3961.breaking.3\n@@ -0,0 +1,4 @@\n+`factory.addPloneSite`: remove `setup_content` and `content_profile_id` keyword arguments.\n+We no longer load default content. Use a Plone Distribution if you need this.\n+Or pass an extra profile id in the `extension_ids` keyword argument.\n+[maurits]\ndiff --git a/news/3961.feature.1 b/news/3961.feature.1\nnew file mode 100644\nindex 0000000000..da7c79fa52\n--- /dev/null\n+++ b/news/3961.feature.1\n@@ -0,0 +1,3 @@\n+You can pass a `distribution_name` to `factory.addPloneSite`.\n+We then pass all other arguments and keyword arguments to the `plone.distribution` site api.\n+[maurits]\n'

