Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2024-05-31T02:14:43+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/72170fac977624abd57aad0aaeb3b7c071dfcd02

Prepare for pa.discussion core addon

Files changed:
A news/57.bugfix
M Products/CMFDiffTool/tests/testChangeSet.py

b'diff --git a/Products/CMFDiffTool/tests/testChangeSet.py b/Products/CMFDiffTool/tests/testChangeSet.py\nindex 542514b..347d70b 100644\n--- a/Products/CMFDiffTool/tests/testChangeSet.py\n+++ b/Products/CMFDiffTool/tests/testChangeSet.py\n@@ -6,6 +6,7 @@\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.base.utils import get_installer\n from plone.base.utils import safe_hasattr\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDiffTool.ChangeSet import BaseChangeSet\n@@ -26,6 +27,10 @@ def setUp(self):\n         # ChangeSet needs an acquisition wrapper\n         self.cs = cs.__of__(self.portal)\n         setRoles(self.portal, TEST_USER_ID, ["Contributor"])\n+        self.expected_diff_len = 13\n+        installer = get_installer(self.portal)\n+        if installer.is_product_installed("plone.app.discussion"):\n+            self.expected_diff_len += 1\n \n     def testInterface(self):\n         """Ensure that tool instances implement the portal_diff interface"""\n@@ -70,7 +75,7 @@ def testChangeSetFolderUnchanged(self):\n         self.setupTestFolders()\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         sub_cs = self.cs.getSubDiffs()\n         self.assertEqual(len(sub_cs), 3)\n@@ -87,7 +92,7 @@ def testChangeSetFolderChanged(self):\n         self.folder.copy_of_folder1.setTitle("My New Title")\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertFalse(diffs[0].same)\n         self.assertEqual(\n             diffs[0].ndiff(), "- My Folder Title%s+ My New Title" % linesep\n@@ -108,7 +113,7 @@ def testChangeSetFolderDocChanged(self):\n         self.folder.copy_of_folder1.doc1.setTitle("My New Title")\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertTrue(diffs[1].same)\n         self.assertFalse(self.cs._added)\n@@ -133,7 +138,7 @@ def testChangeSetFolderDocRemoved(self):\n         self.folder.copy_of_folder1.manage_delObjects("doc1")\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertTrue(diffs[1].same)\n         sub_cs = self.cs.getSubDiffs()\n@@ -155,7 +160,7 @@ def testChangeSetFolderDocAdded(self):\n         )\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertTrue(diffs[1].same)\n         sub_cs = self.cs.getSubDiffs()\n@@ -180,7 +185,7 @@ def testChangeSetFolderReordered(self):\n             return\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertFalse(self.cs._added)\n         self.assertFalse(self.cs._removed)\n@@ -217,7 +222,7 @@ def testChangeSetFolderComplex(self):\n \n         self.cs.computeDiff(self.folder["folder1"], self.folder["copy_of_folder1"])\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertFalse(diffs[0].same)\n         self.assertEqual(\n             diffs[0].ndiff(), "- My Folder Title%s+ My New Title" % linesep\ndiff --git a/news/57.bugfix b/news/57.bugfix\nnew file mode 100644\nindex 0000000..f0a216a\n--- /dev/null\n+++ b/news/57.bugfix\n@@ -0,0 +1 @@\n+Fix tests to run with plone.app.discussion as core add-on. [@jensens]\n'

Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2024-05-31T09:17:46+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/ee216d11c3e407fe26d70a7794e4b047b84d7bef

Merge pull request #57 from plone/pa-discussion-core-addon-2

Prepare for pa.discussion core addon

Files changed:
A news/57.bugfix
M Products/CMFDiffTool/tests/testChangeSet.py

b'diff --git a/Products/CMFDiffTool/tests/testChangeSet.py b/Products/CMFDiffTool/tests/testChangeSet.py\nindex 542514b..347d70b 100644\n--- a/Products/CMFDiffTool/tests/testChangeSet.py\n+++ b/Products/CMFDiffTool/tests/testChangeSet.py\n@@ -6,6 +6,7 @@\n from plone.app.contenttypes.testing import PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n+from plone.base.utils import get_installer\n from plone.base.utils import safe_hasattr\n from Products.CMFCore.utils import getToolByName\n from Products.CMFDiffTool.ChangeSet import BaseChangeSet\n@@ -26,6 +27,10 @@ def setUp(self):\n         # ChangeSet needs an acquisition wrapper\n         self.cs = cs.__of__(self.portal)\n         setRoles(self.portal, TEST_USER_ID, ["Contributor"])\n+        self.expected_diff_len = 13\n+        installer = get_installer(self.portal)\n+        if installer.is_product_installed("plone.app.discussion"):\n+            self.expected_diff_len += 1\n \n     def testInterface(self):\n         """Ensure that tool instances implement the portal_diff interface"""\n@@ -70,7 +75,7 @@ def testChangeSetFolderUnchanged(self):\n         self.setupTestFolders()\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         sub_cs = self.cs.getSubDiffs()\n         self.assertEqual(len(sub_cs), 3)\n@@ -87,7 +92,7 @@ def testChangeSetFolderChanged(self):\n         self.folder.copy_of_folder1.setTitle("My New Title")\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertFalse(diffs[0].same)\n         self.assertEqual(\n             diffs[0].ndiff(), "- My Folder Title%s+ My New Title" % linesep\n@@ -108,7 +113,7 @@ def testChangeSetFolderDocChanged(self):\n         self.folder.copy_of_folder1.doc1.setTitle("My New Title")\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertTrue(diffs[1].same)\n         self.assertFalse(self.cs._added)\n@@ -133,7 +138,7 @@ def testChangeSetFolderDocRemoved(self):\n         self.folder.copy_of_folder1.manage_delObjects("doc1")\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertTrue(diffs[1].same)\n         sub_cs = self.cs.getSubDiffs()\n@@ -155,7 +160,7 @@ def testChangeSetFolderDocAdded(self):\n         )\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertTrue(diffs[1].same)\n         sub_cs = self.cs.getSubDiffs()\n@@ -180,7 +185,7 @@ def testChangeSetFolderReordered(self):\n             return\n         self.cs.computeDiff(self.folder.folder1, self.folder.copy_of_folder1)\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertTrue(diffs[0].same)\n         self.assertFalse(self.cs._added)\n         self.assertFalse(self.cs._removed)\n@@ -217,7 +222,7 @@ def testChangeSetFolderComplex(self):\n \n         self.cs.computeDiff(self.folder["folder1"], self.folder["copy_of_folder1"])\n         diffs = self.cs.getDiffs()\n-        self.assertEqual(len(diffs), 14)\n+        self.assertEqual(len(diffs), self.expected_diff_len)\n         self.assertFalse(diffs[0].same)\n         self.assertEqual(\n             diffs[0].ndiff(), "- My Folder Title%s+ My New Title" % linesep\ndiff --git a/news/57.bugfix b/news/57.bugfix\nnew file mode 100644\nindex 0000000..f0a216a\n--- /dev/null\n+++ b/news/57.bugfix\n@@ -0,0 +1 @@\n+Fix tests to run with plone.app.discussion as core add-on. [@jensens]\n'

