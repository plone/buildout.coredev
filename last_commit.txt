Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2021-05-10T09:37:57+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/ce5baa4123c62b31b28e6ad3a9974c12d7c81f1b

Fix rst syntax

Files changed:
M src/plone/recipe/zope2instance/tests/wsgi.rst

b'diff --git a/src/plone/recipe/zope2instance/tests/wsgi.rst b/src/plone/recipe/zope2instance/tests/wsgi.rst\nindex 5e02ca2..93a3229 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.rst\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.rst\n@@ -78,7 +78,7 @@ We should have an instance part, with a basic zope.conf::\n     </zodb_db>\n     python-check-interval 1000\n \n-The buildout has also created an INI file containing the waitress configuration:\n+The buildout has also created an INI file containing the waitress configuration::\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -172,7 +172,7 @@ The buildout has also created an INI file containing the waitress configuration:\n     format = %(message)s\n \n Custom WSGI options\n-==================\n+===================\n \n Let\'s create another buildout configuring a custom port and a custom number of workers::\n \n@@ -203,7 +203,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file:\n+The buildout has updated our INI file::\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -245,7 +245,7 @@ Custom logging\n ==============\n \n We want file based logging, i.e. event.log and access.log (ZServers Z2.log).\n-Let\'s create a buildout:\n+Let\'s create a buildout::\n \n     >>> write(\'buildout.cfg\',\n     ... \'\'\'\n@@ -275,7 +275,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file:\n+The buildout has updated our INI file::\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -324,7 +324,7 @@ The buildout has updated our INI file:\n     formatter = generic\n     ...\n \n-Next we want to disable access logging (but keep an event log file):\n+Next we want to disable access logging (but keep an event log file)::\n \n     >>> write(\'buildout.cfg\',\n     ... \'\'\'\n@@ -351,7 +351,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file:\n+The buildout has updated our INI file::\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -365,7 +365,7 @@ The buildout has updated our INI file:\n         zope\n     ...\n \n-Now we also want to disable event logging:\n+Now we also want to disable event logging::\n \n     >>> write(\'buildout.cfg\',\n     ... \'\'\'\n@@ -393,7 +393,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file:\n+The buildout has updated our INI file::\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2021-05-10T12:31:20+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/c0229d6d6eccc4d7c4e6ad5617736b2078632224

Allow to customize the WSGI pipeline

Fixes #116

Files changed:
A news/116.feature
M README.rst
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.rst

b'diff --git a/README.rst b/README.rst\nindex 592523c..f16ce93 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -623,6 +623,19 @@ webdav-force-connection-close\n   Valid options are off and on. Defaults to off.\n   Used for ZServer only, not WSGI.\n \n+pipeline\n+   The main application pipeline served by the wsgi server.\n+   By default the pipeline is::\n+\n+     translogger\n+     egg:Zope#httpexceptions\n+     zope\n+\n+   The ``translogger`` line in the pipeline will be removed\n+   if ``z2-log`` is set to ``disabled`` or if it is not set\n+   and ``access-log`` is set to ``disabled`` (case insensitive).\n+   Used for WSGI only, not ZServer.\n+\n zlib-storage\n   Adds support for file compression on a file storage database. The\n   option accepts the values \'active\' (compress new records) or\ndiff --git a/news/116.feature b/news/116.feature\nnew file mode 100644\nindex 0000000..96e83a9\n--- /dev/null\n+++ b/news/116.feature\n@@ -0,0 +1 @@\n+Allow to customize the WSGI pipeline [ale-rt, jensens]\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex bf5802e..8adf7fd 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -118,6 +118,12 @@ def __init__(self, buildout, name, options):\n         elif wsgi_opt.lower() not in (\'on\', \'true\', \'1\'):\n             self.wsgi_config = wsgi_opt\n \n+        if \'pipeline\' not in options:\n+            options[\'pipeline\'] = \'\'\'\n+                translogger\n+                egg:Zope#httpexceptions\n+                zope\n+            \'\'\'.strip()\n         # Get Scripts\' attributes\n         return Scripts.__init__(self, buildout, name, options)\n \n@@ -776,36 +782,33 @@ def build_wsgi_ini(self):\n         else:\n             accesslog_args = accesslog_args.format(accesslog_name)\n \n-        pipeline = []\n+        pipeline = options[\'pipeline\'].split()\n         if accesslog_name.lower() == \'disable\':\n-            pipeline = [\'egg:Zope#httpexceptions\']\n             event_handlers = \'\'\n             accesslog_handler = \'NullHandler\'\n             accesslog_args = "()"\n-        else:\n-            pipeline = [\n-                \'translogger\', \'egg:Zope#httpexceptions\']\n+            pipeline = [line for line in pipeline if line != "translogger"]\n \n         sentry_dsn = options.get(\'sentry_dsn\', \'\')\n         if sentry_dsn:\n-            pipeline.append(\'sentry\')\n+            if "zope" in pipeline:\n+                pipeline.insert(pipeline.index("zope"), \'sentry\')\n+            else:\n+                pipeline.append(\'sentry\')\n         sentry_level = options.get(\'sentry_level\', \'INFO\')\n         sentry_event_level = options.get(\'sentry_event_level\', \'ERROR\')\n         sentry_ignore = options.get(\'sentry_ignore\', \'\')\n \n-        clear_untrusted_proxy_headers = options.get(\n-            \'clear-untrusted-proxy-headers\', \'false\'\n-        )\n+        if "zope" not in pipeline:\n+            pipeline.append(\'zope\')\n \n-        pipeline.append(\'zope\')\n-        pipeline = \'\\n    \'.join(pipeline)\n         wsgi_options = {\n             \'accesslog_args\': accesslog_args,\n             \'accesslog_handler\': accesslog_handler,\n             \'accesslog_kwargs\': accesslog_kwargs,\n             \'accesslog_level\': accesslog_level,\n             \'accesslog_name\': accesslog_name,\n-            \'clear_untrusted_proxy_headers\': clear_untrusted_proxy_headers,\n+            \'clear_untrusted_proxy_headers\': options.get(\'clear-untrusted-proxy-headers\', \'false\'),\n             \'event_handlers\': event_handlers,\n             \'eventlog_args\': eventlog_args,\n             \'eventlog_handler\': eventlog_handler,\n@@ -817,7 +820,7 @@ def build_wsgi_ini(self):\n             \'location\': options[\'location\'],\n             \'max_request_body_size\': options.get(\n                 \'max-request-body-size\', 1073741824),\n-            \'pipeline\': pipeline,\n+            \'pipeline\': \'\\n    \'.join(pipeline),\n             \'root_handlers\': root_handlers,\n             \'sentry_dsn\': sentry_dsn,\n             \'sentry_event_level\': sentry_event_level,\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.rst b/src/plone/recipe/zope2instance/tests/wsgi.rst\nindex 93a3229..192e08b 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.rst\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.rst\n@@ -78,7 +78,7 @@ We should have an instance part, with a basic zope.conf::\n     </zodb_db>\n     python-check-interval 1000\n \n-The buildout has also created an INI file containing the waitress configuration::\n+The buildout has also created an INI file containing the waitress configuration:\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -172,7 +172,7 @@ The buildout has also created an INI file containing the waitress configuration:\n     format = %(message)s\n \n Custom WSGI options\n-===================\n+==================\n \n Let\'s create another buildout configuring a custom port and a custom number of workers::\n \n@@ -203,7 +203,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file::\n+The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -245,7 +245,7 @@ Custom logging\n ==============\n \n We want file based logging, i.e. event.log and access.log (ZServers Z2.log).\n-Let\'s create a buildout::\n+Let\'s create a buildout:\n \n     >>> write(\'buildout.cfg\',\n     ... \'\'\'\n@@ -275,7 +275,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file::\n+The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -324,7 +324,7 @@ The buildout has updated our INI file::\n     formatter = generic\n     ...\n \n-Next we want to disable access logging (but keep an event log file)::\n+Next we want to disable access logging (but keep an event log file):\n \n     >>> write(\'buildout.cfg\',\n     ... \'\'\'\n@@ -351,7 +351,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file::\n+The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -365,7 +365,7 @@ The buildout has updated our INI file::\n         zope\n     ...\n \n-Now we also want to disable event logging::\n+Now we also want to disable event logging:\n \n     >>> write(\'buildout.cfg\',\n     ... \'\'\'\n@@ -393,7 +393,7 @@ Let\'s run it::\n     >>> WINDOWS or "Generated script" in output\n     True\n \n-The buildout has updated our INI file::\n+The buildout has updated our INI file:\n \n     >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n     >>> with open(os.path.join(instance, \'etc\', \'wsgi.ini\')) as fd:\n@@ -532,3 +532,48 @@ The buildout has updated our INI file:\n     <BLANKLINE>\n     [loggers]\n     ...\n+\n+Custom pipeline\n+===============\n+\n+The recipe can configure custom pipelines in the ``wsgi.ini``::\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... pipeline =\n+    ...     foo\n+    ...     bar\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    ...\n+\n+The buildout has updated our INI file and we can see that we have a custom pipeline::\n+\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        foo\n+        bar\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n+\n+\n+# END OF TEST\n\\ No newline at end of file\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2021-05-10T15:17:29+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/56d7d7d800395196069ad64458e2b28ebf16a603

Merge pull request #117 from plone/116-customize-the-pipeline

Allow to customize the WSGI pipeline

Files changed:
A news/116.feature
M README.rst
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/wsgi.rst

b'diff --git a/README.rst b/README.rst\nindex 592523c..f16ce93 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -623,6 +623,19 @@ webdav-force-connection-close\n   Valid options are off and on. Defaults to off.\n   Used for ZServer only, not WSGI.\n \n+pipeline\n+   The main application pipeline served by the wsgi server.\n+   By default the pipeline is::\n+\n+     translogger\n+     egg:Zope#httpexceptions\n+     zope\n+\n+   The ``translogger`` line in the pipeline will be removed\n+   if ``z2-log`` is set to ``disabled`` or if it is not set\n+   and ``access-log`` is set to ``disabled`` (case insensitive).\n+   Used for WSGI only, not ZServer.\n+\n zlib-storage\n   Adds support for file compression on a file storage database. The\n   option accepts the values \'active\' (compress new records) or\ndiff --git a/news/116.feature b/news/116.feature\nnew file mode 100644\nindex 0000000..96e83a9\n--- /dev/null\n+++ b/news/116.feature\n@@ -0,0 +1 @@\n+Allow to customize the WSGI pipeline [ale-rt, jensens]\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex bf5802e..8adf7fd 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -118,6 +118,12 @@ def __init__(self, buildout, name, options):\n         elif wsgi_opt.lower() not in (\'on\', \'true\', \'1\'):\n             self.wsgi_config = wsgi_opt\n \n+        if \'pipeline\' not in options:\n+            options[\'pipeline\'] = \'\'\'\n+                translogger\n+                egg:Zope#httpexceptions\n+                zope\n+            \'\'\'.strip()\n         # Get Scripts\' attributes\n         return Scripts.__init__(self, buildout, name, options)\n \n@@ -776,36 +782,33 @@ def build_wsgi_ini(self):\n         else:\n             accesslog_args = accesslog_args.format(accesslog_name)\n \n-        pipeline = []\n+        pipeline = options[\'pipeline\'].split()\n         if accesslog_name.lower() == \'disable\':\n-            pipeline = [\'egg:Zope#httpexceptions\']\n             event_handlers = \'\'\n             accesslog_handler = \'NullHandler\'\n             accesslog_args = "()"\n-        else:\n-            pipeline = [\n-                \'translogger\', \'egg:Zope#httpexceptions\']\n+            pipeline = [line for line in pipeline if line != "translogger"]\n \n         sentry_dsn = options.get(\'sentry_dsn\', \'\')\n         if sentry_dsn:\n-            pipeline.append(\'sentry\')\n+            if "zope" in pipeline:\n+                pipeline.insert(pipeline.index("zope"), \'sentry\')\n+            else:\n+                pipeline.append(\'sentry\')\n         sentry_level = options.get(\'sentry_level\', \'INFO\')\n         sentry_event_level = options.get(\'sentry_event_level\', \'ERROR\')\n         sentry_ignore = options.get(\'sentry_ignore\', \'\')\n \n-        clear_untrusted_proxy_headers = options.get(\n-            \'clear-untrusted-proxy-headers\', \'false\'\n-        )\n+        if "zope" not in pipeline:\n+            pipeline.append(\'zope\')\n \n-        pipeline.append(\'zope\')\n-        pipeline = \'\\n    \'.join(pipeline)\n         wsgi_options = {\n             \'accesslog_args\': accesslog_args,\n             \'accesslog_handler\': accesslog_handler,\n             \'accesslog_kwargs\': accesslog_kwargs,\n             \'accesslog_level\': accesslog_level,\n             \'accesslog_name\': accesslog_name,\n-            \'clear_untrusted_proxy_headers\': clear_untrusted_proxy_headers,\n+            \'clear_untrusted_proxy_headers\': options.get(\'clear-untrusted-proxy-headers\', \'false\'),\n             \'event_handlers\': event_handlers,\n             \'eventlog_args\': eventlog_args,\n             \'eventlog_handler\': eventlog_handler,\n@@ -817,7 +820,7 @@ def build_wsgi_ini(self):\n             \'location\': options[\'location\'],\n             \'max_request_body_size\': options.get(\n                 \'max-request-body-size\', 1073741824),\n-            \'pipeline\': pipeline,\n+            \'pipeline\': \'\\n    \'.join(pipeline),\n             \'root_handlers\': root_handlers,\n             \'sentry_dsn\': sentry_dsn,\n             \'sentry_event_level\': sentry_event_level,\ndiff --git a/src/plone/recipe/zope2instance/tests/wsgi.rst b/src/plone/recipe/zope2instance/tests/wsgi.rst\nindex 5e02ca2..192e08b 100644\n--- a/src/plone/recipe/zope2instance/tests/wsgi.rst\n+++ b/src/plone/recipe/zope2instance/tests/wsgi.rst\n@@ -532,3 +532,48 @@ The buildout has updated our INI file:\n     <BLANKLINE>\n     [loggers]\n     ...\n+\n+Custom pipeline\n+===============\n+\n+The recipe can configure custom pipelines in the ``wsgi.ini``::\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... pipeline =\n+    ...     foo\n+    ...     bar\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> print(system(join(\'bin\', \'buildout\'))),\n+    Uninstalling instance.\n+    Installing instance.\n+    ...\n+\n+The buildout has updated our INI file and we can see that we have a custom pipeline::\n+\n+    >>> wsgi_ini = open(os.path.join(instance, \'etc\', \'wsgi.ini\')).read()\n+    >>> print(wsgi_ini)\n+    [server:main]\n+    ...\n+    [pipeline:main]\n+    pipeline =\n+        foo\n+        bar\n+        zope\n+    <BLANKLINE>\n+    [loggers]\n+    ...\n+\n+\n+# END OF TEST\n\\ No newline at end of file\n'

