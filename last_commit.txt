Repository: plone.restapi


Branch: refs/heads/7.x.x
Date: 2021-09-22T00:45:55-03:00
Author: wesleybl (wesleybl) <wesleybl@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/39e4f20e41acad9fcd25cf850a42bbcdd47b7cd2

Fix random failures on test_services_types

plone.dexterity 2.10+ now uses the _p_mtime variable in the schema
names. As this variable is related to date/time and the tests are
executed very fast, some schema had the same name, when they shouldn't
be. This was causing problems in the tests. So we introduce sleeps in
Plone 5.2 with Python 2, so that the schemas don't have the same names.
In Python 3 we don't have this problem because the precision of _p_mtime
is higher in Python 3.

Files changed:
M src/plone/restapi/tests/test_services_types.py

b'diff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 040204f99..2177d6db5 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -5,16 +5,33 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import PLONE_VERSION\n from plone.restapi.testing import RelativeSession\n \n+import six\n+import time\n import transaction\n import unittest\n \n \n+PYTHON2_PLONE52 = PLONE_VERSION.base_version >= "5.2" and six.PY2\n+\n+\n class TestServicesTypes(unittest.TestCase):\n \n     layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n \n+    def sleep_python2_plone52(self, seconds=0.2):\n+        """plone.dexterity 2.10+ now uses the _p_mtime variable in the schema names.\n+        As this variable is related to date/time and the tests are executed very fast,\n+        some schema had the same name, when they shouldn\'t be. This was causing\n+        problems in the tests. So we introduce sleeps in Plone 5.2 with Python 2,\n+        so that the schemas don\'t have the same names. In Python 3 we don\'t have this\n+        problem because the precision of _p_mtime is higher in Python 3.\n+        """\n+        if PYTHON2_PLONE52:\n+            time.sleep(seconds)\n+\n     def setUp(self):\n         self.app = self.layer["app"]\n         self.portal = self.layer["portal"]\n@@ -60,6 +77,7 @@ def setUp(self):\n                 "description": "Website of the author",\n             },\n         )\n+        self.sleep_python2_plone52()\n \n     def tearDown(self):\n         # Remove all custom changed on Document\n@@ -114,6 +132,7 @@ def test_get_types_document_edit(self):\n         )  # noqa\n \n     def test_types_document_get_fieldset(self):\n+        self.sleep_python2_plone52()\n         response = self.api_session.get("/@types/Document/contact_info")\n \n         self.assertEqual(response.status_code, 200)\n@@ -253,6 +272,7 @@ def test_types_document_patch_one_field(self):\n                 "required": False,\n             },\n         )\n+        self.sleep_python2_plone52()\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document/author_email")\n@@ -317,6 +337,7 @@ def test_types_document_patch_create_missing(self):\n                 },\n             },\n         )\n+        self.sleep_python2_plone52(0.4)\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n@@ -389,6 +410,7 @@ def test_types_document_put(self):\n         }\n \n         response = self.api_session.put("/@types/Document", json=doc_json)\n+        self.sleep_python2_plone52(0.4)\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n@@ -429,6 +451,7 @@ def test_types_document_remove_field(self):\n         response = self.api_session.delete(\n             "/@types/Document/author_email",\n         )\n+        self.sleep_python2_plone52(0.4)\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n'

Repository: plone.restapi


Branch: refs/heads/7.x.x
Date: 2021-09-23T21:18:26+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.restapi/commit/0954fe90c9881045ac243485f63c2e29744cf52a

Merge pull request #1232 from plone/fix_test_services_types

Fix random failures on test_services_types

Files changed:
M src/plone/restapi/tests/test_services_types.py

b'diff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 040204f99..2177d6db5 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -5,16 +5,33 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+from plone.restapi.testing import PLONE_VERSION\n from plone.restapi.testing import RelativeSession\n \n+import six\n+import time\n import transaction\n import unittest\n \n \n+PYTHON2_PLONE52 = PLONE_VERSION.base_version >= "5.2" and six.PY2\n+\n+\n class TestServicesTypes(unittest.TestCase):\n \n     layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n \n+    def sleep_python2_plone52(self, seconds=0.2):\n+        """plone.dexterity 2.10+ now uses the _p_mtime variable in the schema names.\n+        As this variable is related to date/time and the tests are executed very fast,\n+        some schema had the same name, when they shouldn\'t be. This was causing\n+        problems in the tests. So we introduce sleeps in Plone 5.2 with Python 2,\n+        so that the schemas don\'t have the same names. In Python 3 we don\'t have this\n+        problem because the precision of _p_mtime is higher in Python 3.\n+        """\n+        if PYTHON2_PLONE52:\n+            time.sleep(seconds)\n+\n     def setUp(self):\n         self.app = self.layer["app"]\n         self.portal = self.layer["portal"]\n@@ -60,6 +77,7 @@ def setUp(self):\n                 "description": "Website of the author",\n             },\n         )\n+        self.sleep_python2_plone52()\n \n     def tearDown(self):\n         # Remove all custom changed on Document\n@@ -114,6 +132,7 @@ def test_get_types_document_edit(self):\n         )  # noqa\n \n     def test_types_document_get_fieldset(self):\n+        self.sleep_python2_plone52()\n         response = self.api_session.get("/@types/Document/contact_info")\n \n         self.assertEqual(response.status_code, 200)\n@@ -253,6 +272,7 @@ def test_types_document_patch_one_field(self):\n                 "required": False,\n             },\n         )\n+        self.sleep_python2_plone52()\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document/author_email")\n@@ -317,6 +337,7 @@ def test_types_document_patch_create_missing(self):\n                 },\n             },\n         )\n+        self.sleep_python2_plone52(0.4)\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n@@ -389,6 +410,7 @@ def test_types_document_put(self):\n         }\n \n         response = self.api_session.put("/@types/Document", json=doc_json)\n+        self.sleep_python2_plone52(0.4)\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n@@ -429,6 +451,7 @@ def test_types_document_remove_field(self):\n         response = self.api_session.delete(\n             "/@types/Document/author_email",\n         )\n+        self.sleep_python2_plone52(0.4)\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n'

