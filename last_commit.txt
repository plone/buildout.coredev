Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-08-25T10:41:08+02:00
Author: Jon Pentland (instification) <instification@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/1824086064a82c029e879515c59ffa27a45613c4

Use incoming request to produce location for @tus-upload (#1570)

* Use request url to generate tus upload location. Allows seemless use of ++api++

* Add changelog entry

* Add test for ++api++

* Rewrite location url if @tus-replace endpoint is used

* flake8/black fixes

* Make url change more explicit and add an explanatory comment

---------

Co-authored-by: Timo Stollenwerk &lt;tisto@users.noreply.github.com&gt;
Co-authored-by: Jefferson Bledsoe &lt;me@jeffersonbledsoe.com&gt;

Files changed:
A news/1570.bugfix
M src/plone/restapi/services/content/tus.py
M src/plone/restapi/tests/test_tus.py

b'diff --git a/news/1570.bugfix b/news/1570.bugfix\nnew file mode 100644\nindex 000000000..37f023d21\n--- /dev/null\n+++ b/news/1570.bugfix\n@@ -0,0 +1,2 @@\n+Use incoming request to produce location for @tus-upload\n+[instification]\ndiff --git a/src/plone/restapi/services/content/tus.py b/src/plone/restapi/services/content/tus.py\nindex cd8534332..10cd47cdf 100644\n--- a/src/plone/restapi/services/content/tus.py\n+++ b/src/plone/restapi/services/content/tus.py\n@@ -117,9 +117,14 @@ def reply(self):\n         tus_upload = TUSUpload(uuid4().hex, metadata=metadata)\n \n         self.request.response.setStatus(201)\n+        url = self.request.getURL()\n+        # Regardless of @tus-upload or @tus-replace the response should return\n+        # a Location of @tus-upload\n+        if url.endswith("@tus-replace"):\n+            url = url.replace("@tus-replace", "@tus-upload")\n         self.request.response.setHeader(\n             "Location",\n-            f"{self.context.absolute_url()}/@tus-upload/{tus_upload.uid}",\n+            f"{url}/{tus_upload.uid}",\n         )\n         self.request.response.setHeader("Upload-Expires", tus_upload.expires())\n         self.request.response.setHeader("Tus-Resumable", "1.0.0")\ndiff --git a/src/plone/restapi/tests/test_tus.py b/src/plone/restapi/tests/test_tus.py\nindex bece6c679..838c935a2 100644\n--- a/src/plone/restapi/tests/test_tus.py\n+++ b/src/plone/restapi/tests/test_tus.py\n@@ -541,6 +541,35 @@ def record_event(event):\n         sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n         sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n \n+    def test_tus_with_api(self):\n+        self.upload_url = (\n+            f"{self.portal.absolute_url()}/++api++/{self.folder.id}/@tus-upload"\n+        )\n+        metadata = _prepare_metadata(UPLOAD_FILENAME, UPLOAD_MIMETYPE)\n+        response = self.api_session.post(\n+            self.upload_url,\n+            headers={\n+                "Tus-Resumable": "1.0.0",\n+                "Upload-Length": str(UPLOAD_LENGTH),\n+                "Upload-Metadata": metadata,\n+            },\n+        )\n+        self.assertEqual(response.status_code, 201)\n+        location = response.headers["Location"]\n+        self.assertEqual("++api++" in location, True)\n+\n+        # upload the data with PATCH\n+        response = self.api_session.patch(\n+            location,\n+            headers={\n+                "Content-Type": "application/offset+octet-stream",\n+                "Upload-Offset": "0",\n+                "Tus-Resumable": "1.0.0",\n+            },\n+            data=BytesIO(UPLOAD_DATA),\n+        )\n+        self.assertEqual(response.status_code, 204)\n+\n     def tearDown(self):\n         self.api_session.close()\n         client_home = os.environ.get("CLIENT_HOME")\n'

