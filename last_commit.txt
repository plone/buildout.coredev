Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T13:52:58+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/0b35cd1e7e5826e84286f62fc5ea1ce4e2a92d12

Remove `propertiestool` import step and usage of `portal_properties`.

Files changed:
A news/125.breaking
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/templates/ajax_main_template.pt
M Products/CMFPlone/browser/templates/main_template.pt
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/profiles/default/componentregistry.xml
M Products/CMFPlone/profiles/default/toolset.xml
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testWebDAV.py
M Products/CMFPlone/tests/test_zmi.py
D Products/CMFPlone/exportimport/propertiestool.py
D Products/CMFPlone/exportimport/tests/testPropertiesTool.py
D Products/CMFPlone/profiles/default/propertiestool.xml

b'diff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex 644099ea71..2b0fef236c 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -5,7 +5,6 @@\n from plone.base.interfaces.controlpanel import IMailSchema\n from plone.base.utils import pretty_title_or_id\n from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser import BrowserView\n from Products.MailHost.interfaces import IMailHost\n@@ -201,11 +200,7 @@ def home_folder(self, username):\n         return self.membership_tool.getHomeFolder(id=username)\n \n     def __call__(self):\n-        self.portal_properties = getUtility(IPropertiesTool)\n-\n         self.portal_catalog = getToolByName(self.context, "portal_catalog")\n-\n-        # XXX: getUtility call does not work.\n         self.membership_tool = getToolByName(self.context, "portal_membership")\n \n         self.portal_state = getMultiAdapter(\ndiff --git a/Products/CMFPlone/browser/templates/ajax_main_template.pt b/Products/CMFPlone/browser/templates/ajax_main_template.pt\nindex 81eab03a4a..f4efc3b8e7 100644\n--- a/Products/CMFPlone/browser/templates/ajax_main_template.pt\n+++ b/Products/CMFPlone/browser/templates/ajax_main_template.pt\n@@ -15,7 +15,6 @@\n           dummy python: plone_layout.mark_view(view);\n           portal_url python:portal_state.portal_url();\n           checkPermission python:context.restrictedTraverse(\'portal_membership\').checkPermission;\n-          site_properties python:context.restrictedTraverse(\'portal_properties\').site_properties;\n           ajax_include_head python:request.get(\'ajax_include_head\', False);\n           ajax_load python:False;"\n       i18n:domain="plone"\ndiff --git a/Products/CMFPlone/browser/templates/main_template.pt b/Products/CMFPlone/browser/templates/main_template.pt\nindex 9bffd9a9bb..efe9eac05e 100644\n--- a/Products/CMFPlone/browser/templates/main_template.pt\n+++ b/Products/CMFPlone/browser/templates/main_template.pt\n@@ -15,7 +15,6 @@\n           dummy python: plone_layout.mark_view(view);\n           portal_url python:portal_state.portal_url();\n           checkPermission python:context.restrictedTraverse(\'portal_membership\').checkPermission;\n-          site_properties python:context.restrictedTraverse(\'portal_properties\').site_properties;\n           ajax_include_head python:request.get(\'ajax_include_head\', False);\n           ajax_load python:False;"\n       i18n:domain="plone"\ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex ca451845e8..b3fe625468 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -54,19 +54,9 @@\n     <depends name="catalog" />\n     <depends name="viewlets" />\n     <depends name="controlpanel" />\n-    <depends name="propertiestool" />\n     <depends name="workflow" />\n   </genericsetup:importStep>\n \n-  <genericsetup:importStep\n-      name="propertiestool"\n-      title="Plone Properties"\n-      description="Import plone properties tool and subobjects."\n-      handler="Products.CMFPlone.exportimport.propertiestool.importPloneProperties"\n-      >\n-    <depends name="componentregistry" />\n-  </genericsetup:importStep>\n-\n   <genericsetup:importStep\n       name="update-workflow-rolemap"\n       title="Update workflow role mappings"\n@@ -105,13 +95,6 @@\n       handler="Products.CMFPlone.exportimport.memberdata_properties.exportMemberDataProperties"\n       />\n \n-  <genericsetup:exportStep\n-      name="propertiestool"\n-      title="Plone Properties"\n-      description="Export plone properties tool and subobjects."\n-      handler="Products.CMFPlone.exportimport.propertiestool.exportPloneProperties"\n-      />\n-\n   <genericsetup:exportStep\n       name="viewlets"\n       title="Viewlet Settings"\n@@ -119,34 +102,12 @@\n       handler="plone.app.viewletmanager.exportimport.storage.exportViewletSettingsStorage"\n       />\n \n-  <adapter\n-      factory=".propertiestool.PlonePropertiesToolXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="plone.base.interfaces.IPropertiesTool\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      />\n-\n-  <adapter\n-      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="plone.base.interfaces.ISimpleItemWithProperties\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      />\n-\n   <adapter\n       factory="Products.CMFCore.exportimport.content.StructureFolderWalkingAdapter"\n       provides="Products.GenericSetup.interfaces.IFilesystemImporter"\n       for="Products.CMFCore.interfaces.ISiteRoot"\n       />\n \n-  <adapter\n-      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="Products.CMFCore.interfaces.IMemberDataTool\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      zcml:condition="not-installed Products.CMFCore.exportimport.memberdata"\n-      />\n-\n   <adapter\n       factory=".controlpanel.ControlPanelXMLAdapter"\n       provides="Products.GenericSetup.interfaces.IBody"\ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\ndeleted file mode 100644\nindex 94e21a1326..0000000000\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ /dev/null\n@@ -1,140 +0,0 @@\n-"""Plone Properties tool setup handlers.\n-\n-$Id:$\n-"""\n-\n-from plone.base.interfaces import IPropertiesTool as IPlonePropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.interfaces import INode\n-from Products.GenericSetup.utils import ObjectManagerHelpers\n-from Products.GenericSetup.utils import PropertyManagerHelpers\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-\n-\n-_FILENAME = "propertiestool.xml"\n-\n-\n-def importPloneProperties(context):\n-    """Import plone properties tool."""\n-    site = context.getSite()\n-    logger = context.getLogger("propertiestool")\n-    ptool = getToolByName(site, "portal_properties")\n-\n-    body = context.readDataFile(_FILENAME)\n-    if body is None:\n-        return\n-\n-    importer = queryMultiAdapter((ptool, context), IBody)\n-    if importer is None:\n-        logger.warning("Import adapter missing.")\n-        return\n-\n-    importer.body = body\n-    logger.info("Properties tool imported.")\n-\n-\n-def exportPloneProperties(context):\n-    """Export plone properties tool."""\n-    site = context.getSite()\n-    logger = context.getLogger("propertiestool")\n-    ptool = getToolByName(site, "portal_properties", None)\n-    if ptool is None:\n-        return\n-\n-    exporter = queryMultiAdapter((ptool, context), IBody)\n-    # IBody(ptool)\n-    if exporter is None:\n-        logger.warning("Export adapter missing.")\n-        return\n-\n-    context.writeDataFile(_FILENAME, exporter.body, exporter.mime_type)\n-    logger.info("Properties tool exported.")\n-\n-\n-class SimpleItemWithPropertiesXMLAdapter(XMLAdapterBase, PropertyManagerHelpers):\n-\n-    """Node im- and exporter for SimpleItemWithProperties."""\n-\n-    __used_for__ = ISimpleItemWithProperties\n-\n-    def _exportNode(self):\n-        """Export the object as a DOM node."""\n-        # self._doc = doc\n-        node = self._getObjectNode("object")\n-        node.appendChild(self._extractProperties())\n-        return node\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        self._initProperties(node)\n-\n-    node = property(_exportNode, _importNode)\n-\n-\n-class PlonePropertiesToolXMLAdapter(XMLAdapterBase, ObjectManagerHelpers):\n-\n-    """Node im- and exporter for Plone PropertiesTool."""\n-\n-    __used_for__ = IPlonePropertiesTool\n-\n-    def _exportNode(self):\n-        """Export the object as a DOM node."""\n-        # self._doc = doc\n-        node = self._getObjectNode("object")\n-        # node.setAttribute(\'xmlns:i18n\', I18NURI)\n-        node.appendChild(self._extractObjects())\n-        return node\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.environ.shouldPurge():\n-            self._purgeObjects()\n-\n-        self._initObjects(node)\n-\n-    def _initObjects(self, node):\n-        """Import subobjects"""\n-        # XXX: We could just use the _initObjects() from\n-        # ObjectManagerHelpers except that it looks up the object\n-        # constructor from Products.meta_type and\n-        # SimpleItemWithProperties doesn\'t get registered there.\n-        for child in node.childNodes:\n-            if child.nodeName != "object":\n-                continue\n-            if child.hasAttribute("deprecated"):\n-                continue\n-            parent = self.context\n-\n-            obj_id = str(child.getAttribute("name"))\n-            if obj_id not in parent:\n-                parent._setObject(obj_id, SimpleItemWithProperties(obj_id))\n-\n-            if child.hasAttribute("insert-before"):\n-                insert_before = child.getAttribute("insert-before")\n-                if insert_before == "*":\n-                    parent.moveObjectsToTop(obj_id)\n-                else:\n-                    try:\n-                        position = parent.getObjectPosition(insert_before)\n-                        parent.moveObjectToPosition(obj_id, position)\n-                    except ValueError:\n-                        pass\n-            elif child.hasAttribute("insert-after"):\n-                insert_after = child.getAttribute("insert-after")\n-                if insert_after == "*":\n-                    parent.moveObjectsToBottom(obj_id)\n-                else:\n-                    try:\n-                        position = parent.getObjectPosition(insert_after)\n-                        parent.moveObjectToPosition(obj_id, position + 1)\n-                    except ValueError:\n-                        pass\n-\n-            obj = getattr(self.context, obj_id)\n-            importer = queryMultiAdapter((obj, self.environ), INode)\n-            if importer:\n-                importer.node = child\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\ndeleted file mode 100644\nindex 48e13f8075..0000000000\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n-from Products.CMFPlone.PropertiesTool import PropertiesTool\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from zope.component import provideAdapter\n-\n-\n-_PROPERTYSHEET_XML = b"""\\\n-<?xml version="1.0" encoding="utf-8"?>\n-<object name="site_properties" meta_type="Plone Property Sheet">\n- <property name="title">Site wide properties</property>\n- <property name="displayPublicationDateInByline"\n-    type="boolean">True</property>\n-</object>\n-"""\n-\n-_PROPERTIESTOOL_XML = b"""\\\n-<?xml version="1.0" encoding="utf-8"?>\n-<object name="portal_properties" meta_type="Plone Properties Tool">\n- <object name="site_properties" meta_type="Plone Property Sheet">\n-  <property name="title">Site wide properties</property>\n-  <property name="displayPublicationDateInByline"\n-     type="boolean">True</property>\n- </object>\n-</object>\n-"""\n-\n-\n-class PropertySheetXMLAdapterTests(BodyAdapterTestCase):\n-    def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            SimpleItemWithPropertiesXMLAdapter,\n-        )\n-\n-        return SimpleItemWithPropertiesXMLAdapter\n-\n-    def _populate(self, obj):\n-        obj.manage_changeProperties(title="Site wide properties")\n-        obj.manage_addProperty("displayPublicationDateInByline", True, "boolean")\n-\n-    def setUp(self):\n-        from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.GenericSetup.interfaces import IBody\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n-\n-        provideAdapter(\n-            self._getTargetClass(), (ISimpleItemWithProperties, ISetupEnviron), IBody\n-        )\n-\n-        self._obj = SimpleItemWithProperties("site_properties")\n-        self._BODY = _PROPERTYSHEET_XML\n-\n-\n-class PropertiesToolXMLAdapterTests(BodyAdapterTestCase):\n-    def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            PlonePropertiesToolXMLAdapter,\n-        )\n-\n-        return PlonePropertiesToolXMLAdapter\n-\n-    def _populate(self, obj):\n-        obj._setObject("site_properties", SimpleItemWithProperties("site_properties"))\n-        obj.site_properties.manage_changeProperties(title="Site wide properties")\n-        obj.site_properties.manage_addProperty(\n-            "displayPublicationDateInByline", True, "boolean"\n-        )\n-\n-    def setUp(self):\n-        from plone.base.interfaces import IPropertiesTool\n-        from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            SimpleItemWithPropertiesXMLAdapter,\n-        )\n-        from Products.GenericSetup.interfaces import IBody\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n-\n-        provideAdapter(self._getTargetClass(), (IPropertiesTool, ISetupEnviron), IBody)\n-        provideAdapter(\n-            SimpleItemWithPropertiesXMLAdapter,\n-            (ISimpleItemWithProperties, ISetupEnviron),\n-            IBody,\n-        )\n-\n-        self._obj = PropertiesTool()\n-        self._BODY = _PROPERTIESTOOL_XML\n-\n-\n-def test_suite():\n-    from unittest import makeSuite\n-    from unittest import TestSuite\n-\n-    suite = TestSuite()\n-    suite.addTest(makeSuite(PropertySheetXMLAdapterTests))\n-    suite.addTest(makeSuite(PropertiesToolXMLAdapterTests))\n-    return suite\ndiff --git a/Products/CMFPlone/profiles/default/componentregistry.xml b/Products/CMFPlone/profiles/default/componentregistry.xml\nindex f35d005476..f1195c4eb2 100644\n--- a/Products/CMFPlone/profiles/default/componentregistry.xml\n+++ b/Products/CMFPlone/profiles/default/componentregistry.xml\n@@ -68,9 +68,6 @@\n     <utility factory="plone.app.viewletmanager.storage.ViewletSettingsStorage"\n              interface="plone.app.viewletmanager.interfaces.IViewletSettingsStorage"\n     />\n-    <utility interface="Products.CMFCore.interfaces.IPropertiesTool"\n-             object="portal_properties"\n-    />\n     <utility interface="Products.CMFCore.interfaces.ISiteRoot"\n              object=""\n     />\ndiff --git a/Products/CMFPlone/profiles/default/propertiestool.xml b/Products/CMFPlone/profiles/default/propertiestool.xml\ndeleted file mode 100644\nindex d90844dacd..0000000000\n--- a/Products/CMFPlone/profiles/default/propertiestool.xml\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-<?xml version="1.0" encoding="utf-8"?>\n-<object meta_type="Plone Properties Tool"\n-        name="portal_properties"\n->\n-  <object meta_type="Plone Property Sheet"\n-          name="navtree_properties"\n-  >\n-    <property name="title">NavigationTree properties</property>\n-  </object>\n-  <object meta_type="Plone Property Sheet"\n-          name="site_properties"\n-  >\n-    <property name="title">Site wide properties</property>\n-  </object>\n-</object>\ndiff --git a/Products/CMFPlone/profiles/default/toolset.xml b/Products/CMFPlone/profiles/default/toolset.xml\nindex dfbff83fe0..1a225138d1 100644\n--- a/Products/CMFPlone/profiles/default/toolset.xml\n+++ b/Products/CMFPlone/profiles/default/toolset.xml\n@@ -42,9 +42,6 @@\n   <required class="Products.CMFPlone.PasswordResetTool.PasswordResetTool"\n             tool_id="portal_password_reset"\n   />\n-  <required class="Products.CMFPlone.PropertiesTool.PropertiesTool"\n-            tool_id="portal_properties"\n-  />\n   <required class="Products.CMFPlone.RegistrationTool.RegistrationTool"\n             tool_id="portal_registration"\n   />\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex fa8d525a6b..f52b1e7831 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -121,29 +121,6 @@ def path(x):\n         self.assertEqual(subfolder221map["item"].getPath(), path(subfolder221))\n         self.assertEqual(len(subfolder221map["children"]), 0)\n \n-    def testSitemapUnchangedWithTopLevel(self):\n-        # Test that setting topLevel does not alter the sitemap\n-        ntp = self.portal.portal_properties.navtree_properties\n-        for topLevel in range(0, 5):\n-            ntp.manage_changeProperties(topLevel=topLevel)\n-            view = self.view_class(self.portal, self.request)\n-            sitemap = view.siteMap()\n-            self.assertEqual(\n-                sitemap["children"][-1]["item"].getPath(), "/plone/folder2"\n-            )\n-\n-    def testSitemapUnchangedWithBottomLevel(self):\n-        # Test that setting bottomLevel does not alter the sitemap\n-        ntp = self.portal.portal_properties.navtree_properties\n-        for bottomLevel in range(0, 5):\n-            ntp.manage_changeProperties(bottomLevel=bottomLevel)\n-            view = self.view_class(self.portal, self.request)\n-            sitemap = view.siteMap()\n-            self.assertEqual(\n-                sitemap["children"][-1]["item"].getPath(), "/plone/folder2"\n-            )\n-            self.assertTrue(len(sitemap["children"][-1]["children"]) > 0)\n-\n     def testSitemapWithNavigationRoot(self):\n         self.navigation_settings.root = "/folder2"\n         view = self.view_class(self.portal, self.request)\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 080d3c6beb..f3474cf2c7 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -42,7 +42,6 @@ def afterSetUp(self):\n         self.types = self.portal.portal_types\n         self.cp = self.portal.portal_controlpanel\n         self.actions = self.portal.portal_actions\n-        self.properties = self.portal.portal_properties\n         self.memberdata = self.portal.portal_memberdata\n         self.catalog = self.portal.portal_catalog\n         self.groups = self.portal.portal_groups\n@@ -146,35 +145,11 @@ def testNoPortalNavigationTool(self):\n         # portal_navigation should have been removed\n         self.assertFalse("portal_navigation" in self.portal)\n \n-    def testNoFormProperties(self):\n-        # form_properties should have been removed\n-        self.assertFalse("form_properties" in self.properties)\n-\n-    def testNoNavigationProperties(self):\n-        # navigation_properties should have been removed\n-        self.assertFalse("navigation_properties" in self.properties)\n-\n     def testFormToolTipsProperty(self):\n         # formtooltips should have been removed\n         self.assertFalse(self.memberdata.hasProperty("formtooltips"))\n \n     def testNavTreeProperties(self):\n-        # navtree_properties should contain the new properties\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("parentMetaTypesNotToQuery")\n-        )\n-        self.assertFalse(self.properties.navtree_properties.hasProperty("sitemapDepth"))\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("showAllParents")\n-        )\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("metaTypesNotToList")\n-        )  # noqa\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("sortAttribute")\n-        )\n-        self.assertFalse(self.properties.navtree_properties.hasProperty("sortOrder"))\n-\n         registry = getUtility(IRegistry)\n         self.assertTrue("plone.workflow_states_to_show" in registry)\n         self.assertTrue("plone.filter_on_workflow" in registry)\n@@ -946,9 +921,6 @@ def testFinalStepsWithMembersFolderDeleted(self):\n \n \n class TestManagementPageCharset(PloneTestCase.PloneTestCase):\n-    def afterSetUp(self):\n-        self.properties = self.portal.portal_properties\n-\n     def testManagementPageCharset(self):\n         manage_charset = getattr(self.portal, "management_page_charset", None)\n         self.assertTrue(manage_charset)\ndiff --git a/Products/CMFPlone/tests/testWebDAV.py b/Products/CMFPlone/tests/testWebDAV.py\nindex 2105ae4390..e3938407ef 100644\n--- a/Products/CMFPlone/tests/testWebDAV.py\n+++ b/Products/CMFPlone/tests/testWebDAV.py\n@@ -18,17 +18,6 @@\n """\n \n \n-class TestDAVProperties(PloneTestCase.PloneTestCase):\n-    def testPropertiesToolTitle(self):\n-        ptool = getToolByName(self.portal, "portal_properties")\n-        psets = dict(ptool.propertysheets.items())\n-        self.assertTrue("webdav" in psets.keys())\n-        default = psets["webdav"]\n-        items = dict(default.propertyItems())\n-        self.assertTrue("displayname" in items.keys())\n-        self.assertEqual(items["displayname"], ptool.title)\n-\n-\n class TestPUTObjects(PloneTestCase.PloneTestCase):\n     # PUT objects into Plone including special cases like index_html.\n     # Confirms fix for http://dev.plone.org/plone/ticket/1375\ndiff --git a/Products/CMFPlone/tests/test_zmi.py b/Products/CMFPlone/tests/test_zmi.py\nindex 3ec5997246..8be5e75e98 100644\n--- a/Products/CMFPlone/tests/test_zmi.py\n+++ b/Products/CMFPlone/tests/test_zmi.py\n@@ -121,11 +121,6 @@ def test_portal_modifier(self):\n         view = self.portal.restrictedTraverse(url)\n         self.assertTrue(view(), msg=f"{url} is broken")\n \n-    def test_portal_properties(self):\n-        url = "portal_properties/manage_main"\n-        view = self.portal.restrictedTraverse(url)\n-        self.assertTrue(view(), msg=f"{url} is broken")\n-\n     def test_portal_purgepolicy(self):\n         url = "portal_purgepolicy/manage_propertiesForm"\n         view = self.portal.restrictedTraverse(url)\ndiff --git a/news/125.breaking b/news/125.breaking\nnew file mode 100644\nindex 0000000000..42b585932b\n--- /dev/null\n+++ b/news/125.breaking\n@@ -0,0 +1,2 @@\n+Remove `propertiestool` import step and usage of `portal_properties`.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T14:16:31+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/e58f33b47fad53e899ba45cb6b02cc84376459d3

Remove site_properties from comments.

Files changed:
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/test_defaultpage.py
M news/125.breaking

b'diff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 886d93ff63..e5ec5bd1be 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -623,9 +623,8 @@ def browserDefault(self, obj):\n         # 3. If the object has a property default_page set and this gives a list\n         #     of, or single, object id, and that object is is found in the\n         #     folder or is the name of a skin template, return that id\n-        # 4. If the property default_page is set in site_properties and that\n-        #     property contains a list of ids of which one id is found in the\n-        #     folder, return that id\n+        # 4. Look up the property plone.default_page in the registry for\n+        #     magic ids and test these.\n         # 5. If the object implements IBrowserDefault, try to get the selected\n         #     layout.\n         # 6. If the type has a \'folderlisting\' action and no default page is\n@@ -928,7 +927,7 @@ def getUserFriendlyTypes(self, typesList=None):\n         # and selection purposes.\n         #\n         # This is the list of types available in the portal, minus those\n-        # defined in the types_not_searched property in site_properties, if it\n+        # defined in the types_not_searched property in the registry, if it\n         # exists.\n         #\n         # If typesList is given, this is used as the base list; else all types\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex f52b1e7831..aeddd0ba26 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -247,7 +247,7 @@ def testTabInfo(self):\n         self.assertTrue("review_state" in tab and tab["review_state"])\n \n     def testDisableFolderTabs(self):\n-        # Setting the site_property disable_folder_sections should remove\n+        # Setting the registry setting generate_tabs to False should remove\n         # all folder based tabs\n         self.navigation_settings.generate_tabs = False\n         view = self.view_class(self.portal, self.request)\ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex 3be7eafd7d..ac633b5d6b 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -106,8 +106,8 @@ def test_get_default_page_step_3_2(self):\n         self.assertEqual("d1", get_default_page(self.folder))\n \n     def test_get_default_page_step_4(self):\n-        # 4. Else, look up the property default_page in site_properties for\n-        #   magic ids and test these\n+        # 4. Else, look up the property plone.default_page in the registry for\n+        #    magic ids and test these\n         registry = getUtility(IRegistry)\n         registry["plone.default_page"] = ["d1"]\n         self.folder.invokeFactory("Document", "d1", title="Doc 1")\ndiff --git a/news/125.breaking b/news/125.breaking\nindex 42b585932b..6c3870d67e 100644\n--- a/news/125.breaking\n+++ b/news/125.breaking\n@@ -1,2 +1,3 @@\n Remove `propertiestool` import step and usage of `portal_properties`.\n+Remove `site_properties` from `main_template.pt` and ajax template.\n [maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-29T02:21:42+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/674282237137384171352a8f346a4a995447c484

Merge branch 'master' into remove-portal_properties

Files changed:
A news/3765-1.bugfix
A news/3765-2.bugfix
A news/3765-3.bugfix
A news/3765-4.bugfix
A news/3982.internal
A news/3984.internal
M .github/ISSUE_TEMPLATE/PLIP.md
M Products/CMFPlone/browser/configure.zcml
M Products/CMFPlone/controlpanel/browser/tinymce.py
M Products/CMFPlone/interfaces/__init__.py
M Products/CMFPlone/patterns/settings.py
M Products/CMFPlone/patterns/tinymce.py
M Products/CMFPlone/tests/test_patternsettings.py

b'diff --git a/.github/ISSUE_TEMPLATE/PLIP.md b/.github/ISSUE_TEMPLATE/PLIP.md\nindex 271a1c9345..e570a1162f 100644\n--- a/.github/ISSUE_TEMPLATE/PLIP.md\n+++ b/.github/ISSUE_TEMPLATE/PLIP.md\n@@ -2,8 +2,9 @@\n name: "\\U0001F680 PLIP"\n about: Plone Improvement Proposal\n title: \'\'\n-labels: \'\'\n+labels: \'03 type: feature (plip)\'\n assignees: \'\'\n+projects: \'plone/47\'\n \n ---\n \n@@ -11,9 +12,7 @@ assignees: \'\'\n \n <!--\n \n-Read http://docs.plone.org/develop/coredev/docs/plips.html first!\n-\n-Set "03 type: feature: plip" as label.\n+Read https://5.docs.plone.org/develop/coredev/docs/plips.html first!\n \n Mention the @plone/framework-team when the PLIP is information complete!\n \ndiff --git a/Products/CMFPlone/browser/configure.zcml b/Products/CMFPlone/browser/configure.zcml\nindex 36941da36b..23ecdcfdd3 100644\n--- a/Products/CMFPlone/browser/configure.zcml\n+++ b/Products/CMFPlone/browser/configure.zcml\n@@ -224,15 +224,6 @@\n       permission="zope2.View"\n       />\n \n-  <!-- AtD Support -->\n-  <browser:page\n-      name="checkDocument"\n-      for="*"\n-      class=".atd.ATDProxyView"\n-      attribute="checkDocument"\n-      permission="zope2.View"\n-      />\n-\n   <!-- Default Page View -->\n   <browser:page\n       name="default_page"\ndiff --git a/Products/CMFPlone/controlpanel/browser/tinymce.py b/Products/CMFPlone/controlpanel/browser/tinymce.py\nindex a7cd3e97ee..aa829445e2 100644\n--- a/Products/CMFPlone/controlpanel/browser/tinymce.py\n+++ b/Products/CMFPlone/controlpanel/browser/tinymce.py\n@@ -5,7 +5,6 @@\n from plone.base.interfaces import ITinyMCEPluginSchema\n from plone.base.interfaces import ITinyMCEResourceTypesSchema\n from plone.base.interfaces import ITinyMCESchema\n-from plone.base.interfaces import ITinyMCESpellCheckerSchema\n from z3c.form import field\n from z3c.form import group\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n@@ -16,11 +15,6 @@ class TinyMCEPluginForm(group.GroupForm):\n     fields = field.Fields(ITinyMCEPluginSchema)\n \n \n-class TinyMCESpellCheckerForm(group.GroupForm):\n-    label = _("Spell Checker")\n-    fields = field.Fields(ITinyMCESpellCheckerSchema)\n-\n-\n class TinyMCEResourceTypesForm(group.GroupForm):\n     label = _("Resource Types")\n     fields = field.Fields(ITinyMCEResourceTypesSchema)\n@@ -39,7 +33,6 @@ class TinyMCEControlPanelForm(controlpanel.RegistryEditForm):\n     fields = field.Fields(ITinyMCELayoutSchema)\n     groups = (\n         TinyMCEPluginForm,\n-        TinyMCESpellCheckerForm,\n         TinyMCEResourceTypesForm,\n         TinyMCEAdvancedForm,\n     )\ndiff --git a/Products/CMFPlone/interfaces/__init__.py b/Products/CMFPlone/interfaces/__init__.py\nindex f00871004f..afb3e1df15 100644\n--- a/Products/CMFPlone/interfaces/__init__.py\n+++ b/Products/CMFPlone/interfaces/__init__.py\n@@ -31,7 +31,6 @@\n     ITinyMCEPluginSchema="plone.base.interfaces.controlpanel:ITinyMCEPluginSchema",\n     ITinyMCEResourceTypesSchema="plone.base.interfaces.controlpanel:ITinyMCEResourceTypesSchema",\n     ITinyMCESchema="plone.base.interfaces.controlpanel:ITinyMCESchema",\n-    ITinyMCESpellCheckerSchema="plone.base.interfaces.controlpanel:ITinyMCESpellCheckerSchema",\n     ITypesSchema="plone.base.interfaces.controlpanel:ITypesSchema",\n     IUserGroupsSettingsSchema="plone.base.interfaces.controlpanel:IUserGroupsSettingsSchema",\n     IConfigurationChangedEvent="plone.base.interfaces.events:IConfigurationChangedEvent",\ndiff --git a/Products/CMFPlone/patterns/settings.py b/Products/CMFPlone/patterns/settings.py\nindex 84c9f663a2..5573868983 100644\n--- a/Products/CMFPlone/patterns/settings.py\n+++ b/Products/CMFPlone/patterns/settings.py\n@@ -156,9 +156,6 @@ def tinymce(self):\n             "pictureVariants": self.picture_variants,\n             "imageCaptioningEnabled": self.image_captioning,\n             "linkAttribute": "UID",\n-            # This is for loading the languages on tinymce\n-            "loadingBaseUrl": "{}/++plone++static/components/tinymce-builded/"\n-            "js/tinymce".format(portal_url),\n             "relatedItems": related_items_config,\n             "prependToScalePart": "/@@images/image/",\n             "prependToUrl": "{}/resolveuid/".format(site_path.rstrip("/")),\ndiff --git a/Products/CMFPlone/patterns/tinymce.py b/Products/CMFPlone/patterns/tinymce.py\nindex 27d569ef83..62fca9c63d 100644\n--- a/Products/CMFPlone/patterns/tinymce.py\n+++ b/Products/CMFPlone/patterns/tinymce.py\n@@ -139,31 +139,6 @@ def get_tiny_config(self):\n                 "plonelink ploneimage inserttable |" " cell row column deletetable"\n             )\n \n-        if settings.libraries_spellchecker_choice == "AtD":\n-            mtool = getToolByName(self.context, "portal_membership")\n-            member = mtool.getAuthenticatedMember()\n-            member_id = member.getId()\n-            if member_id:\n-                if "compat3x" not in tiny_config["plugins"]:\n-                    tiny_config["plugins"].append("compat3x")\n-                tiny_config["external_plugins"][\n-                    "AtD"\n-                ] = "{}/++plone++static/tinymce-AtD-plugin/" "editor_plugin.js".format(\n-                    self.nav_root_url\n-                )\n-                # None when Anonymous User\n-                tiny_config["atd_rpc_id"] = "plone-" + member_id\n-                tiny_config["atd_rpc_url"] = self.nav_root_url\n-                tiny_config["atd_show_types"] = ",".join(\n-                    settings.libraries_atd_show_types\n-                )\n-                tiny_config["atd_ignore_strings"] = ",".join(\n-                    settings.libraries_atd_ignore_strings\n-                )\n-                toolbar_additions.append("AtD")\n-        elif settings.libraries_spellchecker_choice == "AtD":\n-            tiny_config["browser_spellcheck"] = True\n-\n         if toolbar_additions:\n             tiny_config["toolbar"] += " | {}".format(" ".join(toolbar_additions))\n \ndiff --git a/Products/CMFPlone/tests/test_patternsettings.py b/Products/CMFPlone/tests/test_patternsettings.py\nindex e485b2bff3..b447b96e51 100644\n--- a/Products/CMFPlone/tests/test_patternsettings.py\n+++ b/Products/CMFPlone/tests/test_patternsettings.py\n@@ -22,15 +22,6 @@ def get_conf(self):\n         )\n         return json.loads(adapter.tinymce()["data-pat-tinymce"])\n \n-    def test_atd_included(self):\n-        registry = getUtility(IRegistry)\n-        settings = registry.forInterface(ITinyMCESchema, prefix="plone")\n-        settings.libraries_spellchecker_choice = "AtD"\n-        login(self.layer["portal"], TEST_USER_NAME)\n-        conf = self.get_conf()\n-        self.assertTrue("compat3x" in conf["tiny"]["plugins"])\n-        self.assertTrue("AtD" in conf["tiny"]["external_plugins"])\n-\n     def test_style_formats(self):\n         conf = self.get_conf()\n         self.assertEqual(len(conf["tiny"]["style_formats"]), 5)\ndiff --git a/news/3765-1.bugfix b/news/3765-1.bugfix\nnew file mode 100644\nindex 0000000000..befe772169\n--- /dev/null\n+++ b/news/3765-1.bugfix\n@@ -0,0 +1 @@\n+Mockup TinyMCE settings: Remove unused loadingBaseUrl option.\ndiff --git a/news/3765-2.bugfix b/news/3765-2.bugfix\nnew file mode 100644\nindex 0000000000..64cdb7bfc9\n--- /dev/null\n+++ b/news/3765-2.bugfix\n@@ -0,0 +1 @@\n+Mockup TinyMCE settings: Remove deprecated AtD plugin settings.\ndiff --git a/news/3765-3.bugfix b/news/3765-3.bugfix\nnew file mode 100644\nindex 0000000000..0f699fdb93\n--- /dev/null\n+++ b/news/3765-3.bugfix\n@@ -0,0 +1 @@\n+Mockup TinyMCE settings: Remove unused AtD related views.\ndiff --git a/news/3765-4.bugfix b/news/3765-4.bugfix\nnew file mode 100644\nindex 0000000000..47a716e6a4\n--- /dev/null\n+++ b/news/3765-4.bugfix\n@@ -0,0 +1 @@\n+Mockup TinyMCE settings: Remove unused ITinyMCESpellCheckerSchema and ITinyMCESpellCheckerForm.\ndiff --git a/news/3982.internal b/news/3982.internal\nnew file mode 100644\nindex 0000000000..f2a9d60744\n--- /dev/null\n+++ b/news/3982.internal\n@@ -0,0 +1 @@\n+Automatically set the label to `03 type: feature (plip)` for PLIPs. @stevepiercy\ndiff --git a/news/3984.internal b/news/3984.internal\nnew file mode 100644\nindex 0000000000..97a602f581\n--- /dev/null\n+++ b/news/3984.internal\n@@ -0,0 +1 @@\n+Automatically add a PLIP issue to the PLIP project board. @stevepiercy\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-07-24T10:36:16-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/9aed8290f69261c841a3563316e360aa9556a664

Merge branch 'master' into remove-portal_properties

Files changed:
A news/3988.internal
M .github/ISSUE_TEMPLATE/PLIP.md
M CHANGES.md
M setup.py
D news/3756.bugfix
D news/3765-1.bugfix
D news/3765-2.bugfix
D news/3765-3.bugfix
D news/3765-4.bugfix
D news/3942.bugfix
D news/3942.internal
D news/3945.bugfix
D news/3946.bugfix
D news/3949.bugfix
D news/3952.bugfix
D news/3960.bugfix
D news/3962.bugfix
D news/3964.bugfix
D news/3965.bugfix
D news/3966.bugfix
D news/3967.bugfix
D news/3968.bugfix
D news/3975.bugfix.1
D news/3975.bugfix.2
D news/3982.internal
D news/3984.internal
D news/6103.internal

b'diff --git a/.github/ISSUE_TEMPLATE/PLIP.md b/.github/ISSUE_TEMPLATE/PLIP.md\nindex e570a1162f..df9efd7ad5 100644\n--- a/.github/ISSUE_TEMPLATE/PLIP.md\n+++ b/.github/ISSUE_TEMPLATE/PLIP.md\n@@ -12,7 +12,7 @@ projects: \'plone/47\'\n \n <!--\n \n-Read https://5.docs.plone.org/develop/coredev/docs/plips.html first!\n+Read https://6.docs.plone.org/contributing/core/plips.html first!\n \n Mention the @plone/framework-team when the PLIP is information complete!\n \ndiff --git a/CHANGES.md b/CHANGES.md\nindex de2bfdcf2c..06a95f78ec 100644\n--- a/CHANGES.md\n+++ b/CHANGES.md\n@@ -15,6 +15,60 @@\n \n <!-- towncrier release notes start -->\n \n+## 6.1.0a4.dev0 (2024-07-08)\n+\n+\n+### Bug fixes:\n+\n+- Mockup TinyMCE settings: Remove unused loadingBaseUrl option. 3765-1\n+- Mockup TinyMCE settings: Remove deprecated AtD plugin settings. 3765-2\n+- Mockup TinyMCE settings: Remove unused AtD related views. 3765-3\n+- Mockup TinyMCE settings: Remove unused ITinyMCESpellCheckerSchema and ITinyMCESpellCheckerForm. 3765-4\n+- Fix deprecation warnings in "navtree" code + some micro optimizations\n+  [jensens] #3756\n+- Use details element for collapsibles in the resource registry.\n+  Makes it possible to toggle elements even with broken or missing javascript.\n+  Also properly connect form labels with their inputs.\n+  Fixes #3942\n+- Import INavigationRoot from plone.base, removes DeprecationWarning.\n+  [@jensens] #3945\n+- Use `context` instead of `here` in templates.\n+  Call `@@main_template` (with prefix `@@`) to optimize lookup.\n+  [@jensens] #3946\n+- Reduce DeprecationWarnings. [@jensens] #3949\n+- Fix TypeError in getGroups sorting\n+  [@rohnsha0] #3952\n+- Remove queryCatalog and getFolderContents skins script.\n+  This includes a refactoring in the search RSS and updates to soe tests\n+  [@jensens] #3960\n+- Products.CMFPlone  must not depend on plone.api [@jensens] #3962\n+- Removes duplicate `<article id="content">` in controlpanel templates\n+  [@szakitibi] #3964\n+- Do not test types_not_searched for a element that is not part of the underlying vocabulary.\n+  [@jensens] #3965\n+- Remove unused leftover reference to the Zope2 package from test. [@jensens] #3966\n+- Fix: Traceback in maintenance control panel on shutdown if feature is not available.\n+  Hide button if action is not possible.\n+  [@jensens] #3967\n+- Fixed RegistrationTool to take user email with `__+__@abc.com`.\n+  [@rohnsha0] #3968\n+- Plone upgrade page: show error when upgrade is needed but no upgrades are available.\n+  Especially show a note when the `plone.app.upgrade` package is not available.\n+  [maurits] #3975\n+- Plone upgrade page: show list of previously installed packages that are currently missing.\n+  For example: `plone.app.discussion` may be missing in Plone 6.1, unless you explicitly add it, or depend on the `Plone` package.\n+  [maurits] #3975\n+\n+\n+### Internal:\n+\n+- Resourceregistry controlpanel: zprettify template.\n+  [thet] #3942\n+- Automatically set the label to `03 type: feature (plip)` for PLIPs. @stevepiercy #3982\n+- Automatically add a PLIP issue to the PLIP project board. @stevepiercy #3984\n+- Updated metadata version to 6103.\n+  [maurits] #6103\n+\n ## 6.1.0a3 (2024-04-26)\n \n \ndiff --git a/news/3756.bugfix b/news/3756.bugfix\ndeleted file mode 100644\nindex 4f3c022774..0000000000\n--- a/news/3756.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix deprecation warnings in "navtree" code + some micro optimizations\n-[jensens]\ndiff --git a/news/3765-1.bugfix b/news/3765-1.bugfix\ndeleted file mode 100644\nindex befe772169..0000000000\n--- a/news/3765-1.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove unused loadingBaseUrl option.\ndiff --git a/news/3765-2.bugfix b/news/3765-2.bugfix\ndeleted file mode 100644\nindex 64cdb7bfc9..0000000000\n--- a/news/3765-2.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove deprecated AtD plugin settings.\ndiff --git a/news/3765-3.bugfix b/news/3765-3.bugfix\ndeleted file mode 100644\nindex 0f699fdb93..0000000000\n--- a/news/3765-3.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove unused AtD related views.\ndiff --git a/news/3765-4.bugfix b/news/3765-4.bugfix\ndeleted file mode 100644\nindex 47a716e6a4..0000000000\n--- a/news/3765-4.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Mockup TinyMCE settings: Remove unused ITinyMCESpellCheckerSchema and ITinyMCESpellCheckerForm.\ndiff --git a/news/3942.bugfix b/news/3942.bugfix\ndeleted file mode 100644\nindex a939eff395..0000000000\n--- a/news/3942.bugfix\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-Use details element for collapsibles in the resource registry\n-\n-Makes it possible to toggle elements even with broken or missing javascript.\n-Also properly connect form labels with their inputs.\n-\n-Fixes #3942\ndiff --git a/news/3942.internal b/news/3942.internal\ndeleted file mode 100644\nindex 062c197fa0..0000000000\n--- a/news/3942.internal\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Resourceregistry controlpanel: zprettify template.\n-[thet]\ndiff --git a/news/3945.bugfix b/news/3945.bugfix\ndeleted file mode 100644\nindex d6e4076422..0000000000\n--- a/news/3945.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Import INavigationRoot from plone.base, removes DeprecationWarning.\n-[@jensens]\n\\ No newline at end of file\ndiff --git a/news/3946.bugfix b/news/3946.bugfix\ndeleted file mode 100644\nindex 1853b16830..0000000000\n--- a/news/3946.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Use `context` instead of `here` in templates.\n-Call `@@main_template` (with prefix `@@`) to optimize lookup.\n-[@jensens]\n\\ No newline at end of file\ndiff --git a/news/3949.bugfix b/news/3949.bugfix\ndeleted file mode 100644\nindex bf15b1c268..0000000000\n--- a/news/3949.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Reduce DeprecationWarnings. [@jensens]\ndiff --git a/news/3952.bugfix b/news/3952.bugfix\ndeleted file mode 100644\nindex a63571e60a..0000000000\n--- a/news/3952.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix TypeError in getGroups sorting\n-[@rohnsha0]\n\\ No newline at end of file\ndiff --git a/news/3960.bugfix b/news/3960.bugfix\ndeleted file mode 100644\nindex b1fe215568..0000000000\n--- a/news/3960.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Remove queryCatalog and getFolderContents skins script.\n-This includes a refactoring in the search RSS and updates to soe tests\n-[@jensens]\ndiff --git a/news/3962.bugfix b/news/3962.bugfix\ndeleted file mode 100644\nindex d49decfcd7..0000000000\n--- a/news/3962.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Products.CMFPlone  must not depend on plone.api [@jensens]\ndiff --git a/news/3964.bugfix b/news/3964.bugfix\ndeleted file mode 100644\nindex 08994471a3..0000000000\n--- a/news/3964.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Removes duplicate `<article id="content">` in controlpanel templates\n-[@szakitibi]\ndiff --git a/news/3965.bugfix b/news/3965.bugfix\ndeleted file mode 100644\nindex de4d0d6091..0000000000\n--- a/news/3965.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Do not test types_not_searched for a element that is not part of the underlying vocabulary.\n-[@jensens]\ndiff --git a/news/3966.bugfix b/news/3966.bugfix\ndeleted file mode 100644\nindex 1c962a9e34..0000000000\n--- a/news/3966.bugfix\n+++ /dev/null\n@@ -1 +0,0 @@\n-Remove unused leftover reference to the Zope2 package from test. [@jensens]\ndiff --git a/news/3967.bugfix b/news/3967.bugfix\ndeleted file mode 100644\nindex 8cbd922fef..0000000000\n--- a/news/3967.bugfix\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Fix: Traceback in maintenance control panel on shutdown if feature is not available.\n-Hide button if action is not possible.\n-[@jensens]\ndiff --git a/news/3968.bugfix b/news/3968.bugfix\ndeleted file mode 100644\nindex c81fb575d7..0000000000\n--- a/news/3968.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fixed RegistrationTool to take user email with `__+__@abc.com`.\n-[@rohnsha0]\n\\ No newline at end of file\ndiff --git a/news/3975.bugfix.1 b/news/3975.bugfix.1\ndeleted file mode 100644\nindex e93d7ef4ab..0000000000\n--- a/news/3975.bugfix.1\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Plone upgrade page: show error when upgrade is needed but no upgrades are available.\n-Especially show a note when the `plone.app.upgrade` package is not available.\n-[maurits]\ndiff --git a/news/3975.bugfix.2 b/news/3975.bugfix.2\ndeleted file mode 100644\nindex ffd645a7c0..0000000000\n--- a/news/3975.bugfix.2\n+++ /dev/null\n@@ -1,3 +0,0 @@\n-Plone upgrade page: show list of previously installed packages that are currently missing.\n-For example: `plone.app.discussion` may be missing in Plone 6.1, unless you explicitly add it, or depend on the `Plone` package.\n-[maurits]\ndiff --git a/news/3982.internal b/news/3982.internal\ndeleted file mode 100644\nindex f2a9d60744..0000000000\n--- a/news/3982.internal\n+++ /dev/null\n@@ -1 +0,0 @@\n-Automatically set the label to `03 type: feature (plip)` for PLIPs. @stevepiercy\ndiff --git a/news/3984.internal b/news/3984.internal\ndeleted file mode 100644\nindex 97a602f581..0000000000\n--- a/news/3984.internal\n+++ /dev/null\n@@ -1 +0,0 @@\n-Automatically add a PLIP issue to the PLIP project board. @stevepiercy\ndiff --git a/news/3988.internal b/news/3988.internal\nnew file mode 100644\nindex 0000000000..420c7c968f\n--- /dev/null\n+++ b/news/3988.internal\n@@ -0,0 +1 @@\n+Update the link to the PLIPs page for Plone 6 Documentation. @stevepiercy\ndiff --git a/news/6103.internal b/news/6103.internal\ndeleted file mode 100644\nindex efbd58ca7e..0000000000\n--- a/news/6103.internal\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Updated metadata version to 6103.\n-[maurits]\ndiff --git a/setup.py b/setup.py\nindex 52f7d51108..d296af837a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n from setuptools import setup\n \n \n-version = "6.1.0a4.dev0"\n+version = "6.1.0a4.dev1"\n \n \n setup(\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-07-25T22:09:27+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/72432f2f01baa490c526dfa74c7693e22712adf4

Merge pull request #3978 from plone/remove-portal_properties

Remove `propertiestool` import step and usage of `portal_properties`.

Files changed:
A news/125.breaking
M Products/CMFPlone/PloneTool.py
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/templates/ajax_main_template.pt
M Products/CMFPlone/browser/templates/main_template.pt
M Products/CMFPlone/exportimport/configure.zcml
M Products/CMFPlone/profiles/default/componentregistry.xml
M Products/CMFPlone/profiles/default/toolset.xml
M Products/CMFPlone/tests/testNavigationView.py
M Products/CMFPlone/tests/testPortalCreation.py
M Products/CMFPlone/tests/testWebDAV.py
M Products/CMFPlone/tests/test_defaultpage.py
M Products/CMFPlone/tests/test_zmi.py
D Products/CMFPlone/exportimport/propertiestool.py
D Products/CMFPlone/exportimport/tests/testPropertiesTool.py
D Products/CMFPlone/profiles/default/propertiestool.xml

b'diff --git a/Products/CMFPlone/PloneTool.py b/Products/CMFPlone/PloneTool.py\nindex 886d93ff63..e5ec5bd1be 100644\n--- a/Products/CMFPlone/PloneTool.py\n+++ b/Products/CMFPlone/PloneTool.py\n@@ -623,9 +623,8 @@ def browserDefault(self, obj):\n         # 3. If the object has a property default_page set and this gives a list\n         #     of, or single, object id, and that object is is found in the\n         #     folder or is the name of a skin template, return that id\n-        # 4. If the property default_page is set in site_properties and that\n-        #     property contains a list of ids of which one id is found in the\n-        #     folder, return that id\n+        # 4. Look up the property plone.default_page in the registry for\n+        #     magic ids and test these.\n         # 5. If the object implements IBrowserDefault, try to get the selected\n         #     layout.\n         # 6. If the type has a \'folderlisting\' action and no default page is\n@@ -928,7 +927,7 @@ def getUserFriendlyTypes(self, typesList=None):\n         # and selection purposes.\n         #\n         # This is the list of types available in the portal, minus those\n-        # defined in the types_not_searched property in site_properties, if it\n+        # defined in the types_not_searched property in the registry, if it\n         # exists.\n         #\n         # If typesList is given, this is used as the base list; else all types\ndiff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex 644099ea71..2b0fef236c 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -5,7 +5,6 @@\n from plone.base.interfaces.controlpanel import IMailSchema\n from plone.base.utils import pretty_title_or_id\n from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFCore.utils import getToolByName\n from Products.Five.browser import BrowserView\n from Products.MailHost.interfaces import IMailHost\n@@ -201,11 +200,7 @@ def home_folder(self, username):\n         return self.membership_tool.getHomeFolder(id=username)\n \n     def __call__(self):\n-        self.portal_properties = getUtility(IPropertiesTool)\n-\n         self.portal_catalog = getToolByName(self.context, "portal_catalog")\n-\n-        # XXX: getUtility call does not work.\n         self.membership_tool = getToolByName(self.context, "portal_membership")\n \n         self.portal_state = getMultiAdapter(\ndiff --git a/Products/CMFPlone/browser/templates/ajax_main_template.pt b/Products/CMFPlone/browser/templates/ajax_main_template.pt\nindex 81eab03a4a..f4efc3b8e7 100644\n--- a/Products/CMFPlone/browser/templates/ajax_main_template.pt\n+++ b/Products/CMFPlone/browser/templates/ajax_main_template.pt\n@@ -15,7 +15,6 @@\n           dummy python: plone_layout.mark_view(view);\n           portal_url python:portal_state.portal_url();\n           checkPermission python:context.restrictedTraverse(\'portal_membership\').checkPermission;\n-          site_properties python:context.restrictedTraverse(\'portal_properties\').site_properties;\n           ajax_include_head python:request.get(\'ajax_include_head\', False);\n           ajax_load python:False;"\n       i18n:domain="plone"\ndiff --git a/Products/CMFPlone/browser/templates/main_template.pt b/Products/CMFPlone/browser/templates/main_template.pt\nindex 9bffd9a9bb..efe9eac05e 100644\n--- a/Products/CMFPlone/browser/templates/main_template.pt\n+++ b/Products/CMFPlone/browser/templates/main_template.pt\n@@ -15,7 +15,6 @@\n           dummy python: plone_layout.mark_view(view);\n           portal_url python:portal_state.portal_url();\n           checkPermission python:context.restrictedTraverse(\'portal_membership\').checkPermission;\n-          site_properties python:context.restrictedTraverse(\'portal_properties\').site_properties;\n           ajax_include_head python:request.get(\'ajax_include_head\', False);\n           ajax_load python:False;"\n       i18n:domain="plone"\ndiff --git a/Products/CMFPlone/exportimport/configure.zcml b/Products/CMFPlone/exportimport/configure.zcml\nindex ca451845e8..b3fe625468 100644\n--- a/Products/CMFPlone/exportimport/configure.zcml\n+++ b/Products/CMFPlone/exportimport/configure.zcml\n@@ -54,19 +54,9 @@\n     <depends name="catalog" />\n     <depends name="viewlets" />\n     <depends name="controlpanel" />\n-    <depends name="propertiestool" />\n     <depends name="workflow" />\n   </genericsetup:importStep>\n \n-  <genericsetup:importStep\n-      name="propertiestool"\n-      title="Plone Properties"\n-      description="Import plone properties tool and subobjects."\n-      handler="Products.CMFPlone.exportimport.propertiestool.importPloneProperties"\n-      >\n-    <depends name="componentregistry" />\n-  </genericsetup:importStep>\n-\n   <genericsetup:importStep\n       name="update-workflow-rolemap"\n       title="Update workflow role mappings"\n@@ -105,13 +95,6 @@\n       handler="Products.CMFPlone.exportimport.memberdata_properties.exportMemberDataProperties"\n       />\n \n-  <genericsetup:exportStep\n-      name="propertiestool"\n-      title="Plone Properties"\n-      description="Export plone properties tool and subobjects."\n-      handler="Products.CMFPlone.exportimport.propertiestool.exportPloneProperties"\n-      />\n-\n   <genericsetup:exportStep\n       name="viewlets"\n       title="Viewlet Settings"\n@@ -119,34 +102,12 @@\n       handler="plone.app.viewletmanager.exportimport.storage.exportViewletSettingsStorage"\n       />\n \n-  <adapter\n-      factory=".propertiestool.PlonePropertiesToolXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="plone.base.interfaces.IPropertiesTool\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      />\n-\n-  <adapter\n-      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="plone.base.interfaces.ISimpleItemWithProperties\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      />\n-\n   <adapter\n       factory="Products.CMFCore.exportimport.content.StructureFolderWalkingAdapter"\n       provides="Products.GenericSetup.interfaces.IFilesystemImporter"\n       for="Products.CMFCore.interfaces.ISiteRoot"\n       />\n \n-  <adapter\n-      factory=".propertiestool.SimpleItemWithPropertiesXMLAdapter"\n-      provides="Products.GenericSetup.interfaces.IBody"\n-      for="Products.CMFCore.interfaces.IMemberDataTool\n-           Products.GenericSetup.interfaces.ISetupEnviron"\n-      zcml:condition="not-installed Products.CMFCore.exportimport.memberdata"\n-      />\n-\n   <adapter\n       factory=".controlpanel.ControlPanelXMLAdapter"\n       provides="Products.GenericSetup.interfaces.IBody"\ndiff --git a/Products/CMFPlone/exportimport/propertiestool.py b/Products/CMFPlone/exportimport/propertiestool.py\ndeleted file mode 100644\nindex 94e21a1326..0000000000\n--- a/Products/CMFPlone/exportimport/propertiestool.py\n+++ /dev/null\n@@ -1,140 +0,0 @@\n-"""Plone Properties tool setup handlers.\n-\n-$Id:$\n-"""\n-\n-from plone.base.interfaces import IPropertiesTool as IPlonePropertiesTool\n-from plone.base.interfaces import ISimpleItemWithProperties\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from Products.GenericSetup.interfaces import IBody\n-from Products.GenericSetup.interfaces import INode\n-from Products.GenericSetup.utils import ObjectManagerHelpers\n-from Products.GenericSetup.utils import PropertyManagerHelpers\n-from Products.GenericSetup.utils import XMLAdapterBase\n-from zope.component import queryMultiAdapter\n-\n-\n-_FILENAME = "propertiestool.xml"\n-\n-\n-def importPloneProperties(context):\n-    """Import plone properties tool."""\n-    site = context.getSite()\n-    logger = context.getLogger("propertiestool")\n-    ptool = getToolByName(site, "portal_properties")\n-\n-    body = context.readDataFile(_FILENAME)\n-    if body is None:\n-        return\n-\n-    importer = queryMultiAdapter((ptool, context), IBody)\n-    if importer is None:\n-        logger.warning("Import adapter missing.")\n-        return\n-\n-    importer.body = body\n-    logger.info("Properties tool imported.")\n-\n-\n-def exportPloneProperties(context):\n-    """Export plone properties tool."""\n-    site = context.getSite()\n-    logger = context.getLogger("propertiestool")\n-    ptool = getToolByName(site, "portal_properties", None)\n-    if ptool is None:\n-        return\n-\n-    exporter = queryMultiAdapter((ptool, context), IBody)\n-    # IBody(ptool)\n-    if exporter is None:\n-        logger.warning("Export adapter missing.")\n-        return\n-\n-    context.writeDataFile(_FILENAME, exporter.body, exporter.mime_type)\n-    logger.info("Properties tool exported.")\n-\n-\n-class SimpleItemWithPropertiesXMLAdapter(XMLAdapterBase, PropertyManagerHelpers):\n-\n-    """Node im- and exporter for SimpleItemWithProperties."""\n-\n-    __used_for__ = ISimpleItemWithProperties\n-\n-    def _exportNode(self):\n-        """Export the object as a DOM node."""\n-        # self._doc = doc\n-        node = self._getObjectNode("object")\n-        node.appendChild(self._extractProperties())\n-        return node\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        self._initProperties(node)\n-\n-    node = property(_exportNode, _importNode)\n-\n-\n-class PlonePropertiesToolXMLAdapter(XMLAdapterBase, ObjectManagerHelpers):\n-\n-    """Node im- and exporter for Plone PropertiesTool."""\n-\n-    __used_for__ = IPlonePropertiesTool\n-\n-    def _exportNode(self):\n-        """Export the object as a DOM node."""\n-        # self._doc = doc\n-        node = self._getObjectNode("object")\n-        # node.setAttribute(\'xmlns:i18n\', I18NURI)\n-        node.appendChild(self._extractObjects())\n-        return node\n-\n-    def _importNode(self, node):\n-        """Import the object from the DOM node."""\n-        if self.environ.shouldPurge():\n-            self._purgeObjects()\n-\n-        self._initObjects(node)\n-\n-    def _initObjects(self, node):\n-        """Import subobjects"""\n-        # XXX: We could just use the _initObjects() from\n-        # ObjectManagerHelpers except that it looks up the object\n-        # constructor from Products.meta_type and\n-        # SimpleItemWithProperties doesn\'t get registered there.\n-        for child in node.childNodes:\n-            if child.nodeName != "object":\n-                continue\n-            if child.hasAttribute("deprecated"):\n-                continue\n-            parent = self.context\n-\n-            obj_id = str(child.getAttribute("name"))\n-            if obj_id not in parent:\n-                parent._setObject(obj_id, SimpleItemWithProperties(obj_id))\n-\n-            if child.hasAttribute("insert-before"):\n-                insert_before = child.getAttribute("insert-before")\n-                if insert_before == "*":\n-                    parent.moveObjectsToTop(obj_id)\n-                else:\n-                    try:\n-                        position = parent.getObjectPosition(insert_before)\n-                        parent.moveObjectToPosition(obj_id, position)\n-                    except ValueError:\n-                        pass\n-            elif child.hasAttribute("insert-after"):\n-                insert_after = child.getAttribute("insert-after")\n-                if insert_after == "*":\n-                    parent.moveObjectsToBottom(obj_id)\n-                else:\n-                    try:\n-                        position = parent.getObjectPosition(insert_after)\n-                        parent.moveObjectToPosition(obj_id, position + 1)\n-                    except ValueError:\n-                        pass\n-\n-            obj = getattr(self.context, obj_id)\n-            importer = queryMultiAdapter((obj, self.environ), INode)\n-            if importer:\n-                importer.node = child\ndiff --git a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py b/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\ndeleted file mode 100644\nindex 48e13f8075..0000000000\n--- a/Products/CMFPlone/exportimport/tests/testPropertiesTool.py\n+++ /dev/null\n@@ -1,95 +0,0 @@\n-from Products.CMFPlone.exportimport.tests.base import BodyAdapterTestCase\n-from Products.CMFPlone.PropertiesTool import PropertiesTool\n-from Products.CMFPlone.PropertiesTool import SimpleItemWithProperties\n-from zope.component import provideAdapter\n-\n-\n-_PROPERTYSHEET_XML = b"""\\\n-<?xml version="1.0" encoding="utf-8"?>\n-<object name="site_properties" meta_type="Plone Property Sheet">\n- <property name="title">Site wide properties</property>\n- <property name="displayPublicationDateInByline"\n-    type="boolean">True</property>\n-</object>\n-"""\n-\n-_PROPERTIESTOOL_XML = b"""\\\n-<?xml version="1.0" encoding="utf-8"?>\n-<object name="portal_properties" meta_type="Plone Properties Tool">\n- <object name="site_properties" meta_type="Plone Property Sheet">\n-  <property name="title">Site wide properties</property>\n-  <property name="displayPublicationDateInByline"\n-     type="boolean">True</property>\n- </object>\n-</object>\n-"""\n-\n-\n-class PropertySheetXMLAdapterTests(BodyAdapterTestCase):\n-    def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            SimpleItemWithPropertiesXMLAdapter,\n-        )\n-\n-        return SimpleItemWithPropertiesXMLAdapter\n-\n-    def _populate(self, obj):\n-        obj.manage_changeProperties(title="Site wide properties")\n-        obj.manage_addProperty("displayPublicationDateInByline", True, "boolean")\n-\n-    def setUp(self):\n-        from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.GenericSetup.interfaces import IBody\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n-\n-        provideAdapter(\n-            self._getTargetClass(), (ISimpleItemWithProperties, ISetupEnviron), IBody\n-        )\n-\n-        self._obj = SimpleItemWithProperties("site_properties")\n-        self._BODY = _PROPERTYSHEET_XML\n-\n-\n-class PropertiesToolXMLAdapterTests(BodyAdapterTestCase):\n-    def _getTargetClass(self):\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            PlonePropertiesToolXMLAdapter,\n-        )\n-\n-        return PlonePropertiesToolXMLAdapter\n-\n-    def _populate(self, obj):\n-        obj._setObject("site_properties", SimpleItemWithProperties("site_properties"))\n-        obj.site_properties.manage_changeProperties(title="Site wide properties")\n-        obj.site_properties.manage_addProperty(\n-            "displayPublicationDateInByline", True, "boolean"\n-        )\n-\n-    def setUp(self):\n-        from plone.base.interfaces import IPropertiesTool\n-        from plone.base.interfaces import ISimpleItemWithProperties\n-        from Products.CMFPlone.exportimport.propertiestool import (\n-            SimpleItemWithPropertiesXMLAdapter,\n-        )\n-        from Products.GenericSetup.interfaces import IBody\n-        from Products.GenericSetup.interfaces import ISetupEnviron\n-\n-        provideAdapter(self._getTargetClass(), (IPropertiesTool, ISetupEnviron), IBody)\n-        provideAdapter(\n-            SimpleItemWithPropertiesXMLAdapter,\n-            (ISimpleItemWithProperties, ISetupEnviron),\n-            IBody,\n-        )\n-\n-        self._obj = PropertiesTool()\n-        self._BODY = _PROPERTIESTOOL_XML\n-\n-\n-def test_suite():\n-    from unittest import makeSuite\n-    from unittest import TestSuite\n-\n-    suite = TestSuite()\n-    suite.addTest(makeSuite(PropertySheetXMLAdapterTests))\n-    suite.addTest(makeSuite(PropertiesToolXMLAdapterTests))\n-    return suite\ndiff --git a/Products/CMFPlone/profiles/default/componentregistry.xml b/Products/CMFPlone/profiles/default/componentregistry.xml\nindex f35d005476..f1195c4eb2 100644\n--- a/Products/CMFPlone/profiles/default/componentregistry.xml\n+++ b/Products/CMFPlone/profiles/default/componentregistry.xml\n@@ -68,9 +68,6 @@\n     <utility factory="plone.app.viewletmanager.storage.ViewletSettingsStorage"\n              interface="plone.app.viewletmanager.interfaces.IViewletSettingsStorage"\n     />\n-    <utility interface="Products.CMFCore.interfaces.IPropertiesTool"\n-             object="portal_properties"\n-    />\n     <utility interface="Products.CMFCore.interfaces.ISiteRoot"\n              object=""\n     />\ndiff --git a/Products/CMFPlone/profiles/default/propertiestool.xml b/Products/CMFPlone/profiles/default/propertiestool.xml\ndeleted file mode 100644\nindex d90844dacd..0000000000\n--- a/Products/CMFPlone/profiles/default/propertiestool.xml\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-<?xml version="1.0" encoding="utf-8"?>\n-<object meta_type="Plone Properties Tool"\n-        name="portal_properties"\n->\n-  <object meta_type="Plone Property Sheet"\n-          name="navtree_properties"\n-  >\n-    <property name="title">NavigationTree properties</property>\n-  </object>\n-  <object meta_type="Plone Property Sheet"\n-          name="site_properties"\n-  >\n-    <property name="title">Site wide properties</property>\n-  </object>\n-</object>\ndiff --git a/Products/CMFPlone/profiles/default/toolset.xml b/Products/CMFPlone/profiles/default/toolset.xml\nindex dfbff83fe0..1a225138d1 100644\n--- a/Products/CMFPlone/profiles/default/toolset.xml\n+++ b/Products/CMFPlone/profiles/default/toolset.xml\n@@ -42,9 +42,6 @@\n   <required class="Products.CMFPlone.PasswordResetTool.PasswordResetTool"\n             tool_id="portal_password_reset"\n   />\n-  <required class="Products.CMFPlone.PropertiesTool.PropertiesTool"\n-            tool_id="portal_properties"\n-  />\n   <required class="Products.CMFPlone.RegistrationTool.RegistrationTool"\n             tool_id="portal_registration"\n   />\ndiff --git a/Products/CMFPlone/tests/testNavigationView.py b/Products/CMFPlone/tests/testNavigationView.py\nindex fa8d525a6b..aeddd0ba26 100644\n--- a/Products/CMFPlone/tests/testNavigationView.py\n+++ b/Products/CMFPlone/tests/testNavigationView.py\n@@ -121,29 +121,6 @@ def path(x):\n         self.assertEqual(subfolder221map["item"].getPath(), path(subfolder221))\n         self.assertEqual(len(subfolder221map["children"]), 0)\n \n-    def testSitemapUnchangedWithTopLevel(self):\n-        # Test that setting topLevel does not alter the sitemap\n-        ntp = self.portal.portal_properties.navtree_properties\n-        for topLevel in range(0, 5):\n-            ntp.manage_changeProperties(topLevel=topLevel)\n-            view = self.view_class(self.portal, self.request)\n-            sitemap = view.siteMap()\n-            self.assertEqual(\n-                sitemap["children"][-1]["item"].getPath(), "/plone/folder2"\n-            )\n-\n-    def testSitemapUnchangedWithBottomLevel(self):\n-        # Test that setting bottomLevel does not alter the sitemap\n-        ntp = self.portal.portal_properties.navtree_properties\n-        for bottomLevel in range(0, 5):\n-            ntp.manage_changeProperties(bottomLevel=bottomLevel)\n-            view = self.view_class(self.portal, self.request)\n-            sitemap = view.siteMap()\n-            self.assertEqual(\n-                sitemap["children"][-1]["item"].getPath(), "/plone/folder2"\n-            )\n-            self.assertTrue(len(sitemap["children"][-1]["children"]) > 0)\n-\n     def testSitemapWithNavigationRoot(self):\n         self.navigation_settings.root = "/folder2"\n         view = self.view_class(self.portal, self.request)\n@@ -270,7 +247,7 @@ def testTabInfo(self):\n         self.assertTrue("review_state" in tab and tab["review_state"])\n \n     def testDisableFolderTabs(self):\n-        # Setting the site_property disable_folder_sections should remove\n+        # Setting the registry setting generate_tabs to False should remove\n         # all folder based tabs\n         self.navigation_settings.generate_tabs = False\n         view = self.view_class(self.portal, self.request)\ndiff --git a/Products/CMFPlone/tests/testPortalCreation.py b/Products/CMFPlone/tests/testPortalCreation.py\nindex 080d3c6beb..f3474cf2c7 100644\n--- a/Products/CMFPlone/tests/testPortalCreation.py\n+++ b/Products/CMFPlone/tests/testPortalCreation.py\n@@ -42,7 +42,6 @@ def afterSetUp(self):\n         self.types = self.portal.portal_types\n         self.cp = self.portal.portal_controlpanel\n         self.actions = self.portal.portal_actions\n-        self.properties = self.portal.portal_properties\n         self.memberdata = self.portal.portal_memberdata\n         self.catalog = self.portal.portal_catalog\n         self.groups = self.portal.portal_groups\n@@ -146,35 +145,11 @@ def testNoPortalNavigationTool(self):\n         # portal_navigation should have been removed\n         self.assertFalse("portal_navigation" in self.portal)\n \n-    def testNoFormProperties(self):\n-        # form_properties should have been removed\n-        self.assertFalse("form_properties" in self.properties)\n-\n-    def testNoNavigationProperties(self):\n-        # navigation_properties should have been removed\n-        self.assertFalse("navigation_properties" in self.properties)\n-\n     def testFormToolTipsProperty(self):\n         # formtooltips should have been removed\n         self.assertFalse(self.memberdata.hasProperty("formtooltips"))\n \n     def testNavTreeProperties(self):\n-        # navtree_properties should contain the new properties\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("parentMetaTypesNotToQuery")\n-        )\n-        self.assertFalse(self.properties.navtree_properties.hasProperty("sitemapDepth"))\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("showAllParents")\n-        )\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("metaTypesNotToList")\n-        )  # noqa\n-        self.assertFalse(\n-            self.properties.navtree_properties.hasProperty("sortAttribute")\n-        )\n-        self.assertFalse(self.properties.navtree_properties.hasProperty("sortOrder"))\n-\n         registry = getUtility(IRegistry)\n         self.assertTrue("plone.workflow_states_to_show" in registry)\n         self.assertTrue("plone.filter_on_workflow" in registry)\n@@ -946,9 +921,6 @@ def testFinalStepsWithMembersFolderDeleted(self):\n \n \n class TestManagementPageCharset(PloneTestCase.PloneTestCase):\n-    def afterSetUp(self):\n-        self.properties = self.portal.portal_properties\n-\n     def testManagementPageCharset(self):\n         manage_charset = getattr(self.portal, "management_page_charset", None)\n         self.assertTrue(manage_charset)\ndiff --git a/Products/CMFPlone/tests/testWebDAV.py b/Products/CMFPlone/tests/testWebDAV.py\nindex 2105ae4390..e3938407ef 100644\n--- a/Products/CMFPlone/tests/testWebDAV.py\n+++ b/Products/CMFPlone/tests/testWebDAV.py\n@@ -18,17 +18,6 @@\n """\n \n \n-class TestDAVProperties(PloneTestCase.PloneTestCase):\n-    def testPropertiesToolTitle(self):\n-        ptool = getToolByName(self.portal, "portal_properties")\n-        psets = dict(ptool.propertysheets.items())\n-        self.assertTrue("webdav" in psets.keys())\n-        default = psets["webdav"]\n-        items = dict(default.propertyItems())\n-        self.assertTrue("displayname" in items.keys())\n-        self.assertEqual(items["displayname"], ptool.title)\n-\n-\n class TestPUTObjects(PloneTestCase.PloneTestCase):\n     # PUT objects into Plone including special cases like index_html.\n     # Confirms fix for http://dev.plone.org/plone/ticket/1375\ndiff --git a/Products/CMFPlone/tests/test_defaultpage.py b/Products/CMFPlone/tests/test_defaultpage.py\nindex 3be7eafd7d..ac633b5d6b 100644\n--- a/Products/CMFPlone/tests/test_defaultpage.py\n+++ b/Products/CMFPlone/tests/test_defaultpage.py\n@@ -106,8 +106,8 @@ def test_get_default_page_step_3_2(self):\n         self.assertEqual("d1", get_default_page(self.folder))\n \n     def test_get_default_page_step_4(self):\n-        # 4. Else, look up the property default_page in site_properties for\n-        #   magic ids and test these\n+        # 4. Else, look up the property plone.default_page in the registry for\n+        #    magic ids and test these\n         registry = getUtility(IRegistry)\n         registry["plone.default_page"] = ["d1"]\n         self.folder.invokeFactory("Document", "d1", title="Doc 1")\ndiff --git a/Products/CMFPlone/tests/test_zmi.py b/Products/CMFPlone/tests/test_zmi.py\nindex 3ec5997246..8be5e75e98 100644\n--- a/Products/CMFPlone/tests/test_zmi.py\n+++ b/Products/CMFPlone/tests/test_zmi.py\n@@ -121,11 +121,6 @@ def test_portal_modifier(self):\n         view = self.portal.restrictedTraverse(url)\n         self.assertTrue(view(), msg=f"{url} is broken")\n \n-    def test_portal_properties(self):\n-        url = "portal_properties/manage_main"\n-        view = self.portal.restrictedTraverse(url)\n-        self.assertTrue(view(), msg=f"{url} is broken")\n-\n     def test_portal_purgepolicy(self):\n         url = "portal_purgepolicy/manage_propertiesForm"\n         view = self.portal.restrictedTraverse(url)\ndiff --git a/news/125.breaking b/news/125.breaking\nnew file mode 100644\nindex 0000000000..6c3870d67e\n--- /dev/null\n+++ b/news/125.breaking\n@@ -0,0 +1,3 @@\n+Remove `propertiestool` import step and usage of `portal_properties`.\n+Remove `site_properties` from `main_template.pt` and ajax template.\n+[maurits]\n'

