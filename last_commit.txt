Repository: plone.restapi


Branch: refs/heads/main
Date: 2024-02-11T18:32:54-08:00
Author: Akshat Jain (Akshat2Jain) <101265586+Akshat2Jain@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/7833026a16b0c9a4bfb7230dece8c531e9a02eff

added function get_allow_discussion_value (#1674)

* added allow_discussion funtion

* added log

* added else condition

* added back test

* Handle IContentish interface implementation in get_allow_discussion_value

* formatted using black

* imported IContentish Interface

* removed the else condition

* corrected else statement

* added discussion test to portal

* added testSerializer

* added function

* formatted

* test name changes to prevent flake8 fail

* made changes allow_discussion_portal_function

* removed flake 8 error

* update the requested version

* removed the portal error

Files changed:
A news/1674.bugfix
M src/plone/restapi/serializer/dxcontent.py
M src/plone/restapi/serializer/site.py
M src/plone/restapi/tests/test_dxcontent_serializer.py

b'diff --git a/news/1674.bugfix b/news/1674.bugfix\nnew file mode 100644\nindex 000000000..ddfb6d133\n--- /dev/null\n+++ b/news/1674.bugfix\n@@ -0,0 +1 @@\n+Fixed `allow_discussion` serialization for the Plone Site, to return a boolean like other content types. @Akshat2Jain\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex f3967e145..0154f1c91 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -21,6 +21,7 @@\n from plone.supermodel.utils import mergedTaggedValueDict\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import base_hasattr\n+from Products.CMFCore.interfaces import IContentish\n from zope.component import adapter\n from zope.component import getMultiAdapter\n from zope.component import queryMultiAdapter\n@@ -39,6 +40,18 @@\n     WorkingCopyInfo = None\n \n \n+def get_allow_discussion_value(context, request, result):\n+    # This test is to handle the plone.app.discussion not being installed situation\n+    if "allow_discussion" in result:\n+        # Check if the content item implements the IContentish interface\n+        if IContentish.providedBy(context):\n+            result["allow_discussion"] = getMultiAdapter(\n+                (context, request), name="conversation_view"\n+            ).enabled()\n+    else:\n+        result["allow_discussion"] = False\n+\n+\n @implementer(ISerializeToJson)\n @adapter(IDexterityContent, Interface)\n class SerializeToJson:\n@@ -125,9 +138,7 @@ def __call__(self, version=None, include_items=True):\n         if target_url:\n             result["targetUrl"] = target_url\n \n-        result["allow_discussion"] = getMultiAdapter(\n-            (self.context, self.request), name="conversation_view"\n-        ).enabled()\n+        get_allow_discussion_value(self.context, self.request, result)\n \n         return result\n \ndiff --git a/src/plone/restapi/serializer/site.py b/src/plone/restapi/serializer/site.py\nindex afb778608..11c5a0a2a 100644\n--- a/src/plone/restapi/serializer/site.py\n+++ b/src/plone/restapi/serializer/site.py\n@@ -23,6 +23,7 @@\n from zope.interface import Interface\n from zope.schema import getFields\n from zope.security.interfaces import IPermission\n+from plone.restapi.serializer.dxcontent import get_allow_discussion_value\n \n import json\n \n@@ -121,6 +122,8 @@ def __call__(self, version=None):\n             for brain in batch\n         ]\n \n+        get_allow_discussion_value(self.context, self.request, result)\n+\n         return result\n \n     def check_permission(self, permission_name, obj):\ndiff --git a/src/plone/restapi/tests/test_dxcontent_serializer.py b/src/plone/restapi/tests/test_dxcontent_serializer.py\nindex c853766d3..18d41cb95 100644\n--- a/src/plone/restapi/tests/test_dxcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_dxcontent_serializer.py\n@@ -26,10 +26,15 @@\n from zope.component import queryUtility\n from zope.interface import Interface\n from zope.publisher.interfaces.browser import IBrowserRequest\n+from importlib import import_module\n \n import json\n import unittest\n \n+HAS_PLONE_61 = getattr(\n+    import_module("Products.CMFPlone.factory"), "PLONE61MARKER", False\n+)\n+\n \n class AdapterCM:\n     """Context manager that will temporarily register an adapter"""\n@@ -498,6 +503,17 @@ def test_allow_discussion_obj_instance_allows_global_enabled(self):\n         self.assertIn("allow_discussion", obj)\n         self.assertEqual(True, obj["allow_discussion"])\n \n+    @unittest.skipUnless(\n+        HAS_PLONE_61, "Skipping test for Plone versions earlier than 6.1"\n+    )\n+    def test_allow_discussion_portal_default(self):\n+        """Not globally addable, not fti enabled, not obj instance enabled"""\n+        serializer = getMultiAdapter((self.portal, self.request), ISerializeToJson)\n+        obj = serializer()\n+\n+        self.assertIn("allow_discussion", obj)\n+        self.assertEqual(False, obj["allow_discussion"])\n+\n     def test_allow_discussion_obj_instance_not_set_global_enabled(self):\n         self.portal.invokeFactory("Document", id="doc2")\n         registry = queryUtility(IRegistry)\n'

