Repository: plone.dexterity


Branch: refs/heads/master
Date: 2024-04-24T17:07:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.dexterity/commit/5cfa19860b3b68893572ecdd24f341c4d6b1f52e

Fix tests to work with Zope master which expects requests to have an ensure_publishable method.

Files changed:
A news/1202.bugfix
M plone/dexterity/tests/test_webdav.py

b'diff --git a/news/1202.bugfix b/news/1202.bugfix\nnew file mode 100644\nindex 00000000..3bf21a8c\n--- /dev/null\n+++ b/news/1202.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests to work with Zope master which expects requests to have an `ensure_publishable` method.\n+[maurits]\ndiff --git a/plone/dexterity/tests/test_webdav.py b/plone/dexterity/tests/test_webdav.py\nindex 8d17cfbe..c86127be 100644\n--- a/plone/dexterity/tests/test_webdav.py\n+++ b/plone/dexterity/tests/test_webdav.py\n@@ -59,6 +59,10 @@ class DAVTestRequest(TestRequest):\n     def _createResponse(self):\n         return HTTPResponse()\n \n+    def ensure_publishable(self, obj, for_call=False):\n+        # Needed for Zope > 5.9.\n+        return\n+\n \n class TestWebZope2DAVAPI(MockTestCase):\n     def test_get_size_no_adapter(self):\n@@ -1295,18 +1299,21 @@ def lock_request(self):\n         return lock_request\n \n     def test_get_subfolder(self):\n-        traversal = DexterityPublishTraverse(self.folder, None)\n-        traversed = traversal.publishTraverse(self.get_request, "subfolder")\n+        request = self.get_request\n+        traversal = DexterityPublishTraverse(self.folder, request)\n+        traversed = traversal.publishTraverse(request, "subfolder")\n         self.assertEqual(traversed, self.subfolder)\n \n     def test_lock_subfolder(self):\n-        traversal = DexterityPublishTraverse(self.folder, None)\n-        traversed = traversal.publishTraverse(self.lock_request, "subfolder")\n+        request = self.lock_request\n+        traversal = DexterityPublishTraverse(self.folder, request)\n+        traversed = traversal.publishTraverse(request, "subfolder")\n         self.assertEqual(traversed, self.subfolder)\n \n     def test_get_acquired(self):\n-        traversal = DexterityPublishTraverse(self.subfolder, None)\n-        traversed = traversal.publishTraverse(self.get_request, "folder")\n+        request = self.get_request\n+        traversal = DexterityPublishTraverse(self.subfolder, request)\n+        traversed = traversal.publishTraverse(request, "folder")\n         self.assertEqual(traversed, self.folder)\n \n     def test_lock_acquired(self):\n@@ -1315,22 +1322,25 @@ def test_lock_acquired(self):\n         """\n         from webdav.NullResource import NullResource\n \n-        traversal = DexterityPublishTraverse(self.subfolder, None)\n-        traversed = traversal.publishTraverse(self.lock_request, "folder")\n+        request = self.lock_request\n+        traversal = DexterityPublishTraverse(self.subfolder, request)\n+        traversed = traversal.publishTraverse(request, "folder")\n         self.assertIsInstance(traversed, NullResource)\n \n     def test_get_vhm(self):\n         """Ensure we can handle virtual hosting with regular requests"""\n         from Products.SiteAccess.VirtualHostMonster import VirtualHostMonster\n \n-        traversal = DexterityPublishTraverse(self.folder, None)\n-        traversed = traversal.publishTraverse(self.get_request, "virtual_hosting")\n+        request = self.get_request\n+        traversal = DexterityPublishTraverse(self.folder, request)\n+        traversed = traversal.publishTraverse(request, "virtual_hosting")\n         self.assertIsInstance(traversed, VirtualHostMonster)\n \n     def test_lock_vhm(self):\n         """Ensure we can handle virtual hosting with dav requests"""\n         from Products.SiteAccess.VirtualHostMonster import VirtualHostMonster\n \n-        traversal = DexterityPublishTraverse(self.folder, None)\n-        traversed = traversal.publishTraverse(self.lock_request, "virtual_hosting")\n+        request = self.lock_request\n+        traversal = DexterityPublishTraverse(self.folder, request)\n+        traversed = traversal.publishTraverse(request, "virtual_hosting")\n         self.assertIsInstance(traversed, VirtualHostMonster)\n'

Repository: plone.dexterity


Branch: refs/heads/master
Date: 2024-04-24T17:07:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.dexterity/commit/cec086ea4e106e335c2e6316d48cb007be29077a

chore: remove no longer needed QA for wrongly spelled word.

Files changed:
M .meta.toml
M plone/dexterity/tests/test_webdav.py
M pyproject.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex 78b8d51..d4b79f8 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -4,6 +4,3 @@\n [meta]\n template = "default"\n commit-id = "6e36bcc4"\n-\n-[pyproject]\n-codespell_ignores = "succeded"\ndiff --git a/plone/dexterity/tests/test_webdav.py b/plone/dexterity/tests/test_webdav.py\nindex c86127b..5fd56c6 100644\n--- a/plone/dexterity/tests/test_webdav.py\n+++ b/plone/dexterity/tests/test_webdav.py\n@@ -605,9 +605,6 @@ def content_type(self):\n         )\n         body = body.strip()\n         result = response.getBody().strip()\n-        # TODO: remove next line when Zope 5.8.1 is released and used in coredev.\n-        # Then also remove codespell settings from .meta.toml and pyproject.toml.\n-        result = result.replace(b"succeded", b"succeeded")\n         self.assertEqual(body, result)\n \n     def test_LOCK(self):\ndiff --git a/pyproject.toml b/pyproject.toml\nindex dfcfb1d..36fbd28 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -71,7 +71,7 @@ target-version = ["py38"]\n ##\n \n [tool.codespell]\n-ignore-words-list = "discreet,succeded"\n+ignore-words-list = "discreet"\n skip = "*.po,"\n ##\n # Add extra configuration options in .meta.toml:\n'

