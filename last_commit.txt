Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2023-06-14T13:59:00-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.querystring/commit/f618dd87a970a18a4e4be0fea8963f0a68933e66

Merge multiple range queries

Files changed:
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py

b'diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex bdc5175..e30e4b0 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -37,7 +37,6 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):\n             index=row.get("i", None), operator=function_path, values=row.get("v", None)\n         )\n \n-        kwargs = {}\n         parser = resolve(row.operator)\n         kwargs = parser(context, row)\n \n@@ -49,10 +48,30 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):\n                 query[path_index]["query"].extend(kwargs[path_index]["query"])\n             else:\n                 query.update(kwargs)\n+            continue\n         elif len(path_index) > 1:\n             raise IndexError("Too many path indices in one row.")\n-        else:\n-            query.update(kwargs)\n+\n+        for index, value in kwargs.items():\n+            # Merge range queries on the same index\n+            if isinstance(value, dict) and "range" in value:\n+                existing = query.get(index)\n+                if isinstance(existing, dict) and "range" in existing:\n+                    existing_query = existing["query"]\n+                    if not isinstance(existing_query, list):\n+                        existing_query = [existing_query]\n+                    new_query = value["query"]\n+                    if not isinstance(new_query, list):\n+                        new_query = [new_query]\n+                    existing["query"] = sorted(existing_query + new_query)\n+                    if (\n+                        (existing["range"] == "min" and value["range"] == "max") or\n+                        (existing["range"] == "max" and value["range"] == "min")\n+                    ):\n+                        existing["range"] = "minmax"\n+                    continue\n+            # Other cases: simply overwrite the query for the index\n+            query[index] = value\n \n     if not query:\n         # If the query is empty fall back onto the equality query\ndiff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py\nindex c183398..5074b69 100644\n--- a/plone/app/querystring/tests/testQueryParser.py\n+++ b/plone/app/querystring/tests/testQueryParser.py\n@@ -285,6 +285,22 @@ def test_multi_path_with_depth_computet(self):\n             },\n         )\n \n+    def test_merge_ranges(self):\n+        data = [\n+            {\n+                "i": "modified",\n+                "o": "plone.app.querystring.operation.int.largerThan",\n+                "v": 10,\n+            },\n+            {\n+                "i": "modified",\n+                "o": "plone.app.querystring.operation.int.lessThan",\n+                "v": 20,\n+            },\n+        ]\n+        parsed = queryparser.parseFormquery(MockSite(), data)\n+        self.assertEqual(parsed, {"modified": {"query": [10, 20], "range": "minmax"}})\n+\n \n class TestQueryGenerators(TestQueryParserBase):\n     def test__between(self):\n'

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2023-06-14T13:59:00-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.querystring/commit/71a48db74d9ae7508771a698e020fed977fab039

changelog

Files changed:
A news/132.bugfix

b'diff --git a/news/132.bugfix b/news/132.bugfix\nnew file mode 100644\nindex 0000000..9074cbe\n--- /dev/null\n+++ b/news/132.bugfix\n@@ -0,0 +1 @@\n+Merge range queries on the same index instead of overwriting. @davisagli\n'

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2023-06-14T13:59:00-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.querystring/commit/41025866534f6a7a41de65f47ed001fb8d31add5

lint

Files changed:
M plone/app/querystring/queryparser.py

b'diff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex e30e4b0..a4ab776 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -64,9 +64,8 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):\n                     if not isinstance(new_query, list):\n                         new_query = [new_query]\n                     existing["query"] = sorted(existing_query + new_query)\n-                    if (\n-                        (existing["range"] == "min" and value["range"] == "max") or\n-                        (existing["range"] == "max" and value["range"] == "min")\n+                    if (existing["range"] == "min" and value["range"] == "max") or (\n+                        existing["range"] == "max" and value["range"] == "min"\n                     ):\n                         existing["range"] = "minmax"\n                     continue\n'

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2023-06-15T08:36:46-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.app.querystring/commit/8d9896e243741595deef8a8dd0deb94acda70c4b

Merge pull request #132 from plone/merge-range-queries

Merge multiple range queries

Files changed:
A news/132.bugfix
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testQueryParser.py

b'diff --git a/news/132.bugfix b/news/132.bugfix\nnew file mode 100644\nindex 0000000..9074cbe\n--- /dev/null\n+++ b/news/132.bugfix\n@@ -0,0 +1 @@\n+Merge range queries on the same index instead of overwriting. @davisagli\ndiff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex bdc5175..a4ab776 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -37,7 +37,6 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):\n             index=row.get("i", None), operator=function_path, values=row.get("v", None)\n         )\n \n-        kwargs = {}\n         parser = resolve(row.operator)\n         kwargs = parser(context, row)\n \n@@ -49,10 +48,29 @@ def parseFormquery(context, formquery, sort_on=None, sort_order=None):\n                 query[path_index]["query"].extend(kwargs[path_index]["query"])\n             else:\n                 query.update(kwargs)\n+            continue\n         elif len(path_index) > 1:\n             raise IndexError("Too many path indices in one row.")\n-        else:\n-            query.update(kwargs)\n+\n+        for index, value in kwargs.items():\n+            # Merge range queries on the same index\n+            if isinstance(value, dict) and "range" in value:\n+                existing = query.get(index)\n+                if isinstance(existing, dict) and "range" in existing:\n+                    existing_query = existing["query"]\n+                    if not isinstance(existing_query, list):\n+                        existing_query = [existing_query]\n+                    new_query = value["query"]\n+                    if not isinstance(new_query, list):\n+                        new_query = [new_query]\n+                    existing["query"] = sorted(existing_query + new_query)\n+                    if (existing["range"] == "min" and value["range"] == "max") or (\n+                        existing["range"] == "max" and value["range"] == "min"\n+                    ):\n+                        existing["range"] = "minmax"\n+                    continue\n+            # Other cases: simply overwrite the query for the index\n+            query[index] = value\n \n     if not query:\n         # If the query is empty fall back onto the equality query\ndiff --git a/plone/app/querystring/tests/testQueryParser.py b/plone/app/querystring/tests/testQueryParser.py\nindex c183398..5074b69 100644\n--- a/plone/app/querystring/tests/testQueryParser.py\n+++ b/plone/app/querystring/tests/testQueryParser.py\n@@ -285,6 +285,22 @@ def test_multi_path_with_depth_computet(self):\n             },\n         )\n \n+    def test_merge_ranges(self):\n+        data = [\n+            {\n+                "i": "modified",\n+                "o": "plone.app.querystring.operation.int.largerThan",\n+                "v": 10,\n+            },\n+            {\n+                "i": "modified",\n+                "o": "plone.app.querystring.operation.int.lessThan",\n+                "v": 20,\n+            },\n+        ]\n+        parsed = queryparser.parseFormquery(MockSite(), data)\n+        self.assertEqual(parsed, {"modified": {"query": [10, 20], "range": "minmax"}})\n+\n \n class TestQueryGenerators(TestQueryParserBase):\n     def test__between(self):\n'

