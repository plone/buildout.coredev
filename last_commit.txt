Repository: plone.resource


Branch: refs/heads/master
Date: 2021-04-23T10:42:20+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.resource/commit/416ea7f9d1013a2268cfce2390c53916aea209c0

Do not throw an error when traversing to a FilesystemResourceDirectory

Fixes #31

Files changed:
A news/31.bugfix
M plone/resource/directory.py

b"diff --git a/news/31.bugfix b/news/31.bugfix\nnew file mode 100644\nindex 0000000..5858a23\n--- /dev/null\n+++ b/news/31.bugfix\n@@ -0,0 +1 @@\n+Do not throw an error when traversing to a FilesystemResourceDirectory\ndiff --git a/plone/resource/directory.py b/plone/resource/directory.py\nindex c724c5e..61e4f12 100644\n--- a/plone/resource/directory.py\n+++ b/plone/resource/directory.py\n@@ -222,6 +222,11 @@ def __parent__(self, value):\n     def __repr__(self):\n         return '<%s object at %s>' % (self.__class__.__name__, self.__name__)\n \n+    def __bytes__(self):\n+        if six.PY2:\n+            return repr(self)\n+        return repr(self).encode()\n+\n     def _resolveSubpath(self, path):\n         parts = path.split('/')\n         filepath = os.path.abspath(os.path.join(self.directory, *parts))\n"

Repository: plone.resource


Branch: refs/heads/master
Date: 2021-04-23T12:18:45+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.resource/commit/1d3d297d836b0e05f516331e9bbb69d2d31a4514

Merge pull request #32 from plone/31.fixed

Do not throw an error when traversing to a FilesystemResourceDirectory

Files changed:
A news/31.bugfix
M plone/resource/directory.py

b"diff --git a/news/31.bugfix b/news/31.bugfix\nnew file mode 100644\nindex 0000000..5858a23\n--- /dev/null\n+++ b/news/31.bugfix\n@@ -0,0 +1 @@\n+Do not throw an error when traversing to a FilesystemResourceDirectory\ndiff --git a/plone/resource/directory.py b/plone/resource/directory.py\nindex c724c5e..61e4f12 100644\n--- a/plone/resource/directory.py\n+++ b/plone/resource/directory.py\n@@ -222,6 +222,11 @@ def __parent__(self, value):\n     def __repr__(self):\n         return '<%s object at %s>' % (self.__class__.__name__, self.__name__)\n \n+    def __bytes__(self):\n+        if six.PY2:\n+            return repr(self)\n+        return repr(self).encode()\n+\n     def _resolveSubpath(self, path):\n         parts = path.split('/')\n         filepath = os.path.abspath(os.path.join(self.directory, *parts))\n"

