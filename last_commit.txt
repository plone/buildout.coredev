Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-16T17:02:49+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/40bfeaad4277223a01a4f9b4224bad4f937fda03

Resourceregistry controlpanel: zprettify template.

Files changed:
A news/3942.internal
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 4279bdb02b..297f2ff231 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -1,169 +1,306 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-\n-<metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone">\n-  <header>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-    <h1 class="documentFirstHeading"\n-        i18n:translate="">Resource Registry</h1>\n+    <metal:main metal:fill-slot="prefs_configlet_main"\n+                i18n:domain="plone"\n+    >\n+      <header>\n+        <h1 class="documentFirstHeading"\n+            i18n:translate=""\n+        >Resource Registry</h1>\n \n-    <div class="text-muted"\n-       i18n:translate="">\n+        <div class="text-muted"\n+             i18n:translate=""\n+        >\n       Configure Plone JavaScript/CSS resource bundles.\n-    </div>\n-  </header>\n+        </div>\n+      </header>\n \n-   <div id="content-core">\n-    <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n-        <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n-        <span class="content"\n-              i18n:translate="">\n+      <div id="content-core">\n+        <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n+          <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+          <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n+          <span class="content"\n+                i18n:translate=""\n+          >\n             If this message persists, a Javascript Error occurred within the\n             resources below.\n-        </span>\n-    </div>\n-    <div tal:condition="python:view.global_debug_mode()"\n-         class="portalMessage statusmessage statusmessage-info alert alert-info"\n-         role="alert">\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n-        <strong i18n:translate="">Global Debug Mode Activated</strong>\n-        <span class="content"\n-              i18n:translate="">\n+          </span>\n+        </div>\n+        <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+             role="alert"\n+             tal:condition="python:view.global_debug_mode()"\n+        >\n+          <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+          <strong i18n:translate="">Global Debug Mode Activated</strong>\n+          <span class="content"\n+                i18n:translate=""\n+          >\n             This is great for development.\n             Resource hashes will be recalculated on each request.\n             This is expensive, do not use use in production!\n-        </span>\n-    </div>\n-    <form tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n-          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n-      <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n-         role="alert">\n-          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end" i18n:translate="">Deactivate</button>\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n-        <strong i18n:translate="">Resource Debug Mode Activated</strong>\n-        <span class="content"\n-              i18n:translate="">\n+          </span>\n+        </div>\n+        <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+              method="post"\n+              tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n+        >\n+          <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n+               role="alert"\n+          >\n+            <button class="btn btn-primary ms-1 me-1 mb-1 float-end"\n+                    name="action"\n+                    type="submit"\n+                    value="deactivate_cache"\n+                    i18n:translate=""\n+            >Deactivate</button>\n+            <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+            <strong i18n:translate="">Resource Debug Mode Activated</strong>\n+            <span class="content"\n+                  i18n:translate=""\n+            >\n             Resources are not cached in Plone.\n             Their hashes will be recalculated on each request.\n             This is expensive, do not use use in production!\n-        </span>\n-      </div>\n-    </form>\n-    <form tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n-          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n-      <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n-         role="alert">\n-          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end" i18n:translate="">Activate Debug Mode</button>\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n-        <strong i18n:translate="">Production Mode Activated</strong>\n-        <span class="content"\n-              i18n:translate="">\n+            </span>\n+          </div>\n+        </form>\n+        <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+              method="post"\n+              tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n+        >\n+          <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+               role="alert"\n+          >\n+            <button class="btn btn-primary ms-1 me-1 mb-1 float-end"\n+                    name="action"\n+                    type="submit"\n+                    value="activate_cache"\n+                    i18n:translate=""\n+            >Activate Debug Mode</button>\n+            <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+            <strong i18n:translate="">Production Mode Activated</strong>\n+            <span class="content"\n+                  i18n:translate=""\n+            >\n             Resources are fast and hashes are cached in Plone.\n-        </span>\n-      </div>\n-    </form>\n-    <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n-      <tal:block tal:repeat="bundle python:view.bundles_data">\n-      <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n-           <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n-            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n-              <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n-              <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n-              <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n-              <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n-              <strong tal:condition="python:not bundle[\'name\']" i18n:translate="">Add new bundle</strong>\n-            </button>\n-          </h2>\n-          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse collapse show" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n-            <div class="accordion-body">\n-              <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n-                <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n-                <div class="mb-3">\n-                  <label for="name" class="form-label" i18n:translate="label_bundle_name">Name</label>\n-                  <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="jscompilation" class="form-label">Javascript</label>\n-                  <input type="text" class="form-control" name="jscompilation" value="${python:bundle[\'jscompilation\']}"/>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="csscompilation" class="form-label">CSS</label>\n-                  <input type="text" class="form-control" name="csscompilation" value="${python:bundle[\'csscompilation\']}"/>\n-                </div>\n-                <div class="form-check mb-3">\n-                  <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n-                  <label class="form-check-label" for="enabled" i18n:translate="label_bundle_enabled">\n+            </span>\n+          </div>\n+        </form>\n+        <div class="accordion"\n+             id="accordionRR"\n+             tal:define="\n+               dummy python:view.process_form();\n+             "\n+        >\n+          <tal:block tal:repeat="bundle python:view.bundles_data">\n+            <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n+              <h2 class="accordion-header"\n+                  id="heading-${python:bundle[\'safe_name\']}"\n+              >\n+                <button class="accordion-button"\n+                        aria-controls="collapse-${python:bundle[\'safe_name\']}"\n+                        aria-expanded="false"\n+                        type="button"\n+                        data-bs-target="#collapse-${python:bundle[\'safe_name\']}"\n+                        data-bs-toggle="collapse"\n+                >\n+                  <span class="me-2"\n+                        tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']"\n+                        i18n:translate=""\n+                  ><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+                  <span class="me-2"\n+                        tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']"\n+                        i18n:translate=""\n+                  ><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+                  <span class="me-2"\n+                        tal:condition="python:not bundle[\'name\']"\n+                        i18n:translate=""\n+                  ><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+                  <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n+                  <strong tal:condition="python:not bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Add new bundle</strong>\n+                </button>\n+              </h2>\n+              <div class="accordion-collapse collapse show"\n+                   id="collapse-${python:bundle[\'safe_name\']}"\n+                   aria-labelledby="heading${python:bundle[\'safe_name\']}"\n+                   data-bs-parent="#accordionRR"\n+              >\n+                <div class="accordion-body">\n+                  <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+                        method="post"\n+                  >\n+                    <input name="original_name"\n+                           type="hidden"\n+                           value="${python:bundle[\'name\']}"\n+                    />\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="name"\n+                             i18n:translate="label_bundle_name"\n+                      >Name</label>\n+                      <input class="form-control"\n+                             name="name"\n+                             type="text"\n+                             value="${python:bundle[\'name\']}"\n+                      />\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="jscompilation"\n+                      >Javascript</label>\n+                      <input class="form-control"\n+                             name="jscompilation"\n+                             type="text"\n+                             value="${python:bundle[\'jscompilation\']}"\n+                      />\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="csscompilation"\n+                      >CSS</label>\n+                      <input class="form-control"\n+                             name="csscompilation"\n+                             type="text"\n+                             value="${python:bundle[\'csscompilation\']}"\n+                      />\n+                    </div>\n+                    <div class="form-check mb-3">\n+                      <input class="form-check-input"\n+                             checked="${python:\'checked\' if bundle[\'enabled\'] else None}"\n+                             name="enabled"\n+                             type="checkbox"\n+                             value=""\n+                      />\n+                      <label class="form-check-label"\n+                             for="enabled"\n+                             i18n:translate="label_bundle_enabled"\n+                      >\n                     enabled\n-                  </label>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="expression" class="form-label" i18n:translate="label_bundle_condition">Condition</label>\n-                  <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression" i18n:attributes="placeholder label_expression_placeholder"/>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="depends" class="form-label" i18n:translate="">Depends on</label>\n-                  <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n-                </div>\n-                <div class="form-check mb-3">\n-                  <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n-                  <label class="form-check-label" for="load_async" i18n:translate="label_bundle_js_load_async">\n+                      </label>\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="expression"\n+                             i18n:translate="label_bundle_condition"\n+                      >Condition</label>\n+                      <input class="form-control"\n+                             name="expression"\n+                             placeholder="expression"\n+                             type="text"\n+                             value="${python:bundle[\'expression\']}"\n+                             i18n:attributes="placeholder label_expression_placeholder"\n+                      />\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="depends"\n+                             i18n:translate=""\n+                      >Depends on</label>\n+                      <input class="form-control"\n+                             name="depends"\n+                             type="text"\n+                             value="${python:bundle[\'depends\']}"\n+                      />\n+                    </div>\n+                    <div class="form-check mb-3">\n+                      <input class="form-check-input"\n+                             checked="${python:\'checked\' if bundle[\'load_async\'] else None}"\n+                             name="load_async"\n+                             type="checkbox"\n+                             value="1"\n+                      />\n+                      <label class="form-check-label"\n+                             for="load_async"\n+                             i18n:translate="label_bundle_js_load_async"\n+                      >\n                     Async\n-                  </label>\n-                </div>\n-                <div class="form-check mb-3">\n-                  <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n-                  <label class="form-check-label" for="load_defer" i18n:translate="label_bundle_js_load_defer">\n+                      </label>\n+                    </div>\n+                    <div class="form-check mb-3">\n+                      <input class="form-check-input"\n+                             checked="${python:\'checked\' if bundle[\'load_defer\'] else None}"\n+                             name="load_defer"\n+                             type="checkbox"\n+                             value="1"\n+                      />\n+                      <label class="form-check-label"\n+                             for="load_defer"\n+                             i18n:translate="label_bundle_js_load_defer"\n+                      >\n                     Defer\n-                  </label>\n+                      </label>\n+                    </div>\n+                    <div class="mb-3">\n+                      <button class="btn btn-primary me-1"\n+                              name="action"\n+                              type="submit"\n+                              value="update"\n+                              tal:condition="python:bundle[\'name\']"\n+                              i18n:translate=""\n+                      >Save</button>\n+                      <button class="btn btn-success me-1"\n+                              name="action"\n+                              type="submit"\n+                              value="add"\n+                              tal:condition="python:not bundle[\'name\']"\n+                              i18n:translate=""\n+                      >Add</button>\n+                      <button class="btn btn-danger"\n+                              name="action"\n+                              type="submit"\n+                              value="delete"\n+                              tal:condition="python:bundle[\'name\']"\n+                              i18n:translate=""\n+                      >Delete</button>\n+                    </div>\n+                  </form>\n                 </div>\n-                <div class="mb-3">\n-                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1" i18n:translate="">Save</button>\n-                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1" i18n:translate="">Add</button>\n-                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger" i18n:translate="">Delete</button>\n-                </div>\n-              </form>\n-          </div>\n+              </div>\n+            </div>\n+          </tal:block>\n         </div>\n-      </div>\n-      </tal:block>\n-    </div>\n-    <div class="mt-3">\n-      <h2 i18n:translate="">Additional Resources</h2>\n-      <p i18n:translate="">After the above resources, the following might get loaded:</p>\n-      <dl>\n-        <dt i18n:translate="">Theme CSS and JavaScript</dt>\n-        <dd i18n:translate="">\n+        <div class="mt-3">\n+          <h2 i18n:translate="">Additional Resources</h2>\n+          <p i18n:translate="">After the above resources, the following might get loaded:</p>\n+          <dl>\n+            <dt i18n:translate="">Theme CSS and JavaScript</dt>\n+            <dd i18n:translate="">\n           The activated Plone-Theme usually provides one CSS bundle and sometimes a javascript bundle.\n-        </dd>\n-        <dt i18n:translate="">Custom CSS</dt>\n-        <dd i18n:translate="">\n+            </dd>\n+            <dt i18n:translate="">Custom CSS</dt>\n+            <dd i18n:translate="">\n           At last a custom CSS is loaded, if non-empty.\n           It can be used to override the previous loaded CSS.\n           It is provided for tinkerers and those in need of urgent through-the-web changes.\n-          Hint: <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1" i18n:name="link" i18n:translate="">Edit the Custom CSS in the Theming-Control-Panel</a>.\n-        </dd>\n-      </dl>\n-    </div>\n-   </div>\n-   <script>\n+          Hint:\n+              <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1"\n+                 i18n:name="link"\n+                 i18n:translate=""\n+              >Edit the Custom CSS in the Theming-Control-Panel</a>.\n+            </dd>\n+          </dl>\n+        </div>\n+      </div>\n+      <script>\n      /* collapse accordion via script here, so that it stays open when JS is disabled */\n      window.addEventListener(\'DOMContentLoaded\', (event) => {\n       document.querySelector(".alert.js-errors").style.display = "none";\n       document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n       document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n     });\n-   </script>\n-</metal:main>\n+      </script>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\n-\ndiff --git a/news/3942.internal b/news/3942.internal\nnew file mode 100644\nindex 0000000000..062c197fa0\n--- /dev/null\n+++ b/news/3942.internal\n@@ -0,0 +1,2 @@\n+Resourceregistry controlpanel: zprettify template.\n+[thet]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-16T18:00:32+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/42a853d9be144e22c552c9ef349a602c84242b3c

Merge pull request #3979 from plone/3942-resource-registry-cleanup

zpretty cleanup of resourceregistry controlpanel.

Files changed:
A news/3942.internal
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 4279bdb02b..297f2ff231 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -1,169 +1,306 @@\n-<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"\n-      xmlns:tal="http://xml.zope.org/namespaces/tal"\n-      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+<html xmlns="http://www.w3.org/1999/xhtml"\n       xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+      xmlns:metal="http://xml.zope.org/namespaces/metal"\n+      xmlns:tal="http://xml.zope.org/namespaces/tal"\n       lang="en"\n       metal:use-macro="context/prefs_main_template/macros/master"\n-      i18n:domain="plone">\n-\n-<body>\n-\n-\n-<metal:main metal:fill-slot="prefs_configlet_main" i18n:domain="plone">\n-  <header>\n+      xml:lang="en"\n+      i18n:domain="plone"\n+>\n+  <body>\n \n-    <h1 class="documentFirstHeading"\n-        i18n:translate="">Resource Registry</h1>\n+    <metal:main metal:fill-slot="prefs_configlet_main"\n+                i18n:domain="plone"\n+    >\n+      <header>\n+        <h1 class="documentFirstHeading"\n+            i18n:translate=""\n+        >Resource Registry</h1>\n \n-    <div class="text-muted"\n-       i18n:translate="">\n+        <div class="text-muted"\n+             i18n:translate=""\n+        >\n       Configure Plone JavaScript/CSS resource bundles.\n-    </div>\n-  </header>\n+        </div>\n+      </header>\n \n-   <div id="content-core">\n-    <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n-        <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n-        <span class="content"\n-              i18n:translate="">\n+      <div id="content-core">\n+        <div class="portalMessage statusmessage statusmessage-error alert alert-danger js-errors">\n+          <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-error\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+          <strong i18n:translate="">Javascript disabled or error(s) occurred</strong>\n+          <span class="content"\n+                i18n:translate=""\n+          >\n             If this message persists, a Javascript Error occurred within the\n             resources below.\n-        </span>\n-    </div>\n-    <div tal:condition="python:view.global_debug_mode()"\n-         class="portalMessage statusmessage statusmessage-info alert alert-info"\n-         role="alert">\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n-        <strong i18n:translate="">Global Debug Mode Activated</strong>\n-        <span class="content"\n-              i18n:translate="">\n+          </span>\n+        </div>\n+        <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+             role="alert"\n+             tal:condition="python:view.global_debug_mode()"\n+        >\n+          <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1 me-2\')" />\n+          <strong i18n:translate="">Global Debug Mode Activated</strong>\n+          <span class="content"\n+                i18n:translate=""\n+          >\n             This is great for development.\n             Resource hashes will be recalculated on each request.\n             This is expensive, do not use use in production!\n-        </span>\n-    </div>\n-    <form tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n-          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n-      <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n-         role="alert">\n-          <button name="action" value="deactivate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end" i18n:translate="">Deactivate</button>\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n-        <strong i18n:translate="">Resource Debug Mode Activated</strong>\n-        <span class="content"\n-              i18n:translate="">\n+          </span>\n+        </div>\n+        <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+              method="post"\n+              tal:condition="python:not view.global_debug_mode() and view.debug_mode()"\n+        >\n+          <div class="portalMessage statusmessage statusmessage-info alert alert-warning"\n+               role="alert"\n+          >\n+            <button class="btn btn-primary ms-1 me-1 mb-1 float-end"\n+                    name="action"\n+                    type="submit"\n+                    value="deactivate_cache"\n+                    i18n:translate=""\n+            >Deactivate</button>\n+            <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-warning\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+            <strong i18n:translate="">Resource Debug Mode Activated</strong>\n+            <span class="content"\n+                  i18n:translate=""\n+            >\n             Resources are not cached in Plone.\n             Their hashes will be recalculated on each request.\n             This is expensive, do not use use in production!\n-        </span>\n-      </div>\n-    </form>\n-    <form tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n-          method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n-      <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n-         role="alert">\n-          <button name="action" value="activate_cache" type="submit" class="btn btn-primary ms-1 me-1 mb-1 float-end" i18n:translate="">Activate Debug Mode</button>\n-        <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n-        <strong i18n:translate="">Production Mode Activated</strong>\n-        <span class="content"\n-              i18n:translate="">\n+            </span>\n+          </div>\n+        </form>\n+        <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+              method="post"\n+              tal:condition="python:not view.global_debug_mode() and not view.debug_mode()"\n+        >\n+          <div class="portalMessage statusmessage statusmessage-info alert alert-info"\n+               role="alert"\n+          >\n+            <button class="btn btn-primary ms-1 me-1 mb-1 float-end"\n+                    name="action"\n+                    type="submit"\n+                    value="activate_cache"\n+                    i18n:translate=""\n+            >Activate Debug Mode</button>\n+            <tal:icon tal:replace="structure python:icons.tag(\'plone-statusmessage-info\', tag_alt=\'\', tag_class=\'statusmessage-icon mb-1\')" />\n+            <strong i18n:translate="">Production Mode Activated</strong>\n+            <span class="content"\n+                  i18n:translate=""\n+            >\n             Resources are fast and hashes are cached in Plone.\n-        </span>\n-      </div>\n-    </form>\n-    <div class="accordion" id="accordionRR" tal:define="dummy python:view.process_form()">\n-      <tal:block tal:repeat="bundle python:view.bundles_data">\n-      <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n-           <h2 class="accordion-header" id="heading-${python:bundle[\'safe_name\']}">\n-            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-${python:bundle[\'safe_name\']}" aria-expanded="false" aria-controls="collapse-${python:bundle[\'safe_name\']}">\n-              <span tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n-              <span tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n-              <span tal:condition="python:not bundle[\'name\']" i18n:translate="" class="me-2"><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n-              <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n-              <strong tal:condition="python:not bundle[\'name\']" i18n:translate="">Add new bundle</strong>\n-            </button>\n-          </h2>\n-          <div id="collapse-${python:bundle[\'safe_name\']}" class="accordion-collapse collapse show" aria-labelledby="heading${python:bundle[\'safe_name\']}" data-bs-parent="#accordionRR">\n-            <div class="accordion-body">\n-              <form method="post" action="${python:context.absolute_url()}/@@resourceregistry-controlpanel">\n-                <input type="hidden" name="original_name" value="${python:bundle[\'name\']}" />\n-                <div class="mb-3">\n-                  <label for="name" class="form-label" i18n:translate="label_bundle_name">Name</label>\n-                  <input type="text" class="form-control" name="name" value="${python:bundle[\'name\']}"/>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="jscompilation" class="form-label">Javascript</label>\n-                  <input type="text" class="form-control" name="jscompilation" value="${python:bundle[\'jscompilation\']}"/>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="csscompilation" class="form-label">CSS</label>\n-                  <input type="text" class="form-control" name="csscompilation" value="${python:bundle[\'csscompilation\']}"/>\n-                </div>\n-                <div class="form-check mb-3">\n-                  <input class="form-check-input" type="checkbox" value="" name="enabled" ${python:"checked" if bundle["enabled"] else \'\'} />\n-                  <label class="form-check-label" for="enabled" i18n:translate="label_bundle_enabled">\n+            </span>\n+          </div>\n+        </form>\n+        <div class="accordion"\n+             id="accordionRR"\n+             tal:define="\n+               dummy python:view.process_form();\n+             "\n+        >\n+          <tal:block tal:repeat="bundle python:view.bundles_data">\n+            <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n+              <h2 class="accordion-header"\n+                  id="heading-${python:bundle[\'safe_name\']}"\n+              >\n+                <button class="accordion-button"\n+                        aria-controls="collapse-${python:bundle[\'safe_name\']}"\n+                        aria-expanded="false"\n+                        type="button"\n+                        data-bs-target="#collapse-${python:bundle[\'safe_name\']}"\n+                        data-bs-toggle="collapse"\n+                >\n+                  <span class="me-2"\n+                        tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']"\n+                        i18n:translate=""\n+                  ><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+                  <span class="me-2"\n+                        tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']"\n+                        i18n:translate=""\n+                  ><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+                  <span class="me-2"\n+                        tal:condition="python:not bundle[\'name\']"\n+                        i18n:translate=""\n+                  ><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+                  <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n+                  <strong tal:condition="python:not bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Add new bundle</strong>\n+                </button>\n+              </h2>\n+              <div class="accordion-collapse collapse show"\n+                   id="collapse-${python:bundle[\'safe_name\']}"\n+                   aria-labelledby="heading${python:bundle[\'safe_name\']}"\n+                   data-bs-parent="#accordionRR"\n+              >\n+                <div class="accordion-body">\n+                  <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+                        method="post"\n+                  >\n+                    <input name="original_name"\n+                           type="hidden"\n+                           value="${python:bundle[\'name\']}"\n+                    />\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="name"\n+                             i18n:translate="label_bundle_name"\n+                      >Name</label>\n+                      <input class="form-control"\n+                             name="name"\n+                             type="text"\n+                             value="${python:bundle[\'name\']}"\n+                      />\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="jscompilation"\n+                      >Javascript</label>\n+                      <input class="form-control"\n+                             name="jscompilation"\n+                             type="text"\n+                             value="${python:bundle[\'jscompilation\']}"\n+                      />\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="csscompilation"\n+                      >CSS</label>\n+                      <input class="form-control"\n+                             name="csscompilation"\n+                             type="text"\n+                             value="${python:bundle[\'csscompilation\']}"\n+                      />\n+                    </div>\n+                    <div class="form-check mb-3">\n+                      <input class="form-check-input"\n+                             checked="${python:\'checked\' if bundle[\'enabled\'] else None}"\n+                             name="enabled"\n+                             type="checkbox"\n+                             value=""\n+                      />\n+                      <label class="form-check-label"\n+                             for="enabled"\n+                             i18n:translate="label_bundle_enabled"\n+                      >\n                     enabled\n-                  </label>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="expression" class="form-label" i18n:translate="label_bundle_condition">Condition</label>\n-                  <input type="text" class="form-control" name="expression" value="${python:bundle[\'expression\']}" placeholder="expression" i18n:attributes="placeholder label_expression_placeholder"/>\n-                </div>\n-                <div class="mb-3">\n-                  <label for="depends" class="form-label" i18n:translate="">Depends on</label>\n-                  <input type="text" class="form-control" name="depends" value="${python:bundle[\'depends\']}" />\n-                </div>\n-                <div class="form-check mb-3">\n-                  <input class="form-check-input" type="checkbox" value="1" name="load_async" ${python:"checked" if bundle["load_async"] else \'\'} />\n-                  <label class="form-check-label" for="load_async" i18n:translate="label_bundle_js_load_async">\n+                      </label>\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="expression"\n+                             i18n:translate="label_bundle_condition"\n+                      >Condition</label>\n+                      <input class="form-control"\n+                             name="expression"\n+                             placeholder="expression"\n+                             type="text"\n+                             value="${python:bundle[\'expression\']}"\n+                             i18n:attributes="placeholder label_expression_placeholder"\n+                      />\n+                    </div>\n+                    <div class="mb-3">\n+                      <label class="form-label"\n+                             for="depends"\n+                             i18n:translate=""\n+                      >Depends on</label>\n+                      <input class="form-control"\n+                             name="depends"\n+                             type="text"\n+                             value="${python:bundle[\'depends\']}"\n+                      />\n+                    </div>\n+                    <div class="form-check mb-3">\n+                      <input class="form-check-input"\n+                             checked="${python:\'checked\' if bundle[\'load_async\'] else None}"\n+                             name="load_async"\n+                             type="checkbox"\n+                             value="1"\n+                      />\n+                      <label class="form-check-label"\n+                             for="load_async"\n+                             i18n:translate="label_bundle_js_load_async"\n+                      >\n                     Async\n-                  </label>\n-                </div>\n-                <div class="form-check mb-3">\n-                  <input class="form-check-input" type="checkbox" value="1" name="load_defer" ${python:"checked" if bundle["load_defer"] else \'\'} />\n-                  <label class="form-check-label" for="load_defer" i18n:translate="label_bundle_js_load_defer">\n+                      </label>\n+                    </div>\n+                    <div class="form-check mb-3">\n+                      <input class="form-check-input"\n+                             checked="${python:\'checked\' if bundle[\'load_defer\'] else None}"\n+                             name="load_defer"\n+                             type="checkbox"\n+                             value="1"\n+                      />\n+                      <label class="form-check-label"\n+                             for="load_defer"\n+                             i18n:translate="label_bundle_js_load_defer"\n+                      >\n                     Defer\n-                  </label>\n+                      </label>\n+                    </div>\n+                    <div class="mb-3">\n+                      <button class="btn btn-primary me-1"\n+                              name="action"\n+                              type="submit"\n+                              value="update"\n+                              tal:condition="python:bundle[\'name\']"\n+                              i18n:translate=""\n+                      >Save</button>\n+                      <button class="btn btn-success me-1"\n+                              name="action"\n+                              type="submit"\n+                              value="add"\n+                              tal:condition="python:not bundle[\'name\']"\n+                              i18n:translate=""\n+                      >Add</button>\n+                      <button class="btn btn-danger"\n+                              name="action"\n+                              type="submit"\n+                              value="delete"\n+                              tal:condition="python:bundle[\'name\']"\n+                              i18n:translate=""\n+                      >Delete</button>\n+                    </div>\n+                  </form>\n                 </div>\n-                <div class="mb-3">\n-                  <button tal:condition="python:bundle[\'name\']" name="action" value="update" type="submit" class="btn btn-primary me-1" i18n:translate="">Save</button>\n-                  <button tal:condition="python:not bundle[\'name\']" name="action" value="add" type="submit" class="btn btn-success me-1" i18n:translate="">Add</button>\n-                  <button tal:condition="python:bundle[\'name\']" name="action" value="delete" type="submit" class="btn btn-danger" i18n:translate="">Delete</button>\n-                </div>\n-              </form>\n-          </div>\n+              </div>\n+            </div>\n+          </tal:block>\n         </div>\n-      </div>\n-      </tal:block>\n-    </div>\n-    <div class="mt-3">\n-      <h2 i18n:translate="">Additional Resources</h2>\n-      <p i18n:translate="">After the above resources, the following might get loaded:</p>\n-      <dl>\n-        <dt i18n:translate="">Theme CSS and JavaScript</dt>\n-        <dd i18n:translate="">\n+        <div class="mt-3">\n+          <h2 i18n:translate="">Additional Resources</h2>\n+          <p i18n:translate="">After the above resources, the following might get loaded:</p>\n+          <dl>\n+            <dt i18n:translate="">Theme CSS and JavaScript</dt>\n+            <dd i18n:translate="">\n           The activated Plone-Theme usually provides one CSS bundle and sometimes a javascript bundle.\n-        </dd>\n-        <dt i18n:translate="">Custom CSS</dt>\n-        <dd i18n:translate="">\n+            </dd>\n+            <dt i18n:translate="">Custom CSS</dt>\n+            <dd i18n:translate="">\n           At last a custom CSS is loaded, if non-empty.\n           It can be used to override the previous loaded CSS.\n           It is provided for tinkerers and those in need of urgent through-the-web changes.\n-          Hint: <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1" i18n:name="link" i18n:translate="">Edit the Custom CSS in the Theming-Control-Panel</a>.\n-        </dd>\n-      </dl>\n-    </div>\n-   </div>\n-   <script>\n+          Hint:\n+              <a href="${python:context.absolute_url()}/@@theming-controlpanel#autotoc-item-autotoc-1"\n+                 i18n:name="link"\n+                 i18n:translate=""\n+              >Edit the Custom CSS in the Theming-Control-Panel</a>.\n+            </dd>\n+          </dl>\n+        </div>\n+      </div>\n+      <script>\n      /* collapse accordion via script here, so that it stays open when JS is disabled */\n      window.addEventListener(\'DOMContentLoaded\', (event) => {\n       document.querySelector(".alert.js-errors").style.display = "none";\n       document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n       document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n     });\n-   </script>\n-</metal:main>\n+      </script>\n+    </metal:main>\n \n-</body>\n+  </body>\n </html>\n-\ndiff --git a/news/3942.internal b/news/3942.internal\nnew file mode 100644\nindex 0000000000..062c197fa0\n--- /dev/null\n+++ b/news/3942.internal\n@@ -0,0 +1,2 @@\n+Resourceregistry controlpanel: zprettify template.\n+[thet]\n'

