Repository: plone.app.theming


Branch: refs/heads/master
Date: 2024-09-04T18:13:09+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.theming/commit/61ef90d91ec1e9c2f7a3e806d006102784ba1aab

Minor optimization to disable Diazo theming via "X-Theme-Disabled" a tick earlier.

Files changed:
A news/244.internal
M src/plone/app/theming/policy.py

b'diff --git a/news/244.internal b/news/244.internal\nnew file mode 100644\nindex 00000000..4fea9be5\n--- /dev/null\n+++ b/news/244.internal\n@@ -0,0 +1,2 @@\n+Minor optimization to disable Diazo theming via `X-Theme-Disabled` a tick earlier.\n+[thet]\ndiff --git a/src/plone/app/theming/policy.py b/src/plone/app/theming/policy.py\nindex d837ff22..227b7b4d 100644\n--- a/src/plone/app/theming/policy.py\n+++ b/src/plone/app/theming/policy.py\n@@ -67,14 +67,14 @@ def getCurrentTheme(self):\n     def isThemeEnabled(self, settings=None):\n         """Whether theming is enabled."""\n \n-        # Resolve debug_mode late (i.e. not on import time) since it may\n-        # be set during import or test setup time\n-        debug_mode = getConfiguration().debug_mode\n-\n         # Disable theming if the response sets a header\n         if self.request.response.getHeader("X-Theme-Disabled"):\n             return False\n \n+        # Resolve debug_mode late (i.e. not on import time) since it may\n+        # be set during import or test setup time\n+        debug_mode = getConfiguration().debug_mode\n+\n         # Check for diazo.off request parameter\n         true_vals = ("1", "y", "yes", "t", "true")\n         if debug_mode and self.request.get("diazo.off", "").lower() in true_vals:\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2024-09-04T21:31:06+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.theming/commit/0f5a53f81114d24299763b28580aa07114d43eca

Merge pull request #244 from plone/thet-minor-opt

Files changed:
A news/244.internal
M src/plone/app/theming/policy.py

b'diff --git a/news/244.internal b/news/244.internal\nnew file mode 100644\nindex 00000000..4fea9be5\n--- /dev/null\n+++ b/news/244.internal\n@@ -0,0 +1,2 @@\n+Minor optimization to disable Diazo theming via `X-Theme-Disabled` a tick earlier.\n+[thet]\ndiff --git a/src/plone/app/theming/policy.py b/src/plone/app/theming/policy.py\nindex d837ff22..227b7b4d 100644\n--- a/src/plone/app/theming/policy.py\n+++ b/src/plone/app/theming/policy.py\n@@ -67,14 +67,14 @@ def getCurrentTheme(self):\n     def isThemeEnabled(self, settings=None):\n         """Whether theming is enabled."""\n \n-        # Resolve debug_mode late (i.e. not on import time) since it may\n-        # be set during import or test setup time\n-        debug_mode = getConfiguration().debug_mode\n-\n         # Disable theming if the response sets a header\n         if self.request.response.getHeader("X-Theme-Disabled"):\n             return False\n \n+        # Resolve debug_mode late (i.e. not on import time) since it may\n+        # be set during import or test setup time\n+        debug_mode = getConfiguration().debug_mode\n+\n         # Check for diazo.off request parameter\n         true_vals = ("1", "y", "yes", "t", "true")\n         if debug_mode and self.request.get("diazo.off", "").lower() in true_vals:\n'

