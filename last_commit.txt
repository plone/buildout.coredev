Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-02-05T18:32:32Z
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.event/commit/be4d902b0187d9fdcf7b6333e032a70a82939039

[pre-commit.ci] pre-commit autoupdate

updates:
- [github.com/psf/black: 23.12.1 → 24.1.1](https://github.com/psf/black/compare/23.12.1...24.1.1)
- [github.com/PyCQA/flake8: 6.1.0 → 7.0.0](https://github.com/PyCQA/flake8/compare/6.1.0...7.0.0)

Files changed:
M .pre-commit-config.yaml

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex caf34e5b..f857b483 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -16,7 +16,7 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 23.12.1\n+    rev: 24.1.1\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n@@ -32,7 +32,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 6.1.0\n+    rev: 7.0.0\n     hooks:\n     -   id: flake8\n \n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-02-05T18:34:35Z
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.event/commit/3213e1758684c778c5ac39931e0b9440b52a34f0

[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci

Files changed:
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/test_dx_behaviors.py
M plone/app/event/tests/test_ical_import.py

b'diff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py\nindex 14c07240..d9633bc7 100644\n--- a/plone/app/event/dx/behaviors.py\n+++ b/plone/app/event/dx/behaviors.py\n@@ -1,5 +1,6 @@\n """Behaviors to enable calendarish event extension to dexterity content types.\n """\n+\n from plone.app.dexterity.behaviors.metadata import ICategorization\n from plone.app.event import _\n from plone.app.event.base import default_end as default_end_dt\n@@ -61,7 +62,6 @@ def default_end(context):\n \n \n class IEventBasic(model.Schema, IDXEvent):\n-\n     """Basic event schema."""\n \n     start = schema.Datetime(\n@@ -129,7 +129,6 @@ def validate_start_end(data):\n \n \n class IEventRecurrence(model.Schema, IDXEventRecurrence):\n-\n     """Recurring Event Schema."""\n \n     recurrence = schema.Text(\n@@ -151,7 +150,6 @@ class IEventRecurrence(model.Schema, IDXEventRecurrence):\n \n \n class IEventLocation(model.Schema):\n-\n     """Event Location Schema."""\n \n     location = schema.TextLine(\n@@ -164,7 +162,6 @@ class IEventLocation(model.Schema):\n \n \n class IEventAttendees(model.Schema):\n-\n     """Event Attendees Schema."""\n \n     attendees = schema.Tuple(\n@@ -179,7 +176,6 @@ class IEventAttendees(model.Schema):\n \n \n class IEventContact(model.Schema):\n-\n     """Event Contact Schema."""\n \n     contact_name = schema.TextLine(\n@@ -282,7 +278,6 @@ def sync_uid_indexer(obj):\n @adapter(IDXEvent)\n @implementer(IEventAccessor)\n class EventAccessor:\n-\n     """Generic event accessor adapter implementation for Dexterity content\n     objects.\n     """\ndiff --git a/plone/app/event/tests/test_dx_behaviors.py b/plone/app/event/tests/test_dx_behaviors.py\nindex 22a830cf..03312243 100644\n--- a/plone/app/event/tests/test_dx_behaviors.py\n+++ b/plone/app/event/tests/test_dx_behaviors.py\n@@ -101,17 +101,17 @@ def test_defaults(self):\n             )\n         )\n \n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "TestEvent"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "TestEvent"\n+        )\n \n         # TODO: these values are simply not set in the pat-pickadate pattern.\n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.start"\n-        ).value = "2014-03-30"\n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.end"\n-        ).value = "2014-03-31"\n+        self.browser.getControl(name="form.widgets.IEventBasic.start").value = (\n+            "2014-03-30"\n+        )\n+        self.browser.getControl(name="form.widgets.IEventBasic.end").value = (\n+            "2014-03-31"\n+        )\n \n         self.browser.getControl("Save").click()\n \n@@ -165,17 +165,17 @@ def test_edit_context(self):\n         #\n         self.browser.open(self.portal.absolute_url())\n         self.browser.getLink("plone.app.event.dx.event").click()\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "TestEvent"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "TestEvent"\n+        )\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.start"\n-        ).value = "2014-03-30T03:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.start").value = (\n+            "2014-03-30T03:51"\n+        )\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.end"\n-        ).value = "2014-03-30T04:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.end").value = (\n+            "2014-03-30T04:51"\n+        )\n \n         self.browser.getControl("Save").click()\n \n@@ -191,13 +191,13 @@ def test_edit_context(self):\n         testevent = self.portal.testevent\n         self.browser.open("%s/@@edit" % testevent.absolute_url())\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.start"\n-        ).value = "2014-03-31T03:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.start").value = (\n+            "2014-03-31T03:51"\n+        )\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.end"\n-        ).value = "2014-03-31T04:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.end").value = (\n+            "2014-03-31T04:51"\n+        )\n \n         self.browser.getControl("Save").click()\n \n@@ -574,15 +574,15 @@ def test_migrate_fields(self):\n         ann = IAnnotations(e1)\n         ann["plone.app.event.dx.behaviors.IEventLocation.location"] = self.location\n         ann["plone.app.event.dx.behaviors.IEventAttendees.attendees"] = self.attendees\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventContact.contact_email"\n-        ] = self.contact_email\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventContact.contact_name"\n-        ] = self.contact_name\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventContact.contact_phone"\n-        ] = self.contact_phone\n+        ann["plone.app.event.dx.behaviors.IEventContact.contact_email"] = (\n+            self.contact_email\n+        )\n+        ann["plone.app.event.dx.behaviors.IEventContact.contact_name"] = (\n+            self.contact_name\n+        )\n+        ann["plone.app.event.dx.behaviors.IEventContact.contact_phone"] = (\n+            self.contact_phone\n+        )\n         ann["plone.app.event.dx.behaviors.IEventContact.event_url"] = self.event_url\n         ann["plone.app.event.dx.behaviors.IEventSummary.text"] = RichTextValue(\n             raw=self.text\n@@ -624,9 +624,9 @@ def test_no_overwrite(self):\n         ann["plone.app.event.dx.behaviors.IEventLocation.location"] = (\n             self.location + "X"\n         )\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventAttendees.attendees"\n-        ] = self.attendees + ("Paula",)\n+        ann["plone.app.event.dx.behaviors.IEventAttendees.attendees"] = (\n+            self.attendees + ("Paula",)\n+        )\n         ann["plone.app.event.dx.behaviors.IEventContact.contact_email"] = (\n             self.contact_email + "X"\n         )\ndiff --git a/plone/app/event/tests/test_ical_import.py b/plone/app/event/tests/test_ical_import.py\nindex 0e5fd7ae..6eae7c47 100644\n--- a/plone/app/event/tests/test_ical_import.py\n+++ b/plone/app/event/tests/test_ical_import.py\n@@ -85,8 +85,8 @@ def test_constraint(self):\n         self.assertIn(\n             "URL to an external icalendar resource file", self.browser.contents\n         )\n-        self.browser.getControl(\n-            name="form.widgets.ical_url"\n-        ).value = "file:///tmp/test.ical"\n+        self.browser.getControl(name="form.widgets.ical_url").value = (\n+            "file:///tmp/test.ical"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n         self.assertIn("URLs with file: are not allowed.", self.browser.contents)\n'

Repository: plone.app.event


Branch: refs/heads/master
Date: 2024-02-19T10:47:42+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.event/commit/c859a3fde6c8daef9f836fc421655f1dfcbc639b

Merge pull request #388 from plone/pre-commit-ci-update-config

[pre-commit.ci] pre-commit autoupdate

Files changed:
M .pre-commit-config.yaml
M plone/app/event/dx/behaviors.py
M plone/app/event/tests/test_dx_behaviors.py
M plone/app/event/tests/test_ical_import.py

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex caf34e5b..f857b483 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -16,7 +16,7 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 23.12.1\n+    rev: 24.1.1\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n@@ -32,7 +32,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 6.1.0\n+    rev: 7.0.0\n     hooks:\n     -   id: flake8\n \ndiff --git a/plone/app/event/dx/behaviors.py b/plone/app/event/dx/behaviors.py\nindex 14c07240..d9633bc7 100644\n--- a/plone/app/event/dx/behaviors.py\n+++ b/plone/app/event/dx/behaviors.py\n@@ -1,5 +1,6 @@\n """Behaviors to enable calendarish event extension to dexterity content types.\n """\n+\n from plone.app.dexterity.behaviors.metadata import ICategorization\n from plone.app.event import _\n from plone.app.event.base import default_end as default_end_dt\n@@ -61,7 +62,6 @@ def default_end(context):\n \n \n class IEventBasic(model.Schema, IDXEvent):\n-\n     """Basic event schema."""\n \n     start = schema.Datetime(\n@@ -129,7 +129,6 @@ def validate_start_end(data):\n \n \n class IEventRecurrence(model.Schema, IDXEventRecurrence):\n-\n     """Recurring Event Schema."""\n \n     recurrence = schema.Text(\n@@ -151,7 +150,6 @@ class IEventRecurrence(model.Schema, IDXEventRecurrence):\n \n \n class IEventLocation(model.Schema):\n-\n     """Event Location Schema."""\n \n     location = schema.TextLine(\n@@ -164,7 +162,6 @@ class IEventLocation(model.Schema):\n \n \n class IEventAttendees(model.Schema):\n-\n     """Event Attendees Schema."""\n \n     attendees = schema.Tuple(\n@@ -179,7 +176,6 @@ class IEventAttendees(model.Schema):\n \n \n class IEventContact(model.Schema):\n-\n     """Event Contact Schema."""\n \n     contact_name = schema.TextLine(\n@@ -282,7 +278,6 @@ def sync_uid_indexer(obj):\n @adapter(IDXEvent)\n @implementer(IEventAccessor)\n class EventAccessor:\n-\n     """Generic event accessor adapter implementation for Dexterity content\n     objects.\n     """\ndiff --git a/plone/app/event/tests/test_dx_behaviors.py b/plone/app/event/tests/test_dx_behaviors.py\nindex 22a830cf..03312243 100644\n--- a/plone/app/event/tests/test_dx_behaviors.py\n+++ b/plone/app/event/tests/test_dx_behaviors.py\n@@ -101,17 +101,17 @@ def test_defaults(self):\n             )\n         )\n \n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "TestEvent"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "TestEvent"\n+        )\n \n         # TODO: these values are simply not set in the pat-pickadate pattern.\n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.start"\n-        ).value = "2014-03-30"\n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.end"\n-        ).value = "2014-03-31"\n+        self.browser.getControl(name="form.widgets.IEventBasic.start").value = (\n+            "2014-03-30"\n+        )\n+        self.browser.getControl(name="form.widgets.IEventBasic.end").value = (\n+            "2014-03-31"\n+        )\n \n         self.browser.getControl("Save").click()\n \n@@ -165,17 +165,17 @@ def test_edit_context(self):\n         #\n         self.browser.open(self.portal.absolute_url())\n         self.browser.getLink("plone.app.event.dx.event").click()\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "TestEvent"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "TestEvent"\n+        )\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.start"\n-        ).value = "2014-03-30T03:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.start").value = (\n+            "2014-03-30T03:51"\n+        )\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.end"\n-        ).value = "2014-03-30T04:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.end").value = (\n+            "2014-03-30T04:51"\n+        )\n \n         self.browser.getControl("Save").click()\n \n@@ -191,13 +191,13 @@ def test_edit_context(self):\n         testevent = self.portal.testevent\n         self.browser.open("%s/@@edit" % testevent.absolute_url())\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.start"\n-        ).value = "2014-03-31T03:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.start").value = (\n+            "2014-03-31T03:51"\n+        )\n \n-        self.browser.getControl(\n-            name="form.widgets.IEventBasic.end"\n-        ).value = "2014-03-31T04:51"\n+        self.browser.getControl(name="form.widgets.IEventBasic.end").value = (\n+            "2014-03-31T04:51"\n+        )\n \n         self.browser.getControl("Save").click()\n \n@@ -574,15 +574,15 @@ def test_migrate_fields(self):\n         ann = IAnnotations(e1)\n         ann["plone.app.event.dx.behaviors.IEventLocation.location"] = self.location\n         ann["plone.app.event.dx.behaviors.IEventAttendees.attendees"] = self.attendees\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventContact.contact_email"\n-        ] = self.contact_email\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventContact.contact_name"\n-        ] = self.contact_name\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventContact.contact_phone"\n-        ] = self.contact_phone\n+        ann["plone.app.event.dx.behaviors.IEventContact.contact_email"] = (\n+            self.contact_email\n+        )\n+        ann["plone.app.event.dx.behaviors.IEventContact.contact_name"] = (\n+            self.contact_name\n+        )\n+        ann["plone.app.event.dx.behaviors.IEventContact.contact_phone"] = (\n+            self.contact_phone\n+        )\n         ann["plone.app.event.dx.behaviors.IEventContact.event_url"] = self.event_url\n         ann["plone.app.event.dx.behaviors.IEventSummary.text"] = RichTextValue(\n             raw=self.text\n@@ -624,9 +624,9 @@ def test_no_overwrite(self):\n         ann["plone.app.event.dx.behaviors.IEventLocation.location"] = (\n             self.location + "X"\n         )\n-        ann[\n-            "plone.app.event.dx.behaviors.IEventAttendees.attendees"\n-        ] = self.attendees + ("Paula",)\n+        ann["plone.app.event.dx.behaviors.IEventAttendees.attendees"] = (\n+            self.attendees + ("Paula",)\n+        )\n         ann["plone.app.event.dx.behaviors.IEventContact.contact_email"] = (\n             self.contact_email + "X"\n         )\ndiff --git a/plone/app/event/tests/test_ical_import.py b/plone/app/event/tests/test_ical_import.py\nindex 0e5fd7ae..6eae7c47 100644\n--- a/plone/app/event/tests/test_ical_import.py\n+++ b/plone/app/event/tests/test_ical_import.py\n@@ -85,8 +85,8 @@ def test_constraint(self):\n         self.assertIn(\n             "URL to an external icalendar resource file", self.browser.contents\n         )\n-        self.browser.getControl(\n-            name="form.widgets.ical_url"\n-        ).value = "file:///tmp/test.ical"\n+        self.browser.getControl(name="form.widgets.ical_url").value = (\n+            "file:///tmp/test.ical"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n         self.assertIn("URLs with file: are not allowed.", self.browser.contents)\n'

