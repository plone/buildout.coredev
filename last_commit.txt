Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2024-03-15T12:23:27+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/49d47c6453e5545d1a11f49cf48477a0cfa1f0ff

Add support for the "accept" attribute on file inputs.

If the widget's field - if there is one - has the "accept" attribute set (the
`NamedImage` field has `image/*` set by default) then this is rendered as an
`accept` attribute on the file input.

This would restrict the allowed file types before uploading while still being
checked on the server side.

Fixes: https://github.com/plone/plone.formwidget.namedfile/issues/66
Depends on: https://github.com/plone/plone.namedfile/pull/158
[thet]

Files changed:
A news/67.feature
M plone/formwidget/namedfile/file_input.pt
M plone/formwidget/namedfile/image_input.pt
M plone/formwidget/namedfile/widget.py
M plone/formwidget/namedfile/widget.rst
M setup.py

b'diff --git a/news/67.feature b/news/67.feature\nnew file mode 100644\nindex 0000000..ecbdb3a\n--- /dev/null\n+++ b/news/67.feature\n@@ -0,0 +1,12 @@\n+Add support for the "accept" attribute on file inputs.\n+\n+If the widget\'s field - if there is one - has the "accept" attribute set (the\n+`NamedImage` field has `image/*` set by default) then this is rendered as an\n+`accept` attribute on the file input.\n+\n+This would restrict the allowed file types before uploading while still being\n+checked on the server side.\n+\n+Fixes: https://github.com/plone/plone.formwidget.namedfile/issues/66\n+Depends on: https://github.com/plone/plone.namedfile/pull/158\n+[thet]\ndiff --git a/plone/formwidget/namedfile/file_input.pt b/plone/formwidget/namedfile/file_input.pt\nindex fb3bc0f..6bfb891 100644\n--- a/plone/formwidget/namedfile/file_input.pt\n+++ b/plone/formwidget/namedfile/file_input.pt\n@@ -130,7 +130,8 @@\n   <div style="padding-left: 1.5em; padding-top: 0.5em;"\n        tal:omit-tag="not:allow_nochange"\n   >\n-    <input type="file"\n+    <input accept="${view/accept}"\n+           type="file"\n            tal:attributes="\n              id string:${view/id}-input;\n              name view/name;\ndiff --git a/plone/formwidget/namedfile/image_input.pt b/plone/formwidget/namedfile/image_input.pt\nindex 6d0964c..129a9b5 100644\n--- a/plone/formwidget/namedfile/image_input.pt\n+++ b/plone/formwidget/namedfile/image_input.pt\n@@ -135,7 +135,8 @@\n   <div style="padding-left: 1.5em; padding-top: 0.5em;"\n        tal:omit-tag="not:allow_nochange"\n   >\n-    <input type="file"\n+    <input accept="${view/accept}"\n+           type="file"\n            tal:attributes="\n              id string:${view/id}-input;\n              name view/name;\ndiff --git a/plone/formwidget/namedfile/widget.py b/plone/formwidget/namedfile/widget.py\nindex e1cc5c8..a752fcf 100644\n--- a/plone/formwidget/namedfile/widget.py\n+++ b/plone/formwidget/namedfile/widget.py\n@@ -82,6 +82,12 @@ class NamedFileWidget(Explicit, FileWidget):\n     value = None  # don\'t default to a string\n     _file_upload_id = None\n \n+    @property\n+    def accept(self):\n+        accept = getattr(self.field, "accept", None)\n+        if accept:\n+            return ", ".join(accept)\n+\n     @property\n     def is_uploaded(self):\n         return utils.is_file_upload(self.value) or INamed.providedBy(self.value)\ndiff --git a/plone/formwidget/namedfile/widget.rst b/plone/formwidget/namedfile/widget.rst\nindex bdc91da..e993374 100644\n--- a/plone/formwidget/namedfile/widget.rst\n+++ b/plone/formwidget/namedfile/widget.rst\n@@ -151,7 +151,7 @@ First use a GET request::\n   >>> image_widget.extract()\n   <ZPublisher.HTTPRequest.FileUpload ...>\n \n-The rendering is unchanged:\n+The rendering is unchanged::\n \n   >>> print(file_widget.render())\n   <span id="widget.id.file" class="named-file-widget" >\n@@ -284,7 +284,7 @@ At first, there is no value, so the behaviour is much like before::\n   >>> image_widget.update()\n   >>> print(image_widget.render())\n   <span id="widget.id.image" class="named-image-widget required namedimage-field" >\n-      <input type="file" id="widget.id.image-input" name="widget.name.image" />\n+      <input accept="image/*" type="file" id="widget.id.image-input" name="widget.name.image" />\n   </span>\n \n However, if we now set a value, we will have the option of keeping it,\n@@ -388,6 +388,67 @@ stored in the field::\n   True\n \n \n+Rendering field widgets with constraints on allowed media types\n+-----------------------------------------------------------------\n+\n+The NamedImage already has a constraint on `image/*` mime types for files and\n+this is also rendered for the input element. See above.\n+You can also customize the allowed media types with the `accept` attribute,\n+like shown here::\n+\n+  >>> class IContentConstrained(Interface):\n+  ...     file_field = field.NamedFile(\n+  ...         title=u"File",\n+  ...         accept=("audio/mp3", "audio/flac", ".wav")\n+  ...     )\n+  ...     image_field = field.NamedImage(\n+  ...         title=u"Image",\n+  ...         accept=("image/webp", "image/png", ".jpg")\n+  ...     )\n+\n+  >>> @implementer(IContentConstrained, IImageScaleTraversable, IAttributeAnnotatable)\n+  ... class ContentConstrained(object):\n+  ...     def __init__(self, file, image):\n+  ...         self.file_field = file\n+  ...         self.image_field = image\n+  ...         self._p_mtime = DateTime()\n+  ...         self.path = \'/content_constrained\'\n+  ...\n+  ...     def absolute_url(self):\n+  ...         return root_url + self.path\n+  ...\n+  ...     def Title(self):\n+  ...         return \'A content item\'\n+\n+  >>> content_constrained = ContentConstrained(None, None)\n+\n+  >>> file_widget_constrained = NamedFileFieldWidget(IContentConstrained[\'file_field\'], make_request())\n+  >>> image_widget_constrained = NamedImageFieldWidget(IContentConstrained[\'image_field\'], make_request())\n+\n+  >>> file_widget_constrained.context = content_constrained\n+  >>> image_widget_constrained.context = content_constrained\n+\n+  >>> file_widget_constrained.id = \'widget.id.file\'\n+  >>> file_widget_constrained.name = \'widget.name.file\'\n+\n+  >>> image_widget_constrained.id = \'widget.id.image\'\n+  >>> image_widget_constrained.name = \'widget.name.image\'\n+\n+At first, there is no value, so the behaviour is much like before::\n+\n+  >>> file_widget_constrained.update()\n+  >>> print(file_widget_constrained.render())\n+  <span id="widget.id.file" class="named-file-widget required namedfile-field" >\n+      <input accept="audio/mp3, audio/flac, .wav" type="file" id="widget.id.file-input" name="widget.name.file" />\n+  </span>\n+\n+  >>> image_widget_constrained.update()\n+  >>> print(image_widget_constrained.render())\n+  <span id="widget.id.image" class="named-image-widget required namedimage-field" >\n+      <input accept="image/webp, image/png, .jpg" type="file" id="widget.id.image-input" name="widget.name.image" />\n+  </span>\n+\n+\n Download view\n -------------\n \ndiff --git a/setup.py b/setup.py\nindex 6d5435d..d3a49bd 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -35,7 +35,7 @@\n         "BTrees",\n         "setuptools",\n         "plone.base",\n-        "plone.namedfile",\n+        "plone.namedfile>=6.3.0",\n         "Products.MimetypesRegistry",\n         "persistent",\n         "plone.registry",\n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2024-03-15T12:23:27+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/57815fea54f1e96bff16d9d258ee208acb4ec37c

file input: Show accepted media types.

Files changed:
M plone/formwidget/namedfile/file_input.pt
M plone/formwidget/namedfile/image_input.pt
M plone/formwidget/namedfile/widget.rst

b'diff --git a/plone/formwidget/namedfile/file_input.pt b/plone/formwidget/namedfile/file_input.pt\nindex 6bfb891..fc07c2c 100644\n--- a/plone/formwidget/namedfile/file_input.pt\n+++ b/plone/formwidget/namedfile/file_input.pt\n@@ -140,6 +140,14 @@\n              maxlength view/maxlength;\n            "\n     />\n+    <div class="form-text"\n+         tal:condition="view/accept"\n+         i18n:translate="namedfile_accepted_types"\n+    >\n+      Allowed types:\n+      <tal:i18n i18n:name="accepted_types">${view/accept}</tal:i18n>.\n+    </div>\n+\n     <script type="text/javascript"\n             tal:condition="python:allow_nochange and action != \'replace\'"\n             tal:content="string:document.getElementById(\'${view/id}-input\').disabled=true;"\ndiff --git a/plone/formwidget/namedfile/image_input.pt b/plone/formwidget/namedfile/image_input.pt\nindex 129a9b5..e03366d 100644\n--- a/plone/formwidget/namedfile/image_input.pt\n+++ b/plone/formwidget/namedfile/image_input.pt\n@@ -145,6 +145,14 @@\n              maxlength view/maxlength;\n            "\n     />\n+    <div class="form-text"\n+         tal:condition="view/accept"\n+         i18n:translate="namedfile_accepted_types"\n+    >\n+      Allowed types:\n+      <tal:i18n i18n:name="accepted_types">${view/accept}</tal:i18n>.\n+    </div>\n+\n     <script type="text/javascript"\n             tal:condition="python:allow_nochange and action != \'replace\'"\n             tal:content="string:document.getElementById(\'${view/id}-input\').disabled=true;"\ndiff --git a/plone/formwidget/namedfile/widget.rst b/plone/formwidget/namedfile/widget.rst\nindex e993374..866175b 100644\n--- a/plone/formwidget/namedfile/widget.rst\n+++ b/plone/formwidget/namedfile/widget.rst\n@@ -285,8 +285,10 @@ At first, there is no value, so the behaviour is much like before::\n   >>> print(image_widget.render())\n   <span id="widget.id.image" class="named-image-widget required namedimage-field" >\n       <input accept="image/*" type="file" id="widget.id.image-input" name="widget.name.image" />\n+      <div class="form-text" >Allowed types: image/*.</div>\n   </span>\n \n+\n However, if we now set a value, we will have the option of keeping it,\n or changing it.  The filename can handle unicode and international\n characters::\n@@ -440,12 +442,14 @@ At first, there is no value, so the behaviour is much like before::\n   >>> print(file_widget_constrained.render())\n   <span id="widget.id.file" class="named-file-widget required namedfile-field" >\n       <input accept="audio/mp3, audio/flac, .wav" type="file" id="widget.id.file-input" name="widget.name.file" />\n+      <div class="form-text" >Allowed types: audio/mp3, audio/flac, .wav.</div>\n   </span>\n \n   >>> image_widget_constrained.update()\n   >>> print(image_widget_constrained.render())\n   <span id="widget.id.image" class="named-image-widget required namedimage-field" >\n       <input accept="image/webp, image/png, .jpg" type="file" id="widget.id.image-input" name="widget.name.image" />\n+      <div class="form-text" >Allowed types: image/webp, image/png, .jpg.</div>\n   </span>\n \n \n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2024-03-15T13:46:12+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/462d8f1e5a407daf2ca34efd6155fbe6f02c84ab

Merge pull request #67 from plone/allowed_content_types

Add support for accept attribute on file input.

Files changed:
A news/67.feature
M plone/formwidget/namedfile/file_input.pt
M plone/formwidget/namedfile/image_input.pt
M plone/formwidget/namedfile/widget.py
M plone/formwidget/namedfile/widget.rst
M setup.py

b'diff --git a/news/67.feature b/news/67.feature\nnew file mode 100644\nindex 0000000..ecbdb3a\n--- /dev/null\n+++ b/news/67.feature\n@@ -0,0 +1,12 @@\n+Add support for the "accept" attribute on file inputs.\n+\n+If the widget\'s field - if there is one - has the "accept" attribute set (the\n+`NamedImage` field has `image/*` set by default) then this is rendered as an\n+`accept` attribute on the file input.\n+\n+This would restrict the allowed file types before uploading while still being\n+checked on the server side.\n+\n+Fixes: https://github.com/plone/plone.formwidget.namedfile/issues/66\n+Depends on: https://github.com/plone/plone.namedfile/pull/158\n+[thet]\ndiff --git a/plone/formwidget/namedfile/file_input.pt b/plone/formwidget/namedfile/file_input.pt\nindex fb3bc0f..fc07c2c 100644\n--- a/plone/formwidget/namedfile/file_input.pt\n+++ b/plone/formwidget/namedfile/file_input.pt\n@@ -130,7 +130,8 @@\n   <div style="padding-left: 1.5em; padding-top: 0.5em;"\n        tal:omit-tag="not:allow_nochange"\n   >\n-    <input type="file"\n+    <input accept="${view/accept}"\n+           type="file"\n            tal:attributes="\n              id string:${view/id}-input;\n              name view/name;\n@@ -139,6 +140,14 @@\n              maxlength view/maxlength;\n            "\n     />\n+    <div class="form-text"\n+         tal:condition="view/accept"\n+         i18n:translate="namedfile_accepted_types"\n+    >\n+      Allowed types:\n+      <tal:i18n i18n:name="accepted_types">${view/accept}</tal:i18n>.\n+    </div>\n+\n     <script type="text/javascript"\n             tal:condition="python:allow_nochange and action != \'replace\'"\n             tal:content="string:document.getElementById(\'${view/id}-input\').disabled=true;"\ndiff --git a/plone/formwidget/namedfile/image_input.pt b/plone/formwidget/namedfile/image_input.pt\nindex 6d0964c..e03366d 100644\n--- a/plone/formwidget/namedfile/image_input.pt\n+++ b/plone/formwidget/namedfile/image_input.pt\n@@ -135,7 +135,8 @@\n   <div style="padding-left: 1.5em; padding-top: 0.5em;"\n        tal:omit-tag="not:allow_nochange"\n   >\n-    <input type="file"\n+    <input accept="${view/accept}"\n+           type="file"\n            tal:attributes="\n              id string:${view/id}-input;\n              name view/name;\n@@ -144,6 +145,14 @@\n              maxlength view/maxlength;\n            "\n     />\n+    <div class="form-text"\n+         tal:condition="view/accept"\n+         i18n:translate="namedfile_accepted_types"\n+    >\n+      Allowed types:\n+      <tal:i18n i18n:name="accepted_types">${view/accept}</tal:i18n>.\n+    </div>\n+\n     <script type="text/javascript"\n             tal:condition="python:allow_nochange and action != \'replace\'"\n             tal:content="string:document.getElementById(\'${view/id}-input\').disabled=true;"\ndiff --git a/plone/formwidget/namedfile/widget.py b/plone/formwidget/namedfile/widget.py\nindex e1cc5c8..a752fcf 100644\n--- a/plone/formwidget/namedfile/widget.py\n+++ b/plone/formwidget/namedfile/widget.py\n@@ -82,6 +82,12 @@ class NamedFileWidget(Explicit, FileWidget):\n     value = None  # don\'t default to a string\n     _file_upload_id = None\n \n+    @property\n+    def accept(self):\n+        accept = getattr(self.field, "accept", None)\n+        if accept:\n+            return ", ".join(accept)\n+\n     @property\n     def is_uploaded(self):\n         return utils.is_file_upload(self.value) or INamed.providedBy(self.value)\ndiff --git a/plone/formwidget/namedfile/widget.rst b/plone/formwidget/namedfile/widget.rst\nindex bdc91da..866175b 100644\n--- a/plone/formwidget/namedfile/widget.rst\n+++ b/plone/formwidget/namedfile/widget.rst\n@@ -151,7 +151,7 @@ First use a GET request::\n   >>> image_widget.extract()\n   <ZPublisher.HTTPRequest.FileUpload ...>\n \n-The rendering is unchanged:\n+The rendering is unchanged::\n \n   >>> print(file_widget.render())\n   <span id="widget.id.file" class="named-file-widget" >\n@@ -284,9 +284,11 @@ At first, there is no value, so the behaviour is much like before::\n   >>> image_widget.update()\n   >>> print(image_widget.render())\n   <span id="widget.id.image" class="named-image-widget required namedimage-field" >\n-      <input type="file" id="widget.id.image-input" name="widget.name.image" />\n+      <input accept="image/*" type="file" id="widget.id.image-input" name="widget.name.image" />\n+      <div class="form-text" >Allowed types: image/*.</div>\n   </span>\n \n+\n However, if we now set a value, we will have the option of keeping it,\n or changing it.  The filename can handle unicode and international\n characters::\n@@ -388,6 +390,69 @@ stored in the field::\n   True\n \n \n+Rendering field widgets with constraints on allowed media types\n+-----------------------------------------------------------------\n+\n+The NamedImage already has a constraint on `image/*` mime types for files and\n+this is also rendered for the input element. See above.\n+You can also customize the allowed media types with the `accept` attribute,\n+like shown here::\n+\n+  >>> class IContentConstrained(Interface):\n+  ...     file_field = field.NamedFile(\n+  ...         title=u"File",\n+  ...         accept=("audio/mp3", "audio/flac", ".wav")\n+  ...     )\n+  ...     image_field = field.NamedImage(\n+  ...         title=u"Image",\n+  ...         accept=("image/webp", "image/png", ".jpg")\n+  ...     )\n+\n+  >>> @implementer(IContentConstrained, IImageScaleTraversable, IAttributeAnnotatable)\n+  ... class ContentConstrained(object):\n+  ...     def __init__(self, file, image):\n+  ...         self.file_field = file\n+  ...         self.image_field = image\n+  ...         self._p_mtime = DateTime()\n+  ...         self.path = \'/content_constrained\'\n+  ...\n+  ...     def absolute_url(self):\n+  ...         return root_url + self.path\n+  ...\n+  ...     def Title(self):\n+  ...         return \'A content item\'\n+\n+  >>> content_constrained = ContentConstrained(None, None)\n+\n+  >>> file_widget_constrained = NamedFileFieldWidget(IContentConstrained[\'file_field\'], make_request())\n+  >>> image_widget_constrained = NamedImageFieldWidget(IContentConstrained[\'image_field\'], make_request())\n+\n+  >>> file_widget_constrained.context = content_constrained\n+  >>> image_widget_constrained.context = content_constrained\n+\n+  >>> file_widget_constrained.id = \'widget.id.file\'\n+  >>> file_widget_constrained.name = \'widget.name.file\'\n+\n+  >>> image_widget_constrained.id = \'widget.id.image\'\n+  >>> image_widget_constrained.name = \'widget.name.image\'\n+\n+At first, there is no value, so the behaviour is much like before::\n+\n+  >>> file_widget_constrained.update()\n+  >>> print(file_widget_constrained.render())\n+  <span id="widget.id.file" class="named-file-widget required namedfile-field" >\n+      <input accept="audio/mp3, audio/flac, .wav" type="file" id="widget.id.file-input" name="widget.name.file" />\n+      <div class="form-text" >Allowed types: audio/mp3, audio/flac, .wav.</div>\n+  </span>\n+\n+  >>> image_widget_constrained.update()\n+  >>> print(image_widget_constrained.render())\n+  <span id="widget.id.image" class="named-image-widget required namedimage-field" >\n+      <input accept="image/webp, image/png, .jpg" type="file" id="widget.id.image-input" name="widget.name.image" />\n+      <div class="form-text" >Allowed types: image/webp, image/png, .jpg.</div>\n+  </span>\n+\n+\n Download view\n -------------\n \ndiff --git a/setup.py b/setup.py\nindex 6d5435d..d3a49bd 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -35,7 +35,7 @@\n         "BTrees",\n         "setuptools",\n         "plone.base",\n-        "plone.namedfile",\n+        "plone.namedfile>=6.3.0",\n         "Products.MimetypesRegistry",\n         "persistent",\n         "plone.registry",\n'

