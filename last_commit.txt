Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2024-06-19T12:58:52+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/e503c8e3b445320b8bce36231aac22da894bf8b5

searchForMembers: always use utf-8 instead of checking default_charset.

This code was still getting the ``IPropertiesTool`` utility.

Files changed:
A news/125.bugfix.1
M src/Products/PlonePAS/tools/membership.py

b'diff --git a/news/125.bugfix.1 b/news/125.bugfix.1\nnew file mode 100644\nindex 00000000..8c9bc333\n--- /dev/null\n+++ b/news/125.bugfix.1\n@@ -0,0 +1,3 @@\n+searchForMembers: always use utf-8 instead of checking default_charset.\n+This code was still getting the ``IPropertiesTool`` utility.\n+[maurits]\ndiff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py\nindex 50310fbe..14259c11 100644\n--- a/src/Products/PlonePAS/tools/membership.py\n+++ b/src/Products/PlonePAS/tools/membership.py\n@@ -12,7 +12,6 @@\n from io import BytesIO\n from OFS.Image import Image\n from plone.protect.interfaces import IDisableCSRFProtection\n-from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFCore.MembershipTool import MembershipTool as BaseTool\n from Products.CMFCore.permissions import ListPortalMembers\n from Products.CMFCore.permissions import ManagePortal\n@@ -32,7 +31,6 @@\n from zExceptions import BadRequest\n from ZODB.POSException import ConflictError\n from zope import event\n-from zope.component import getUtility\n from zope.interface import alsoProvides\n from zope.interface import implementer\n \n@@ -44,15 +42,9 @@\n default_portrait = "defaultUser.png"\n logger = logging.getLogger("PlonePAS")\n \n-_marker = dict()  # type: ignore\n \n-\n-def _unicodify_structure(value, charset=_marker):\n+def _unicodify_structure(value, charset="utf-8"):\n     """Convert value to unicode."""\n-    if charset is _marker:\n-        ptool = getUtility(IPropertiesTool)\n-        charset = ptool.getProperty("default_charset", None)\n-\n     if isinstance(value, str):\n         return charset and safe_unicode(value, charset) or safe_unicode(value)\n     if isinstance(value, list):\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2024-06-19T12:58:52+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/b520c00f74f0932ac5341b6c92a26c4ded11fd31

Remove _unicodify_structure, we can just call safe_unicode.

The other code paths in _unicodify_structure are never called.
This method was added in Plone 5.0 for getting rid of CMFDefault.
https://github.com/plone/Products.PlonePAS/commit/93c0b87125fdef8193ccac84506ea112977e490a

Files changed:
M src/Products/PlonePAS/tools/membership.py

b'diff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py\nindex 14259c11..b219f396 100644\n--- a/src/Products/PlonePAS/tools/membership.py\n+++ b/src/Products/PlonePAS/tools/membership.py\n@@ -43,21 +43,6 @@\n logger = logging.getLogger("PlonePAS")\n \n \n-def _unicodify_structure(value, charset="utf-8"):\n-    """Convert value to unicode."""\n-    if isinstance(value, str):\n-        return charset and safe_unicode(value, charset) or safe_unicode(value)\n-    if isinstance(value, list):\n-        return [_unicodify_structure(val, charset) for val in value]\n-    if isinstance(value, tuple):\n-        return tuple(_unicodify_structure(entry, charset) for entry in value)\n-    if isinstance(value, dict):\n-        for key, val in value.items():\n-            value[key] = _unicodify_structure(val, charset)\n-        return value\n-    return value\n-\n-\n @implementer(membership.IMembershipTool)\n class MembershipTool(BaseTool):\n     """PAS-based customization of MembershipTool."""\n@@ -182,7 +167,7 @@ def searchForMembers(self, REQUEST=None, **kw):\n             searchmap = REQUEST\n             for key, value in searchmap.items():\n                 if isinstance(value, str):\n-                    searchmap[key] = _unicodify_structure(value)\n+                    searchmap[key] = safe_unicode(value)\n         else:\n             searchmap = kw\n \n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2024-06-19T13:01:03+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/17e42df24b282aedcf7abc6579a84499b5334288

Restore searching for member when query uses bytes instead of text.

Files changed:
A news/125.bugfix.2
M src/Products/PlonePAS/tests/test_membershiptool.py
M src/Products/PlonePAS/tools/membership.py

b'diff --git a/news/125.bugfix.2 b/news/125.bugfix.2\nnew file mode 100644\nindex 00000000..e03522bf\n--- /dev/null\n+++ b/news/125.bugfix.2\n@@ -0,0 +1,2 @@\n+Restore searching for member when query uses bytes instead of text.\n+[maurits]\ndiff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py\nindex b0d3480b..c380e73d 100644\n--- a/src/Products/PlonePAS/tests/test_membershiptool.py\n+++ b/src/Products/PlonePAS/tests/test_membershiptool.py\n@@ -904,7 +904,7 @@ def testSearchByRequestObj(self):\n \n         self.assertEqual(len(search(REQUEST=dict(name="j\xc3\xbcrgen"))), 1)\n \n-        self.assertEqual(len(search(REQUEST=dict(name="j\xc3\xbcrgen"))), 1)\n+        self.assertEqual(len(search(REQUEST=dict(name="j\xc3\xbcrgen".encode()))), 1)\n \n \n class TestDefaultUserAndPasswordNotChanged(unittest.TestCase):\ndiff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py\nindex b219f396..153b7763 100644\n--- a/src/Products/PlonePAS/tools/membership.py\n+++ b/src/Products/PlonePAS/tools/membership.py\n@@ -166,7 +166,7 @@ def searchForMembers(self, REQUEST=None, **kw):\n         if REQUEST is not None:\n             searchmap = REQUEST\n             for key, value in searchmap.items():\n-                if isinstance(value, str):\n+                if isinstance(value, bytes):\n                     searchmap[key] = safe_unicode(value)\n         else:\n             searchmap = kw\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2024-06-19T13:38:05+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/6ab3cd29a1392dca74712e5d5a9558b9765f8181

Deprecate our utils.safe_unicode in favour of safe_text from plone.base.

That one actually works. :-)
Our version did nothing, due to some mistakes in porting to Python 3.

Files changed:
M src/Products/PlonePAS/utils.py

b'diff --git a/src/Products/PlonePAS/utils.py b/src/Products/PlonePAS/utils.py\nindex c259c66e..d3987e2d 100644\n--- a/src/Products/PlonePAS/utils.py\n+++ b/src/Products/PlonePAS/utils.py\n@@ -3,6 +3,14 @@\n from Products.PluggableAuthService.interfaces.plugins import IGroupsPlugin\n \n import urllib\n+import zope.deferredimport\n+\n+\n+zope.deferredimport.deprecated(\n+    "You should use plone.base.utils.safe_text instead. "\n+    "This alias will be removed in Plone 7.0",\n+    safe_unicode="plone.base.utils:safe_text",\n+)\n \n \n def unique(iterable):\n@@ -178,18 +186,6 @@ def getGroupsForPrincipal(principal, plugins, request=None):\n     return list(groups)\n \n \n-def safe_unicode(value, encoding="utf-8"):\n-    """Converts a value to unicode, even it is already a unicode string."""\n-    if isinstance(value, str):\n-        return value\n-    elif isinstance(value, str):\n-        try:\n-            value = str(value, encoding)\n-        except UnicodeDecodeError:\n-            value = value.decode("utf-8", "replace")\n-    return value\n-\n-\n # Imported from Products.CMFCore.MemberdataTool as it has now been removed.\n class CleanupTemp:\n     """Used to cleanup _v_temps at the end of the request."""\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2024-06-19T13:40:57+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/f0ba7d71fd89d99fd85f9460fe94386a51043150

Use plone.base.utils.safe_text ourselves.

Files changed:
M src/Products/PlonePAS/plugins/property.py
M src/Products/PlonePAS/tools/membership.py

b'diff --git a/src/Products/PlonePAS/plugins/property.py b/src/Products/PlonePAS/plugins/property.py\nindex 775e2c45..f2a4f76f 100644\n--- a/src/Products/PlonePAS/plugins/property.py\n+++ b/src/Products/PlonePAS/plugins/property.py\n@@ -6,11 +6,11 @@\n from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from BTrees.OOBTree import OOBTree\n+from plone.base.utils import safe_text\n from Products.CMFCore.utils import getToolByName\n from Products.PlonePAS.interfaces.plugins import IMutablePropertiesPlugin\n from Products.PlonePAS.sheet import MutablePropertySheet\n from Products.PlonePAS.sheet import validateValue\n-from Products.PlonePAS.utils import safe_unicode\n from Products.PluggableAuthService.interfaces.plugins import IPropertiesPlugin\n from Products.PluggableAuthService.interfaces.plugins import IUserEnumerationPlugin\n from Products.PluggableAuthService.plugins.BasePlugin import BasePlugin\n@@ -219,9 +219,9 @@ def testMemberData(self, memberdata, criteria, exact_match=False):\n                 return False\n \n             if isStringType(testvalue):\n-                testvalue = safe_unicode(testvalue.lower())\n+                testvalue = safe_text(testvalue.lower())\n             if isStringType(value):\n-                value = safe_unicode(value.lower())\n+                value = safe_text(value.lower())\n \n             if exact_match:\n                 if value != testvalue:\ndiff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py\nindex 153b7763..d25e897c 100644\n--- a/src/Products/PlonePAS/tools/membership.py\n+++ b/src/Products/PlonePAS/tools/membership.py\n@@ -11,6 +11,7 @@\n from DateTime import DateTime\n from io import BytesIO\n from OFS.Image import Image\n+from plone.base.utils import safe_text\n from plone.protect.interfaces import IDisableCSRFProtection\n from Products.CMFCore.MembershipTool import MembershipTool as BaseTool\n from Products.CMFCore.permissions import ListPortalMembers\n@@ -26,7 +27,6 @@\n from Products.PlonePAS.events import UserLoggedOutEvent\n from Products.PlonePAS.interfaces import membership\n from Products.PlonePAS.utils import cleanId\n-from Products.PlonePAS.utils import safe_unicode\n from Products.PlonePAS.utils import scale_image\n from zExceptions import BadRequest\n from ZODB.POSException import ConflictError\n@@ -167,7 +167,7 @@ def searchForMembers(self, REQUEST=None, **kw):\n             searchmap = REQUEST\n             for key, value in searchmap.items():\n                 if isinstance(value, bytes):\n-                    searchmap[key] = safe_unicode(value)\n+                    searchmap[key] = safe_text(value)\n         else:\n             searchmap = kw\n \n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2024-06-20T17:28:05+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.PlonePAS/commit/ae326a143c2368809312f2ad2e336a8dceffef77

Merge pull request #89 from plone/remove-propertiestool

Remove propertiestool code, fix member search with bytes

Files changed:
A news/125.bugfix.1
A news/125.bugfix.2
M src/Products/PlonePAS/plugins/property.py
M src/Products/PlonePAS/tests/test_membershiptool.py
M src/Products/PlonePAS/tools/membership.py
M src/Products/PlonePAS/utils.py

b'diff --git a/news/125.bugfix.1 b/news/125.bugfix.1\nnew file mode 100644\nindex 00000000..8c9bc333\n--- /dev/null\n+++ b/news/125.bugfix.1\n@@ -0,0 +1,3 @@\n+searchForMembers: always use utf-8 instead of checking default_charset.\n+This code was still getting the ``IPropertiesTool`` utility.\n+[maurits]\ndiff --git a/news/125.bugfix.2 b/news/125.bugfix.2\nnew file mode 100644\nindex 00000000..e03522bf\n--- /dev/null\n+++ b/news/125.bugfix.2\n@@ -0,0 +1,2 @@\n+Restore searching for member when query uses bytes instead of text.\n+[maurits]\ndiff --git a/src/Products/PlonePAS/plugins/property.py b/src/Products/PlonePAS/plugins/property.py\nindex 775e2c45..f2a4f76f 100644\n--- a/src/Products/PlonePAS/plugins/property.py\n+++ b/src/Products/PlonePAS/plugins/property.py\n@@ -6,11 +6,11 @@\n from AccessControl.class_init import InitializeClass\n from App.special_dtml import DTMLFile\n from BTrees.OOBTree import OOBTree\n+from plone.base.utils import safe_text\n from Products.CMFCore.utils import getToolByName\n from Products.PlonePAS.interfaces.plugins import IMutablePropertiesPlugin\n from Products.PlonePAS.sheet import MutablePropertySheet\n from Products.PlonePAS.sheet import validateValue\n-from Products.PlonePAS.utils import safe_unicode\n from Products.PluggableAuthService.interfaces.plugins import IPropertiesPlugin\n from Products.PluggableAuthService.interfaces.plugins import IUserEnumerationPlugin\n from Products.PluggableAuthService.plugins.BasePlugin import BasePlugin\n@@ -219,9 +219,9 @@ def testMemberData(self, memberdata, criteria, exact_match=False):\n                 return False\n \n             if isStringType(testvalue):\n-                testvalue = safe_unicode(testvalue.lower())\n+                testvalue = safe_text(testvalue.lower())\n             if isStringType(value):\n-                value = safe_unicode(value.lower())\n+                value = safe_text(value.lower())\n \n             if exact_match:\n                 if value != testvalue:\ndiff --git a/src/Products/PlonePAS/tests/test_membershiptool.py b/src/Products/PlonePAS/tests/test_membershiptool.py\nindex b0d3480b..c380e73d 100644\n--- a/src/Products/PlonePAS/tests/test_membershiptool.py\n+++ b/src/Products/PlonePAS/tests/test_membershiptool.py\n@@ -904,7 +904,7 @@ def testSearchByRequestObj(self):\n \n         self.assertEqual(len(search(REQUEST=dict(name="j\xc3\xbcrgen"))), 1)\n \n-        self.assertEqual(len(search(REQUEST=dict(name="j\xc3\xbcrgen"))), 1)\n+        self.assertEqual(len(search(REQUEST=dict(name="j\xc3\xbcrgen".encode()))), 1)\n \n \n class TestDefaultUserAndPasswordNotChanged(unittest.TestCase):\ndiff --git a/src/Products/PlonePAS/tools/membership.py b/src/Products/PlonePAS/tools/membership.py\nindex 50310fbe..d25e897c 100644\n--- a/src/Products/PlonePAS/tools/membership.py\n+++ b/src/Products/PlonePAS/tools/membership.py\n@@ -11,8 +11,8 @@\n from DateTime import DateTime\n from io import BytesIO\n from OFS.Image import Image\n+from plone.base.utils import safe_text\n from plone.protect.interfaces import IDisableCSRFProtection\n-from Products.CMFCore.interfaces import IPropertiesTool\n from Products.CMFCore.MembershipTool import MembershipTool as BaseTool\n from Products.CMFCore.permissions import ListPortalMembers\n from Products.CMFCore.permissions import ManagePortal\n@@ -27,12 +27,10 @@\n from Products.PlonePAS.events import UserLoggedOutEvent\n from Products.PlonePAS.interfaces import membership\n from Products.PlonePAS.utils import cleanId\n-from Products.PlonePAS.utils import safe_unicode\n from Products.PlonePAS.utils import scale_image\n from zExceptions import BadRequest\n from ZODB.POSException import ConflictError\n from zope import event\n-from zope.component import getUtility\n from zope.interface import alsoProvides\n from zope.interface import implementer\n \n@@ -44,27 +42,6 @@\n default_portrait = "defaultUser.png"\n logger = logging.getLogger("PlonePAS")\n \n-_marker = dict()  # type: ignore\n-\n-\n-def _unicodify_structure(value, charset=_marker):\n-    """Convert value to unicode."""\n-    if charset is _marker:\n-        ptool = getUtility(IPropertiesTool)\n-        charset = ptool.getProperty("default_charset", None)\n-\n-    if isinstance(value, str):\n-        return charset and safe_unicode(value, charset) or safe_unicode(value)\n-    if isinstance(value, list):\n-        return [_unicodify_structure(val, charset) for val in value]\n-    if isinstance(value, tuple):\n-        return tuple(_unicodify_structure(entry, charset) for entry in value)\n-    if isinstance(value, dict):\n-        for key, val in value.items():\n-            value[key] = _unicodify_structure(val, charset)\n-        return value\n-    return value\n-\n \n @implementer(membership.IMembershipTool)\n class MembershipTool(BaseTool):\n@@ -189,8 +166,8 @@ def searchForMembers(self, REQUEST=None, **kw):\n         if REQUEST is not None:\n             searchmap = REQUEST\n             for key, value in searchmap.items():\n-                if isinstance(value, str):\n-                    searchmap[key] = _unicodify_structure(value)\n+                if isinstance(value, bytes):\n+                    searchmap[key] = safe_text(value)\n         else:\n             searchmap = kw\n \ndiff --git a/src/Products/PlonePAS/utils.py b/src/Products/PlonePAS/utils.py\nindex c259c66e..d3987e2d 100644\n--- a/src/Products/PlonePAS/utils.py\n+++ b/src/Products/PlonePAS/utils.py\n@@ -3,6 +3,14 @@\n from Products.PluggableAuthService.interfaces.plugins import IGroupsPlugin\n \n import urllib\n+import zope.deferredimport\n+\n+\n+zope.deferredimport.deprecated(\n+    "You should use plone.base.utils.safe_text instead. "\n+    "This alias will be removed in Plone 7.0",\n+    safe_unicode="plone.base.utils:safe_text",\n+)\n \n \n def unique(iterable):\n@@ -178,18 +186,6 @@ def getGroupsForPrincipal(principal, plugins, request=None):\n     return list(groups)\n \n \n-def safe_unicode(value, encoding="utf-8"):\n-    """Converts a value to unicode, even it is already a unicode string."""\n-    if isinstance(value, str):\n-        return value\n-    elif isinstance(value, str):\n-        try:\n-            value = str(value, encoding)\n-        except UnicodeDecodeError:\n-            value = value.decode("utf-8", "replace")\n-    return value\n-\n-\n # Imported from Products.CMFCore.MemberdataTool as it has now been removed.\n class CleanupTemp:\n     """Used to cleanup _v_temps at the end of the request."""\n'

