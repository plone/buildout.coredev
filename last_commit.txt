Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-08T13:25:55+02:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.restapi/commit/7e0c9a2ad2c6c7fb3818a1e033afb752ce6f81a3

Fixes #926 - Add type-schema adapters for: Email, URI and Password (#927)

* Fixes #926 - Add type-schema adapters for: Email, URI and Password

* Fix tests on Python 2

* Drop Python specific error classes on BadRequest

* Apply black

Files changed:
A news/926.feature
M docs/source/types-schema.rst
M docs/source/upgrade-guide.rst
M src/plone/restapi/deserializer/dxcontent.py
M src/plone/restapi/tests/http-examples/controlpanels_get_dexterity_item.resp
M src/plone/restapi/tests/http-examples/controlpanels_post_dexterity_item.resp
M src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp
M src/plone/restapi/tests/http-examples/types_document.resp
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/adapters.py
M src/plone/restapi/types/configure.zcml
M src/plone/restapi/types/utils.py

b'diff --git a/docs/source/types-schema.rst b/docs/source/types-schema.rst\nindex ee62fdcd..2d71314b 100644\n--- a/docs/source/types-schema.rst\n+++ b/docs/source/types-schema.rst\n@@ -383,3 +383,63 @@ JSON Schema::\n         \'description\': u\'My great field\',\n         \'widget\': u\'datetime\',\n     }\n+\n+\n+Email\n+-----\n+\n+Zope Schema::\n+\n+    plone.schema.Email(\n+        title=u\'My field\',\n+        description=u\'My great field\',\n+    )\n+\n+JSON Schema::\n+\n+    {\n+        \'type\': \'string\',\n+        \'title\': u\'My field\',\n+        \'description\': u\'My great field\',\n+        \'widget\': u\'email\',\n+    }\n+\n+\n+Password\n+--------\n+\n+Zope Schema::\n+\n+    zope.schema.Password(\n+        title=u\'My field\',\n+        description=u\'My great field\',\n+    )\n+\n+JSON Schema::\n+\n+    {\n+        \'type\': \'string\',\n+        \'title\': u\'My field\',\n+        \'description\': u\'My great field\',\n+        \'widget\': u\'password\',\n+    }\n+\n+\n+URI\n+---\n+\n+Zope Schema::\n+\n+    zope.schema.URI(\n+        title=u\'My field\',\n+        description=u\'My great field\',\n+    )\n+\n+JSON Schema::\n+\n+    {\n+        \'type\': \'string\',\n+        \'title\': u\'My field\',\n+        \'description\': u\'My great field\',\n+        \'widget\': u\'url\',\n+    }\ndiff --git a/docs/source/upgrade-guide.rst b/docs/source/upgrade-guide.rst\nindex 0ed62d3a..d45afc35 100644\n--- a/docs/source/upgrade-guide.rst\n+++ b/docs/source/upgrade-guide.rst\n@@ -56,7 +56,7 @@ The "tiles" field has been renamed to "blocks" and the "tiles_layout" field to "\n \n to::\n \n-{\n+  {\n     "@id": "http://localhost:55001/plone/my-document",\n     ...\n     "blocks_layout": [\ndiff --git a/news/926.feature b/news/926.feature\nnew file mode 100644\nindex 00000000..ad016527\n--- /dev/null\n+++ b/news/926.feature\n@@ -0,0 +1,2 @@\n+Add type-schema adapters for: Email, URI and Password\n+[avoinea]\ndiff --git a/src/plone/restapi/deserializer/dxcontent.py b/src/plone/restapi/deserializer/dxcontent.py\nindex 6fd857ef..239e449c 100644\n--- a/src/plone/restapi/deserializer/dxcontent.py\n+++ b/src/plone/restapi/deserializer/dxcontent.py\n@@ -53,6 +53,10 @@ def __call__(\n                 errors.append({"error": error, "message": str(error)})\n \n         if errors:\n+            # Drop Python specific error classes in order to be able to better handle\n+            # errors on front-end\n+            for error in errors:\n+                error["error"] = "ValidationError"\n             raise BadRequest(errors)\n \n         # We\'ll set the layout after the validation and even if there\ndiff --git a/src/plone/restapi/tests/http-examples/controlpanels_get_dexterity_item.resp b/src/plone/restapi/tests/http-examples/controlpanels_get_dexterity_item.resp\nindex f0a2b486..97bd29bb 100644\n--- a/src/plone/restapi/tests/http-examples/controlpanels_get_dexterity_item.resp\n+++ b/src/plone/restapi/tests/http-examples/controlpanels_get_dexterity_item.resp\n@@ -111,7 +111,6 @@ Content-Type: application/json\n       }, \n       "description": {\n         "description": "", \n-        "minLength": 0, \n         "title": "Description", \n         "type": "string", \n         "widget": "textarea"\ndiff --git a/src/plone/restapi/tests/http-examples/controlpanels_post_dexterity_item.resp b/src/plone/restapi/tests/http-examples/controlpanels_post_dexterity_item.resp\nindex 350a1ca3..5748a4d4 100644\n--- a/src/plone/restapi/tests/http-examples/controlpanels_post_dexterity_item.resp\n+++ b/src/plone/restapi/tests/http-examples/controlpanels_post_dexterity_item.resp\n@@ -112,7 +112,6 @@ Location: http://localhost:55001/plone/@controlpanels/dexterity-types/my_custom_\n       }, \n       "description": {\n         "description": "", \n-        "minLength": 0, \n         "title": "Description", \n         "type": "string", \n         "widget": "textarea"\ndiff --git a/src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp b/src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp\nindex f23bf19d..750076c2 100644\n--- a/src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp\n+++ b/src/plone/restapi/tests/http-examples/translated_messages_types_folder.resp\n@@ -119,7 +119,6 @@ Content-Type: application/json+schema\n     }, \n     "description": {\n       "description": "Usado en listados de elementos y resultados de b\\u00fasquedas.", \n-      "minLength": 0, \n       "title": "Descripci\\u00f3n", \n       "type": "string", \n       "widget": "textarea"\n@@ -188,7 +187,6 @@ Content-Type: application/json+schema\n     }, \n     "rights": {\n       "description": "Declaraci\\u00f3n de copyright o informaci\\u00f3n de otros derechos sobre este elemento.", \n-      "minLength": 0, \n       "title": "Derechos de Autor", \n       "type": "string", \n       "widget": "textarea"\ndiff --git a/src/plone/restapi/tests/http-examples/types_document.resp b/src/plone/restapi/tests/http-examples/types_document.resp\nindex 88eceb3d..e627b352 100644\n--- a/src/plone/restapi/tests/http-examples/types_document.resp\n+++ b/src/plone/restapi/tests/http-examples/types_document.resp\n@@ -122,7 +122,6 @@ Content-Type: application/json+schema\n     }, \n     "description": {\n       "description": "Used in item listings and search results.", \n-      "minLength": 0, \n       "title": "Summary", \n       "type": "string", \n       "widget": "textarea"\n@@ -185,7 +184,6 @@ Content-Type: application/json+schema\n     }, \n     "rights": {\n       "description": "Copyright statement or other rights information on this item.", \n-      "minLength": 0, \n       "title": "Rights", \n       "type": "string", \n       "widget": "textarea"\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 584c2f95..eaadd936 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -10,6 +10,7 @@\n from plone.restapi.types.utils import get_jsonschema_for_fti\n from plone.restapi.types.utils import get_jsonschema_for_portal_type\n from plone.restapi.types.utils import get_jsonschema_properties\n+from plone.schema import Email\n from plone.supermodel import model\n from Products.CMFCore.utils import getToolByName\n from unittest import TestCase\n@@ -311,6 +312,81 @@ def test_float(self):\n             adapter.get_schema(),\n         )\n \n+    def test_email(self):\n+        field = Email(\n+            title=u"Email",\n+            description=u"Email field",\n+            default="foo@bar.com",\n+            min_length=10,\n+            max_length=20,\n+        )\n+        adapter = getMultiAdapter(\n+            (field, self.portal, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": "Email",\n+                "description": "Email field",\n+                "widget": "email",\n+                "default": "foo@bar.com",\n+                "minLength": 10,\n+                "maxLength": 20,\n+            },\n+            adapter.get_schema(),\n+        )\n+\n+    def test_password(self):\n+        field = schema.Password(\n+            title=u"Password",\n+            description=u"Password field",\n+            default=u"secret",\n+            min_length=4,\n+            max_length=8,\n+        )\n+        adapter = getMultiAdapter(\n+            (field, self.portal, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": "Password",\n+                "description": "Password field",\n+                "widget": "password",\n+                "default": "secret",\n+                "minLength": 4,\n+                "maxLength": 8,\n+            },\n+            adapter.get_schema(),\n+        )\n+\n+    def test_uri(self):\n+        field = schema.URI(\n+            title=u"URI",\n+            description=u"URI field",\n+            default="http://foo.bar",\n+            min_length=10,\n+            max_length=100,\n+        )\n+        adapter = getMultiAdapter(\n+            (field, self.portal, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": "URI",\n+                "description": "URI field",\n+                "widget": "url",\n+                "default": "http://foo.bar",\n+                "minLength": 10,\n+                "maxLength": 100,\n+            },\n+            adapter.get_schema(),\n+        )\n+\n     def test_decimal(self):\n         field = schema.Decimal(\n             title=u"My field",\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex ef162d71..a6602411 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -8,6 +8,7 @@\n from plone.restapi.types.utils import get_source_url\n from plone.restapi.types.utils import get_vocabulary_url\n from plone.restapi.types.utils import get_widget_params\n+from plone.schema import IEmail\n from plone.schema import IJSONField\n from z3c.formwidget.query.interfaces import IQuerySource\n from zope.component import adapter\n@@ -31,6 +32,8 @@\n from zope.schema.interfaces import IInt\n from zope.schema.interfaces import IList\n from zope.schema.interfaces import IObject\n+from zope.schema.interfaces import IPassword\n+from zope.schema.interfaces import IURI\n from zope.schema.interfaces import ISet\n from zope.schema.interfaces import IText\n from zope.schema.interfaces import ITextLine\n@@ -110,6 +113,16 @@ def get_type(self):\n @adapter(ITextLine, Interface, Interface)\n @implementer(IJsonSchemaProvider)\n class TextLineJsonSchemaProvider(DefaultJsonSchemaProvider):\n+    def additional(self):\n+        info = {}\n+        if self.field.min_length:\n+            info["minLength"] = self.field.min_length\n+\n+        if self.field.max_length:\n+            info["maxLength"] = self.field.max_length\n+\n+        return info\n+\n     def get_type(self):\n         return "string"\n \n@@ -117,31 +130,40 @@ def get_type(self):\n @adapter(IText, Interface, Interface)\n @implementer(IJsonSchemaProvider)\n class TextJsonSchemaProvider(TextLineJsonSchemaProvider):\n-    def additional(self):\n-        info = {}\n-        if self.field.min_length is not None:\n-            info["minLength"] = self.field.min_length\n+    def get_widget(self):\n+        return "textarea"\n \n-        if self.field.max_length is not None:\n-            info["maxLength"] = self.field.max_length\n \n-        return info\n+@adapter(IEmail, Interface, Interface)\n+@implementer(IJsonSchemaProvider)\n+class EmailJsonSchemaProvider(TextLineJsonSchemaProvider):\n+    def get_widget(self):\n+        return "email"\n+\n+\n+@adapter(IPassword, Interface, Interface)\n+@implementer(IJsonSchemaProvider)\n+class PasswordJsonSchemaProvider(TextLineJsonSchemaProvider):\n+    def get_widget(self):\n+        return "password"\n \n+\n+@adapter(IURI, Interface, Interface)\n+@implementer(IJsonSchemaProvider)\n+class URIJsonSchemaProvider(TextLineJsonSchemaProvider):\n     def get_widget(self):\n-        return "textarea"\n+        return "url"\n \n \n @adapter(IASCII, Interface, Interface)\n @implementer(IJsonSchemaProvider)\n class ASCIIJsonSchemaProvider(TextLineJsonSchemaProvider):\n-\n     pass\n \n \n @adapter(IASCIILine, Interface, Interface)\n @implementer(IJsonSchemaProvider)\n class ASCIILineJsonSchemaProvider(TextLineJsonSchemaProvider):\n-\n     pass\n \n \ndiff --git a/src/plone/restapi/types/configure.zcml b/src/plone/restapi/types/configure.zcml\nindex bfb356b2..85187c84 100644\n--- a/src/plone/restapi/types/configure.zcml\n+++ b/src/plone/restapi/types/configure.zcml\n@@ -9,6 +9,9 @@\n     <adapter factory=".adapters.TextJsonSchemaProvider" />\n     <adapter factory=".adapters.ASCIIJsonSchemaProvider" />\n     <adapter factory=".adapters.ASCIILineJsonSchemaProvider" />\n+    <adapter factory=".adapters.EmailJsonSchemaProvider" />\n+    <adapter factory=".adapters.PasswordJsonSchemaProvider" />\n+    <adapter factory=".adapters.URIJsonSchemaProvider" />\n     <adapter factory=".adapters.FloatJsonSchemaProvider" />\n     <adapter factory=".adapters.DecimalJsonSchemaProvider" />\n     <adapter factory=".adapters.IntegerJsonSchemaProvider" />\ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex 097eaf64..cc0595b3 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -122,7 +122,6 @@ def get_jsonschema_properties(\n     for field in iter_fields(fieldsets):\n         fieldname = field.field.getName()\n         if fieldname not in excluded_fields:\n-\n             # We need to special case relatedItems not to render choices\n             # so we try a named adapter first and fallback to unnamed ones.\n             adapter = queryMultiAdapter(\n'

