Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-17T21:54:03+02:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/3c82213fcdec032e6dd791b8b1957adf0ed32dd5

Fix richtext encoding in deserializer (#913)

* use unescape to avoid encoding errors on save

* add tests

* add changelog

Files changed:
A news/913.bugfix
M src/plone/restapi/deserializer/dxfields.py
M src/plone/restapi/tests/test_content_patch.py
M src/plone/restapi/tests/test_content_post.py
M src/plone/restapi/tests/test_dxfield_deserializer.py

b'diff --git a/news/913.bugfix b/news/913.bugfix\nnew file mode 100644\nindex 00000000..36341d99\n--- /dev/null\n+++ b/news/913.bugfix\n@@ -0,0 +1,2 @@\n+call unescape method on received html for richtext before save it in Plone.\n+[cekk]\ndiff --git a/src/plone/restapi/deserializer/dxfields.py b/src/plone/restapi/deserializer/dxfields.py\nindex 9b0e58b4..ac89d554 100644\n--- a/src/plone/restapi/deserializer/dxfields.py\n+++ b/src/plone/restapi/deserializer/dxfields.py\n@@ -29,6 +29,12 @@\n import dateutil\n import six\n \n+if six.PY2:\n+    import HTMLParser\n+    html_parser = HTMLParser.HTMLParser()\n+else:\n+    import html as html_parser\n+\n \n @implementer(IFieldDeserializer)\n @adapter(IField, IDexterityContent, IBrowserRequest)\n@@ -274,9 +280,8 @@ def __call__(self, value):\n                 data = f.read().decode("utf8")\n         else:\n             data = value\n-\n         value = RichTextValue(\n-            raw=data,\n+            raw=html_parser.unescape(data),\n             mimeType=content_type,\n             outputMimeType=self.field.output_mime_type,\n             encoding=encoding,\ndiff --git a/src/plone/restapi/tests/test_content_patch.py b/src/plone/restapi/tests/test_content_patch.py\nindex 370725da..85668414 100644\n--- a/src/plone/restapi/tests/test_content_patch.py\n+++ b/src/plone/restapi/tests/test_content_patch.py\n@@ -17,6 +17,7 @@\n from zope.lifecycleevent.interfaces import IObjectCreatedEvent\n from zope.lifecycleevent.interfaces import IObjectModifiedEvent\n \n+import json\n import requests\n import transaction\n import unittest\n@@ -182,6 +183,24 @@ def record_event(event):\n         sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n         sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n \n+    def test_patch_document_with_apostrophe_dont_return_500(self):\n+        data = {\n+            "text": {\n+                "content-type": "text/html",\n+                "encoding": "utf8",\n+                "data": "<p>example with &#x27;</p>"\n+            }\n+        }\n+        response = requests.patch(\n+            self.portal.doc1.absolute_url(),\n+            headers={"Accept": "application/json"},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            data=json.dumps(data),\n+        )\n+        self.assertEqual(204, response.status_code)\n+        transaction.begin()\n+        self.assertEqual("<p>example with \'</p>", self.portal.doc1.text.raw)\n+\n \n class TestATContentPatch(unittest.TestCase):\n \ndiff --git a/src/plone/restapi/tests/test_content_post.py b/src/plone/restapi/tests/test_content_post.py\nindex d26f99aa..9c25bf9b 100644\n--- a/src/plone/restapi/tests/test_content_post.py\n+++ b/src/plone/restapi/tests/test_content_post.py\n@@ -182,6 +182,27 @@ def record_event(event):\n         sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n         sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n \n+    def test_post_to_folder_with_apostrophe_dont_return_500(self):\n+        response = requests.post(\n+            self.portal.folder1.absolute_url(),\n+            headers={"Accept": "application/json"},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={\n+                "@type": "Document",\n+                "id": "mydocument2",\n+                "title": "My Document 2",\n+                "text": {\n+                    "content-type": "text/html",\n+                    "encoding": "utf8",\n+                    "data": "<p>example with &#x27;</p>"\n+                }\n+            },\n+        )\n+        self.assertEqual(201, response.status_code)\n+        transaction.begin()\n+        self.assertEqual("<p>example with \'</p>", self.portal.folder1.mydocument2.text.raw)\n+        self.assertEqual("<p>example with \'</p>", response.json()[\'text\'][\'data\'])\n+\n \n class TestATFolderCreate(unittest.TestCase):\n \ndiff --git a/src/plone/restapi/tests/test_dxfield_deserializer.py b/src/plone/restapi/tests/test_dxfield_deserializer.py\nindex 5c46f8b6..a6794905 100644\n--- a/src/plone/restapi/tests/test_dxfield_deserializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_deserializer.py\n@@ -301,6 +301,10 @@ def test_richtext_deserialization_sets_encoding(self):\n         )\n         self.assertEqual("latin1", value.encoding)\n \n+    def test_richtext_deserialization_fix_apostrophe(self):\n+        value = self.deserialize("test_richtext_field", u"<p>char with &#x27;</p>")\n+        self.assertEqual("<p>char with \'</p>", value.raw)\n+\n     def test_namedfield_deserialization_decodes_value(self):\n         value = self.deserialize(\n             "test_namedfile_field",\n'

