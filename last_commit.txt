Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2021-01-12T15:46:44+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/8b15c68694c498e27da22a3efbe8f525ceb74299

Restored ability to use own explicit version of zodb-temporary-storage.

You used to be able to set `zodb-temporary-storage = &lt;some config /&gt;` and have this config in the `site.zcml`.
Most important use of this was to let this empty, effectively disabling the temporary storage.
PR https://github.com/plone/plone.recipe.zope2instance/pull/93 changed this so you could do this in a more natural way.
by setting `zodb-temporary-storage = false`.

But this (accidentally) removed the possibility for setting an explicit own version of the temporary storage snippet,
and meant the only options now were false or true.
The documentation still mentions:

   If given Zope's default temporary storage definition will be replaced by
   the lines of this parameter.

Files changed:
A news/93.bugfix
M src/plone/recipe/zope2instance/recipe.py

b"diff --git a/news/93.bugfix b/news/93.bugfix\nnew file mode 100644\nindex 0000000..45d8d6b\n--- /dev/null\n+++ b/news/93.bugfix\n@@ -0,0 +1,2 @@\n+Restored ability to use own explicit version of zodb-temporary-storage.\n+[maurits]\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 035318f..2cda67c 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -661,8 +661,10 @@ def is_rs_option(name):\n \n         zodb_tmp_storage = options.get('zodb-temporary-storage', 'on')\n         if zodb_tmp_storage.lower() in ('off', 'false', '0'):\n+            # no temporary-storage snippet\n             zodb_tmp_storage = ''\n-        else:\n+        elif zodb_tmp_storage.lower() in ('on', 'true', '1'):\n+            # use default temporary-storage snippet\n             zodb_tmp_storage = zodb_temporary_storage_template\n         template = wsgi_conf_template if self.wsgi else zope_conf_template\n \n"

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2021-01-13T11:47:11+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/8179b108c6a8a3bc3ef7f4fedd5fecf7ea331808

Added more tests for zodb-temporary-storage option.

They fail without the fix from the previous commit.

Files changed:
M src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst

b'diff --git a/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst b/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst\nindex 9ca4b7d..c4fda21 100644\n--- a/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst\n+++ b/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst\n@@ -77,3 +77,105 @@ The generated configuration has no temporary storage section anymore:\n     </zodb_db>\n     python-check-interval 1000\n \n+Leaving the option empty should have the same result,\n+as this was previously the way to disable it::\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... zodb-temporary-storage =\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> output = system(join(\'bin\', \'buildout\'))\n+    >>> "Installing instance" in output\n+    True\n+\n+    >>> WINDOWS or "Generated script" in output\n+    True\n+\n+    >>> WINDOWS or "Generated interpreter" in output\n+    True\n+\n+The generated configuration should be the same as from the previous run.\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> with open(os.path.join(instance, \'etc\', \'zope.conf\')) as fd:\n+    ...     zope_conf2 = fd.read()\n+    >>> zope_conf2 = zope_conf2.replace(\'\\\\\', \'/\')\n+    >>> zope_conf == zope_conf2\n+    True\n+\n+\n+Explicit ZODB temporary storage\n+===============================\n+\n+You can also explicitly set an own ZODB temporary storage definition:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... zodb-temporary-storage = <some config />\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> output = system(join(\'bin\', \'buildout\'))\n+    >>> "Installing instance" in output\n+    True\n+\n+    >>> WINDOWS or "Generated script" in output\n+    True\n+\n+    >>> WINDOWS or "Generated interpreter" in output\n+    True\n+\n+The generated configuration has our explicit temporary storage section:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> with open(os.path.join(instance, \'etc\', \'zope.conf\')) as fd:\n+    ...     zope_conf = fd.read()\n+    >>> zope_conf = zope_conf.replace(\'\\\\\', \'/\')\n+    >>> print(zope_conf)\n+    %define INSTANCEHOME .../sample-buildout/parts/instance\n+    instancehome $INSTANCEHOME\n+    %define CLIENTHOME .../sample-buildout/var/instance\n+    clienthome $CLIENTHOME\n+    debug-mode off\n+    security-policy-implementation C\n+    verbose-security off\n+    default-zpublisher-encoding utf-8\n+    <environment>\n+        CHAMELEON_CACHE .../var/cache\n+    </environment>\n+    <zodb_db main>\n+        # Main database\n+        cache-size 30000\n+        # Blob-enabled FileStorage database\n+        <blobstorage>\n+          blob-dir .../sample-buildout/var/blobstorage\n+          # FileStorage database\n+          <filestorage>\n+            path .../sample-buildout/var/filestorage/Data.fs\n+          </filestorage>\n+        </blobstorage>\n+        mount-point /\n+    </zodb_db>\n+    <some config />\n+    python-check-interval 1000\n+\n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2021-01-18T12:31:15+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/d1f8785172bc89d5cd09dc2af5d347f60b0beffe

Merge pull request #160 from plone/maurits/fix-explicit-zodb-temporary-storage

Restored ability to use own explicit version of zodb-temporary-storage.

Files changed:
A news/93.bugfix
M src/plone/recipe/zope2instance/recipe.py
M src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst

b'diff --git a/news/93.bugfix b/news/93.bugfix\nnew file mode 100644\nindex 0000000..45d8d6b\n--- /dev/null\n+++ b/news/93.bugfix\n@@ -0,0 +1,2 @@\n+Restored ability to use own explicit version of zodb-temporary-storage.\n+[maurits]\ndiff --git a/src/plone/recipe/zope2instance/recipe.py b/src/plone/recipe/zope2instance/recipe.py\nindex 035318f..2cda67c 100644\n--- a/src/plone/recipe/zope2instance/recipe.py\n+++ b/src/plone/recipe/zope2instance/recipe.py\n@@ -661,8 +661,10 @@ def is_rs_option(name):\n \n         zodb_tmp_storage = options.get(\'zodb-temporary-storage\', \'on\')\n         if zodb_tmp_storage.lower() in (\'off\', \'false\', \'0\'):\n+            # no temporary-storage snippet\n             zodb_tmp_storage = \'\'\n-        else:\n+        elif zodb_tmp_storage.lower() in (\'on\', \'true\', \'1\'):\n+            # use default temporary-storage snippet\n             zodb_tmp_storage = zodb_temporary_storage_template\n         template = wsgi_conf_template if self.wsgi else zope_conf_template\n \ndiff --git a/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst b/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst\nindex 9ca4b7d..c4fda21 100644\n--- a/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst\n+++ b/src/plone/recipe/zope2instance/tests/zope2instance_tempstorage_off.rst\n@@ -77,3 +77,105 @@ The generated configuration has no temporary storage section anymore:\n     </zodb_db>\n     python-check-interval 1000\n \n+Leaving the option empty should have the same result,\n+as this was previously the way to disable it::\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... zodb-temporary-storage =\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> output = system(join(\'bin\', \'buildout\'))\n+    >>> "Installing instance" in output\n+    True\n+\n+    >>> WINDOWS or "Generated script" in output\n+    True\n+\n+    >>> WINDOWS or "Generated interpreter" in output\n+    True\n+\n+The generated configuration should be the same as from the previous run.\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> with open(os.path.join(instance, \'etc\', \'zope.conf\')) as fd:\n+    ...     zope_conf2 = fd.read()\n+    >>> zope_conf2 = zope_conf2.replace(\'\\\\\', \'/\')\n+    >>> zope_conf == zope_conf2\n+    True\n+\n+\n+Explicit ZODB temporary storage\n+===============================\n+\n+You can also explicitly set an own ZODB temporary storage definition:\n+\n+    >>> write(\'buildout.cfg\',\n+    ... \'\'\'\n+    ... [buildout]\n+    ... parts = instance\n+    ... find-links = %(sample_buildout)s/eggs\n+    ...\n+    ... [instance]\n+    ... recipe = plone.recipe.zope2instance\n+    ... eggs =\n+    ... user = me:me\n+    ... zodb-temporary-storage = <some config />\n+    ... \'\'\' % options)\n+\n+Let\'s run it::\n+\n+    >>> output = system(join(\'bin\', \'buildout\'))\n+    >>> "Installing instance" in output\n+    True\n+\n+    >>> WINDOWS or "Generated script" in output\n+    True\n+\n+    >>> WINDOWS or "Generated interpreter" in output\n+    True\n+\n+The generated configuration has our explicit temporary storage section:\n+\n+    >>> instance = os.path.join(sample_buildout, \'parts\', \'instance\')\n+    >>> with open(os.path.join(instance, \'etc\', \'zope.conf\')) as fd:\n+    ...     zope_conf = fd.read()\n+    >>> zope_conf = zope_conf.replace(\'\\\\\', \'/\')\n+    >>> print(zope_conf)\n+    %define INSTANCEHOME .../sample-buildout/parts/instance\n+    instancehome $INSTANCEHOME\n+    %define CLIENTHOME .../sample-buildout/var/instance\n+    clienthome $CLIENTHOME\n+    debug-mode off\n+    security-policy-implementation C\n+    verbose-security off\n+    default-zpublisher-encoding utf-8\n+    <environment>\n+        CHAMELEON_CACHE .../var/cache\n+    </environment>\n+    <zodb_db main>\n+        # Main database\n+        cache-size 30000\n+        # Blob-enabled FileStorage database\n+        <blobstorage>\n+          blob-dir .../sample-buildout/var/blobstorage\n+          # FileStorage database\n+          <filestorage>\n+            path .../sample-buildout/var/filestorage/Data.fs\n+          </filestorage>\n+        </blobstorage>\n+        mount-point /\n+    </zodb_db>\n+    <some config />\n+    python-check-interval 1000\n+\n'

