Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-08-03T10:51:36+02:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/c14ed13a5c63c3aedb16ecc93f8db1dccd21731b

Skip doActionFor for items without workflow (#1190)

* skip doActionFor for items without workflow

* add changelog

Files changed:
A news/1190.bugfix
M src/plone/restapi/services/workflow/transition.py
M src/plone/restapi/tests/test_workflow.py

b'diff --git a/news/1190.bugfix b/news/1190.bugfix\nnew file mode 100644\nindex 000000000..89e6116f8\n--- /dev/null\n+++ b/news/1190.bugfix\n@@ -0,0 +1 @@\n+Do not break @workflow endpoint when trying to change the state of a content without workflow [cekk]\ndiff --git a/src/plone/restapi/services/workflow/transition.py b/src/plone/restapi/services/workflow/transition.py\nindex 9e0866940..c5223ebe0 100644\n--- a/src/plone/restapi/services/workflow/transition.py\n+++ b/src/plone/restapi/services/workflow/transition.py\n@@ -108,7 +108,8 @@ def recurse_transition(\n             if obj.EffectiveDate() == "None":\n                 obj.setEffectiveDate(DateTime())\n                 obj.reindexObject()\n-\n+            if not self.wftool.getWorkflowsFor(obj):\n+                continue\n             self.wftool.doActionFor(obj, self.transition, comment=comment)\n             if include_children and IFolderish.providedBy(obj):\n                 self.recurse_transition(\ndiff --git a/src/plone/restapi/tests/test_workflow.py b/src/plone/restapi/tests/test_workflow.py\nindex a0b07be0c..b609f951e 100644\n--- a/src/plone/restapi/tests/test_workflow.py\n+++ b/src/plone/restapi/tests/test_workflow.py\n@@ -233,3 +233,17 @@ def test_transition_with_no_access_to_review_history_in_target_state(self):\n \n         self.assertEqual(200, self.request.response.getStatus(), res)\n         self.assertEqual("restricted", res["review_state"], res)\n+\n+    def test_transition_including_children_without_wf(self):\n+        folder = self.portal[self.portal.invokeFactory("Folder", id="folder")]\n+        folder.invokeFactory("File", id="file", title="File")\n+        document = folder[\n+            folder.invokeFactory("Document", id="document", title="Document")\n+        ]\n+\n+        self.request["BODY"] = \'{"comment": "A comment", "include_children": true}\'\n+        service = self.traverse("/plone/folder/@workflow/publish")\n+        service.reply()\n+        self.assertEqual(200, self.request.response.getStatus())\n+        self.assertEqual("published", self.wftool.getInfoFor(folder, "review_state"))\n+        self.assertEqual("published", self.wftool.getInfoFor(document, "review_state"))\n'

