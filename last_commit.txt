Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2022-01-31T19:50:01+01:00
Author: Balázs Reé (reebalazs) <ree@greenfinity.hu>
Commit: https://github.com/plone/plone.app.querystring/commit/2e7e326a4a45abaf2ae22b06987cf52a24d2248f

Add lazy attribute to vocabularies to prevent fetching any results (#104)

* Add lazy attribute to vocabularies to prevent fetching any results

Huge vocabularies cause serious performance problems in the server
memory, in the network payload, and in the browser, because the large
result set is fetched pointlessly. An application can set lazy=True
for such vocabularies, and at the same time override the operations
from xml to provide an "autocomplete" widget. Such a widget does not
need any initial results but will search and fetch the vocabulary
lazily, on demand.

The use case targets Volto sites, but the problem is not specific to
Volto.

* Update attribute name to fetch_vocabulary, fix tests

- fix tests in registry_testdata.py
- update attribute name to fetch_vocabulary, default False

Files changed:
A news/104.feature
M plone/app/querystring/interfaces.py
M plone/app/querystring/registryreader.py
M plone/app/querystring/tests/registry_testdata.py

b'diff --git a/news/104.feature b/news/104.feature\nnew file mode 100644\nindex 0000000..67df4de\n--- /dev/null\n+++ b/news/104.feature\n@@ -0,0 +1,2 @@\n+- Add lazy attribute to vocabularies to prevent fetching any results\n+  [reebalazs]\ndiff --git a/plone/app/querystring/interfaces.py b/plone/app/querystring/interfaces.py\nindex e6111e6..394e8dc 100644\n--- a/plone/app/querystring/interfaces.py\n+++ b/plone/app/querystring/interfaces.py\n@@ -28,6 +28,7 @@ class IQueryField(Interface):\n     description = Text(title=u"Description")\n     enabled = Bool(title=u"Enabled")\n     sortable = Bool(title=u"Sortable")\n+    fetch_vocabulary = Bool(title=u"Fetch vocabulary", default=True)\n     operations = List(title=u"Operations",\n                       value_type=DottedName(title=u"Operation ID"))\n     vocabulary = TextLine(title=u"Vocabulary")\ndiff --git a/plone/app/querystring/registryreader.py b/plone/app/querystring/registryreader.py\nindex a837f2d..fa5a783 100644\n--- a/plone/app/querystring/registryreader.py\n+++ b/plone/app/querystring/registryreader.py\n@@ -84,6 +84,10 @@ def getVocabularyValues(self, values):\n                 logger.info("%s is missing, ignored." % vocabulary)\n                 continue\n             translated = []\n+            if not field.get(\'fetch_vocabulary\', True):\n+                # Bail out if the annotation is marked not to fetch the vocabulary\n+                # to allow the widget to query the vocabulary as needed\n+                continue\n             for item in utility(self.context):\n                 if isinstance(item.title, Message):\n                     title = translate(item.title, context=self.request)\ndiff --git a/plone/app/querystring/tests/registry_testdata.py b/plone/app/querystring/tests/registry_testdata.py\nindex f826ed1..b03b082 100644\n--- a/plone/app/querystring/tests/registry_testdata.py\n+++ b/plone/app/querystring/tests/registry_testdata.py\n@@ -15,7 +15,8 @@\n                         \'vocabulary\': None,\n                         \'title\': u\'Short Name\',\n                         \'enabled\': True,\n-                        \'sortable\': True\n+                        \'sortable\': True,\n+                        \'fetch_vocabulary\': True\n                     },\n                     \'created\': {\n                         \'operations\': [\n@@ -28,7 +29,8 @@\n                         \'vocabulary\': None,\n                         \'title\': u\'Creation Date\',\n                         \'enabled\': True,\n-                        \'sortable\': False\n+                        \'sortable\': False,\n+                        \'fetch_vocabulary\': True\n                     }\n                 },\n                 \'operation\': {\n'

