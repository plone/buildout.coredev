Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-09T12:42:23Z
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/45f379853d6539fb2118df6992ee3ce5d6f16481

fixed Registration tool email field to accept + in email

Files changed:
A news/3968.bugfix
M Products/CMFPlone/RegistrationTool.py

b'diff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py\nindex b3a1931cea..905fc35b6c 100644\n--- a/Products/CMFPlone/RegistrationTool.py\n+++ b/Products/CMFPlone/RegistrationTool.py\n@@ -107,7 +107,7 @@ class RegistrationTool(PloneBaseTool, BaseTool):\n     plone_tool = 1\n     md5key = None\n     _v_md5base = None\n-    default_member_id_pattern = r"^\\w[\\w\\.\\-@]+\\w$"\n+    default_member_id_pattern = r"^\\w[\\w\\.\\-@+]+\\w$"\n     _ALLOWED_MEMBER_ID_PATTERN = re.compile(default_member_id_pattern)\n \n     def __init__(self):\ndiff --git a/news/3968.bugfix b/news/3968.bugfix\nnew file mode 100644\nindex 0000000000..1579b6891c\n--- /dev/null\n+++ b/news/3968.bugfix\n@@ -0,0 +1,2 @@\n+fixed RgistrationTool to take useremail with "__+__@abc.com"\n+[@rohnsha0]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-14T06:44:13+05:30
Author: Rohan Shaw (rohnsha0) <86848116+rohnsha0@users.noreply.github.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/fd71b364416e7d7970ff5e2cc16cd816aca4ab84

Merge branch 'master' into regex_fix

Files changed:
A news/3952.bugfix
M Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py

b"diff --git a/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py b/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py\nindex 57ea21eeed..755c807856 100644\n--- a/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py\n+++ b/Products/CMFPlone/controlpanel/browser/usergroups_usermembership.py\n@@ -63,7 +63,7 @@ def getGroups(self):\n             for m in self.gtool.getGroupsForPrincipal(self.member)\n         ]\n         groupResults.sort(\n-            key=lambda x: x is not None and normalizeString(x.getGroupTitleOrName())\n+            key=lambda x: normalizeString(x.getGroupTitleOrName()) if x else ''\n         )\n         return [i for i in groupResults if i]\n \ndiff --git a/news/3952.bugfix b/news/3952.bugfix\nnew file mode 100644\nindex 0000000000..a63571e60a\n--- /dev/null\n+++ b/news/3952.bugfix\n@@ -0,0 +1,2 @@\n+Fix TypeError in getGroups sorting\n+[@rohnsha0]\n\\ No newline at end of file\n"

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-14T01:22:02Z
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/fc7db52432b36cbd4cff82d35cc4be4234e41a6b

modified testEmail test case for + addition in mail

Files changed:
M Products/CMFPlone/tests/testEmailLogin.py

b'diff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex 87dc5ecaf3..ef48e9951c 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -83,8 +83,8 @@ def testEmailMemberIdsAllowed(self):\n         # email addresses.\n         # A plus sign in the id gives problems in some parts of the\n         # UI, so we do not allow it.\n-        self.assertFalse(pattern.match("user+test@example.org"))\n-        self.assertFalse(registration.isMemberIdAllowed("user+test@example.org"))\n+        #self.assertFalse(pattern.match("user+test@example.org")) \n+        #self.assertFalse(registration.isMemberIdAllowed("user+test@example.org"))\n         # An apostrophe also sounds like a bad idea to use in an id,\n         # though this is a valid email address:\n         self.assertFalse(pattern.match("o\'hara@example.org"))\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-14T12:11:31Z
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/3c4ba3f33780c28a9a5bfc900c23016869cccb02

changed testEmailLogin test according to suggested changes

Files changed:
M Products/CMFPlone/tests/testEmailLogin.py

b'diff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex ef48e9951c..6f8aec0aa9 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -83,8 +83,9 @@ def testEmailMemberIdsAllowed(self):\n         # email addresses.\n         # A plus sign in the id gives problems in some parts of the\n         # UI, so we do not allow it.\n-        #self.assertFalse(pattern.match("user+test@example.org")) \n-        #self.assertFalse(registration.isMemberIdAllowed("user+test@example.org"))\n+        # testing if it breaks anything (according to https://github.com/plone/Products.CMFPlone/issues/3968)\n+        self.assertTrue(pattern.match("user+test@example.org")) \n+        self.assertTrue(registration.isMemberIdAllowed("user+test@example.org"))\n         # An apostrophe also sounds like a bad idea to use in an id,\n         # though this is a valid email address:\n         self.assertFalse(pattern.match("o\'hara@example.org"))\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-14T17:42:31+05:30
Author: Rohan Shaw (rohnsha0) <86848116+rohnsha0@users.noreply.github.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/6abd290aca8fc3afefc1fdbc8deb7b94c9b8f649

Update news/3968.bugfix

Co-authored-by: Maurits van Rees &lt;maurits@vanrees.org&gt;

Files changed:
M news/3968.bugfix

b'diff --git a/news/3968.bugfix b/news/3968.bugfix\nindex 1579b6891c..c81fb575d7 100644\n--- a/news/3968.bugfix\n+++ b/news/3968.bugfix\n@@ -1,2 +1,2 @@\n-fixed RgistrationTool to take useremail with "__+__@abc.com"\n+Fixed RegistrationTool to take user email with `__+__@abc.com`.\n [@rohnsha0]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-14T15:37:34Z
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/e5a5984a29c42be5609dbe74350d292cc97a06db

modified comment

Files changed:
M Products/CMFPlone/tests/testEmailLogin.py

b'diff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex 6f8aec0aa9..3179e27507 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -79,10 +79,6 @@ def testEmailMemberIdsAllowed(self):\n         # Strange, but valid as id:\n         self.assertTrue(pattern.match("no.address@example"))\n         self.assertTrue(registration.isMemberIdAllowed("no.address@example"))\n-        # http://dev.plone.org/ticket/11616 mentions some non-standard\n-        # email addresses.\n-        # A plus sign in the id gives problems in some parts of the\n-        # UI, so we do not allow it.\n         # testing if it breaks anything (according to https://github.com/plone/Products.CMFPlone/issues/3968)\n         self.assertTrue(pattern.match("user+test@example.org")) \n         self.assertTrue(registration.isMemberIdAllowed("user+test@example.org"))\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-15T08:44:01Z
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ce8b62affac308ead2d0f049049fcf6f26c6985f

Update author view to use make_query function for generating search URL

Files changed:
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/templates/author.pt

b'diff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex ed13dd4e98..644099ea71 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -20,6 +20,7 @@\n from zope.component import getUtility\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n+from ZTUtils import make_query\n \n import logging\n \n@@ -137,6 +138,9 @@ def publishTraverse(self, request, name):\n         self.username = name\n         return self\n \n+    def makeQuery(self, **kw):\n+        return make_query(**kw)\n+\n     @property\n     def is_anonymous(self):\n         return self.portal_state.anonymous()\ndiff --git a/Products/CMFPlone/browser/templates/author.pt b/Products/CMFPlone/browser/templates/author.pt\nindex 19cd4b0d6e..505a829107 100644\n--- a/Products/CMFPlone/browser/templates/author.pt\n+++ b/Products/CMFPlone/browser/templates/author.pt\n@@ -219,7 +219,7 @@\n \n                           <p>\n                           <a href=""\n-                             tal:attributes="href string:$here_url/search?Creator=${username}&amp;sort_on=created&amp;sort_order=reverse"\n+                             tal:attributes="href string:$here_url/search?Creator=${view.makeQuery(username)}&amp;sort_on=created&amp;sort_order=reverse"\n                              i18n:translate="go_to_search_author_content">\n                               All content created by\n                               <span i18n:name="user" tal:omit-tag="" tal:content="python:authorinfo[\'fullname\'] or username"/>&hellip;\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-15T10:15:33Z
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/3e3eed100501b96d2dabea50e8026e0b796d4149

changed a tag for better readability

Files changed:
M Products/CMFPlone/browser/templates/author.pt

b'diff --git a/Products/CMFPlone/browser/templates/author.pt b/Products/CMFPlone/browser/templates/author.pt\nindex 505a829107..d60cd86555 100644\n--- a/Products/CMFPlone/browser/templates/author.pt\n+++ b/Products/CMFPlone/browser/templates/author.pt\n@@ -218,9 +218,8 @@\n                           </div>\n \n                           <p>\n-                          <a href=""\n-                             tal:attributes="href string:$here_url/search?Creator=${view.makeQuery(username)}&amp;sort_on=created&amp;sort_order=reverse"\n-                             i18n:translate="go_to_search_author_content">\n+                          <a href="${here_url}/search?${python:view.makeQuery(Creator=username, sort_on=\'created\', sort_order=\'reverse\')}"\n+                             i18n:translate="go_to_search_author_content">                       \n                               All content created by\n                               <span i18n:name="user" tal:omit-tag="" tal:content="python:authorinfo[\'fullname\'] or username"/>&hellip;\n                           </a>\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-15T18:22:08+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/de6520f01800d5453fbaf1d84b61b37721c3bb0c

Merge pull request #3971 from rohnsha0/regex_fix

fixed Registration tool email field to accept + in email

Files changed:
A news/3968.bugfix
M Products/CMFPlone/RegistrationTool.py
M Products/CMFPlone/browser/author.py
M Products/CMFPlone/browser/templates/author.pt
M Products/CMFPlone/tests/testEmailLogin.py

b'diff --git a/Products/CMFPlone/RegistrationTool.py b/Products/CMFPlone/RegistrationTool.py\nindex b3a1931cea..905fc35b6c 100644\n--- a/Products/CMFPlone/RegistrationTool.py\n+++ b/Products/CMFPlone/RegistrationTool.py\n@@ -107,7 +107,7 @@ class RegistrationTool(PloneBaseTool, BaseTool):\n     plone_tool = 1\n     md5key = None\n     _v_md5base = None\n-    default_member_id_pattern = r"^\\w[\\w\\.\\-@]+\\w$"\n+    default_member_id_pattern = r"^\\w[\\w\\.\\-@+]+\\w$"\n     _ALLOWED_MEMBER_ID_PATTERN = re.compile(default_member_id_pattern)\n \n     def __init__(self):\ndiff --git a/Products/CMFPlone/browser/author.py b/Products/CMFPlone/browser/author.py\nindex ed13dd4e98..644099ea71 100644\n--- a/Products/CMFPlone/browser/author.py\n+++ b/Products/CMFPlone/browser/author.py\n@@ -20,6 +20,7 @@\n from zope.component import getUtility\n from zope.interface import implementer\n from zope.publisher.interfaces import IPublishTraverse\n+from ZTUtils import make_query\n \n import logging\n \n@@ -137,6 +138,9 @@ def publishTraverse(self, request, name):\n         self.username = name\n         return self\n \n+    def makeQuery(self, **kw):\n+        return make_query(**kw)\n+\n     @property\n     def is_anonymous(self):\n         return self.portal_state.anonymous()\ndiff --git a/Products/CMFPlone/browser/templates/author.pt b/Products/CMFPlone/browser/templates/author.pt\nindex 19cd4b0d6e..d60cd86555 100644\n--- a/Products/CMFPlone/browser/templates/author.pt\n+++ b/Products/CMFPlone/browser/templates/author.pt\n@@ -218,9 +218,8 @@\n                           </div>\n \n                           <p>\n-                          <a href=""\n-                             tal:attributes="href string:$here_url/search?Creator=${username}&amp;sort_on=created&amp;sort_order=reverse"\n-                             i18n:translate="go_to_search_author_content">\n+                          <a href="${here_url}/search?${python:view.makeQuery(Creator=username, sort_on=\'created\', sort_order=\'reverse\')}"\n+                             i18n:translate="go_to_search_author_content">                       \n                               All content created by\n                               <span i18n:name="user" tal:omit-tag="" tal:content="python:authorinfo[\'fullname\'] or username"/>&hellip;\n                           </a>\ndiff --git a/Products/CMFPlone/tests/testEmailLogin.py b/Products/CMFPlone/tests/testEmailLogin.py\nindex 87dc5ecaf3..3179e27507 100644\n--- a/Products/CMFPlone/tests/testEmailLogin.py\n+++ b/Products/CMFPlone/tests/testEmailLogin.py\n@@ -79,12 +79,9 @@ def testEmailMemberIdsAllowed(self):\n         # Strange, but valid as id:\n         self.assertTrue(pattern.match("no.address@example"))\n         self.assertTrue(registration.isMemberIdAllowed("no.address@example"))\n-        # http://dev.plone.org/ticket/11616 mentions some non-standard\n-        # email addresses.\n-        # A plus sign in the id gives problems in some parts of the\n-        # UI, so we do not allow it.\n-        self.assertFalse(pattern.match("user+test@example.org"))\n-        self.assertFalse(registration.isMemberIdAllowed("user+test@example.org"))\n+        # testing if it breaks anything (according to https://github.com/plone/Products.CMFPlone/issues/3968)\n+        self.assertTrue(pattern.match("user+test@example.org")) \n+        self.assertTrue(registration.isMemberIdAllowed("user+test@example.org"))\n         # An apostrophe also sounds like a bad idea to use in an id,\n         # though this is a valid email address:\n         self.assertFalse(pattern.match("o\'hara@example.org"))\ndiff --git a/news/3968.bugfix b/news/3968.bugfix\nnew file mode 100644\nindex 0000000000..c81fb575d7\n--- /dev/null\n+++ b/news/3968.bugfix\n@@ -0,0 +1,2 @@\n+Fixed RegistrationTool to take user email with `__+__@abc.com`.\n+[@rohnsha0]\n\\ No newline at end of file\n'

