Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-10-02T16:32:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/5a3ff31214a5c6c3ba9f9a740dc103cbe058c2ec

6.0 alpha 1: remove the portal_quickinstaller tool.

See PLIP 1775: https://github.com/plone/Products.CMFPlone/issues/1775

Files changed:
A news/1775.breaking
A plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml

b'diff --git a/news/1775.breaking b/news/1775.breaking\nnew file mode 100644\nindex 00000000..8f32ae34\n--- /dev/null\n+++ b/news/1775.breaking\n@@ -0,0 +1,3 @@\n+6.0 alpha 1: remove the portal_quickinstaller tool.\n+See `PLIP 1775 <https://github.com/plone/Products.CMFPlone/issues/1775>`_.\n+[maurits]\ndiff --git a/plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml b/plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml\nnew file mode 100644\nindex 00000000..2c42c07b\n--- /dev/null\n+++ b/plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml\n@@ -0,0 +1,4 @@\n+<?xml version="1.0"?>\n+<tool-setup>\n+  <forbidden tool_id="portal_quickinstaller" />\n+</tool-setup>\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-10-02T16:32:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/47bff6264185a5ec90b859747c6b2819c02b12d0

Try out some BBB code for CMFQuickInstallerTool.

Files changed:
A plone/app/upgrade/bbb_qi/InstalledProduct.py
A plone/app/upgrade/bbb_qi/QuickInstallerTool.py
A plone/app/upgrade/bbb_qi/__init__.py
A plone/app/upgrade/bbb_qi/interfaces/__init__.py
A plone/app/upgrade/bbb_qi/interfaces/installable.py
A plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py
M plone/app/upgrade/__init__.py

b'diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex fc8ced05..e32ffe5a 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -2,6 +2,7 @@\n from plone.app.upgrade.utils import alias_module\n \n from . import bbb\n+from . import bbb_qi\n from . import bbbd\n import pkg_resources\n import sys\n@@ -178,6 +179,11 @@\n     from OFS.LockItem import LockItem\n     alias_module(\'webdav.LockItem.LockItem\', LockItem)\n \n+try:\n+    pkg_resources.get_distribution(\'Products.CMFQuickInstallerTool\')\n+except pkg_resources.DistributionNotFound:\n+    alias_module(\'Products.CMFQuickInstallerTool\', bbb_qi)\n+\n \n class HiddenProducts(object):\n     """This hides the upgrade profiles from the quick installer tool."""\ndiff --git a/plone/app/upgrade/bbb_qi/InstalledProduct.py b/plone/app/upgrade/bbb_qi/InstalledProduct.py\nnew file mode 100644\nindex 00000000..148a6f03\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/InstalledProduct.py\n@@ -0,0 +1,9 @@\n+# -*- coding: utf-8 -*-\n+from OFS.SimpleItem import SimpleItem\n+# from Products.CMFQuickInstallerTool.interfaces.portal_quickinstaller import IInstalledProduct  # noqa\n+# from zope.interface import implementer\n+\n+\n+# @implementer(IInstalledProduct)\n+class InstalledProduct(SimpleItem):\n+    pass\ndiff --git a/plone/app/upgrade/bbb_qi/QuickInstallerTool.py b/plone/app/upgrade/bbb_qi/QuickInstallerTool.py\nnew file mode 100644\nindex 00000000..dac4c160\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/QuickInstallerTool.py\n@@ -0,0 +1,23 @@\n+# -*- coding: utf-8 -*-\n+from OFS.ObjectManager import ObjectManager\n+from OFS.SimpleItem import SimpleItem\n+from Products.CMFCore.utils import UniqueObject\n+# from Products.CMFQuickInstallerTool.interfaces import INonInstallable\n+# from Products.CMFQuickInstallerTool.interfaces import IQuickInstallerTool\n+# from zope.interface import implementer\n+\n+\n+# @implementer(INonInstallable)\n+class HiddenProducts(object):\n+\n+    def getNonInstallableProducts(self):\n+        # We can\'t really install ourselves: that would be weird.\n+        # So hide ourselves from ourselves.\n+        return [\'CMFQuickInstallerTool\', \'Products.CMFQuickInstallerTool\']\n+\n+\n+# @implementer(IQuickInstallerTool)\n+class QuickInstallerTool(UniqueObject, ObjectManager, SimpleItem):\n+\n+    meta_type = \'CMF QuickInstaller Tool\'\n+    id = \'portal_quickinstaller\'\ndiff --git a/plone/app/upgrade/bbb_qi/__init__.py b/plone/app/upgrade/bbb_qi/__init__.py\nnew file mode 100644\nindex 00000000..40a96afc\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/__init__.py\n@@ -0,0 +1 @@\n+# -*- coding: utf-8 -*-\ndiff --git a/plone/app/upgrade/bbb_qi/interfaces/__init__.py b/plone/app/upgrade/bbb_qi/interfaces/__init__.py\nnew file mode 100644\nindex 00000000..68dfbe9a\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/interfaces/__init__.py\n@@ -0,0 +1,7 @@\n+# -*- coding: utf-8 -*-\n+from .installable import INonInstallable\n+from .portal_quickinstaller import IQuickInstallerTool\n+\n+\n+INonInstallable   # pyflakes\n+IQuickInstallerTool   # pyflakes\ndiff --git a/plone/app/upgrade/bbb_qi/interfaces/installable.py b/plone/app/upgrade/bbb_qi/interfaces/installable.py\nnew file mode 100644\nindex 00000000..6a485c45\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/interfaces/installable.py\n@@ -0,0 +1,10 @@\n+# -*- coding: utf-8 -*-\n+from zope.interface import Interface\n+\n+\n+class INonInstallable(Interface):\n+\n+    def getNonInstallableProducts():\n+        """Returns a list of products that should not be available for\n+           installation.\n+        """\ndiff --git a/plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py b/plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py\nnew file mode 100644\nindex 00000000..fdbda6bd\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py\n@@ -0,0 +1,9 @@\n+# -*- coding: utf-8 -*-\n+from zope.interface import Interface\n+\n+\n+class IQuickInstallerTool(Interface):\n+    pass\n+\n+class IInstalledProduct(Interface):\n+    pass\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-10-02T16:32:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/0bfc3f6339b320c98f63fd2706186a9f5ae48c57

Add BBB for Products.CMFPlone.QuickInstallerTool

Files changed:
M plone/app/upgrade/__init__.py

b"diff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex e32ffe5a..c906072e 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -183,6 +183,7 @@\n     pkg_resources.get_distribution('Products.CMFQuickInstallerTool')\n except pkg_resources.DistributionNotFound:\n     alias_module('Products.CMFQuickInstallerTool', bbb_qi)\n+    alias_module('Products.CMFPlone.QuickInstallerTool', bbb_qi)\n \n \n class HiddenProducts(object):\n"

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-10-02T16:32:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/5ce7c2e2644ebb37559445447acc773c9c31aef1

On Python 3 in testDoUpgrades only test upgrade from Plone 5.2.

You cannot upgrade a Plone 4.0 or 5.1 site to 5.2 or higher when you are on Python 3.
You must first migrate to 5.2 with Python 2.7.
Also, this avoids a test failure on 6.0 because the 5.0alpha upgrade calls qi.isProductInstalled, which has been removed.

Files changed:
M plone/app/upgrade/tests/test_upgrade.py

b"diff --git a/plone/app/upgrade/tests/test_upgrade.py b/plone/app/upgrade/tests/test_upgrade.py\nindex 416d4b56..131f8553 100644\n--- a/plone/app/upgrade/tests/test_upgrade.py\n+++ b/plone/app/upgrade/tests/test_upgrade.py\n@@ -5,6 +5,7 @@\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n \n import mock\n+import sys\n \n \n class TestUpgrade(MigrationTest):\n@@ -39,8 +40,14 @@ def testVersionMatch(self):\n \n     def testDoUpgrades(self):\n         self.setRoles(['Manager'])\n-        \n-        self.setup.setLastVersionForProfile(_DEFAULT_PROFILE, '4013')\n+\n+        if sys.version_info.major == 2:\n+            start_profile = '4013'\n+        else:\n+            # Python 3 is only supported on 5.2+.\n+            # This means you can not upgrade from 5.1 or earlier.\n+            start_profile = '5200'\n+        self.setup.setLastVersionForProfile(_DEFAULT_PROFILE, start_profile)\n         upgrades = self.setup.listUpgrades(_DEFAULT_PROFILE)\n         self.assertTrue(len(upgrades) > 0)\n \n"

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-10-02T16:32:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/e12629081a5be5fe231e33d68e9fd46642ec6c66

Fix AttributeError: 'InstallerView' object has no attribute 'isProductInstalled'

Files changed:
M plone/app/upgrade/tests/base.py

b"diff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py\nindex 5abcda61..30366a79 100644\n--- a/plone/app/upgrade/tests/base.py\n+++ b/plone/app/upgrade/tests/base.py\n@@ -124,10 +124,12 @@ def uninstallProduct(self, product_name):\n             qi = getToolByName(self.portal, 'portal_quickinstaller', None)\n             if qi is None:\n                 return\n+            if qi.isProductInstalled(product_name):\n+                qi.uninstallProducts([product_name])\n         else:\n             qi = get_installer(self.portal)\n-        if qi.isProductInstalled(product_name):\n-            qi.uninstallProducts([product_name])\n+            if qi.is_product_installed(product_name):\n+                qi.uninstall_product(product_name)\n \n     def addSkinLayer(self, layer, skin='Plone Default', pos=None):\n         # Adds a skin layer at pos. If pos is None, the layer is appended\n"

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-10-02T22:10:04+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.upgrade/commit/30eb0fbf4e79f496be48ca597fca155648cf7d08

Merge pull request #248 from plone/maurits/no-qi

Plone 6: remove quick installer code

Files changed:
A news/1775.breaking
A plone/app/upgrade/bbb_qi/InstalledProduct.py
A plone/app/upgrade/bbb_qi/QuickInstallerTool.py
A plone/app/upgrade/bbb_qi/__init__.py
A plone/app/upgrade/bbb_qi/interfaces/__init__.py
A plone/app/upgrade/bbb_qi/interfaces/installable.py
A plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py
A plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml
M plone/app/upgrade/__init__.py
M plone/app/upgrade/tests/base.py
M plone/app/upgrade/tests/test_upgrade.py

b'diff --git a/news/1775.breaking b/news/1775.breaking\nnew file mode 100644\nindex 00000000..8f32ae34\n--- /dev/null\n+++ b/news/1775.breaking\n@@ -0,0 +1,3 @@\n+6.0 alpha 1: remove the portal_quickinstaller tool.\n+See `PLIP 1775 <https://github.com/plone/Products.CMFPlone/issues/1775>`_.\n+[maurits]\ndiff --git a/plone/app/upgrade/__init__.py b/plone/app/upgrade/__init__.py\nindex fc8ced05..c906072e 100644\n--- a/plone/app/upgrade/__init__.py\n+++ b/plone/app/upgrade/__init__.py\n@@ -2,6 +2,7 @@\n from plone.app.upgrade.utils import alias_module\n \n from . import bbb\n+from . import bbb_qi\n from . import bbbd\n import pkg_resources\n import sys\n@@ -178,6 +179,12 @@\n     from OFS.LockItem import LockItem\n     alias_module(\'webdav.LockItem.LockItem\', LockItem)\n \n+try:\n+    pkg_resources.get_distribution(\'Products.CMFQuickInstallerTool\')\n+except pkg_resources.DistributionNotFound:\n+    alias_module(\'Products.CMFQuickInstallerTool\', bbb_qi)\n+    alias_module(\'Products.CMFPlone.QuickInstallerTool\', bbb_qi)\n+\n \n class HiddenProducts(object):\n     """This hides the upgrade profiles from the quick installer tool."""\ndiff --git a/plone/app/upgrade/bbb_qi/InstalledProduct.py b/plone/app/upgrade/bbb_qi/InstalledProduct.py\nnew file mode 100644\nindex 00000000..148a6f03\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/InstalledProduct.py\n@@ -0,0 +1,9 @@\n+# -*- coding: utf-8 -*-\n+from OFS.SimpleItem import SimpleItem\n+# from Products.CMFQuickInstallerTool.interfaces.portal_quickinstaller import IInstalledProduct  # noqa\n+# from zope.interface import implementer\n+\n+\n+# @implementer(IInstalledProduct)\n+class InstalledProduct(SimpleItem):\n+    pass\ndiff --git a/plone/app/upgrade/bbb_qi/QuickInstallerTool.py b/plone/app/upgrade/bbb_qi/QuickInstallerTool.py\nnew file mode 100644\nindex 00000000..dac4c160\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/QuickInstallerTool.py\n@@ -0,0 +1,23 @@\n+# -*- coding: utf-8 -*-\n+from OFS.ObjectManager import ObjectManager\n+from OFS.SimpleItem import SimpleItem\n+from Products.CMFCore.utils import UniqueObject\n+# from Products.CMFQuickInstallerTool.interfaces import INonInstallable\n+# from Products.CMFQuickInstallerTool.interfaces import IQuickInstallerTool\n+# from zope.interface import implementer\n+\n+\n+# @implementer(INonInstallable)\n+class HiddenProducts(object):\n+\n+    def getNonInstallableProducts(self):\n+        # We can\'t really install ourselves: that would be weird.\n+        # So hide ourselves from ourselves.\n+        return [\'CMFQuickInstallerTool\', \'Products.CMFQuickInstallerTool\']\n+\n+\n+# @implementer(IQuickInstallerTool)\n+class QuickInstallerTool(UniqueObject, ObjectManager, SimpleItem):\n+\n+    meta_type = \'CMF QuickInstaller Tool\'\n+    id = \'portal_quickinstaller\'\ndiff --git a/plone/app/upgrade/bbb_qi/__init__.py b/plone/app/upgrade/bbb_qi/__init__.py\nnew file mode 100644\nindex 00000000..40a96afc\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/__init__.py\n@@ -0,0 +1 @@\n+# -*- coding: utf-8 -*-\ndiff --git a/plone/app/upgrade/bbb_qi/interfaces/__init__.py b/plone/app/upgrade/bbb_qi/interfaces/__init__.py\nnew file mode 100644\nindex 00000000..68dfbe9a\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/interfaces/__init__.py\n@@ -0,0 +1,7 @@\n+# -*- coding: utf-8 -*-\n+from .installable import INonInstallable\n+from .portal_quickinstaller import IQuickInstallerTool\n+\n+\n+INonInstallable   # pyflakes\n+IQuickInstallerTool   # pyflakes\ndiff --git a/plone/app/upgrade/bbb_qi/interfaces/installable.py b/plone/app/upgrade/bbb_qi/interfaces/installable.py\nnew file mode 100644\nindex 00000000..6a485c45\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/interfaces/installable.py\n@@ -0,0 +1,10 @@\n+# -*- coding: utf-8 -*-\n+from zope.interface import Interface\n+\n+\n+class INonInstallable(Interface):\n+\n+    def getNonInstallableProducts():\n+        """Returns a list of products that should not be available for\n+           installation.\n+        """\ndiff --git a/plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py b/plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py\nnew file mode 100644\nindex 00000000..fdbda6bd\n--- /dev/null\n+++ b/plone/app/upgrade/bbb_qi/interfaces/portal_quickinstaller.py\n@@ -0,0 +1,9 @@\n+# -*- coding: utf-8 -*-\n+from zope.interface import Interface\n+\n+\n+class IQuickInstallerTool(Interface):\n+    pass\n+\n+class IInstalledProduct(Interface):\n+    pass\ndiff --git a/plone/app/upgrade/tests/base.py b/plone/app/upgrade/tests/base.py\nindex 5abcda61..30366a79 100644\n--- a/plone/app/upgrade/tests/base.py\n+++ b/plone/app/upgrade/tests/base.py\n@@ -124,10 +124,12 @@ def uninstallProduct(self, product_name):\n             qi = getToolByName(self.portal, \'portal_quickinstaller\', None)\n             if qi is None:\n                 return\n+            if qi.isProductInstalled(product_name):\n+                qi.uninstallProducts([product_name])\n         else:\n             qi = get_installer(self.portal)\n-        if qi.isProductInstalled(product_name):\n-            qi.uninstallProducts([product_name])\n+            if qi.is_product_installed(product_name):\n+                qi.uninstall_product(product_name)\n \n     def addSkinLayer(self, layer, skin=\'Plone Default\', pos=None):\n         # Adds a skin layer at pos. If pos is None, the layer is appended\ndiff --git a/plone/app/upgrade/tests/test_upgrade.py b/plone/app/upgrade/tests/test_upgrade.py\nindex 416d4b56..131f8553 100644\n--- a/plone/app/upgrade/tests/test_upgrade.py\n+++ b/plone/app/upgrade/tests/test_upgrade.py\n@@ -5,6 +5,7 @@\n from Products.CMFPlone.factory import _DEFAULT_PROFILE\n \n import mock\n+import sys\n \n \n class TestUpgrade(MigrationTest):\n@@ -39,8 +40,14 @@ def testVersionMatch(self):\n \n     def testDoUpgrades(self):\n         self.setRoles([\'Manager\'])\n-        \n-        self.setup.setLastVersionForProfile(_DEFAULT_PROFILE, \'4013\')\n+\n+        if sys.version_info.major == 2:\n+            start_profile = \'4013\'\n+        else:\n+            # Python 3 is only supported on 5.2+.\n+            # This means you can not upgrade from 5.1 or earlier.\n+            start_profile = \'5200\'\n+        self.setup.setLastVersionForProfile(_DEFAULT_PROFILE, start_profile)\n         upgrades = self.setup.listUpgrades(_DEFAULT_PROFILE)\n         self.assertTrue(len(upgrades) > 0)\n \ndiff --git a/plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml b/plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml\nnew file mode 100644\nindex 00000000..2c42c07b\n--- /dev/null\n+++ b/plone/app/upgrade/v60/profiles/to_alpha1/toolset.xml\n@@ -0,0 +1,4 @@\n+<?xml version="1.0"?>\n+<tool-setup>\n+  <forbidden tool_id="portal_quickinstaller" />\n+</tool-setup>\n'

