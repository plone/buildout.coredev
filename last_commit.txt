Repository: plone.restapi


Branch: refs/heads/main
Date: 2024-09-04T21:43:29+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.restapi/commit/7b1f0f4c4bff5cba26cf7925e306cfa12fc2c3b3

Explicitly globally disable comments in the tests that need it. (#1805)

In Plone 6.1, when you actively activate plone.app.discussion, we may globally enable comments by default.
This is when https://github.com/plone/plone.app.discussion/pull/244 gets merged.

We already had eight or so tests that explicitly globally enable comments.
Now we explicitly globally disable them in two others.
Then the tests work in Plone 6.0 and 6.1.

See two test failures here for the plone.app.discussion PR:
https://jenkins.plone.org/job/pull-request-6.1-3.10/311/

Files changed:
A news/244.tests
M src/plone/restapi/tests/test_dxcontent_serializer.py

b'diff --git a/news/244.tests b/news/244.tests\nnew file mode 100644\nindex 000000000..0ee4acc1f\n--- /dev/null\n+++ b/news/244.tests\n@@ -0,0 +1,2 @@\n+Explicitly globally disable comments in the tests that need it.\n+[maurits]\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_dxcontent_serializer.py b/src/plone/restapi/tests/test_dxcontent_serializer.py\nindex 789cf865f..6fd514956 100644\n--- a/src/plone/restapi/tests/test_dxcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_dxcontent_serializer.py\n@@ -527,6 +527,9 @@ def test_allow_discussion_by_default(self):\n         self.assertEqual(False, obj["allow_discussion"])\n \n     def test_allow_discussion_obj_instance_allows_but_not_global_enabled(self):\n+        registry = queryUtility(IRegistry)\n+        settings = registry.forInterface(IDiscussionSettings, check=False)\n+        settings.globally_enabled = False\n         self.portal.invokeFactory("Document", id="doc2")\n         self.portal.doc2.allow_discussion = True\n         serializer = getMultiAdapter((self.portal.doc2, self.request), ISerializeToJson)\n@@ -536,6 +539,9 @@ def test_allow_discussion_obj_instance_allows_but_not_global_enabled(self):\n         self.assertEqual(False, obj["allow_discussion"])\n \n     def test_allow_discussion_fti_allows_not_global_enabled(self):\n+        registry = queryUtility(IRegistry)\n+        settings = registry.forInterface(IDiscussionSettings, check=False)\n+        settings.globally_enabled = False\n         self.portal.invokeFactory("Document", id="doc2")\n         portal_types = getToolByName(self.portal, "portal_types")\n         document_fti = getattr(portal_types, self.portal.doc2.portal_type)\n'

