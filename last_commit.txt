Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-04T22:37:06+02:00
Author: Rodrigo Ferreira de Souza (rodfersou) <rodfersou@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/68394d046319ad9c59e1756919ca73d97b6fdfff

Fixes for next/prev items for unordered folders (#928)

* Fixes for next/prev items for unordered folders

* Add changelog

* Refactoring

* Fix tests

* Black

* Black

Co-authored-by: Timo Stollenwerk &lt;tisto@users.noreply.github.com&gt;
Co-authored-by: Timo Stollenwerk &lt;stollenwerk@kitconcept.com&gt;

Files changed:
A news/928.bugfix
M src/plone/restapi/controlpanels/types.py
M src/plone/restapi/serializer/atcontent.py
M src/plone/restapi/serializer/discussion.py
M src/plone/restapi/serializer/dxcontent.py
M src/plone/restapi/serializer/nextprev.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_dxcontent_serializer.py
M src/plone/restapi/tests/test_dxfield_serializer.py
M src/plone/restapi/tests/test_services_sources.py

b'diff --git a/news/928.bugfix b/news/928.bugfix\nnew file mode 100644\nindex 00000000..e024fe20\n--- /dev/null\n+++ b/news/928.bugfix\n@@ -0,0 +1,2 @@\n+Treat next/prev items for unordered folders.\n+[rodfersou]\ndiff --git a/src/plone/restapi/controlpanels/types.py b/src/plone/restapi/controlpanels/types.py\nindex c4994e14..2e6dc96a 100644\n--- a/src/plone/restapi/controlpanels/types.py\n+++ b/src/plone/restapi/controlpanels/types.py\n@@ -51,7 +51,7 @@ def add(self, names):\n         add_type = queryMultiAdapter((context, self.request), name="add-type")\n         fti = add_type.form_instance.create(data=properties)\n         add_type.form_instance.add(fti)\n-        return self.get([tid,])\n+        return self.get([tid])\n \n     def get(self, names):\n         name = names[0]\ndiff --git a/src/plone/restapi/serializer/atcontent.py b/src/plone/restapi/serializer/atcontent.py\nindex bee395a1..9b35700e 100644\n--- a/src/plone/restapi/serializer/atcontent.py\n+++ b/src/plone/restapi/serializer/atcontent.py\n@@ -55,7 +55,7 @@ def __call__(self, version=None, include_items=False):\n         # Insert next/prev information\n         nextprevious = NextPrevious(obj)\n         result.update(\n-            {"previous_item": nextprevious.previous, "next_item": nextprevious.next,}\n+            {"previous_item": nextprevious.previous, "next_item": nextprevious.next}\n         )\n \n         # Insert expandable elements\ndiff --git a/src/plone/restapi/serializer/discussion.py b/src/plone/restapi/serializer/discussion.py\nindex 3f4a0451..49f9c431 100644\n--- a/src/plone/restapi/serializer/discussion.py\n+++ b/src/plone/restapi/serializer/discussion.py\n@@ -76,7 +76,7 @@ def __call__(self, include_items=True):\n             "@parent": parent_url,\n             "comment_id": str(self.context.id),\n             "in_reply_to": in_reply_to,\n-            "text": {"data": text_data, "mime-type": text_mime_type,},\n+            "text": {"data": text_data, "mime-type": text_mime_type},\n             "user_notification": self.context.user_notification,\n             "author_username": self.context.author_username,\n             "author_name": self.context.author_name,\ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex bd9de513..1a511b2c 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -71,7 +71,7 @@ def __call__(self, version=None, include_items=True):\n         # Insert next/prev information\n         nextprevious = NextPrevious(obj)\n         result.update(\n-            {"previous_item": nextprevious.previous, "next_item": nextprevious.next,}\n+            {"previous_item": nextprevious.previous, "next_item": nextprevious.next}\n         )\n \n         # Insert expandable elements\ndiff --git a/src/plone/restapi/serializer/nextprev.py b/src/plone/restapi/serializer/nextprev.py\nindex 5e523b93..eff29eed 100644\n--- a/src/plone/restapi/serializer/nextprev.py\n+++ b/src/plone/restapi/serializer/nextprev.py\n@@ -26,12 +26,15 @@ class NextPrevious(object):\n \n     def __init__(self, context):\n         self.context = context\n-        parent = aq_parent(aq_inner(context))\n-        self.nextprev = NextPreviousFixed(parent)\n+        self.parent = aq_parent(aq_inner(context))\n+        self.nextprev = NextPreviousFixed(self.parent)\n \n     @property\n     def next(self):\n         """ return info about the next item in the container """\n+        if getattr(self.parent, "_ordering", "") == "unordered":\n+            # Unordered folder\n+            return {}\n         data = self.nextprev.getNextItem(self.context)\n         if data is None:\n             return {}\n@@ -45,6 +48,9 @@ def next(self):\n     @property\n     def previous(self):\n         """ return info about the previous item in the container """\n+        if getattr(self.parent, "_ordering", "") == "unordered":\n+            # Unordered folder\n+            return {}\n         data = self.nextprev.getPreviousItem(self.context)\n         if data is None:\n             return {}\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex d3523672..75bfd11f 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1576,7 +1576,7 @@ def test_controlpanels_crud_dexterity(self):\n         # PATCH\n         response = self.api_session.patch(\n             "/@controlpanels/dexterity-types/my_custom_content_type",\n-            json={"title": "My Content Type", "description": "A content-type",},\n+            json={"title": "My Content Type", "description": "A content-type"},\n         )\n         save_request_and_response_for_docs(\n             "controlpanels_patch_dexterity_item", response\ndiff --git a/src/plone/restapi/tests/test_dxcontent_serializer.py b/src/plone/restapi/tests/test_dxcontent_serializer.py\nindex 7f450d4a..f4bc38c3 100644\n--- a/src/plone/restapi/tests/test_dxcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_dxcontent_serializer.py\n@@ -389,6 +389,24 @@ def test_nextprev_root_has_nextprev(self):\n             data["next_item"],\n         )\n \n+    def test_nextprev_unordered_folder(self):\n+        folder = api.content.create(\n+            container=self.portal,\n+            type="Folder",\n+            title="Folder with items",\n+            description="This is a folder with some documents",\n+        )\n+        folder.setOrdering("unordered")\n+        doc = api.content.create(\n+            container=folder,\n+            type="Document",\n+            title="Item 1",\n+            description="One item alone in the folder",\n+        )\n+        data = self.serialize(doc)\n+        self.assertEqual({}, data["previous_item"])\n+        self.assertEqual({}, data["next_item"])\n+\n     def test_richtext_serializer_context(self):\n         """This checks if the context is passed in correctly.\n \ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex 6ae6d9fd..8b0ecf70 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -157,7 +157,7 @@ def test_list_field_with_vocabulary_choice_serialization_no_valid_term(self):\n         )\n         self.assertTrue(isinstance(value, list), "Not a <list>")\n         self.assertEqual(\n-            [{u"token": u"token3", u"title": u"title3"},], value,\n+            [{u"token": u"token3", u"title": u"title3"}], value,\n         )\n \n     def test_set_field_serialization_returns_list(self):\ndiff --git a/src/plone/restapi/tests/test_services_sources.py b/src/plone/restapi/tests/test_services_sources.py\nindex 0b88f702..23978d45 100644\n--- a/src/plone/restapi/tests/test_services_sources.py\n+++ b/src/plone/restapi/tests/test_services_sources.py\n@@ -216,7 +216,7 @@ def test_source_filtered_by_non_ascii_title(self):\n             {\n                 u"@id": self.portal_url\n                 + u"/testdoc/@sources/test_choice_with_context_source?title=b%C3%A4r",  # noqa\n-                u"items": [{u"token": u"b=C3=A4r", u"title": u"B\\xe4r"},],\n+                u"items": [{u"token": u"b=C3=A4r", u"title": u"B\\xe4r"}],\n                 u"items_total": 1,\n             },\n         )\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-04T22:38:29+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/979c73fcd85b0a0f58e269f263d89f9ce1f05793

Preparing release 6.8.1

Files changed:
M CHANGES.rst
M setup.py
D news/928.bugfix

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 6023fc8e..6a5ea5ad 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,16 @@ Changelog\n \n .. towncrier release notes start\n \n+6.8.1 (2020-05-04)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Treat next/prev items for unordered folders.\n+  [rodfersou] (#928)\n+\n+\n 6.8.0 (2020-04-23)\n ------------------\n \ndiff --git a/news/928.bugfix b/news/928.bugfix\ndeleted file mode 100644\nindex e024fe20..00000000\n--- a/news/928.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Treat next/prev items for unordered folders.\n-[rodfersou]\ndiff --git a/setup.py b/setup.py\nindex bd17801b..e1727b39 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.8.1.dev0'\n+version = '6.8.1'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-04T22:38:57+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/4809828881996da136994b0e8b909e10b8d086c1

Back to development: 6.8.2

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex e1727b39..8f9e135b 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.8.1'\n+version = '6.8.2.dev0'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-04T22:39:29+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/9faf33efd465f0592521cdbce9133a02d0ecebd8

Merge branch '6.x.x'

Files changed:
M CHANGES.rst
M setup.py

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 6023fc8e..6a5ea5ad 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,16 @@ Changelog\n \n .. towncrier release notes start\n \n+6.8.1 (2020-05-04)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Treat next/prev items for unordered folders.\n+  [rodfersou] (#928)\n+\n+\n 6.8.0 (2020-04-23)\n ------------------\n \ndiff --git a/setup.py b/setup.py\nindex 9dc95e77..28b5d3ad 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.8.1.dev0'\n+version = '6.8.2.dev0'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-04T22:40:55+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/db18b17c3d8049e54804f97abb74086383e47904

changelog: #928 has been released with 6.8.1

Files changed:
D news/928.bugfix

b'diff --git a/news/928.bugfix b/news/928.bugfix\ndeleted file mode 100644\nindex e024fe20..00000000\n--- a/news/928.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Treat next/prev items for unordered folders.\n-[rodfersou]\n'

