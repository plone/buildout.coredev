Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2022-05-24T08:21:25+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.querystring/commit/6b2b8e5edc9c7836daed78f612cf5752b5065b1b

Add negation-query operators string.isNot and selection.none.

New ``plone.app.querystring.operation.string.isNot`` and ``plone.app.querystring.operation.selection.none`` including upgrade steps.

Files changed:
A news/110.feature
A plone/app/querystring/profiles/upgrades/to_14/registry.xml
M plone/app/querystring/hiddenprofiles.py
M plone/app/querystring/indexmodifiers/query_index_modifiers.py
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testIndexmodifiers.py
M plone/app/querystring/tests/testQueryBuilder.py
M plone/app/querystring/tests/testRegistryIntegration.py
M plone/app/querystring/upgrades.zcml

b'diff --git a/news/110.feature b/news/110.feature\nnew file mode 100644\nindex 0000000..d9709b7\n--- /dev/null\n+++ b/news/110.feature\n@@ -0,0 +1,3 @@\n+Add negation-query operators string.isNot and selection.none.\n+New ``plone.app.querystring.operation.string.isNot`` and ``plone.app.querystring.operation.selection.none`` including upgrade steps.\n+[thet]\ndiff --git a/plone/app/querystring/hiddenprofiles.py b/plone/app/querystring/hiddenprofiles.py\nindex 690dc36..7b6c066 100644\n--- a/plone/app/querystring/hiddenprofiles.py\n+++ b/plone/app/querystring/hiddenprofiles.py\n@@ -24,4 +24,5 @@ def getNonInstallableProfiles(self):\n             \'plone.app.querystring:upgrade_to_9\',\n             \'plone.app.querystring:upgrade_to_10\',\n             \'plone.app.querystring:upgrade_to_11\',\n+            \'plone.app.querystring:upgrade_to_14\',\n         ]\ndiff --git a/plone/app/querystring/indexmodifiers/query_index_modifiers.py b/plone/app/querystring/indexmodifiers/query_index_modifiers.py\nindex e36de01..050caef 100644\n--- a/plone/app/querystring/indexmodifiers/query_index_modifiers.py\n+++ b/plone/app/querystring/indexmodifiers/query_index_modifiers.py\n@@ -22,9 +22,19 @@ class Subject(object):\n     """\n \n     def __call__(self, value):\n-        query = value[\'query\']\n+        if not six.PY2:\n+            return (\'Subject\', value)\n+\n+        # Get the query operator\n+        op = None\n+        if \'query\' in value:\n+            op = \'query\'\n+        elif \'not\' in value:\n+            op = \'not\'\n+\n+        query = value[op]\n         # query can be a unicode string or a list of unicode strings.\n-        if six.PY2 and isinstance(query, six.text_type):\n+        if isinstance(query, six.text_type):\n             query = query.encode("utf-8")\n         elif isinstance(query, list):\n             # We do not want to change the collections\' own query string,\n@@ -34,13 +44,13 @@ def __call__(self, value):\n             # unicode strings\n             i = 0\n             for item in copy_of_query:\n-                if six.PY2 and isinstance(item, six.text_type):\n+                if isinstance(item, six.text_type):\n                     copy_of_query[i] = item.encode("utf-8")\n                 i += 1\n             query = copy_of_query\n         else:\n             pass\n-        value[\'query\'] = query\n+        value[op] = query\n         return (\'Subject\', value)\n \n \ndiff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml\nindex 558d035..c80de26 100644\n--- a/plone/app/querystring/profiles.zcml\n+++ b/plone/app/querystring/profiles.zcml\n@@ -81,4 +81,12 @@\n         provides="Products.GenericSetup.interfaces.EXTENSION"\n         />\n \n+    <genericsetup:registerProfile\n+        name="upgrade_to_14"\n+        title="Querystring Upgrade profile to v14"\n+        description=""\n+        directory="profiles/upgrades/to_14"\n+        provides="Products.GenericSetup.interfaces.EXTENSION"\n+        />\n+\n  </configure>\ndiff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml\nindex f88f99c..610f8d1 100644\n--- a/plone/app/querystring/profiles/default/metadata.xml\n+++ b/plone/app/querystring/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>13</version>\n+  <version>14</version>\n   <dependencies>\n       <dependency>profile-plone.app.registry:default</dependency>\n   </dependencies>\ndiff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml\nindex bc83015..db23b80 100644\n--- a/plone/app/querystring/profiles/default/registry.xml\n+++ b/plone/app/querystring/profiles/default/registry.xml\n@@ -186,6 +186,14 @@\n         <value key="widget">StringWidget</value>\n     </records>\n \n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.string.isNot">\n+        <value key="title" i18n:translate="">Is not</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">StringWidget</value>\n+    </records>\n+\n     <records interface="plone.app.querystring.interfaces.IQueryOperation"\n              prefix="plone.app.querystring.operation.selection.is">\n         <value key="title" i18n:translate="">Is</value>\n@@ -234,6 +242,14 @@\n         <value key="widget">MultipleSelectionWidget</value>\n     </records>\n \n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.selection.none">\n+        <value key="title" i18n:translate="">Matches none of</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">MultipleSelectionWidget</value>\n+    </records>\n+\n     <records interface="plone.app.querystring.interfaces.IQueryOperation"\n              prefix="plone.app.querystring.operation.selection.all">\n         <value key="title" i18n:translate="">Matches all of</value>\n@@ -265,6 +281,7 @@\n        <value key="sortable">True</value>\n        <value key="operations">\n             <element>plone.app.querystring.operation.string.is</element>\n+            <element>plone.app.querystring.operation.string.isNot</element>\n        </value>\n        <value key="group" i18n:translate="">Metadata</value>\n     </records>\n@@ -299,6 +316,7 @@\n         <value key="operations">\n             <element>plone.app.querystring.operation.string.currentUser</element>\n             <element>plone.app.querystring.operation.selection.any</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n         <value key="vocabulary">plone.app.vocabularies.Users</value>\n        <value key="group" i18n:translate="">Metadata</value>\n@@ -471,6 +489,7 @@\n         <value key="sortable">False</value>\n         <value key="operations">\n             <element>plone.app.querystring.operation.selection.any</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n         <value key="vocabulary">plone.app.vocabularies.ReallyUserFriendlyTypes</value>\n        <value key="group" i18n:translate="">Metadata</value>\n@@ -497,6 +516,7 @@\n         <value key="sortable">True</value>\n         <value key="operations">\n             <element>plone.app.querystring.operation.selection.any</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n         <value key="vocabulary">plone.app.vocabularies.WorkflowStates</value>\n        <value key="group" i18n:translate="">Metadata</value>\n@@ -523,6 +543,7 @@\n         <value key="operations">\n             <element>plone.app.querystring.operation.string.contains</element>\n             <element>plone.app.querystring.operation.string.is</element>\n+            <element>plone.app.querystring.operation.string.isNot</element>\n         </value>\n        <value key="group" i18n:translate="">Text</value>\n     </records>\n@@ -557,6 +578,7 @@\n         <value key="operations">\n             <element>plone.app.querystring.operation.selection.any</element>\n             <element>plone.app.querystring.operation.selection.all</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n        <value key="vocabulary">plone.app.vocabularies.Keywords</value>\n        <value key="group" i18n:translate="">Text</value>\ndiff --git a/plone/app/querystring/profiles/upgrades/to_14/registry.xml b/plone/app/querystring/profiles/upgrades/to_14/registry.xml\nnew file mode 100644\nindex 0000000..1c4d6c7\n--- /dev/null\n+++ b/plone/app/querystring/profiles/upgrades/to_14/registry.xml\n@@ -0,0 +1,72 @@\n+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          i18n:domain="plone">\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.string.isNot">\n+        <value key="title" i18n:translate="">Is not</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">StringWidget</value>\n+    </records>\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.selection.none">\n+        <value key="title" i18n:translate="">Matches none of</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">MultipleSelectionWidget</value>\n+    </records>\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.getId"\n+             purge="False">\n+       <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.string.isNot</element>\n+       </value>\n+    </records>\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.sortable_title"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.string.isNot</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.Creator"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.portal_type"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.review_state"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.Subject"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+</registry>\ndiff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex 55124d7..97bd757 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -75,6 +75,10 @@ def _contains(context, row):\n     return _equal(context, row)\n \n \n+def _excludes(context, row):\n+    return {row.index: {\'not\': row.values}}\n+\n+\n def _equal(context, row):\n     return {row.index: {\'query\': row.values, }}\n \ndiff --git a/plone/app/querystring/tests/testIndexmodifiers.py b/plone/app/querystring/tests/testIndexmodifiers.py\nindex 27841b1..6a93f90 100644\n--- a/plone/app/querystring/tests/testIndexmodifiers.py\n+++ b/plone/app/querystring/tests/testIndexmodifiers.py\n@@ -1,6 +1,6 @@\n # -*- coding: utf-8 -*-\n-from DateTime import DateTime\n from datetime import datetime\n+from DateTime import DateTime\n from plone.app.querystring.indexmodifiers import query_index_modifiers\n \n import unittest\n@@ -13,6 +13,16 @@ def test_subject_encoded(self):\n             query_index_modifiers.Subject()({\'query\': u\'foobar\'}),\n             (\'Subject\', {\'query\': u\'foobar\'}))\n \n+    def test_subject_encoded__list(self):\n+        self.assertEqual(\n+            query_index_modifiers.Subject()({\'query\': [u\'foobar\']}),\n+            (\'Subject\', {\'query\': [u\'foobar\']}))\n+\n+    def test_subject_encoded__list_not(self):\n+        self.assertEqual(\n+            query_index_modifiers.Subject()({\'not\': [u\'foobar\']}),\n+            (\'Subject\', {\'not\': [\'foobar\']}))\n+\n     def test_date_modifier(self):\n         modifier = query_index_modifiers.start()\n         self.assertTrue(\n@@ -32,6 +42,7 @@ def test_date_modifier_list(self):\n     def test_date_modifier_list_DateTime(self):\n         """Test a case with largerThanRelativeDate operatiors, where\n         plone.app.querystring.querybuilder parses a querystring like this one:\n+\n         >>> query\n         [{\n             u\'i\': u\'end\',\ndiff --git a/plone/app/querystring/tests/testQueryBuilder.py b/plone/app/querystring/tests/testQueryBuilder.py\nindex 3565ecc..a112304 100644\n--- a/plone/app/querystring/tests/testQueryBuilder.py\n+++ b/plone/app/querystring/tests/testQueryBuilder.py\n@@ -69,6 +69,35 @@ def testMakeQuery(self):\n             results[0].getURL(),\n             \'http://nohost/plone/collectionstestpage\')\n \n+    def testQueryStringIs(self):\n+        query = [{\n+            \'i\': \'sortable_title\',\n+            \'o\': \'plone.app.querystring.operation.string.is\',\n+            \'v\': \'collectionstestpage\',\n+        }]\n+\n+        # Test normal, without custom_query.\n+        results = self.querybuilder._makequery(query=query)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(results[0].Title(), \'Collectionstestpage\')\n+\n+    def testQueryStringIsNot(self):\n+        query = [{\n+            \'i\': \'portal_type\',\n+            \'o\': \'plone.app.querystring.operation.selection.none\',\n+            \'v\': \'Plone Site\',\n+        }, {\n+            \'i\': \'sortable_title\',\n+            \'o\': \'plone.app.querystring.operation.string.isNot\',\n+            \'v\': \'collectionstestpage\',\n+        }]\n+\n+        # Test normal, without custom_query.\n+        results = self.querybuilder._makequery(query=query)\n+        print([it.Title() for it in results])\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(results[0].Title(), \'Test Folder\')\n+\n     def testMakeQueryWithSubject(self):\n         self.testpage.setSubject([\'Lorem\'])\n         self.testpage.reindexObject()\n@@ -83,6 +112,22 @@ def testMakeQueryWithSubject(self):\n             results[0].getURL(),\n             \'http://nohost/plone/collectionstestpage\')\n \n+    def testMakeQueryWithSubjectNot(self):\n+        self.folder.setSubject([\'Ipsum\'])\n+        self.folder.reindexObject()\n+        self.testpage.setSubject([\'Lorem\'])\n+        self.testpage.reindexObject()\n+        query = [{\n+            \'i\': \'Subject\',\n+            \'o\': \'plone.app.querystring.operation.selection.none\',\n+            \'v\': \'Lorem\',\n+        }]\n+        results = self.querybuilder._makequery(query=query)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(\n+            results[0].getURL(),\n+            \'http://nohost/plone/testfolder\')\n+\n     def testMakeQueryWithMultipleSubject(self):\n         self.testpage.setSubject([\'Lorem\'])\n         self.testpage.reindexObject()\n@@ -97,6 +142,22 @@ def testMakeQueryWithMultipleSubject(self):\n             results[0].getURL(),\n             \'http://nohost/plone/collectionstestpage\')\n \n+    def testMakeQueryWithMultipleSubjectNot(self):\n+        self.folder.setSubject([\'Ipsum\'])\n+        self.folder.reindexObject()\n+        self.testpage.setSubject([\'Lorem\'])\n+        self.testpage.reindexObject()\n+        query = [{\n+            \'i\': \'Subject\',\n+            \'o\': \'plone.app.querystring.operation.selection.none\',\n+            \'v\': [\'Lorem\', \'Dolor\'],\n+        }]\n+        results = self.querybuilder._makequery(query=query)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(\n+            results[0].getURL(),\n+            \'http://nohost/plone/testfolder\')\n+\n     def testMakeQueryWithSubjectWithSpecialCharacters(self):\n         self.testpage.setSubject([\'\xc3\x84\xc3\xbc\xc3\xb6\'])\n         self.testpage.reindexObject()\ndiff --git a/plone/app/querystring/tests/testRegistryIntegration.py b/plone/app/querystring/tests/testRegistryIntegration.py\nindex 05e5cfb..1fda4c5 100644\n--- a/plone/app/querystring/tests/testRegistryIntegration.py\n+++ b/plone/app/querystring/tests/testRegistryIntegration.py\n@@ -52,11 +52,14 @@ def test_getId(self):\n         self.assertEqual(registry[prefix + ".title"], "Short name (id)")\n \n         operations = registry[prefix + ".operations"]\n-        self.assertEqual(len(operations), 1)\n+        self.assertEqual(len(operations), 2)\n \n         equal = \'plone.app.querystring.operation.string.is\'\n         self.assertTrue(equal in operations)\n \n+        exclude = \'plone.app.querystring.operation.string.isNot\'\n+        self.assertTrue(exclude in operations)\n+\n         self.assertEqual(registry[prefix + ".description"],\n                          "The short name of an item (used in the url)")\n         self.assertEqual(registry[prefix + ".enabled"], True)\ndiff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml\nindex 7506ded..dfd40f4 100644\n--- a/plone/app/querystring/upgrades.zcml\n+++ b/plone/app/querystring/upgrades.zcml\n@@ -137,4 +137,14 @@\n         />\n   </genericsetup:upgradeSteps>\n \n+  <genericsetup:upgradeSteps\n+      source="13"\n+      destination="14"\n+      profile="plone.app.querystring:default">\n+    <genericsetup:upgradeDepends\n+        title="Add new \'string.isNot\' and \'selection.none\' query operators."\n+        import_profile="plone.app.querystring:upgrade_to_14"\n+        />\n+  </genericsetup:upgradeSteps>\n+\n </configure>\n'

Repository: plone.app.querystring


Branch: refs/heads/master
Date: 2022-05-24T16:51:20+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.querystring/commit/a1e7091736b28f3cbe60288d4e3e875c3e5752df

Merge pull request #110 from plone/thet-excludes

Add negative query support: string.isNot and selection.none

Files changed:
A news/110.feature
A plone/app/querystring/profiles/upgrades/to_14/registry.xml
M plone/app/querystring/hiddenprofiles.py
M plone/app/querystring/indexmodifiers/query_index_modifiers.py
M plone/app/querystring/profiles.zcml
M plone/app/querystring/profiles/default/metadata.xml
M plone/app/querystring/profiles/default/registry.xml
M plone/app/querystring/queryparser.py
M plone/app/querystring/tests/testIndexmodifiers.py
M plone/app/querystring/tests/testQueryBuilder.py
M plone/app/querystring/tests/testRegistryIntegration.py
M plone/app/querystring/upgrades.zcml

b'diff --git a/news/110.feature b/news/110.feature\nnew file mode 100644\nindex 0000000..d9709b7\n--- /dev/null\n+++ b/news/110.feature\n@@ -0,0 +1,3 @@\n+Add negation-query operators string.isNot and selection.none.\n+New ``plone.app.querystring.operation.string.isNot`` and ``plone.app.querystring.operation.selection.none`` including upgrade steps.\n+[thet]\ndiff --git a/plone/app/querystring/hiddenprofiles.py b/plone/app/querystring/hiddenprofiles.py\nindex 690dc36..7b6c066 100644\n--- a/plone/app/querystring/hiddenprofiles.py\n+++ b/plone/app/querystring/hiddenprofiles.py\n@@ -24,4 +24,5 @@ def getNonInstallableProfiles(self):\n             \'plone.app.querystring:upgrade_to_9\',\n             \'plone.app.querystring:upgrade_to_10\',\n             \'plone.app.querystring:upgrade_to_11\',\n+            \'plone.app.querystring:upgrade_to_14\',\n         ]\ndiff --git a/plone/app/querystring/indexmodifiers/query_index_modifiers.py b/plone/app/querystring/indexmodifiers/query_index_modifiers.py\nindex e36de01..050caef 100644\n--- a/plone/app/querystring/indexmodifiers/query_index_modifiers.py\n+++ b/plone/app/querystring/indexmodifiers/query_index_modifiers.py\n@@ -22,9 +22,19 @@ class Subject(object):\n     """\n \n     def __call__(self, value):\n-        query = value[\'query\']\n+        if not six.PY2:\n+            return (\'Subject\', value)\n+\n+        # Get the query operator\n+        op = None\n+        if \'query\' in value:\n+            op = \'query\'\n+        elif \'not\' in value:\n+            op = \'not\'\n+\n+        query = value[op]\n         # query can be a unicode string or a list of unicode strings.\n-        if six.PY2 and isinstance(query, six.text_type):\n+        if isinstance(query, six.text_type):\n             query = query.encode("utf-8")\n         elif isinstance(query, list):\n             # We do not want to change the collections\' own query string,\n@@ -34,13 +44,13 @@ def __call__(self, value):\n             # unicode strings\n             i = 0\n             for item in copy_of_query:\n-                if six.PY2 and isinstance(item, six.text_type):\n+                if isinstance(item, six.text_type):\n                     copy_of_query[i] = item.encode("utf-8")\n                 i += 1\n             query = copy_of_query\n         else:\n             pass\n-        value[\'query\'] = query\n+        value[op] = query\n         return (\'Subject\', value)\n \n \ndiff --git a/plone/app/querystring/profiles.zcml b/plone/app/querystring/profiles.zcml\nindex 558d035..c80de26 100644\n--- a/plone/app/querystring/profiles.zcml\n+++ b/plone/app/querystring/profiles.zcml\n@@ -81,4 +81,12 @@\n         provides="Products.GenericSetup.interfaces.EXTENSION"\n         />\n \n+    <genericsetup:registerProfile\n+        name="upgrade_to_14"\n+        title="Querystring Upgrade profile to v14"\n+        description=""\n+        directory="profiles/upgrades/to_14"\n+        provides="Products.GenericSetup.interfaces.EXTENSION"\n+        />\n+\n  </configure>\ndiff --git a/plone/app/querystring/profiles/default/metadata.xml b/plone/app/querystring/profiles/default/metadata.xml\nindex f88f99c..610f8d1 100644\n--- a/plone/app/querystring/profiles/default/metadata.xml\n+++ b/plone/app/querystring/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0"?>\n <metadata>\n-  <version>13</version>\n+  <version>14</version>\n   <dependencies>\n       <dependency>profile-plone.app.registry:default</dependency>\n   </dependencies>\ndiff --git a/plone/app/querystring/profiles/default/registry.xml b/plone/app/querystring/profiles/default/registry.xml\nindex bc83015..db23b80 100644\n--- a/plone/app/querystring/profiles/default/registry.xml\n+++ b/plone/app/querystring/profiles/default/registry.xml\n@@ -186,6 +186,14 @@\n         <value key="widget">StringWidget</value>\n     </records>\n \n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.string.isNot">\n+        <value key="title" i18n:translate="">Is not</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">StringWidget</value>\n+    </records>\n+\n     <records interface="plone.app.querystring.interfaces.IQueryOperation"\n              prefix="plone.app.querystring.operation.selection.is">\n         <value key="title" i18n:translate="">Is</value>\n@@ -234,6 +242,14 @@\n         <value key="widget">MultipleSelectionWidget</value>\n     </records>\n \n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.selection.none">\n+        <value key="title" i18n:translate="">Matches none of</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">MultipleSelectionWidget</value>\n+    </records>\n+\n     <records interface="plone.app.querystring.interfaces.IQueryOperation"\n              prefix="plone.app.querystring.operation.selection.all">\n         <value key="title" i18n:translate="">Matches all of</value>\n@@ -265,6 +281,7 @@\n        <value key="sortable">True</value>\n        <value key="operations">\n             <element>plone.app.querystring.operation.string.is</element>\n+            <element>plone.app.querystring.operation.string.isNot</element>\n        </value>\n        <value key="group" i18n:translate="">Metadata</value>\n     </records>\n@@ -299,6 +316,7 @@\n         <value key="operations">\n             <element>plone.app.querystring.operation.string.currentUser</element>\n             <element>plone.app.querystring.operation.selection.any</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n         <value key="vocabulary">plone.app.vocabularies.Users</value>\n        <value key="group" i18n:translate="">Metadata</value>\n@@ -471,6 +489,7 @@\n         <value key="sortable">False</value>\n         <value key="operations">\n             <element>plone.app.querystring.operation.selection.any</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n         <value key="vocabulary">plone.app.vocabularies.ReallyUserFriendlyTypes</value>\n        <value key="group" i18n:translate="">Metadata</value>\n@@ -497,6 +516,7 @@\n         <value key="sortable">True</value>\n         <value key="operations">\n             <element>plone.app.querystring.operation.selection.any</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n         <value key="vocabulary">plone.app.vocabularies.WorkflowStates</value>\n        <value key="group" i18n:translate="">Metadata</value>\n@@ -523,6 +543,7 @@\n         <value key="operations">\n             <element>plone.app.querystring.operation.string.contains</element>\n             <element>plone.app.querystring.operation.string.is</element>\n+            <element>plone.app.querystring.operation.string.isNot</element>\n         </value>\n        <value key="group" i18n:translate="">Text</value>\n     </records>\n@@ -557,6 +578,7 @@\n         <value key="operations">\n             <element>plone.app.querystring.operation.selection.any</element>\n             <element>plone.app.querystring.operation.selection.all</element>\n+            <element>plone.app.querystring.operation.selection.none</element>\n         </value>\n        <value key="vocabulary">plone.app.vocabularies.Keywords</value>\n        <value key="group" i18n:translate="">Text</value>\ndiff --git a/plone/app/querystring/profiles/upgrades/to_14/registry.xml b/plone/app/querystring/profiles/upgrades/to_14/registry.xml\nnew file mode 100644\nindex 0000000..1c4d6c7\n--- /dev/null\n+++ b/plone/app/querystring/profiles/upgrades/to_14/registry.xml\n@@ -0,0 +1,72 @@\n+<registry xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+          i18n:domain="plone">\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.string.isNot">\n+        <value key="title" i18n:translate="">Is not</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">StringWidget</value>\n+    </records>\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryOperation"\n+             prefix="plone.app.querystring.operation.selection.none">\n+        <value key="title" i18n:translate="">Matches none of</value>\n+        <value key="description" i18n:translate="">Tip: you can use * to autocomplete.</value>\n+        <value key="operation">plone.app.querystring.queryparser._excludes</value>\n+        <value key="widget">MultipleSelectionWidget</value>\n+    </records>\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.getId"\n+             purge="False">\n+       <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.string.isNot</element>\n+       </value>\n+    </records>\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.sortable_title"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.string.isNot</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.Creator"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.portal_type"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.review_state"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+\n+    <records interface="plone.app.querystring.interfaces.IQueryField"\n+             prefix="plone.app.querystring.field.Subject"\n+             purge="False">\n+        <value key="operations" purge="False">\n+            <element>plone.app.querystring.operation.selection.none</element>\n+        </value>\n+    </records>\n+\n+</registry>\ndiff --git a/plone/app/querystring/queryparser.py b/plone/app/querystring/queryparser.py\nindex 55124d7..97bd757 100644\n--- a/plone/app/querystring/queryparser.py\n+++ b/plone/app/querystring/queryparser.py\n@@ -75,6 +75,10 @@ def _contains(context, row):\n     return _equal(context, row)\n \n \n+def _excludes(context, row):\n+    return {row.index: {\'not\': row.values}}\n+\n+\n def _equal(context, row):\n     return {row.index: {\'query\': row.values, }}\n \ndiff --git a/plone/app/querystring/tests/testIndexmodifiers.py b/plone/app/querystring/tests/testIndexmodifiers.py\nindex 27841b1..6a93f90 100644\n--- a/plone/app/querystring/tests/testIndexmodifiers.py\n+++ b/plone/app/querystring/tests/testIndexmodifiers.py\n@@ -1,6 +1,6 @@\n # -*- coding: utf-8 -*-\n-from DateTime import DateTime\n from datetime import datetime\n+from DateTime import DateTime\n from plone.app.querystring.indexmodifiers import query_index_modifiers\n \n import unittest\n@@ -13,6 +13,16 @@ def test_subject_encoded(self):\n             query_index_modifiers.Subject()({\'query\': u\'foobar\'}),\n             (\'Subject\', {\'query\': u\'foobar\'}))\n \n+    def test_subject_encoded__list(self):\n+        self.assertEqual(\n+            query_index_modifiers.Subject()({\'query\': [u\'foobar\']}),\n+            (\'Subject\', {\'query\': [u\'foobar\']}))\n+\n+    def test_subject_encoded__list_not(self):\n+        self.assertEqual(\n+            query_index_modifiers.Subject()({\'not\': [u\'foobar\']}),\n+            (\'Subject\', {\'not\': [\'foobar\']}))\n+\n     def test_date_modifier(self):\n         modifier = query_index_modifiers.start()\n         self.assertTrue(\n@@ -32,6 +42,7 @@ def test_date_modifier_list(self):\n     def test_date_modifier_list_DateTime(self):\n         """Test a case with largerThanRelativeDate operatiors, where\n         plone.app.querystring.querybuilder parses a querystring like this one:\n+\n         >>> query\n         [{\n             u\'i\': u\'end\',\ndiff --git a/plone/app/querystring/tests/testQueryBuilder.py b/plone/app/querystring/tests/testQueryBuilder.py\nindex 3565ecc..a112304 100644\n--- a/plone/app/querystring/tests/testQueryBuilder.py\n+++ b/plone/app/querystring/tests/testQueryBuilder.py\n@@ -69,6 +69,35 @@ def testMakeQuery(self):\n             results[0].getURL(),\n             \'http://nohost/plone/collectionstestpage\')\n \n+    def testQueryStringIs(self):\n+        query = [{\n+            \'i\': \'sortable_title\',\n+            \'o\': \'plone.app.querystring.operation.string.is\',\n+            \'v\': \'collectionstestpage\',\n+        }]\n+\n+        # Test normal, without custom_query.\n+        results = self.querybuilder._makequery(query=query)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(results[0].Title(), \'Collectionstestpage\')\n+\n+    def testQueryStringIsNot(self):\n+        query = [{\n+            \'i\': \'portal_type\',\n+            \'o\': \'plone.app.querystring.operation.selection.none\',\n+            \'v\': \'Plone Site\',\n+        }, {\n+            \'i\': \'sortable_title\',\n+            \'o\': \'plone.app.querystring.operation.string.isNot\',\n+            \'v\': \'collectionstestpage\',\n+        }]\n+\n+        # Test normal, without custom_query.\n+        results = self.querybuilder._makequery(query=query)\n+        print([it.Title() for it in results])\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(results[0].Title(), \'Test Folder\')\n+\n     def testMakeQueryWithSubject(self):\n         self.testpage.setSubject([\'Lorem\'])\n         self.testpage.reindexObject()\n@@ -83,6 +112,22 @@ def testMakeQueryWithSubject(self):\n             results[0].getURL(),\n             \'http://nohost/plone/collectionstestpage\')\n \n+    def testMakeQueryWithSubjectNot(self):\n+        self.folder.setSubject([\'Ipsum\'])\n+        self.folder.reindexObject()\n+        self.testpage.setSubject([\'Lorem\'])\n+        self.testpage.reindexObject()\n+        query = [{\n+            \'i\': \'Subject\',\n+            \'o\': \'plone.app.querystring.operation.selection.none\',\n+            \'v\': \'Lorem\',\n+        }]\n+        results = self.querybuilder._makequery(query=query)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(\n+            results[0].getURL(),\n+            \'http://nohost/plone/testfolder\')\n+\n     def testMakeQueryWithMultipleSubject(self):\n         self.testpage.setSubject([\'Lorem\'])\n         self.testpage.reindexObject()\n@@ -97,6 +142,22 @@ def testMakeQueryWithMultipleSubject(self):\n             results[0].getURL(),\n             \'http://nohost/plone/collectionstestpage\')\n \n+    def testMakeQueryWithMultipleSubjectNot(self):\n+        self.folder.setSubject([\'Ipsum\'])\n+        self.folder.reindexObject()\n+        self.testpage.setSubject([\'Lorem\'])\n+        self.testpage.reindexObject()\n+        query = [{\n+            \'i\': \'Subject\',\n+            \'o\': \'plone.app.querystring.operation.selection.none\',\n+            \'v\': [\'Lorem\', \'Dolor\'],\n+        }]\n+        results = self.querybuilder._makequery(query=query)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(\n+            results[0].getURL(),\n+            \'http://nohost/plone/testfolder\')\n+\n     def testMakeQueryWithSubjectWithSpecialCharacters(self):\n         self.testpage.setSubject([\'\xc3\x84\xc3\xbc\xc3\xb6\'])\n         self.testpage.reindexObject()\ndiff --git a/plone/app/querystring/tests/testRegistryIntegration.py b/plone/app/querystring/tests/testRegistryIntegration.py\nindex 05e5cfb..1fda4c5 100644\n--- a/plone/app/querystring/tests/testRegistryIntegration.py\n+++ b/plone/app/querystring/tests/testRegistryIntegration.py\n@@ -52,11 +52,14 @@ def test_getId(self):\n         self.assertEqual(registry[prefix + ".title"], "Short name (id)")\n \n         operations = registry[prefix + ".operations"]\n-        self.assertEqual(len(operations), 1)\n+        self.assertEqual(len(operations), 2)\n \n         equal = \'plone.app.querystring.operation.string.is\'\n         self.assertTrue(equal in operations)\n \n+        exclude = \'plone.app.querystring.operation.string.isNot\'\n+        self.assertTrue(exclude in operations)\n+\n         self.assertEqual(registry[prefix + ".description"],\n                          "The short name of an item (used in the url)")\n         self.assertEqual(registry[prefix + ".enabled"], True)\ndiff --git a/plone/app/querystring/upgrades.zcml b/plone/app/querystring/upgrades.zcml\nindex 7506ded..dfd40f4 100644\n--- a/plone/app/querystring/upgrades.zcml\n+++ b/plone/app/querystring/upgrades.zcml\n@@ -137,4 +137,14 @@\n         />\n   </genericsetup:upgradeSteps>\n \n+  <genericsetup:upgradeSteps\n+      source="13"\n+      destination="14"\n+      profile="plone.app.querystring:default">\n+    <genericsetup:upgradeDepends\n+        title="Add new \'string.isNot\' and \'selection.none\' query operators."\n+        import_profile="plone.app.querystring:upgrade_to_14"\n+        />\n+  </genericsetup:upgradeSteps>\n+\n </configure>\n'

