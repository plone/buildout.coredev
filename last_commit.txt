Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-25T19:02:36+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/e5004cf57a184e802367f8f5e60b863e7722216f

Add alt_text field to image content type

Files changed:
A news/700.feature
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/schema/image.xml
M plone/app/contenttypes/tests/test_image.py

b'diff --git a/news/700.feature b/news/700.feature\nnew file mode 100644\nindex 00000000..b73a4c8e\n--- /dev/null\n+++ b/news/700.feature\n@@ -0,0 +1,2 @@\n+Add alt_text field to image content type. This allows users to manually set the value of alt tag, for usage in automated listings.\n+[@cekk, @jackahl]\ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex cb77820f..2f75f1f3 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -27,7 +27,8 @@\n           <figure class="figure">\n             <a tal:define="\n                  scale context/@@images;\n-                 img_tag python:scale.tag(\'image\', scale=\'large\', css_class=\'figure-img img-fluid\');\n+                 alt_text context/alt_text|nothing;\n+                 img_tag python:scale.tag(\'image\', scale=\'large\', css_class=\'figure-img img-fluid\', alt=alt_text);\n                "\n                tal:attributes="\n                  href string:${context/@@plone_context_state/object_url}/image_view_fullscreen;\ndiff --git a/plone/app/contenttypes/schema/image.xml b/plone/app/contenttypes/schema/image.xml\nindex 05c45972..2719b8e4 100644\n--- a/plone/app/contenttypes/schema/image.xml\n+++ b/plone/app/contenttypes/schema/image.xml\n@@ -19,6 +19,19 @@\n       <required>False</required>\n       <title i18n:translate="">Description</title>\n     </field>\n+    <field name="alt_text"\n+           type="zope.schema.TextLine">\n+      <description i18n:translate="label_alt_text_help">\n+        Briefly describe the meaning of the image for people using assistive technology like screen readers.\n+        This will be used when the image is viewed by itself or in automated contexts like listings.\n+        Do not duplicate the Title or Description fields, since those might also be read by screen readers.\n+        Alt text should describe what a sighted user sees when looking at the image.\n+        This might include text the image contains, or even a description of an abstract pattern.\n+        In case your description already sufficiently describes your image leave this field blank.\n+      </description>\n+      <required>False</required>\n+      <title i18n:translate="label_alt_text">Alt Text</title>\n+    </field>\n     <field marshal:primary="true"\n            name="image"\n            type="plone.namedfile.field.NamedBlobImage"\n@@ -28,3 +41,4 @@\n     </field>\n   </schema>\n </model>\n+\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex b31a514a..e187bc94 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -72,7 +72,16 @@ def setUp(self):\n         image.title = "My Image"\n         image.description = "This is my image."\n         image.image = dummy_image()\n+\n+        self.portal.invokeFactory(\'Image\', \'image-with-alt\')\n+        image_alt = self.portal[\'image-with-alt\']\n+        image_alt.title = \'My Image 2\'\n+        image_alt.description = \'This is my second image.\'\n+        image_alt.alt_text = \'An alt text\'\n+        image.image = dummy_image()\n+\n         self.image = image\n+        self.image_alt = image_alt\n         self.request.set("URL", image.absolute_url())\n         self.request.set("ACTUAL_URL", image.absolute_url())\n         alsoProvides(self.request, IPloneFormLayer)\n@@ -85,6 +94,30 @@ def test_image_view(self):\n         self.assertTrue("My Image" in view())\n         self.assertTrue("This is my image." in view())\n \n+    def test_image_view_alt(self):\n+        view = self.image_alt.restrictedTraverse(\'@@view\')\n+\n+        self.assertTrue(view())\n+        self.assertEqual(view.request.response.status, 200)\n+        self.assertTrue(\'My Image 2\' in view())\n+        self.assertTrue(\'This is my second image.\' in view())\n+        self.assertTrue(\'An alt text\' in view())\n+\n+    def test_image_alt_in_listing_view(self):\n+        self.image_alt.image = dummy_image(u\'image.svg\')\n+        view = self.portal.restrictedTraverse(\'@@listing_view\')\n+        self.assertTrue(\'An alt text\' in view())\n+\n+    def test_image_alt_in_summary_view(self):\n+        self.image_alt.image = dummy_image(u\'image.svg\')\n+        view = self.portal.restrictedTraverse(\'@@summary_view\')\n+        self.assertTrue(\'An alt text\' in view())\n+\n+    def test_image_alt_in_album_view(self):\n+        self.image_alt.image = dummy_image(u\'image.svg\')\n+        view = self.portal.restrictedTraverse(\'@@album_view\')\n+        self.assertTrue(\'An alt text\' in view())\n+\n     # XXX: Not working. See ImageFunctionalTest test_image_view_fullscreen\n     # Problem seems to be that the image is not properly uploaded.\n     #    def test_image_view_fullscreen(self):\n@@ -105,6 +138,14 @@ def test_svg_image(self):\n             r\'<img src="http://nohost/plone/image/@@images/[a-z0-9\\-]*.svg" alt="My Image" title="My Image" height="[a-z0-9\\-]*" width="[a-z0-9\\-]*" />\',  # noqa: E501\n         )\n \n+    def test_svg_image_alt(self):\n+        self.image_alt.image = dummy_image(u\'image.svg\')\n+        scale = self.image_alt.restrictedTraverse(\'@@images\')\n+        self.assertRegex(\n+            scale.scale(\'image\', scale=\'large\').tag(),\n+            r\'<img src="http://nohost/plone/image-with-alt/@@images/[a-z0-9--]*.svg" alt="An alt text" height="768" width="768" />\'  # noqa: E501\n+        )\n+\n \n class ImageFunctionalTest(unittest.TestCase):\n     layer = PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-26T09:57:50+02:00
Author: jackahl (jackahl) <44289551+jackahl@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c98e5768793d06c594b0e225069226029d6103a2

Fix typo in image type alt field description

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

Files changed:
M plone/app/contenttypes/schema/image.xml

b'diff --git a/plone/app/contenttypes/schema/image.xml b/plone/app/contenttypes/schema/image.xml\nindex 2719b8e4..c77cfe4e 100644\n--- a/plone/app/contenttypes/schema/image.xml\n+++ b/plone/app/contenttypes/schema/image.xml\n@@ -27,7 +27,7 @@\n         Do not duplicate the Title or Description fields, since those might also be read by screen readers.\n         Alt text should describe what a sighted user sees when looking at the image.\n         This might include text the image contains, or even a description of an abstract pattern.\n-        In case your description already sufficiently describes your image leave this field blank.\n+        In case your description already sufficiently describes your image, leave this field blank.\n       </description>\n       <required>False</required>\n       <title i18n:translate="label_alt_text">Alt Text</title>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-26T11:09:33+02:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8a14bd3fbfae543f684d97a678ed3f2a003f794c

Setup local installation

Files changed:
A Makefile
A constraints.txt
A instance.yaml
A mx.ini
A news/+setup.internal
A requirements.txt
M .gitignore
M .meta.toml

b'diff --git a/.gitignore b/.gitignore\nindex 486392f6..8d63c885 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -46,6 +46,8 @@ local.cfg\n /venv/\n .installed.txt\n \n+/test_*\n+robot_*\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex 3bf9f054..74ca55db 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -11,3 +11,9 @@ dependencies_ignores = "[\'ZServer\', \'plone.app.event\', \'Products.CMFPlone\',]"\n \n [tox]\n constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\n+\n+[gitignore]\n+extra_lines = """\n+/test_*\n+robot_*\n+"""\ndiff --git a/Makefile b/Makefile\nnew file mode 100644\nindex 00000000..cf20422b\n--- /dev/null\n+++ b/Makefile\n@@ -0,0 +1,123 @@\n+### Defensive settings for make:\n+#     https://tech.davis-hansson.com/p/make/\n+SHELL:=bash\n+.ONESHELL:\n+.SHELLFLAGS:=-xeu -o pipefail -O inherit_errexit -c\n+.SILENT:\n+.DELETE_ON_ERROR:\n+MAKEFLAGS+=--warn-undefined-variables\n+MAKEFLAGS+=--no-builtin-rules\n+\n+# We like colors\n+# From: https://coderwall.com/p/izxssa/colored-makefile-for-golang-projects\n+RED=`tput setaf 1`\n+GREEN=`tput setaf 2`\n+RESET=`tput sgr0`\n+YELLOW=`tput setaf 3`\n+\n+BACKEND_FOLDER=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\n+DOCS_DIR=${BACKEND_FOLDER}/docs\n+\n+# Python checks\n+PYTHON?=python3\n+\n+# installed?\n+ifeq (, $(shell which $(PYTHON) ))\n+  $(error "PYTHON=$(PYTHON) not found in $(PATH)")\n+endif\n+\n+# version ok?\n+PYTHON_VERSION_MIN=3.8\n+PYTHON_VERSION_OK=$(shell $(PYTHON) -c "import sys; print((int(sys.version_info[0]), int(sys.version_info[1])) >= tuple(map(int, \'$(PYTHON_VERSION_MIN)\'.split(\'.\'))))")\n+ifeq ($(PYTHON_VERSION_OK),0)\n+  $(error "Need python $(PYTHON_VERSION) >= $(PYTHON_VERSION_MIN)")\n+endif\n+\n+all: build\n+\n+# Add the following \'help\' target to your Makefile\n+# And add help text after each target name starting with \'\\#\\#\'\n+.PHONY: help\n+help: ## This help message\n+\t@grep -E \'^[a-zA-Z_-]+:.*?## .*$$\' $(MAKEFILE_LIST) | sort | awk \'BEGIN {FS = ":.*?## "}; {printf "\\033[36m%-30s\\033[0m %s\\n", $$1, $$2}\'\n+\n+.PHONY: clean\n+clean: clean-build clean-pyc clean-test clean-venv clean-instance ## remove all build, test, coverage and Python artifacts\n+\n+.PHONY: clean-instance\n+clean-instance: ## remove existing instance\n+\trm -fr instance etc inituser var\n+\n+.PHONY: clean-venv\n+clean-venv: ## remove virtual environment\n+\trm -fr bin include lib lib64 env pyvenv.cfg .tox .pytest_cache constraints-mxdev.txt requirements-mxdev.txt sources/\n+\n+.PHONY: clean-build\n+clean-build: ## remove build artifacts\n+\trm -fr build/\n+\trm -fr dist/\n+\trm -fr .eggs/\n+\trm -fr parts/\n+\trm -fr coverage.xml\n+\tfind . -name \'*.egg-info\' -exec rm -fr {} +\n+\tfind . -name \'*.egg\' -exec rm -rf {} +\n+\n+.PHONY: clean-pyc\n+clean-pyc: ## remove Python file artifacts\n+\tfind . -name \'*.pyc\' -exec rm -f {} +\n+\tfind . -name \'*.pyo\' -exec rm -f {} +\n+\tfind . -name \'*~\' -exec rm -f {} +\n+\tfind . -name \'__pycache__\' -exec rm -fr {} +\n+\n+.PHONY: clean-test\n+clean-test: ## remove test and coverage artifacts\n+\trm -f .coverage\n+\trm -fr htmlcov/\n+\trm -fr test_*\n+\trm -fr robot_*\n+\n+bin/pip bin/tox bin/mxdev:\n+\t@echo "$(GREEN)==> Setup Virtual Env$(RESET)"\n+\t$(PYTHON) -m venv .\n+\tbin/pip install -U "pip" "wheel" "cookiecutter" "mxdev" "tox" "pre-commit"\n+\tbin/pre-commit install\n+\n+.PHONY: config\n+config: bin/pip  ## Create instance configuration\n+\t@echo "$(GREEN)==> Create instance configuration$(RESET)"\n+\tbin/cookiecutter -f --no-input --config-file instance.yaml gh:plone/cookiecutter-zope-instance\n+\n+.PHONY: install-plone-6.0\n+install-plone-6.0: config ## pip install Plone packages\n+\t@echo "$(GREEN)==> Setup Build$(RESET)"\n+\tbin/mxdev -c mx.ini\n+\tbin/pip install -r requirements-mxdev.txt\n+\n+.PHONY: install\n+install: install-plone-6.0 ## Install Plone 6.0\n+\n+.PHONY: start\n+start: ## Start a Plone instance on localhost:8080\n+\tPYTHONWARNINGS=ignore ./bin/runwsgi instance/etc/zope.ini\n+\n+.PHONY: console\n+console: ## Start a console on a Plone instance\n+\tPYTHONWARNINGS=ignore ./bin/zconsole debug instance/etc/zope.conf\n+\n+.PHONY: format\n+format: bin/tox ## Format the codebase according to our standards\n+\t@echo "$(GREEN)==> Format codebase$(RESET)"\n+\tbin/tox -e format\n+\n+.PHONY: lint\n+lint: ## check code style\n+\tbin/tox -e lint\n+\n+# Tests\n+.PHONY: test\n+test: bin/tox ## run tests\n+\tbin/tox -e test\n+\n+.PHONY: test-coverage\n+test-coverage: bin/tox ## run tests with coverage\n+\tbin/tox -e coverage\ndiff --git a/constraints.txt b/constraints.txt\nnew file mode 100644\nindex 00000000..3bb2e326\n--- /dev/null\n+++ b/constraints.txt\n@@ -0,0 +1 @@\n+-c https://dist.plone.org/release/6.0.13/constraints.txt\ndiff --git a/instance.yaml b/instance.yaml\nnew file mode 100644\nindex 00000000..fe9d3149\n--- /dev/null\n+++ b/instance.yaml\n@@ -0,0 +1,7 @@\n+default_context:\n+    initial_user_name: \'admin\'\n+    initial_user_password: \'admin\'\n+\n+    zcml_package_includes: [\'plone.app.contenttypes\']\n+\n+    db_storage: direct\ndiff --git a/mx.ini b/mx.ini\nnew file mode 100644\nindex 00000000..db2906f9\n--- /dev/null\n+++ b/mx.ini\n@@ -0,0 +1,9 @@\n+; This is a mxdev configuration file\n+; it can be used to override versions of packages already defined in the\n+; constraints files and to add new packages from VCS like git.\n+; to learn more about mxdev visit https://pypi.org/project/mxdev/\n+\n+[settings]\n+main-package = -e .[test]\n+version-overrides =\n+    plone.app.contenttypes >= 4.0.1.dev0\ndiff --git a/news/+setup.internal b/news/+setup.internal\nnew file mode 100644\nindex 00000000..3ca94f9d\n--- /dev/null\n+++ b/news/+setup.internal\n@@ -0,0 +1,2 @@\n+Setup local installation\n+[@ericof]\ndiff --git a/requirements.txt b/requirements.txt\nnew file mode 100644\nindex 00000000..da443200\n--- /dev/null\n+++ b/requirements.txt\n@@ -0,0 +1 @@\n+-c constraints.txt\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-26T11:20:07+02:00
Author: Ã‰rico Andrei (ericof) <ericof@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f5409885bb6bfdc3abd3f825770bf4749485805f

Fix MANIFEST.in

Files changed:
M MANIFEST.in

b'diff --git a/MANIFEST.in b/MANIFEST.in\nindex 74225c91..5993732e 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -8,3 +8,9 @@ global-exclude *.pyc\n \n recursive-exclude news *\n exclude news\n+\n+include requirements.txt\n+include constraints.txt\n+include *.yaml\n+include Makefile\n+exclude *-mxdev.txt\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-26T13:11:45+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f70879b7eae560cc9235d029baa33152298f7e27

set install as default command in makefile

Files changed:
M Makefile

b'diff --git a/Makefile b/Makefile\nindex cf20422b..053d9d8b 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -33,7 +33,7 @@ ifeq ($(PYTHON_VERSION_OK),0)\n   $(error "Need python $(PYTHON_VERSION) >= $(PYTHON_VERSION_MIN)")\n endif\n \n-all: build\n+all: install\n \n # Add the following \'help\' target to your Makefile\n # And add help text after each target name starting with \'\\#\\#\'\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-26T13:12:46+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3f215dcda251c6b93623f51189e32aa59d52fcd8

Merge branch 'setup-standalone-installation' into add-image-alt-tag

Files changed:
A Makefile
A constraints.txt
A instance.yaml
A mx.ini
A news/+setup.internal
A requirements.txt
M .gitignore
M .meta.toml
M MANIFEST.in

b'diff --git a/.gitignore b/.gitignore\nindex 486392f6..8d63c885 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -46,6 +46,8 @@ local.cfg\n /venv/\n .installed.txt\n \n+/test_*\n+robot_*\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex 3bf9f054..74ca55db 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -11,3 +11,9 @@ dependencies_ignores = "[\'ZServer\', \'plone.app.event\', \'Products.CMFPlone\',]"\n \n [tox]\n constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\n+\n+[gitignore]\n+extra_lines = """\n+/test_*\n+robot_*\n+"""\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 74225c91..5993732e 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -8,3 +8,9 @@ global-exclude *.pyc\n \n recursive-exclude news *\n exclude news\n+\n+include requirements.txt\n+include constraints.txt\n+include *.yaml\n+include Makefile\n+exclude *-mxdev.txt\ndiff --git a/Makefile b/Makefile\nnew file mode 100644\nindex 00000000..053d9d8b\n--- /dev/null\n+++ b/Makefile\n@@ -0,0 +1,123 @@\n+### Defensive settings for make:\n+#     https://tech.davis-hansson.com/p/make/\n+SHELL:=bash\n+.ONESHELL:\n+.SHELLFLAGS:=-xeu -o pipefail -O inherit_errexit -c\n+.SILENT:\n+.DELETE_ON_ERROR:\n+MAKEFLAGS+=--warn-undefined-variables\n+MAKEFLAGS+=--no-builtin-rules\n+\n+# We like colors\n+# From: https://coderwall.com/p/izxssa/colored-makefile-for-golang-projects\n+RED=`tput setaf 1`\n+GREEN=`tput setaf 2`\n+RESET=`tput sgr0`\n+YELLOW=`tput setaf 3`\n+\n+BACKEND_FOLDER=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\n+DOCS_DIR=${BACKEND_FOLDER}/docs\n+\n+# Python checks\n+PYTHON?=python3\n+\n+# installed?\n+ifeq (, $(shell which $(PYTHON) ))\n+  $(error "PYTHON=$(PYTHON) not found in $(PATH)")\n+endif\n+\n+# version ok?\n+PYTHON_VERSION_MIN=3.8\n+PYTHON_VERSION_OK=$(shell $(PYTHON) -c "import sys; print((int(sys.version_info[0]), int(sys.version_info[1])) >= tuple(map(int, \'$(PYTHON_VERSION_MIN)\'.split(\'.\'))))")\n+ifeq ($(PYTHON_VERSION_OK),0)\n+  $(error "Need python $(PYTHON_VERSION) >= $(PYTHON_VERSION_MIN)")\n+endif\n+\n+all: install\n+\n+# Add the following \'help\' target to your Makefile\n+# And add help text after each target name starting with \'\\#\\#\'\n+.PHONY: help\n+help: ## This help message\n+\t@grep -E \'^[a-zA-Z_-]+:.*?## .*$$\' $(MAKEFILE_LIST) | sort | awk \'BEGIN {FS = ":.*?## "}; {printf "\\033[36m%-30s\\033[0m %s\\n", $$1, $$2}\'\n+\n+.PHONY: clean\n+clean: clean-build clean-pyc clean-test clean-venv clean-instance ## remove all build, test, coverage and Python artifacts\n+\n+.PHONY: clean-instance\n+clean-instance: ## remove existing instance\n+\trm -fr instance etc inituser var\n+\n+.PHONY: clean-venv\n+clean-venv: ## remove virtual environment\n+\trm -fr bin include lib lib64 env pyvenv.cfg .tox .pytest_cache constraints-mxdev.txt requirements-mxdev.txt sources/\n+\n+.PHONY: clean-build\n+clean-build: ## remove build artifacts\n+\trm -fr build/\n+\trm -fr dist/\n+\trm -fr .eggs/\n+\trm -fr parts/\n+\trm -fr coverage.xml\n+\tfind . -name \'*.egg-info\' -exec rm -fr {} +\n+\tfind . -name \'*.egg\' -exec rm -rf {} +\n+\n+.PHONY: clean-pyc\n+clean-pyc: ## remove Python file artifacts\n+\tfind . -name \'*.pyc\' -exec rm -f {} +\n+\tfind . -name \'*.pyo\' -exec rm -f {} +\n+\tfind . -name \'*~\' -exec rm -f {} +\n+\tfind . -name \'__pycache__\' -exec rm -fr {} +\n+\n+.PHONY: clean-test\n+clean-test: ## remove test and coverage artifacts\n+\trm -f .coverage\n+\trm -fr htmlcov/\n+\trm -fr test_*\n+\trm -fr robot_*\n+\n+bin/pip bin/tox bin/mxdev:\n+\t@echo "$(GREEN)==> Setup Virtual Env$(RESET)"\n+\t$(PYTHON) -m venv .\n+\tbin/pip install -U "pip" "wheel" "cookiecutter" "mxdev" "tox" "pre-commit"\n+\tbin/pre-commit install\n+\n+.PHONY: config\n+config: bin/pip  ## Create instance configuration\n+\t@echo "$(GREEN)==> Create instance configuration$(RESET)"\n+\tbin/cookiecutter -f --no-input --config-file instance.yaml gh:plone/cookiecutter-zope-instance\n+\n+.PHONY: install-plone-6.0\n+install-plone-6.0: config ## pip install Plone packages\n+\t@echo "$(GREEN)==> Setup Build$(RESET)"\n+\tbin/mxdev -c mx.ini\n+\tbin/pip install -r requirements-mxdev.txt\n+\n+.PHONY: install\n+install: install-plone-6.0 ## Install Plone 6.0\n+\n+.PHONY: start\n+start: ## Start a Plone instance on localhost:8080\n+\tPYTHONWARNINGS=ignore ./bin/runwsgi instance/etc/zope.ini\n+\n+.PHONY: console\n+console: ## Start a console on a Plone instance\n+\tPYTHONWARNINGS=ignore ./bin/zconsole debug instance/etc/zope.conf\n+\n+.PHONY: format\n+format: bin/tox ## Format the codebase according to our standards\n+\t@echo "$(GREEN)==> Format codebase$(RESET)"\n+\tbin/tox -e format\n+\n+.PHONY: lint\n+lint: ## check code style\n+\tbin/tox -e lint\n+\n+# Tests\n+.PHONY: test\n+test: bin/tox ## run tests\n+\tbin/tox -e test\n+\n+.PHONY: test-coverage\n+test-coverage: bin/tox ## run tests with coverage\n+\tbin/tox -e coverage\ndiff --git a/constraints.txt b/constraints.txt\nnew file mode 100644\nindex 00000000..3bb2e326\n--- /dev/null\n+++ b/constraints.txt\n@@ -0,0 +1 @@\n+-c https://dist.plone.org/release/6.0.13/constraints.txt\ndiff --git a/instance.yaml b/instance.yaml\nnew file mode 100644\nindex 00000000..fe9d3149\n--- /dev/null\n+++ b/instance.yaml\n@@ -0,0 +1,7 @@\n+default_context:\n+    initial_user_name: \'admin\'\n+    initial_user_password: \'admin\'\n+\n+    zcml_package_includes: [\'plone.app.contenttypes\']\n+\n+    db_storage: direct\ndiff --git a/mx.ini b/mx.ini\nnew file mode 100644\nindex 00000000..db2906f9\n--- /dev/null\n+++ b/mx.ini\n@@ -0,0 +1,9 @@\n+; This is a mxdev configuration file\n+; it can be used to override versions of packages already defined in the\n+; constraints files and to add new packages from VCS like git.\n+; to learn more about mxdev visit https://pypi.org/project/mxdev/\n+\n+[settings]\n+main-package = -e .[test]\n+version-overrides =\n+    plone.app.contenttypes >= 4.0.1.dev0\ndiff --git a/news/+setup.internal b/news/+setup.internal\nnew file mode 100644\nindex 00000000..3ca94f9d\n--- /dev/null\n+++ b/news/+setup.internal\n@@ -0,0 +1,2 @@\n+Setup local installation\n+[@ericof]\ndiff --git a/requirements.txt b/requirements.txt\nnew file mode 100644\nindex 00000000..da443200\n--- /dev/null\n+++ b/requirements.txt\n@@ -0,0 +1 @@\n+-c constraints.txt\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-27T13:35:28+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c95678e5eaf57ff5f02c07eed0400647acc4ee93

formatting

Files changed:
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/schema/image.xml
M plone/app/contenttypes/tests/test_image.py

b'diff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex 2f75f1f3..5c0592ff 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -86,7 +86,9 @@\n           >Download</a>\n           <a class="btn btn-primary fullscreen"\n              href="${context/@@plone_context_state/object_url}/image_view_fullscreen"\n-          ><span i18n:translate="label_click_to_view_full_image">View full-size image</span></a>\n+          >\n+            <span i18n:translate="label_click_to_view_full_image">View full-size image</span>\n+          </a>\n         </section>\n \n \ndiff --git a/plone/app/contenttypes/schema/image.xml b/plone/app/contenttypes/schema/image.xml\nindex 2719b8e4..3fa3eea8 100644\n--- a/plone/app/contenttypes/schema/image.xml\n+++ b/plone/app/contenttypes/schema/image.xml\n@@ -20,7 +20,8 @@\n       <title i18n:translate="">Description</title>\n     </field>\n     <field name="alt_text"\n-           type="zope.schema.TextLine">\n+           type="zope.schema.TextLine"\n+    >\n       <description i18n:translate="label_alt_text_help">\n         Briefly describe the meaning of the image for people using assistive technology like screen readers.\n         This will be used when the image is viewed by itself or in automated contexts like listings.\n@@ -41,4 +42,3 @@\n     </field>\n   </schema>\n </model>\n-\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex e187bc94..bd3aadba 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -73,12 +73,12 @@ def setUp(self):\n         image.description = "This is my image."\n         image.image = dummy_image()\n \n-        self.portal.invokeFactory(\'Image\', \'image-with-alt\')\n-        image_alt = self.portal[\'image-with-alt\']\n-        image_alt.title = \'My Image 2\'\n-        image_alt.description = \'This is my second image.\'\n-        image_alt.alt_text = \'An alt text\'\n-        image.image = dummy_image()\n+        self.portal.invokeFactory("Image", "image-with-alt")\n+        image_alt = self.portal["image-with-alt"]\n+        image_alt.title = "My Image 2"\n+        image_alt.description = "This is my second image."\n+        image_alt.alt_text = "An alt text"\n+        image_alt.image = dummy_image()\n \n         self.image = image\n         self.image_alt = image_alt\n@@ -95,28 +95,27 @@ def test_image_view(self):\n         self.assertTrue("This is my image." in view())\n \n     def test_image_view_alt(self):\n-        view = self.image_alt.restrictedTraverse(\'@@view\')\n-\n+        view = self.image_alt.restrictedTraverse("@@view")\n         self.assertTrue(view())\n         self.assertEqual(view.request.response.status, 200)\n-        self.assertTrue(\'My Image 2\' in view())\n-        self.assertTrue(\'This is my second image.\' in view())\n-        self.assertTrue(\'An alt text\' in view())\n+        self.assertTrue("My Image 2" in view())\n+        self.assertTrue("This is my second image." in view())\n+        self.assertTrue("An alt text" in view())\n \n     def test_image_alt_in_listing_view(self):\n-        self.image_alt.image = dummy_image(u\'image.svg\')\n-        view = self.portal.restrictedTraverse(\'@@listing_view\')\n-        self.assertTrue(\'An alt text\' in view())\n+        self.image_alt.image = dummy_image("image.svg")\n+        view = self.portal.restrictedTraverse("@@listing_view")\n+        self.assertTrue("An alt text" in view())\n \n     def test_image_alt_in_summary_view(self):\n-        self.image_alt.image = dummy_image(u\'image.svg\')\n-        view = self.portal.restrictedTraverse(\'@@summary_view\')\n-        self.assertTrue(\'An alt text\' in view())\n+        self.image_alt.image = dummy_image("image.svg")\n+        view = self.portal.restrictedTraverse("@@summary_view")\n+        self.assertTrue("An alt text" in view())\n \n     def test_image_alt_in_album_view(self):\n-        self.image_alt.image = dummy_image(u\'image.svg\')\n-        view = self.portal.restrictedTraverse(\'@@album_view\')\n-        self.assertTrue(\'An alt text\' in view())\n+        self.image_alt.image = dummy_image("image.svg")\n+        view = self.portal.restrictedTraverse("@@album_view")\n+        self.assertTrue("An alt text" in view())\n \n     # XXX: Not working. See ImageFunctionalTest test_image_view_fullscreen\n     # Problem seems to be that the image is not properly uploaded.\n@@ -139,11 +138,11 @@ def test_svg_image(self):\n         )\n \n     def test_svg_image_alt(self):\n-        self.image_alt.image = dummy_image(u\'image.svg\')\n-        scale = self.image_alt.restrictedTraverse(\'@@images\')\n+        self.image_alt.image = dummy_image("image.svg")\n+        scale = self.image_alt.restrictedTraverse("@@images")\n         self.assertRegex(\n-            scale.scale(\'image\', scale=\'large\').tag(),\n-            r\'<img src="http://nohost/plone/image-with-alt/@@images/[a-z0-9--]*.svg" alt="An alt text" height="768" width="768" />\'  # noqa: E501\n+            scale.scale("image", scale="large").tag(),\n+            r\'<img src="http://nohost/plone/image-with-alt/@@images/[a-z0-9--]*.svg" alt="An alt text" height="768" width="768" />\',  # noqa: E501\n         )\n \n \n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-27T16:43:45+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6ffeaff3602e9e022c365df910e155849e514578

fix test for alt text in image templates

Files changed:
M plone/app/contenttypes/tests/test_image.py

b'diff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex bd3aadba..cd6cd905 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -95,7 +95,7 @@ def test_image_view(self):\n         self.assertTrue("This is my image." in view())\n \n     def test_image_view_alt(self):\n-        view = self.image_alt.restrictedTraverse("@@view")\n+        view = self.image_alt.restrictedTraverse("@@image_view")\n         self.assertTrue(view())\n         self.assertEqual(view.request.response.status, 200)\n         self.assertTrue("My Image 2" in view())\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-09-27T16:44:15+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/cb58563350c687088e88c0c1a493c9ec9a79bcbd

Merge branch 'add-image-alt-tag' of github.com:plone/plone.app.contenttypes into add-image-alt-tag

Files changed:
M plone/app/contenttypes/schema/image.xml

b'diff --git a/plone/app/contenttypes/schema/image.xml b/plone/app/contenttypes/schema/image.xml\nindex 3fa3eea8..86627cb7 100644\n--- a/plone/app/contenttypes/schema/image.xml\n+++ b/plone/app/contenttypes/schema/image.xml\n@@ -28,7 +28,7 @@\n         Do not duplicate the Title or Description fields, since those might also be read by screen readers.\n         Alt text should describe what a sighted user sees when looking at the image.\n         This might include text the image contains, or even a description of an abstract pattern.\n-        In case your description already sufficiently describes your image leave this field blank.\n+        In case your description already sufficiently describes your image, leave this field blank.\n       </description>\n       <required>False</required>\n       <title i18n:translate="label_alt_text">Alt Text</title>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-01T12:54:18+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0a3fb93e414e0bfb754e0bf03c64c9e979d64ace

include alt_tag in listing templates as well

Files changed:
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt

b'diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt\nindex 9ad3df22..276a7db2 100644\n--- a/plone/app/contenttypes/browser/templates/listing.pt\n+++ b/plone/app/contenttypes/browser/templates/listing.pt\n@@ -66,6 +66,7 @@\n                                item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n                                item_is_event python:view.is_event(obj);\n                                item_has_image python:item.getIcon;\n+                               item_alt_text python:item.alt_text;\n                                item_type_class python:(\'contenttype-\' + view.normalizeString(item_type)) if showicons else \'\';\n                              ">\n                     <metal:block define-slot="entry">\n@@ -161,7 +162,7 @@\n                           <a tal:attributes="\n                                href python:item_link;\n                              ">\n-                            <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_list, css_class=img_class, loading=\'lazy\')" />\n+                            <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_list, css_class=img_class, loading=\'lazy\', alt=item_alt_text)" />\n                           </a>\n                         </div>\n                       </article>\ndiff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt\nindex 70561c0e..3c21532b 100644\n--- a/plone/app/contenttypes/browser/templates/listing_album.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_album.pt\n@@ -48,7 +48,7 @@\n                   <div class="card-image d-flex justify-content-center align-items-center"\n                        style="height: 14rem;"\n                        tal:define="\n-                         scale python:image_scale.tag(image, \'image\', scale=\'mini\', loading=\'lazy\');\n+                         scale python:image_scale.tag(image, \'image\', scale=\'mini\', loading=\'lazy\', alt=image.alt_text);\n                        "\n                        tal:condition="scale"\n                   >\n@@ -79,7 +79,7 @@\n                   <div class="card-image d-flex justify-content-center align-items-center"\n                        style="height: 14rem;"\n                        tal:define="\n-                         scale python:image_scale.tag(album, \'image\', scale=\'mini\', loading=\'lazy\') if getattr(album, \'image\', None) else None;\n+                         scale python:image_scale.tag(album, \'image\', scale=\'mini\', loading=\'lazy\', alt=image.alt_text) if getattr(album, \'image\', None) else None;\n                        "\n                        tal:condition="scale"\n                   >\ndiff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt\nindex fec35e61..58ade3ba 100644\n--- a/plone/app/contenttypes/browser/templates/listing_summary.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt\n@@ -72,7 +72,7 @@\n                     <a tal:attributes="\n                          href item_link;\n                        ">\n-                      <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'image-responsive thumb-\' + thumb_scale_summary, loading=\'lazy\')" />\n+                      <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'image-responsive thumb-\' + thumb_scale_summary, loading=\'lazy\', alt=item.alt_text)" />\n                     </a>\n                   </div>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex 29b8cdc3..feb34be1 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -138,7 +138,7 @@\n \n                           <td>\n                             <a tal:condition="python:item_has_image and thumb_scale_table">\n-                              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class, loading=\'lazy\')"\n+                              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class, loading=\'lazy\', alt=item.alt_text)"\n                                    tal:attributes="\n                                      href python: item_link;\n                                    "\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-01T12:55:32+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6a4cce5160190b08a7bfa91e0a4924f3937116fc

remove test for svg image alt

Files changed:
M plone/app/contenttypes/tests/test_image.py

b'diff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex cd6cd905..27f6d786 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -137,14 +137,6 @@ def test_svg_image(self):\n             r\'<img src="http://nohost/plone/image/@@images/[a-z0-9\\-]*.svg" alt="My Image" title="My Image" height="[a-z0-9\\-]*" width="[a-z0-9\\-]*" />\',  # noqa: E501\n         )\n \n-    def test_svg_image_alt(self):\n-        self.image_alt.image = dummy_image("image.svg")\n-        scale = self.image_alt.restrictedTraverse("@@images")\n-        self.assertRegex(\n-            scale.scale("image", scale="large").tag(),\n-            r\'<img src="http://nohost/plone/image-with-alt/@@images/[a-z0-9--]*.svg" alt="An alt text" height="768" width="768" />\',  # noqa: E501\n-        )\n-\n \n class ImageFunctionalTest(unittest.TestCase):\n     layer = PLONE_APP_CONTENTTYPES_FUNCTIONAL_TESTING\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-01T16:41:03+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/9a8e282db915e5a5b15530f4c8abc8b4b83c8ee5

add alt_text indexer

Files changed:
M plone/app/contenttypes/indexers.py
M plone/app/contenttypes/indexers.zcml

b'diff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py\nindex 973dfe83..2517b616 100644\n--- a/plone/app/contenttypes/indexers.py\n+++ b/plone/app/contenttypes/indexers.py\n@@ -190,3 +190,8 @@ def getIcon(obj):\n     if obj.aq_base.image:\n         return True\n     return False\n+\n+\n+@indexer(IDexterityContent)\n+def getAltTag(obj):\n+    return obj.alt_text\ndiff --git a/plone/app/contenttypes/indexers.zcml b/plone/app/contenttypes/indexers.zcml\nindex 52b15f0c..6c79c341 100644\n--- a/plone/app/contenttypes/indexers.zcml\n+++ b/plone/app/contenttypes/indexers.zcml\n@@ -50,5 +50,9 @@\n       factory=".indexers.mime_type"\n       name="mime_type"\n       />\n+  <adapter\n+      factory=".indexers.getAltTag"\n+      name="alt_text"\n+      />\n \n </configure>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-01T17:25:41+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/f0b02e2a21ec2c2921c353309f4b372bed74cc29

add upgrade_step for alt_field

Files changed:
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/profiles/default/types.xml
M plone/app/contenttypes/upgrades.zcml

b'diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml\nindex b3d89363..680e2b76 100644\n--- a/plone/app/contenttypes/profiles/default/metadata.xml\n+++ b/plone/app/contenttypes/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>3000</version>\n+  <version>3001</version>\n   <dependencies>\n     <dependency>profile-plone.app.dexterity:default</dependency>\n     <dependency>profile-plone.app.querystring:default</dependency>\ndiff --git a/plone/app/contenttypes/profiles/default/types.xml b/plone/app/contenttypes/profiles/default/types.xml\nindex 5499ce02..6cd90d8e 100644\n--- a/plone/app/contenttypes/profiles/default/types.xml\n+++ b/plone/app/contenttypes/profiles/default/types.xml\n@@ -67,5 +67,4 @@\n   <object meta_type="Dexterity FTI"\n           name="Event"\n   />\n-\n </object>\ndiff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml\nindex 9ecfe4be..919e8b09 100644\n--- a/plone/app/contenttypes/upgrades.zcml\n+++ b/plone/app/contenttypes/upgrades.zcml\n@@ -12,4 +12,12 @@\n       handler=".upgrades.update_type_icons"\n       />\n \n+  <genericsetup:upgradeDepends\n+      title="Add alt_text field"\n+      profile="plone.app.contenttypes:default"\n+      source="3001"\n+      destination="3001"\n+      import_steps="typeinfo"\n+      />\n+\n </configure>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-02T11:09:58+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/3ae8f7462cb775b85d4c8605cb95bd1b2eb6e25a

Revert "add upgrade_step for alt_field"

This reverts commit f0b02e2a21ec2c2921c353309f4b372bed74cc29.

Files changed:
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/profiles/default/types.xml
M plone/app/contenttypes/upgrades.zcml

b'diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml\nindex 680e2b76..b3d89363 100644\n--- a/plone/app/contenttypes/profiles/default/metadata.xml\n+++ b/plone/app/contenttypes/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>3001</version>\n+  <version>3000</version>\n   <dependencies>\n     <dependency>profile-plone.app.dexterity:default</dependency>\n     <dependency>profile-plone.app.querystring:default</dependency>\ndiff --git a/plone/app/contenttypes/profiles/default/types.xml b/plone/app/contenttypes/profiles/default/types.xml\nindex 6cd90d8e..5499ce02 100644\n--- a/plone/app/contenttypes/profiles/default/types.xml\n+++ b/plone/app/contenttypes/profiles/default/types.xml\n@@ -67,4 +67,5 @@\n   <object meta_type="Dexterity FTI"\n           name="Event"\n   />\n+\n </object>\ndiff --git a/plone/app/contenttypes/upgrades.zcml b/plone/app/contenttypes/upgrades.zcml\nindex 919e8b09..9ecfe4be 100644\n--- a/plone/app/contenttypes/upgrades.zcml\n+++ b/plone/app/contenttypes/upgrades.zcml\n@@ -12,12 +12,4 @@\n       handler=".upgrades.update_type_icons"\n       />\n \n-  <genericsetup:upgradeDepends\n-      title="Add alt_text field"\n-      profile="plone.app.contenttypes:default"\n-      source="3001"\n-      destination="3001"\n-      import_steps="typeinfo"\n-      />\n-\n </configure>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-02T11:41:31+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/55faeecc58b410f2979ecc605be03bed2fa94c60

onyl try to retrieve alt_text in listing template if applicable

Files changed:
M plone/app/contenttypes/browser/templates/listing.pt

b'diff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt\nindex 276a7db2..5be2631e 100644\n--- a/plone/app/contenttypes/browser/templates/listing.pt\n+++ b/plone/app/contenttypes/browser/templates/listing.pt\n@@ -66,7 +66,7 @@\n                                item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n                                item_is_event python:view.is_event(obj);\n                                item_has_image python:item.getIcon;\n-                               item_alt_text python:item.alt_text;\n+                               item_alt_text python:getattr(item, \'alt_text\', \'\') if item_has_image else \'\';\n                                item_type_class python:(\'contenttype-\' + view.normalizeString(item_type)) if showicons else \'\';\n                              ">\n                     <metal:block define-slot="entry">\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-02T15:23:36+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1fe65fc82a33b6820a46ac82615dc7373c5f74a9

fix for crash on album view

Files changed:
M plone/app/contenttypes/browser/templates/listing_album.pt

b'diff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt\nindex 3c21532b..d3f5f3b3 100644\n--- a/plone/app/contenttypes/browser/templates/listing_album.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_album.pt\n@@ -48,7 +48,9 @@\n                   <div class="card-image d-flex justify-content-center align-items-center"\n                        style="height: 14rem;"\n                        tal:define="\n-                         scale python:image_scale.tag(image, \'image\', scale=\'mini\', loading=\'lazy\', alt=image.alt_text);\n+                         item_has_image python:image.getIcon;\n+                         item_alt_text python:getattr(image, \'alt_text\', \'\') if item_has_image else \'\';\n+                         scale python:image_scale.tag(image, \'image\', scale=\'mini\', loading=\'lazy\', alt=item_alt_text);\n                        "\n                        tal:condition="scale"\n                   >\n@@ -79,7 +81,9 @@\n                   <div class="card-image d-flex justify-content-center align-items-center"\n                        style="height: 14rem;"\n                        tal:define="\n-                         scale python:image_scale.tag(album, \'image\', scale=\'mini\', loading=\'lazy\', alt=image.alt_text) if getattr(album, \'image\', None) else None;\n+                         item_has_image python:album.getIcon;\n+                         item_alt_text python:getattr(album, \'alt_text\', \'\') if item_has_image else \'\';\n+                         scale python:image_scale.tag(album, \'image\', scale=\'mini\', loading=\'lazy\', alt=item_alt_text) if getattr(album, \'image\', None) else None;\n                        "\n                        tal:condition="scale"\n                   >\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-02T16:32:43+02:00
Author: jackahl (jackahl) <kahl@kitconcept.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d4c998dd5f15c71d4e4748ac9e3df7486a5494db

prevent potential errors on tabular and summary views due to alt images

Files changed:
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt

b'diff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt\nindex 58ade3ba..91f60dc4 100644\n--- a/plone/app/contenttypes/browser/templates/listing_summary.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt\n@@ -34,6 +34,8 @@\n                          tal:attributes="\n                            href item_link;\n                            title item_type;\n+                           item_has_image python:item.getIcon;\n+                           item_alt_text python:getattr(item, \'alt_text\', \'\') if item_has_image else \'\';\n                          "\n                       >\n               Item Title\n@@ -72,7 +74,7 @@\n                     <a tal:attributes="\n                          href item_link;\n                        ">\n-                      <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'image-responsive thumb-\' + thumb_scale_summary, loading=\'lazy\', alt=item.alt_text)" />\n+                      <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'image-responsive thumb-\' + thumb_scale_summary, loading=\'lazy\', alt=item_alt_text)" />\n                     </a>\n                   </div>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex feb34be1..56205c2a 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -79,6 +79,7 @@\n                                    item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n                                    item_creator python:item.Creator();\n                                    item_has_image python:item.getIcon;\n+                                   item_alt_text python:getattr(item, \'alt_text\', \'\') if item_has_image else \'\';\n                                    item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n                                    item_mime_type python:item.mime_type;\n                                    item_mime_type_icon python: \'mimetype-\' + item_mime_type;\n@@ -138,7 +139,7 @@\n \n                           <td>\n                             <a tal:condition="python:item_has_image and thumb_scale_table">\n-                              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class, loading=\'lazy\', alt=item.alt_text)"\n+                              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class, loading=\'lazy\', alt=item_alt_text)"\n                                    tal:attributes="\n                                      href python: item_link;\n                                    "\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-09T14:56:14+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/1cae6fe2ccb25fe4abfd7656b328f6efc16dc974

Merge branch 'master' into add-image-alt-tag

Files changed:
M .pre-commit-config.yaml

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 14603265..f70417dc 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -16,7 +16,7 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 24.8.0\n+    rev: 24.10.0\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-21T11:56:30+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/c6594ecc72a9d9b96dfe3f397bc3f67d4455b6bf

Merge branch 'master' into add-image-alt-tag

Files changed:
A news/698.tests
A plone/app/contenttypes/tests/robot/keywords.robot
M plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot
M plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot
M plone/app/contenttypes/tests/robot/test_folderlisting.robot
D plone/app/contenttypes/tests/robot/keywords.txt

b'diff --git a/news/698.tests b/news/698.tests\nnew file mode 100644\nindex 00000000..f4e29c7b\n--- /dev/null\n+++ b/news/698.tests\n@@ -0,0 +1 @@\n+port robot tests [1letter]\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/keywords.txt b/plone/app/contenttypes/tests/robot/keywords.robot\nsimilarity index 55%\nrename from plone/app/contenttypes/tests/robot/keywords.txt\nrename to plone/app/contenttypes/tests/robot/keywords.robot\nindex 2f204e59..db9d3726 100644\n--- a/plone/app/contenttypes/tests/robot/keywords.txt\n+++ b/plone/app/contenttypes/tests/robot/keywords.robot\n@@ -34,11 +34,10 @@ a event\n a file\n   [Arguments]  ${title}\n   Go to  ${PLONE_URL}/++add++File\n-  Wait until page contains  Add File\n-  Input text  name=form.widgets.title  ${title}\n+  Fill text  name=form.widgets.title  ${title}\n   Choose File  name=form.widgets.file  ${PATH_TO_TEST_FILES}/file.pdf\n-  Wait For Then Click Element  css=#form-buttons-save\n-  Wait until page contains  Item created\n+  Click  css=#form-buttons-save\n+  Get text  body  contains  Item created\n \n a folder\n   [Arguments]  ${title}\n@@ -48,11 +47,10 @@ a folder\n a image\n   [Arguments]  ${title}\n   Go to  ${PLONE_URL}/++add++Image\n-  Wait until page contains  Add Image\n-  Input text  name=form.widgets.title  ${title}\n+  Fill text  name=form.widgets.title  ${title}\n   Choose File  name=form.widgets.image  ${PATH_TO_TEST_FILES}/image.png\n-  Wait For Then Click Element  css=#form-buttons-save\n-  Wait until page contains  Item created  error=Image could not be created.\n+  Click  css=#form-buttons-save\n+  Get text  body  contains  Item created\n \n a link\n   [Arguments]  ${title}\n@@ -63,10 +61,9 @@ a link\n a news item\n   [Arguments]  ${title}\n   Go to  ${PLONE_URL}/++add++News Item\n-  Wait until page contains  Add News Item\n-  Input text  name=form.widgets.IDublinCore.title  ${title}\n-  Wait For Then Click Element  css=#form-buttons-save\n-  Wait until page contains  Item created\n+  Fill text  css=[name="form.widgets.IDublinCore.title"]  ${title}\n+  Click  css=#form-buttons-save\n+  Get text  body  contains  Item created\n \n \n # ----------------------------------------------------------------------------\n@@ -75,17 +72,15 @@ a news item\n \n the content area should contain\n   [Arguments]  ${text}\n-  Element Should Contain  id=content  ${text}\n+  Get text  id=content  contains  ${text}\n \n the content area should not contain\n   [Arguments]  ${text}\n-  Element Should Not Contain  id=content  ${text}\n+  Get Text  id=content  !=  ${text}\n \n the collection should contain\n   [Arguments]  ${title}\n-  Wait until page contains element  xpath=//*[@id=\'content-core\']\n-  Page should contain element  //*[@id=\'content-core\']//article//a[contains(text(), \'${title}\')]  limit=1\n-\n+  Get Element  //*[@id=\'content-core\']//article//a[contains(text(), \'${title}\')]\n \n the collection should not contain\n   [Arguments]  ${title}\n@@ -101,34 +96,22 @@ fill date field\n   Click Element  xpath=//div[@data-fieldname="${fieldid}"]//div[contains(@class, \'picker__day\')][contains(text(), "${day}")]\n \n I set the criteria ${type} in row ${number} to the option \'${label}\'\n-  [Documentation]  A couple of times we shift the focus so the input sticks, and wait a bit,\n-  ...              to make the test more stable.\n   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n-  Wait until page contains element  css=${criteria_row} .querystring-criteria-${type} .select2-choice\n-  Click Element  css=${criteria_row} .querystring-criteria-${type} .select2-choice\n-  Sleep  1.5\n-  Set Focus To Element  css=body\n-  Wait until element is visible  css=#select2-drop input\n-  Input Text  css=#select2-drop input  ${label}\n-  Sleep  1.5\n-  Set Focus To Element  css=body\n-  Wait until element is visible  css=#select2-drop .select2-match\n-  Click Element  css=#select2-drop .select2-match\n-  Sleep  1.5\n-  Set Focus To Element  css=body\n+  Click  css=${criteria_row} .querystring-criteria-${type} .select2-choice\n+  Fill Text  css=#select2-drop input  ${label}\n+  Click  xpath=//*[@id="select2-drop"]//*[@class="select2-match"]\n \n I set the criteria ${type} in row ${number} to the options \'${label}\'\n-  ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n-  Wait until page contains element  css=${criteria_row} .querystring-criteria-${type} .select2-choices\n-  Click Element  css=${criteria_row} .querystring-criteria-${type} .select2-choices\n-  Wait until page contains element  css=.select2-input.select2-focused\n-  Input text  css=.select2-input.select2-focused  ${label}\\n\n-# Click Element  xpath=//div[@class=\'select2-result-label\']/descendant-or-self::*[contains(text(), \'${label}\')]\n+    ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(1)\n+    Click  css=${criteria_row} .querystring-criteria-value .select2-choices\n+    Fill text  css=.select2-input.select2-focused  ${label}\\n\n+    Click  css=.select2-highlighted\n+    Get text  css=${criteria_row} .select2-search-choice  contains  ${label}\n+    [Documentation]  Chrome needs some more time\n+    Sleep  .1s\n \n I set the criteria ${type} in row ${number} to the text \'${label}\'\n   ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(${number})\n-  Input text  css=${criteria_row} .querystring-criteria-value input  ${label}\\t\n-  [Documentation]  Shift the focus so the input sticks, and wait a bit\n-  Sleep  1.5\n-  Set Focus To Element  css=.querystring-sortreverse\n-  Sleep  1.5\n+  Fill text  css=${criteria_row} .querystring-criteria-value input  ${label}\n+  Click  css=.autotoc-level-1.active\n+  Sleep  1s\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\nindex b957e869..4b6863ea 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\n@@ -1,27 +1,15 @@\n-# ============================================================================\n-# Tests for the Collection Creator Criterion\n-# ============================================================================\n-#\n-# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING\n-#\n-# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_creator_criterion.robot\n-#\n-# ============================================================================\n-\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-Resource  keywords.txt\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/browser.robot\n+Resource  plone/app/robotframework/user.robot\n+Resource  keywords.robot\n \n Library  Remote  ${PLONE_URL}/RobotRemote\n \n Test Setup  Run Keywords  Plone test setup\n Test Teardown  Run keywords  Plone test teardown\n \n-\n-*** Test cases ***************************************************************\n+*** Test cases ***\n \n Scenario: Test Creator Criterions\n     Given a site owner document  Site Owner Document\n@@ -33,7 +21,7 @@ Scenario: Test Creator Criterions\n       And the collection should contain  Site Owner Document\n \n \n-*** Keywords *****************************************************************\n+*** Keywords ***\n \n a site owner document\n     [Arguments]  ${title}\n@@ -49,11 +37,10 @@ a test user document\n \n I set the collection\'s creator criterion to the current logged in user\n     Go to  ${PLONE_URL}/my-collection/edit\n-    Wait until page contains  Edit Collection\n+    Get Text  body  contains  Edit Collection\n \n     I set the criteria index in row 1 to the option \'Creator\'\n     I set the criteria operator in row 1 to the option \'Current\'\n \n-    Sleep  1\n-    Click Button  Save\n-    Wait until page contains  Changes saved\n+    Click  "Save"\n+    Get Text  body  contains  Changes saved\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\nindex eb2dc752..c98cdb16 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n@@ -1,19 +1,7 @@\n-# ============================================================================\n-# Tests for the Collection Location Criterion\n-# ============================================================================\n-#\n-# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING\n-#\n-# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_location_criterion.robot\n-#\n-# ============================================================================\n-\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-Resource  keywords.txt\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/browser.robot\n+Resource  keywords.robot\n \n Variables  variables.py\n \n@@ -21,11 +9,9 @@ Test Setup  Run Keywords  Plone test setup\n Test Teardown  Run keywords  Plone test teardown\n \n \n-*** Test cases ***************************************************************\n+*** Test cases ***\n \n Scenario: Test Relative Location Criterion\n-    [Documentation]  This sometimes fails with:\n-    ...              Element locator \'css=#select2-drop input\' did not match any elements after 30 seconds\n     Given I am logged in as site owner\n       And a document   Document outside Folder\n       And a folder \'my-folder\' with a document \'Document within Folder\'\n@@ -36,9 +22,6 @@ Scenario: Test Relative Location Criterion\n \n \n Scenario: Test Absolute Location Criterion\n-    [Documentation]  This sometimes fails with:\n-    ...              Element locator \'css=#select2-drop input\' did not match any elements after 30 seconds\n-    ...              Or with: Element \'id=content\' should not contain text \'Document outside Folder\' but it did.\n     Given I am logged in as site owner\n       And a document   Document outside Folder\n       And a folder \'my-folder\' with a document \'Document within Folder\'\n@@ -52,14 +35,14 @@ Scenario: Test Absolute Location Criterion\n \n a folder \'${folder-id}\' with a document \'${document-title}\'\n     Go to  ${PLONE_URL}/++add++Folder\n-    Wait until page contains element  name=form.widgets.IDublinCore.title\n-    Input text  name=form.widgets.IDublinCore.title  ${folder-id}\n-    Click Button  Save\n+    # Wait until page contains element  name=form.widgets.IDublinCore.title\n+    Fill text  xpath=//*[@name="form.widgets.IDublinCore.title"]  ${folder-id}\n+    Click  "Save"\n     Go to  ${PLONE_URL}/${folder-id}/++add++Document\n-    Wait until page contains element  name=form.widgets.IDublinCore.title\n-    Input text  name=form.widgets.IDublinCore.title  ${document-title}\n-    Click Button  Save\n-    Wait until page contains  Item created\n+    # Wait until page contains element  name=form.widgets.IDublinCore.title\n+    Fill text  xpath=//*[@name="form.widgets.IDublinCore.title"]  ${document-title}\n+    Click  "Save"\n+    # Wait until page contains  Item created\n \n I set the collection\'s location criterion to Advanced Mode\n     I set the criteria operator in row 1 to the option \'Advanced Mode\'\n@@ -67,7 +50,7 @@ I set the collection\'s location criterion to Advanced Mode\n I set the collection\'s relative location criterion to\n     [Arguments]  ${criterion}\n     Go to  ${PLONE_URL}/my-collection/edit\n-    Wait until page contains  Edit Collection\n+    # Wait until page contains  Edit Collection\n \n     I set the criteria index in row 1 to the option \'Location\'\n \n@@ -76,13 +59,13 @@ I set the collection\'s relative location criterion to\n     I set the criteria operator in row 1 to the option \'Relative path\'\n     I set the criteria value in row 1 to the text \'${criterion}\'\n \n-    Click Button  Save\n-    Wait until page contains  Changes saved\n+    Click  "Save"\n+    # Wait until page contains  Changes saved\n \n I set the collection\'s absolute location criterion to\n     [Arguments]  ${criterion}\n     Go to  ${PLONE_URL}/my-collection/edit\n-    Wait until page contains  Edit Collection\n+    # Wait until page contains  Edit Collection\n \n     I set the criteria index in row 1 to the option \'Location\'\n \n@@ -91,5 +74,5 @@ I set the collection\'s absolute location criterion to\n     I set the criteria operator in row 1 to the option \'Absolute path\'\n     I set the criteria value in row 1 to the text \'${criterion}\'\n \n-    Click Button  Save\n-    Wait until page contains  Changes saved\n+    Click  "Save"\n+    # Wait until page contains  Changes saved\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\nindex 719d7f97..52735972 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\n@@ -1,25 +1,15 @@\n-# ============================================================================\n-# Tests for the Collection Type Criterion\n-# ============================================================================\n-#\n-# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING\n-#\n-# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_review_state_criterion.robot\n-#\n-# ============================================================================\n-\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-Resource  keywords.txt\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/browser.robot\n+Resource  keywords.robot\n+\n+Variables  variables.py\n \n Test Setup  Run Keywords  Plone test setup\n Test Teardown  Run keywords  Plone test teardown\n \n \n-*** Test cases ***************************************************************\n+*** Test cases ***\n \n Scenario: Test Review state Criterion\n     Given I am logged in as site owner\n@@ -31,7 +21,7 @@ Scenario: Test Review state Criterion\n       And the collection should not contain  Published Document\n \n \n-*** Keywords *****************************************************************\n+*** Keywords ***\n \n a published document\n     [Arguments]  ${title}\n@@ -45,12 +35,9 @@ a private document\n I set the collection\'s review state criterion to\n     [Arguments]  ${criterion}\n     Go to  ${PLONE_URL}/my-collection/edit\n-    Wait until page contains  Edit Collection\n \n     I set the criteria index in row 1 to the option \'Review state\'\n     I set the criteria operator in row 1 to the option \'Any\'\n     I set the criteria value in row 1 to the options \'${criterion}\'\n \n-    Sleep  1\n-    Click Button  Save\n-    Wait until page contains  Changes saved\n+    Click  "Save"\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\nindex cf09f277..f9bc1c88 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n@@ -1,25 +1,15 @@\n-# ============================================================================\n-# Tests for the Collection Short Name Criterion\n-# ============================================================================\n-#\n-# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING\n-#\n-# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_short_name_criterion.robot\n-#\n-# ============================================================================\n-\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-Resource  keywords.txt\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/browser.robot\n+Resource  keywords.robot\n+\n+Variables  variables.py\n \n Test Setup  Run Keywords  Plone test setup\n Test Teardown  Run keywords  Plone test teardown\n \n \n-*** Test cases ***************************************************************\n+*** Test cases ***\n \n Test Short name (id) Criterion\n     Given I am logged in as site owner\n@@ -31,17 +21,24 @@ Test Short name (id) Criterion\n       And the collection should not contain  Second Document\n \n \n-*** Keywords *****************************************************************\n+*** Keywords ***\n \n I set the collection short name (id) criterion to\n     [Arguments]  ${criterion}\n     Go to  ${PLONE_URL}/my-collection/edit\n-    Wait until page contains  Edit Collection\n \n     I set the criteria index in row 1 to the option \'Short name\'\n-    I set the criteria operator in row 1 to the option \'Is\'\n+    #I set the criteria operator in row 1 to the option \'Is\'\n+\n+    ${criteria_row} =  Convert to String  .querystring-criteria-wrapper:nth-child(1)\n+    Click  css=${criteria_row} .querystring-criteria-operator .select2-choice\n+    Fill Text  css=#select2-drop input  Is\n+    Click  css=.select2-highlighted\n+\n+\n     I set the criteria value in row 1 to the text \'${criterion}\'\n+    [Documentation]  Chrome needs some more time\n+    Sleep  .1s\n \n-    Sleep  1\n-    Click Button  Save\n-    Wait until page contains  Changes saved\n+    Click  "Save"\n+    Get text  body  contains  Changes saved\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot b/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\nindex d7a2bbf6..60d53bb8 100644\n--- a/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\n+++ b/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\n@@ -1,25 +1,14 @@\n-# ============================================================================\n-# Tests for the Collection Type Criterion\n-# ============================================================================\n-#\n-# $ bin/robot-server --reload-path src/plone.app.contenttypes plone.app.contenttypes.testing.PLONE_APP_CONTENTTYPES_ROBOT_TESTING\n-#\n-# $ bin/robot src/plone.app.contenttypes/plone/app/contenttypes/tests/robot/test_collection_type_criterion.robot\n-#\n-# ============================================================================\n-\n-*** Settings *****************************************************************\n-\n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-Resource  keywords.txt\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/browser.robot\n+Resource  keywords.robot\n+\n+Variables  variables.py\n \n Test Setup  Run Keywords  Plone test setup\n Test Teardown  Run keywords  Plone test teardown\n \n-\n-*** Test cases ***************************************************************\n+*** Test cases ***\n \n Test Type Criterion\n     Given I am logged in as site owner\n@@ -31,17 +20,15 @@ Test Type Criterion\n       And the collection should not contain  Test Document\n \n \n-*** Keywords *****************************************************************\n+*** Keywords ***\n \n I set the collection\'s type criterion to\n     [Arguments]  ${criterion}\n     Go to  ${PLONE_URL}/my-collection/edit\n-    Wait until page contains  Edit Collection\n \n     I set the criteria index in row 1 to the option \'Type\'\n     I set the criteria operator in row 1 to the option \'Any\'\n     I set the criteria value in row 1 to the options \'${criterion}\'\n \n-    Sleep  1\n-    Click Button  Save\n-    Wait until page contains  Changes saved\n+    Click  "Save"\n+    Get text  body  contains  Changes saved\n\\ No newline at end of file\ndiff --git a/plone/app/contenttypes/tests/robot/test_folderlisting.robot b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\nindex a64f535d..feb83513 100644\n--- a/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n+++ b/plone/app/contenttypes/tests/robot/test_folderlisting.robot\n@@ -1,18 +1,13 @@\n *** Settings ***\n \n-Resource  plone/app/robotframework/keywords.robot\n-Resource  plone/app/robotframework/saucelabs.robot\n-Resource  plone/app/robotframework/selenium.robot\n-Resource  keywords.txt\n+Resource  plone/app/robotframework/browser.robot\n+Resource  keywords.robot\n \n Variables  variables.py\n \n-\n Test Setup  Run Keywords  Setup Testcontent  Plone test setup\n Test Teardown  Run keywords  Plone test teardown\n \n-*** Variables ***\n-\n *** Test cases ***\n \n Scenario: Test folder listing view\n@@ -101,7 +96,7 @@ Listing should list contained content in detail\n   the content area should contain  this is a test document\n   the content area should contain  Test News Item\n   the content area should contain  this is a test news item\n-  Page Should Contain Element  //img[@title="Test News Item"]  2\n+  Get Element Count  //img[@title="Test News Item"]  ==  2\n   the content area should contain  Test Event\n   the content area should contain  this is a test event\n   the content area should contain  Test Collection\n@@ -111,29 +106,29 @@ Listing should list contained content in detail\n   the content area should contain  Test File\n   the content area should contain  file.pdf\n   the content area should contain  Test Image\n-  Page Should Contain Element  //img[@title="Test Image"]  3\n+  Get Element Count  //img[@title="Test Image"]  ==  2\n   the content area should contain  Test Album\n   the content area should contain  Test Album Image 1\n-  Page Should Contain Element  //img[@title="Test Album Image 1"]  2\n+  Get Element Count  //img[@title="Test Album Image 1"]  ==  2\n   the content area should contain  Test Album Image 2\n-  Page Should Contain Element  //img[@title="Test Album Image 2"]  2\n+  Get Element Count  //img[@title="Test Album Image 2"]  ==  2\n   the content area should contain  Test Album Image 3\n-  Page Should Contain Element  //img[@title="Test Album Image 3"]  2\n+  Get Element Count  //img[@title="Test Album Image 3"]  ==  2\n   the content area should contain  Test Sub Album\n   the content area should contain  Test Sub Album Image 1\n-  Page Should Contain Element  //img[@title="Test Sub Album Image 1"]  1\n+  Get Element Count  //img[@title="Test Sub Album Image 1"]  ==  1\n   the content area should contain  Test Sub Album Image 2\n-  Page Should Contain Element  //img[@title="Test Sub Album Image 2"]  1\n+  Get Element Count  //img[@title="Test Sub Album Image 2"]  ==  1\n   the content area should contain  Test Sub Album Image 3\n-  Page Should Contain Element  //img[@title="Test Sub Album Image 3"]  1\n+  Get Element Count  //img[@title="Test Sub Album Image 3"]  ==  1\n \n Album should list contained images and albums\n   the content area should contain  Test Album Image 1\n-  Page Should Contain Element  //img[@title="Test Album Image 1"]  2\n+  Get Element Count  //img[@title="Test Album Image 1"]  ==  1\n   the content area should contain  Test Album Image 2\n-  Page Should Contain Element  //img[@title="Test Album Image 2"]  2\n+  Get Element Count  //img[@title="Test Album Image 2"]  ==  1\n   the content area should contain  Test Album Image 3\n-  Page Should Contain Element  //img[@title="Test Album Image 3"]  2\n+  Get Element Count  //img[@title="Test Album Image 3"]  ==  1\n   the content area should contain  Test Sub Album\n \n \n@@ -159,7 +154,7 @@ Listing should list all content in detail\n   the content area should contain  this is a test document\n   the content area should contain  Test News Item\n   the content area should contain  this is a test news item\n-  Page Should Contain Element  //img[@title="Test News Item"]  2\n+  Get Element Count  //img[@title="Test News Item"]  ==  2\n   the content area should contain  Test Event\n   the content area should contain  this is a test event\n   the content area should contain  Test Collection\n@@ -169,39 +164,39 @@ Listing should list all content in detail\n   the content area should contain  Test File\n   the content area should contain  file.pdf\n   the content area should contain  Test Image\n-  Page Should Contain Element  //img[@title="Test Image"]  3\n+  Get Element Count  //img[@title="Test Image"]  ==  2\n   the content area should contain  Test Album\n   the content area should contain  Test Album Image 1\n-  Page Should Contain Element  //img[@title="Test Album Image 1"]  2\n+  Get Element Count  //img[@title="Test Album Image 1"]  ==  2\n   the content area should contain  Test Album Image 2\n-  Page Should Contain Element  //img[@title="Test Album Image 2"]  2\n+  Get Element Count  //img[@title="Test Album Image 2"]  ==  2\n   the content area should contain  Test Album Image 3\n-  Page Should Contain Element  //img[@title="Test Album Image 3"]  2\n+  Get Element Count  //img[@title="Test Album Image 3"]  ==  2\n   the content area should contain  Test Sub Album\n   the content area should contain  Test Sub Album Image 1\n-  Page Should Contain Element  //img[@title="Test Sub Album Image 1"]  2\n+  Get Element Count  //img[@title="Test Sub Album Image 1"]  ==  2\n   the content area should contain  Test Sub Album Image 2\n-  Page Should Contain Element  //img[@title="Test Sub Album Image 2"]  2\n+  Get Element Count  //img[@title="Test Sub Album Image 2"]  ==  2\n   the content area should contain  Test Sub Album Image 3\n-  Page Should Contain Element  //img[@title="Test Sub Album Image 3"]  2\n+  Get Element Count  //img[@title="Test Sub Album Image 3"]  ==  2\n \n Album should list all images and albums\n   the content area should contain  Test Image\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Image"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Image"]  ==  1\n   the content area should contain  Test News Item\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test News Item"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test News Item"]  ==  1\n   the content area should contain  Test Album Image 1\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Album Image 1"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Album Image 1"]  ==  1\n   the content area should contain  Test Album Image 2\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Album Image 2"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Album Image 2"]  ==  1\n   the content area should contain  Test Album Image 3\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Album Image 3"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Album Image 3"]  ==  1\n   the content area should contain  Test Sub Album Image 1\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 1"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 1"]  ==  1\n   the content area should contain  Test Sub Album Image 2\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 2"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 2"]  ==  1\n   the content area should contain  Test Sub Album Image 3\n-  Page Should Contain Element  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 3"]  1\n+  Get Element Count  //div[contains(@class, "card-image")]//img[@title="Test Sub Album Image 3"]  ==  1\n   the content area should contain  Test Album\n   the content area should contain  Test Sub Album\n \n@@ -230,8 +225,6 @@ I go to\n \n I disable dropdown navigation\n   Go to  ${PLONE_URL}/@@navigation-controlpanel\n-  Input Text  name=form.widgets.navigation_depth  1\n-  Set Focus To Element  css=#form-buttons-save\n-  Wait Until Element Is Visible  css=#form-buttons-save\n-  Click Button  Save\n-  Wait until page contains  Changes saved\n+  Fill Text  css=[name="form.widgets.navigation_depth"]  1\n+  Click  "Save"\n+  Get Text  body  contains  Changes saved\n\\ No newline at end of file\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-21T11:58:19+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/eec97dffb0209a4aac15055c7006848bb69eef5f

image schema: move new alt_text field after the image field.

The git diff shows this as a move of the image field above the alt_text field, which boils down to the same thing. ;-)

Files changed:
M plone/app/contenttypes/schema/image.xml

b'diff --git a/plone/app/contenttypes/schema/image.xml b/plone/app/contenttypes/schema/image.xml\nindex 86627cb7..af70b3b4 100644\n--- a/plone/app/contenttypes/schema/image.xml\n+++ b/plone/app/contenttypes/schema/image.xml\n@@ -19,6 +19,13 @@\n       <required>False</required>\n       <title i18n:translate="">Description</title>\n     </field>\n+    <field marshal:primary="true"\n+           name="image"\n+           type="plone.namedfile.field.NamedBlobImage"\n+    >\n+      <description />\n+      <title i18n:translate="label_image">Image</title>\n+    </field>\n     <field name="alt_text"\n            type="zope.schema.TextLine"\n     >\n@@ -33,12 +40,5 @@\n       <required>False</required>\n       <title i18n:translate="label_alt_text">Alt Text</title>\n     </field>\n-    <field marshal:primary="true"\n-           name="image"\n-           type="plone.namedfile.field.NamedBlobImage"\n-    >\n-      <description />\n-      <title i18n:translate="label_image">Image</title>\n-    </field>\n   </schema>\n </model>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2024-10-21T18:27:34+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6230bd4c9efa008c8cf5da9ef546d41649006062

Merge pull request #701 from plone/add-image-alt-tag

Add alt_text field to image content type

Files changed:
A Makefile
A constraints.txt
A instance.yaml
A mx.ini
A news/+setup.internal
A news/700.feature
A requirements.txt
M .gitignore
M .meta.toml
M MANIFEST.in
M plone/app/contenttypes/browser/templates/image.pt
M plone/app/contenttypes/browser/templates/listing.pt
M plone/app/contenttypes/browser/templates/listing_album.pt
M plone/app/contenttypes/browser/templates/listing_summary.pt
M plone/app/contenttypes/browser/templates/listing_tabular.pt
M plone/app/contenttypes/indexers.py
M plone/app/contenttypes/indexers.zcml
M plone/app/contenttypes/schema/image.xml
M plone/app/contenttypes/tests/test_image.py

b'diff --git a/.gitignore b/.gitignore\nindex 486392f6..8d63c885 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -46,6 +46,8 @@ local.cfg\n /venv/\n .installed.txt\n \n+/test_*\n+robot_*\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex 3bf9f054..74ca55db 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -11,3 +11,9 @@ dependencies_ignores = "[\'ZServer\', \'plone.app.event\', \'Products.CMFPlone\',]"\n \n [tox]\n constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\n+\n+[gitignore]\n+extra_lines = """\n+/test_*\n+robot_*\n+"""\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 74225c91..5993732e 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -8,3 +8,9 @@ global-exclude *.pyc\n \n recursive-exclude news *\n exclude news\n+\n+include requirements.txt\n+include constraints.txt\n+include *.yaml\n+include Makefile\n+exclude *-mxdev.txt\ndiff --git a/Makefile b/Makefile\nnew file mode 100644\nindex 00000000..053d9d8b\n--- /dev/null\n+++ b/Makefile\n@@ -0,0 +1,123 @@\n+### Defensive settings for make:\n+#     https://tech.davis-hansson.com/p/make/\n+SHELL:=bash\n+.ONESHELL:\n+.SHELLFLAGS:=-xeu -o pipefail -O inherit_errexit -c\n+.SILENT:\n+.DELETE_ON_ERROR:\n+MAKEFLAGS+=--warn-undefined-variables\n+MAKEFLAGS+=--no-builtin-rules\n+\n+# We like colors\n+# From: https://coderwall.com/p/izxssa/colored-makefile-for-golang-projects\n+RED=`tput setaf 1`\n+GREEN=`tput setaf 2`\n+RESET=`tput sgr0`\n+YELLOW=`tput setaf 3`\n+\n+BACKEND_FOLDER=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\n+DOCS_DIR=${BACKEND_FOLDER}/docs\n+\n+# Python checks\n+PYTHON?=python3\n+\n+# installed?\n+ifeq (, $(shell which $(PYTHON) ))\n+  $(error "PYTHON=$(PYTHON) not found in $(PATH)")\n+endif\n+\n+# version ok?\n+PYTHON_VERSION_MIN=3.8\n+PYTHON_VERSION_OK=$(shell $(PYTHON) -c "import sys; print((int(sys.version_info[0]), int(sys.version_info[1])) >= tuple(map(int, \'$(PYTHON_VERSION_MIN)\'.split(\'.\'))))")\n+ifeq ($(PYTHON_VERSION_OK),0)\n+  $(error "Need python $(PYTHON_VERSION) >= $(PYTHON_VERSION_MIN)")\n+endif\n+\n+all: install\n+\n+# Add the following \'help\' target to your Makefile\n+# And add help text after each target name starting with \'\\#\\#\'\n+.PHONY: help\n+help: ## This help message\n+\t@grep -E \'^[a-zA-Z_-]+:.*?## .*$$\' $(MAKEFILE_LIST) | sort | awk \'BEGIN {FS = ":.*?## "}; {printf "\\033[36m%-30s\\033[0m %s\\n", $$1, $$2}\'\n+\n+.PHONY: clean\n+clean: clean-build clean-pyc clean-test clean-venv clean-instance ## remove all build, test, coverage and Python artifacts\n+\n+.PHONY: clean-instance\n+clean-instance: ## remove existing instance\n+\trm -fr instance etc inituser var\n+\n+.PHONY: clean-venv\n+clean-venv: ## remove virtual environment\n+\trm -fr bin include lib lib64 env pyvenv.cfg .tox .pytest_cache constraints-mxdev.txt requirements-mxdev.txt sources/\n+\n+.PHONY: clean-build\n+clean-build: ## remove build artifacts\n+\trm -fr build/\n+\trm -fr dist/\n+\trm -fr .eggs/\n+\trm -fr parts/\n+\trm -fr coverage.xml\n+\tfind . -name \'*.egg-info\' -exec rm -fr {} +\n+\tfind . -name \'*.egg\' -exec rm -rf {} +\n+\n+.PHONY: clean-pyc\n+clean-pyc: ## remove Python file artifacts\n+\tfind . -name \'*.pyc\' -exec rm -f {} +\n+\tfind . -name \'*.pyo\' -exec rm -f {} +\n+\tfind . -name \'*~\' -exec rm -f {} +\n+\tfind . -name \'__pycache__\' -exec rm -fr {} +\n+\n+.PHONY: clean-test\n+clean-test: ## remove test and coverage artifacts\n+\trm -f .coverage\n+\trm -fr htmlcov/\n+\trm -fr test_*\n+\trm -fr robot_*\n+\n+bin/pip bin/tox bin/mxdev:\n+\t@echo "$(GREEN)==> Setup Virtual Env$(RESET)"\n+\t$(PYTHON) -m venv .\n+\tbin/pip install -U "pip" "wheel" "cookiecutter" "mxdev" "tox" "pre-commit"\n+\tbin/pre-commit install\n+\n+.PHONY: config\n+config: bin/pip  ## Create instance configuration\n+\t@echo "$(GREEN)==> Create instance configuration$(RESET)"\n+\tbin/cookiecutter -f --no-input --config-file instance.yaml gh:plone/cookiecutter-zope-instance\n+\n+.PHONY: install-plone-6.0\n+install-plone-6.0: config ## pip install Plone packages\n+\t@echo "$(GREEN)==> Setup Build$(RESET)"\n+\tbin/mxdev -c mx.ini\n+\tbin/pip install -r requirements-mxdev.txt\n+\n+.PHONY: install\n+install: install-plone-6.0 ## Install Plone 6.0\n+\n+.PHONY: start\n+start: ## Start a Plone instance on localhost:8080\n+\tPYTHONWARNINGS=ignore ./bin/runwsgi instance/etc/zope.ini\n+\n+.PHONY: console\n+console: ## Start a console on a Plone instance\n+\tPYTHONWARNINGS=ignore ./bin/zconsole debug instance/etc/zope.conf\n+\n+.PHONY: format\n+format: bin/tox ## Format the codebase according to our standards\n+\t@echo "$(GREEN)==> Format codebase$(RESET)"\n+\tbin/tox -e format\n+\n+.PHONY: lint\n+lint: ## check code style\n+\tbin/tox -e lint\n+\n+# Tests\n+.PHONY: test\n+test: bin/tox ## run tests\n+\tbin/tox -e test\n+\n+.PHONY: test-coverage\n+test-coverage: bin/tox ## run tests with coverage\n+\tbin/tox -e coverage\ndiff --git a/constraints.txt b/constraints.txt\nnew file mode 100644\nindex 00000000..3bb2e326\n--- /dev/null\n+++ b/constraints.txt\n@@ -0,0 +1 @@\n+-c https://dist.plone.org/release/6.0.13/constraints.txt\ndiff --git a/instance.yaml b/instance.yaml\nnew file mode 100644\nindex 00000000..fe9d3149\n--- /dev/null\n+++ b/instance.yaml\n@@ -0,0 +1,7 @@\n+default_context:\n+    initial_user_name: \'admin\'\n+    initial_user_password: \'admin\'\n+\n+    zcml_package_includes: [\'plone.app.contenttypes\']\n+\n+    db_storage: direct\ndiff --git a/mx.ini b/mx.ini\nnew file mode 100644\nindex 00000000..db2906f9\n--- /dev/null\n+++ b/mx.ini\n@@ -0,0 +1,9 @@\n+; This is a mxdev configuration file\n+; it can be used to override versions of packages already defined in the\n+; constraints files and to add new packages from VCS like git.\n+; to learn more about mxdev visit https://pypi.org/project/mxdev/\n+\n+[settings]\n+main-package = -e .[test]\n+version-overrides =\n+    plone.app.contenttypes >= 4.0.1.dev0\ndiff --git a/news/+setup.internal b/news/+setup.internal\nnew file mode 100644\nindex 00000000..3ca94f9d\n--- /dev/null\n+++ b/news/+setup.internal\n@@ -0,0 +1,2 @@\n+Setup local installation\n+[@ericof]\ndiff --git a/news/700.feature b/news/700.feature\nnew file mode 100644\nindex 00000000..b73a4c8e\n--- /dev/null\n+++ b/news/700.feature\n@@ -0,0 +1,2 @@\n+Add alt_text field to image content type. This allows users to manually set the value of alt tag, for usage in automated listings.\n+[@cekk, @jackahl]\ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex cb77820f..5c0592ff 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -27,7 +27,8 @@\n           <figure class="figure">\n             <a tal:define="\n                  scale context/@@images;\n-                 img_tag python:scale.tag(\'image\', scale=\'large\', css_class=\'figure-img img-fluid\');\n+                 alt_text context/alt_text|nothing;\n+                 img_tag python:scale.tag(\'image\', scale=\'large\', css_class=\'figure-img img-fluid\', alt=alt_text);\n                "\n                tal:attributes="\n                  href string:${context/@@plone_context_state/object_url}/image_view_fullscreen;\n@@ -85,7 +86,9 @@\n           >Download</a>\n           <a class="btn btn-primary fullscreen"\n              href="${context/@@plone_context_state/object_url}/image_view_fullscreen"\n-          ><span i18n:translate="label_click_to_view_full_image">View full-size image</span></a>\n+          >\n+            <span i18n:translate="label_click_to_view_full_image">View full-size image</span>\n+          </a>\n         </section>\n \n \ndiff --git a/plone/app/contenttypes/browser/templates/listing.pt b/plone/app/contenttypes/browser/templates/listing.pt\nindex 9ad3df22..5be2631e 100644\n--- a/plone/app/contenttypes/browser/templates/listing.pt\n+++ b/plone/app/contenttypes/browser/templates/listing.pt\n@@ -66,6 +66,7 @@\n                                item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n                                item_is_event python:view.is_event(obj);\n                                item_has_image python:item.getIcon;\n+                               item_alt_text python:getattr(item, \'alt_text\', \'\') if item_has_image else \'\';\n                                item_type_class python:(\'contenttype-\' + view.normalizeString(item_type)) if showicons else \'\';\n                              ">\n                     <metal:block define-slot="entry">\n@@ -161,7 +162,7 @@\n                           <a tal:attributes="\n                                href python:item_link;\n                              ">\n-                            <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_list, css_class=img_class, loading=\'lazy\')" />\n+                            <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_list, css_class=img_class, loading=\'lazy\', alt=item_alt_text)" />\n                           </a>\n                         </div>\n                       </article>\ndiff --git a/plone/app/contenttypes/browser/templates/listing_album.pt b/plone/app/contenttypes/browser/templates/listing_album.pt\nindex 70561c0e..d3f5f3b3 100644\n--- a/plone/app/contenttypes/browser/templates/listing_album.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_album.pt\n@@ -48,7 +48,9 @@\n                   <div class="card-image d-flex justify-content-center align-items-center"\n                        style="height: 14rem;"\n                        tal:define="\n-                         scale python:image_scale.tag(image, \'image\', scale=\'mini\', loading=\'lazy\');\n+                         item_has_image python:image.getIcon;\n+                         item_alt_text python:getattr(image, \'alt_text\', \'\') if item_has_image else \'\';\n+                         scale python:image_scale.tag(image, \'image\', scale=\'mini\', loading=\'lazy\', alt=item_alt_text);\n                        "\n                        tal:condition="scale"\n                   >\n@@ -79,7 +81,9 @@\n                   <div class="card-image d-flex justify-content-center align-items-center"\n                        style="height: 14rem;"\n                        tal:define="\n-                         scale python:image_scale.tag(album, \'image\', scale=\'mini\', loading=\'lazy\') if getattr(album, \'image\', None) else None;\n+                         item_has_image python:album.getIcon;\n+                         item_alt_text python:getattr(album, \'alt_text\', \'\') if item_has_image else \'\';\n+                         scale python:image_scale.tag(album, \'image\', scale=\'mini\', loading=\'lazy\', alt=item_alt_text) if getattr(album, \'image\', None) else None;\n                        "\n                        tal:condition="scale"\n                   >\ndiff --git a/plone/app/contenttypes/browser/templates/listing_summary.pt b/plone/app/contenttypes/browser/templates/listing_summary.pt\nindex fec35e61..91f60dc4 100644\n--- a/plone/app/contenttypes/browser/templates/listing_summary.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_summary.pt\n@@ -34,6 +34,8 @@\n                          tal:attributes="\n                            href item_link;\n                            title item_type;\n+                           item_has_image python:item.getIcon;\n+                           item_alt_text python:getattr(item, \'alt_text\', \'\') if item_has_image else \'\';\n                          "\n                       >\n               Item Title\n@@ -72,7 +74,7 @@\n                     <a tal:attributes="\n                          href item_link;\n                        ">\n-                      <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'image-responsive thumb-\' + thumb_scale_summary, loading=\'lazy\')" />\n+                      <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_summary, css_class=\'image-responsive thumb-\' + thumb_scale_summary, loading=\'lazy\', alt=item_alt_text)" />\n                     </a>\n                   </div>\n \ndiff --git a/plone/app/contenttypes/browser/templates/listing_tabular.pt b/plone/app/contenttypes/browser/templates/listing_tabular.pt\nindex 29b8cdc3..56205c2a 100644\n--- a/plone/app/contenttypes/browser/templates/listing_tabular.pt\n+++ b/plone/app/contenttypes/browser/templates/listing_tabular.pt\n@@ -79,6 +79,7 @@\n                                    item_wf_state_class python:\'state-\' + view.normalizeString(item_wf_state);\n                                    item_creator python:item.Creator();\n                                    item_has_image python:item.getIcon;\n+                                   item_alt_text python:getattr(item, \'alt_text\', \'\') if item_has_image else \'\';\n                                    item_link python:item_type in view.use_view_action and item_url+\'/view\' or item_url;\n                                    item_mime_type python:item.mime_type;\n                                    item_mime_type_icon python: \'mimetype-\' + item_mime_type;\n@@ -138,7 +139,7 @@\n \n                           <td>\n                             <a tal:condition="python:item_has_image and thumb_scale_table">\n-                              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class, loading=\'lazy\')"\n+                              <img tal:replace="structure python:image_scale.tag(item, \'image\', scale=thumb_scale_table, css_class=img_class, loading=\'lazy\', alt=item_alt_text)"\n                                    tal:attributes="\n                                      href python: item_link;\n                                    "\ndiff --git a/plone/app/contenttypes/indexers.py b/plone/app/contenttypes/indexers.py\nindex 973dfe83..2517b616 100644\n--- a/plone/app/contenttypes/indexers.py\n+++ b/plone/app/contenttypes/indexers.py\n@@ -190,3 +190,8 @@ def getIcon(obj):\n     if obj.aq_base.image:\n         return True\n     return False\n+\n+\n+@indexer(IDexterityContent)\n+def getAltTag(obj):\n+    return obj.alt_text\ndiff --git a/plone/app/contenttypes/indexers.zcml b/plone/app/contenttypes/indexers.zcml\nindex 52b15f0c..6c79c341 100644\n--- a/plone/app/contenttypes/indexers.zcml\n+++ b/plone/app/contenttypes/indexers.zcml\n@@ -50,5 +50,9 @@\n       factory=".indexers.mime_type"\n       name="mime_type"\n       />\n+  <adapter\n+      factory=".indexers.getAltTag"\n+      name="alt_text"\n+      />\n \n </configure>\ndiff --git a/plone/app/contenttypes/schema/image.xml b/plone/app/contenttypes/schema/image.xml\nindex 05c45972..af70b3b4 100644\n--- a/plone/app/contenttypes/schema/image.xml\n+++ b/plone/app/contenttypes/schema/image.xml\n@@ -26,5 +26,19 @@\n       <description />\n       <title i18n:translate="label_image">Image</title>\n     </field>\n+    <field name="alt_text"\n+           type="zope.schema.TextLine"\n+    >\n+      <description i18n:translate="label_alt_text_help">\n+        Briefly describe the meaning of the image for people using assistive technology like screen readers.\n+        This will be used when the image is viewed by itself or in automated contexts like listings.\n+        Do not duplicate the Title or Description fields, since those might also be read by screen readers.\n+        Alt text should describe what a sighted user sees when looking at the image.\n+        This might include text the image contains, or even a description of an abstract pattern.\n+        In case your description already sufficiently describes your image, leave this field blank.\n+      </description>\n+      <required>False</required>\n+      <title i18n:translate="label_alt_text">Alt Text</title>\n+    </field>\n   </schema>\n </model>\ndiff --git a/plone/app/contenttypes/tests/test_image.py b/plone/app/contenttypes/tests/test_image.py\nindex b31a514a..27f6d786 100644\n--- a/plone/app/contenttypes/tests/test_image.py\n+++ b/plone/app/contenttypes/tests/test_image.py\n@@ -72,7 +72,16 @@ def setUp(self):\n         image.title = "My Image"\n         image.description = "This is my image."\n         image.image = dummy_image()\n+\n+        self.portal.invokeFactory("Image", "image-with-alt")\n+        image_alt = self.portal["image-with-alt"]\n+        image_alt.title = "My Image 2"\n+        image_alt.description = "This is my second image."\n+        image_alt.alt_text = "An alt text"\n+        image_alt.image = dummy_image()\n+\n         self.image = image\n+        self.image_alt = image_alt\n         self.request.set("URL", image.absolute_url())\n         self.request.set("ACTUAL_URL", image.absolute_url())\n         alsoProvides(self.request, IPloneFormLayer)\n@@ -85,6 +94,29 @@ def test_image_view(self):\n         self.assertTrue("My Image" in view())\n         self.assertTrue("This is my image." in view())\n \n+    def test_image_view_alt(self):\n+        view = self.image_alt.restrictedTraverse("@@image_view")\n+        self.assertTrue(view())\n+        self.assertEqual(view.request.response.status, 200)\n+        self.assertTrue("My Image 2" in view())\n+        self.assertTrue("This is my second image." in view())\n+        self.assertTrue("An alt text" in view())\n+\n+    def test_image_alt_in_listing_view(self):\n+        self.image_alt.image = dummy_image("image.svg")\n+        view = self.portal.restrictedTraverse("@@listing_view")\n+        self.assertTrue("An alt text" in view())\n+\n+    def test_image_alt_in_summary_view(self):\n+        self.image_alt.image = dummy_image("image.svg")\n+        view = self.portal.restrictedTraverse("@@summary_view")\n+        self.assertTrue("An alt text" in view())\n+\n+    def test_image_alt_in_album_view(self):\n+        self.image_alt.image = dummy_image("image.svg")\n+        view = self.portal.restrictedTraverse("@@album_view")\n+        self.assertTrue("An alt text" in view())\n+\n     # XXX: Not working. See ImageFunctionalTest test_image_view_fullscreen\n     # Problem seems to be that the image is not properly uploaded.\n     #    def test_image_view_fullscreen(self):\ndiff --git a/requirements.txt b/requirements.txt\nnew file mode 100644\nindex 00000000..da443200\n--- /dev/null\n+++ b/requirements.txt\n@@ -0,0 +1 @@\n+-c constraints.txt\n'

