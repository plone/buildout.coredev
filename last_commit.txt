Repository: plone.releaser


Branch: refs/heads/master
Date: 2022-09-06T11:26:03+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.releaser/commit/a88fd87b9dd01baa1f888998058890b5e214ec95

report: add sleep and start parameters.

GitHub often quits, probably because I do too many large requests.
Sleeping should help, with the --sleep argument.
By default we sleep 20.0 seconds between packages.
I started with 5, but already ran into a timeout at 7 packages.

If it fails anyway, you can restart the command and pass for example
--start 50 to start at package 50 instead of the first one.
The list is sorted now, so the order is stable.

Files changed:
M plone/releaser/manage.py

b'diff --git a/plone/releaser/manage.py b/plone/releaser/manage.py\nindex 57ba08e..d4cad5b 100644\n--- a/plone/releaser/manage.py\n+++ b/plone/releaser/manage.py\n@@ -19,6 +19,7 @@\n \n import datetime\n import keyring\n+import time\n import six\n \n \n@@ -59,14 +60,34 @@ def checkPackageForUpdates(package_name, **kwargs):\n \n @named("report")\n @arg("--interactive", default=False)\n+@arg("--sleep", default=20.0)\n+@arg("--start", default=0)\n def checkAllPackagesForUpdates(**kwargs):\n+    """Check all packages for updates.\n+\n+    For each package, we clone it with a depth of 100 to a temporary directory.\n+\n+    GitHub often quits, probably because I do too many large requests.\n+    Sleeping should help, with the --sleep argument.\n+\n+    If it fails anyway, you can restart the command and pass for example\n+    --start 50 to start at package 50 instead of the first one.\n+    """\n+    interactive = bool(kwargs["interactive"])\n+    sleep = float(kwargs["sleep"])\n+    start = int(kwargs["start"])\n     sources = buildout.sources\n-    for package_name, source in Bar("Scanning").iter(list(sources.items())):\n+    packages = sorted(list(sources.items()))\n+    if start > 0:\n+        packages = packages[start:]\n+    for package_name, source in Bar("Scanning").iter(packages):\n         pkg = Package(buildout, package_name)\n-        if kwargs["interactive"]:\n+        if interactive:\n             pkg(action=ACTION_INTERACTIVE)\n         else:\n             pkg(action=ACTION_REPORT)\n+        if sleep:\n+            time.sleep(sleep)\n \n \n def pulls():\n'

Repository: plone.releaser


Branch: refs/heads/master
Date: 2022-09-06T11:26:43+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.releaser/commit/5a81d371b62f43e2180a8b31da8c7b062cec731e

report: only check for version bump message if there is one commit.

Files changed:
M plone/releaser/package.py

b'diff --git a/plone/releaser/package.py b/plone/releaser/package.py\nindex e5b392d..363dbbf 100644\n--- a/plone/releaser/package.py\n+++ b/plone/releaser/package.py\n@@ -116,15 +116,18 @@ def __call__(self, action=ACTION_INTERACTIVE):\n                 # so we are done.\n                 self.remove()\n                 return\n-            # The latest commit is number zero.\n-            latest_commit_message = commits_since_release[0].message\n-            if (\n-                "Back to development" in latest_commit_message\n-                or latest_commit_message.startswith("vb")\n-            ):\n-                # Only the regular version bump, so we are done.\n-                self.remove()\n-                return\n+            if len(commits_since_release) == 1:\n+                # If there is only one commit since release and it is only the\n+                # regular version bump, then we are done.\n+                latest_commit_message = commits_since_release[0].message.lower()\n+                if (\n+                    latest_commit_message.startswith("vb")\n+                    or "back to development" in latest_commit_message\n+                    or "bump version" in latest_commit_message\n+                    or "version bump" in latest_commit_message\n+                ):\n+                    self.remove()\n+                    return\n \n             # Maybe there are more commits but we have previously seen them\n             # and decided they are not interesting.  We only want to show\n'

Repository: plone.releaser


Branch: refs/heads/master
Date: 2022-09-06T23:37:15+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.releaser/commit/3d256af6dcda064b0da0fb97e15aaff3925fb589

Merge pull request #44 from plone/maurits-sleep-start

report: add sleep and start parameters.

Files changed:
M plone/releaser/manage.py
M plone/releaser/package.py

b'diff --git a/plone/releaser/manage.py b/plone/releaser/manage.py\nindex 57ba08e..d4cad5b 100644\n--- a/plone/releaser/manage.py\n+++ b/plone/releaser/manage.py\n@@ -19,6 +19,7 @@\n \n import datetime\n import keyring\n+import time\n import six\n \n \n@@ -59,14 +60,34 @@ def checkPackageForUpdates(package_name, **kwargs):\n \n @named("report")\n @arg("--interactive", default=False)\n+@arg("--sleep", default=20.0)\n+@arg("--start", default=0)\n def checkAllPackagesForUpdates(**kwargs):\n+    """Check all packages for updates.\n+\n+    For each package, we clone it with a depth of 100 to a temporary directory.\n+\n+    GitHub often quits, probably because I do too many large requests.\n+    Sleeping should help, with the --sleep argument.\n+\n+    If it fails anyway, you can restart the command and pass for example\n+    --start 50 to start at package 50 instead of the first one.\n+    """\n+    interactive = bool(kwargs["interactive"])\n+    sleep = float(kwargs["sleep"])\n+    start = int(kwargs["start"])\n     sources = buildout.sources\n-    for package_name, source in Bar("Scanning").iter(list(sources.items())):\n+    packages = sorted(list(sources.items()))\n+    if start > 0:\n+        packages = packages[start:]\n+    for package_name, source in Bar("Scanning").iter(packages):\n         pkg = Package(buildout, package_name)\n-        if kwargs["interactive"]:\n+        if interactive:\n             pkg(action=ACTION_INTERACTIVE)\n         else:\n             pkg(action=ACTION_REPORT)\n+        if sleep:\n+            time.sleep(sleep)\n \n \n def pulls():\ndiff --git a/plone/releaser/package.py b/plone/releaser/package.py\nindex e5b392d..363dbbf 100644\n--- a/plone/releaser/package.py\n+++ b/plone/releaser/package.py\n@@ -116,15 +116,18 @@ def __call__(self, action=ACTION_INTERACTIVE):\n                 # so we are done.\n                 self.remove()\n                 return\n-            # The latest commit is number zero.\n-            latest_commit_message = commits_since_release[0].message\n-            if (\n-                "Back to development" in latest_commit_message\n-                or latest_commit_message.startswith("vb")\n-            ):\n-                # Only the regular version bump, so we are done.\n-                self.remove()\n-                return\n+            if len(commits_since_release) == 1:\n+                # If there is only one commit since release and it is only the\n+                # regular version bump, then we are done.\n+                latest_commit_message = commits_since_release[0].message.lower()\n+                if (\n+                    latest_commit_message.startswith("vb")\n+                    or "back to development" in latest_commit_message\n+                    or "bump version" in latest_commit_message\n+                    or "version bump" in latest_commit_message\n+                ):\n+                    self.remove()\n+                    return\n \n             # Maybe there are more commits but we have previously seen them\n             # and decided they are not interesting.  We only want to show\n'

