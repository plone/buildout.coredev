Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2020-09-18T14:46:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contentrules/commit/54f643ee5030e90a4bbd4d63723c336b9c8f500f

Fixed test failures on Python 3 with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M plone/app/contentrules/tests/test_action_mail.py

b'diff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 0000000..e9fcedc\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fixed test failures on Python 3 with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/plone/app/contentrules/tests/test_action_mail.py b/plone/app/contentrules/tests/test_action_mail.py\nindex af6b3c2..6d4b8f3 100644\n--- a/plone/app/contentrules/tests/test_action_mail.py\n+++ b/plone/app/contentrules/tests/test_action_mail.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from Acquisition import aq_base\n-from email import message_from_string\n from plone.app.contentrules.actions.mail import MailAction\n from plone.app.contentrules.actions.mail import MailAddFormView\n from plone.app.contentrules.actions.mail import MailEditFormView\n@@ -23,6 +22,13 @@\n \n import unittest\n \n+try:\n+    # Python 3\n+    from email import message_from_bytes\n+except ImportError:\n+    # Python 2\n+    from email import message_from_string as message_from_bytes\n+\n \n @implementer(IObjectEvent)\n class DummyEvent(object):\n@@ -125,7 +131,7 @@ def testExecute(self):\n         ex()\n         sent_mails = {}\n         for mail_sent in dummyMailHost.messages:\n-            mail_sent_msg = message_from_string(mail_sent)\n+            mail_sent_msg = message_from_bytes(mail_sent)\n             sent_mails[mail_sent_msg.get(\'To\')] = mail_sent_msg\n \n         mailSent = sent_mails[\'bar@foo.be\']\n@@ -174,7 +180,7 @@ def testExecuteNoSource(self):\n         mail_settings.email_from_name = u\'plone@rulez\'\n         ex()\n         self.assertEqual(len(dummyMailHost.messages), 2)\n-        mailSent = message_from_string(dummyMailHost.messages[0])\n+        mailSent = message_from_bytes(dummyMailHost.messages[0])\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n                          mailSent.get(\'Content-Type\'))\n         self.assertIn(mailSent.get(\'To\'), [\'bar@foo.be\', \'foo@bar.be\'])\n@@ -197,10 +203,10 @@ def testExecuteMultiRecipients(self):\n         # in py3 the order of mails is non-determininistic\n         # because sending iterates over a set of recipients\n         for msg in dummyMailHost.messages:\n-            if \'bar@foo.be\' in msg:\n-                mailSent1 = message_from_string(msg)\n+            if b\'bar@foo.be\' in msg:\n+                mailSent1 = message_from_bytes(msg)\n             else:\n-                mailSent2 = message_from_string(msg)\n+                mailSent2 = message_from_bytes(msg)\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n                          mailSent1.get(\'Content-Type\'))\n         self.assertEqual(\'bar@foo.be\', mailSent1.get(\'To\'))\n@@ -229,7 +235,7 @@ def testExecuteExcludeActor(self):\n         ex()\n         self.assertEqual(len(dummyMailHost.messages), 1)\n \n-        mailSent = message_from_string(dummyMailHost.messages[0])\n+        mailSent = message_from_bytes(dummyMailHost.messages[0])\n         self.assertEqual(\'bar@foo.be\', mailSent.get(\'To\'))\n         self._teardown_mockmail()\n \n'

Repository: plone.app.contentrules


Branch: refs/heads/master
Date: 2020-09-25T16:41:20+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.contentrules/commit/66d47dbc3f63641c6caaa08607e955257615dfff

Merge pull request #56 from plone/mailhost-410

Fixed test failures on Python 3 with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M plone/app/contentrules/tests/test_action_mail.py

b'diff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 0000000..e9fcedc\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fixed test failures on Python 3 with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/plone/app/contentrules/tests/test_action_mail.py b/plone/app/contentrules/tests/test_action_mail.py\nindex af6b3c2..6d4b8f3 100644\n--- a/plone/app/contentrules/tests/test_action_mail.py\n+++ b/plone/app/contentrules/tests/test_action_mail.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from Acquisition import aq_base\n-from email import message_from_string\n from plone.app.contentrules.actions.mail import MailAction\n from plone.app.contentrules.actions.mail import MailAddFormView\n from plone.app.contentrules.actions.mail import MailEditFormView\n@@ -23,6 +22,13 @@\n \n import unittest\n \n+try:\n+    # Python 3\n+    from email import message_from_bytes\n+except ImportError:\n+    # Python 2\n+    from email import message_from_string as message_from_bytes\n+\n \n @implementer(IObjectEvent)\n class DummyEvent(object):\n@@ -125,7 +131,7 @@ def testExecute(self):\n         ex()\n         sent_mails = {}\n         for mail_sent in dummyMailHost.messages:\n-            mail_sent_msg = message_from_string(mail_sent)\n+            mail_sent_msg = message_from_bytes(mail_sent)\n             sent_mails[mail_sent_msg.get(\'To\')] = mail_sent_msg\n \n         mailSent = sent_mails[\'bar@foo.be\']\n@@ -174,7 +180,7 @@ def testExecuteNoSource(self):\n         mail_settings.email_from_name = u\'plone@rulez\'\n         ex()\n         self.assertEqual(len(dummyMailHost.messages), 2)\n-        mailSent = message_from_string(dummyMailHost.messages[0])\n+        mailSent = message_from_bytes(dummyMailHost.messages[0])\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n                          mailSent.get(\'Content-Type\'))\n         self.assertIn(mailSent.get(\'To\'), [\'bar@foo.be\', \'foo@bar.be\'])\n@@ -197,10 +203,10 @@ def testExecuteMultiRecipients(self):\n         # in py3 the order of mails is non-determininistic\n         # because sending iterates over a set of recipients\n         for msg in dummyMailHost.messages:\n-            if \'bar@foo.be\' in msg:\n-                mailSent1 = message_from_string(msg)\n+            if b\'bar@foo.be\' in msg:\n+                mailSent1 = message_from_bytes(msg)\n             else:\n-                mailSent2 = message_from_string(msg)\n+                mailSent2 = message_from_bytes(msg)\n         self.assertEqual(\'text/plain; charset="utf-8"\',\n                          mailSent1.get(\'Content-Type\'))\n         self.assertEqual(\'bar@foo.be\', mailSent1.get(\'To\'))\n@@ -229,7 +235,7 @@ def testExecuteExcludeActor(self):\n         ex()\n         self.assertEqual(len(dummyMailHost.messages), 1)\n \n-        mailSent = message_from_string(dummyMailHost.messages[0])\n+        mailSent = message_from_bytes(dummyMailHost.messages[0])\n         self.assertEqual(\'bar@foo.be\', mailSent.get(\'To\'))\n         self._teardown_mockmail()\n \n'

