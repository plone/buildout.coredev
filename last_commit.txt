Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2020-09-23T15:26:30+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/e4bcf2f53c19af9bb7d5d8b5b5e173fc6c3b50c5

Fix tests with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M plone/app/discussion/tests/test_notifications.py

b'diff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 00000000..c62697d9\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py\nindex 16844e2b..dabed0ec 100644\n--- a/plone/app/discussion/tests/test_notifications.py\n+++ b/plone/app/discussion/tests/test_notifications.py\n@@ -65,7 +65,8 @@ def test_notify_user(self):\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n         self.assertTrue(self.mailhost.messages[0])\n-        msg = str(self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        msg = msg.decode("utf-8")\n         self.assertTrue(\'To: john@plone.test\' in msg)\n         self.assertTrue(\'From: portal@plone.test\' in msg)\n         # We expect the headers to be properly header encoded (7-bit):\n@@ -207,6 +208,7 @@ def test_notify_moderator(self):\n         self.assertEqual(len(self.mailhost.messages), 1)\n         self.assertTrue(self.mailhost.messages[0])\n         msg = self.mailhost.messages[0]\n+        msg = msg.decode("utf-8")\n         self.assertTrue(\'To: portal@plone.test\' in msg)\n         self.assertTrue(\'From: portal@plone.test\' in msg)\n         # We expect the headers to be properly header encoded (7-bit):\n@@ -244,6 +246,7 @@ def test_notify_moderator_specific_address(self):\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n         msg = self.mailhost.messages[0]\n+        msg = msg.decode("utf-8")\n         if not isinstance(msg, str):\n             self.assertTrue(\'test@example.com\' in msg.mto)\n         else:\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2020-09-23T15:35:32+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/c9d9cfca04862bd3ae5defaeca63d274cb07473e

Message test: we never get a Message object, but always bytes/string/unicode.

Which type we get back, depends on the Python version and the Products.MailHost version.

Files changed:
M plone/app/discussion/tests/test_notifications.py

b'diff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py\nindex dabed0ec..9ed3492e 100644\n--- a/plone/app/discussion/tests/test_notifications.py\n+++ b/plone/app/discussion/tests/test_notifications.py\n@@ -247,10 +247,7 @@ def test_notify_moderator_specific_address(self):\n         self.assertEqual(len(self.mailhost.messages), 1)\n         msg = self.mailhost.messages[0]\n         msg = msg.decode("utf-8")\n-        if not isinstance(msg, str):\n-            self.assertTrue(\'test@example.com\' in msg.mto)\n-        else:\n-            self.assertTrue(\'To: test@example.com\' in msg)\n+        self.assertTrue(\'To: test@example.com\' in msg)\n \n     def test_do_not_notify_moderator_when_no_sender_is_available(self):\n         # Set sender mail address to nonw and make sure no email is send to the\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2020-09-25T16:41:30+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.discussion/commit/5ada6a6fc2f2a22f174cb038ea1a72b6d0cb1b98

Merge pull request #172 from plone/mailhost-410

Fix tests with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M plone/app/discussion/tests/test_notifications.py

b'diff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 00000000..c62697d9\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/plone/app/discussion/tests/test_notifications.py b/plone/app/discussion/tests/test_notifications.py\nindex 16844e2b..9ed3492e 100644\n--- a/plone/app/discussion/tests/test_notifications.py\n+++ b/plone/app/discussion/tests/test_notifications.py\n@@ -65,7 +65,8 @@ def test_notify_user(self):\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n         self.assertTrue(self.mailhost.messages[0])\n-        msg = str(self.mailhost.messages[0])\n+        msg = self.mailhost.messages[0]\n+        msg = msg.decode("utf-8")\n         self.assertTrue(\'To: john@plone.test\' in msg)\n         self.assertTrue(\'From: portal@plone.test\' in msg)\n         # We expect the headers to be properly header encoded (7-bit):\n@@ -207,6 +208,7 @@ def test_notify_moderator(self):\n         self.assertEqual(len(self.mailhost.messages), 1)\n         self.assertTrue(self.mailhost.messages[0])\n         msg = self.mailhost.messages[0]\n+        msg = msg.decode("utf-8")\n         self.assertTrue(\'To: portal@plone.test\' in msg)\n         self.assertTrue(\'From: portal@plone.test\' in msg)\n         # We expect the headers to be properly header encoded (7-bit):\n@@ -244,10 +246,8 @@ def test_notify_moderator_specific_address(self):\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n         msg = self.mailhost.messages[0]\n-        if not isinstance(msg, str):\n-            self.assertTrue(\'test@example.com\' in msg.mto)\n-        else:\n-            self.assertTrue(\'To: test@example.com\' in msg)\n+        msg = msg.decode("utf-8")\n+        self.assertTrue(\'To: test@example.com\' in msg)\n \n     def test_do_not_notify_moderator_when_no_sender_is_available(self):\n         # Set sender mail address to nonw and make sure no email is send to the\n'

