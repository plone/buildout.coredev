Repository: plone.releaser


Branch: refs/heads/master
Date: 2024-05-07T13:19:36+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.releaser/commit/34520e2bce7f8c52f04a5962243515fc73efbf5f

No longer offer to push changes to buildout.coredev.

This is no longer what we ever want: the newly uploaded package will not yet be available on all PyPI mirrors.
Fixes https://github.com/plone/plone.releaser/issues/69.

Files changed:
A news/69.bugfix
M plone/releaser/release.py

b'diff --git a/news/69.bugfix b/news/69.bugfix\nnew file mode 100644\nindex 0000000..84ace0c\n--- /dev/null\n+++ b/news/69.bugfix\n@@ -0,0 +1,4 @@\n+No longer offer to push changes to buildout.coredev.\n+This is no longer what we ever want: the newly uploaded package will not yet be available on all PyPI mirrors.\n+Fixes `issue 69 <https://github.com/plone/plone.releaser/issues/69>`_.\n+[maurits]\ndiff --git a/plone/releaser/release.py b/plone/releaser/release.py\nindex 3027a6f..01767b6 100644\n--- a/plone/releaser/release.py\n+++ b/plone/releaser/release.py\n@@ -220,31 +220,15 @@ def update_core(data, branch=None):\n         g.add("--all")\n         print("Committing changes.")\n         g.commit(message=message)\n-        # When doing releases of several packages in a row,\n-        # it is better to not push, because this means a needlessly high load on Jenkins.\n-        # Also, if you create a release and immediately push,\n-        # then Jenkins will not find the new release yet and fail:\n-        # it takes a few minutes for the release to be propagated to all PyPI mirrors.\n-        # Pushing still seems the best default, but let\'s have an easy way to not push.\n-        print("Checking PLONE_RELEASER_MULTI_PACKAGES env variable.")\n-        try:\n-            multi = int(os.getenv("PLONE_RELEASER_MULTI_PACKAGES"))\n-        except (TypeError, ValueError, AttributeError):\n-            print(\n-                "ERROR: could not parse PLONE_RELEASER_MULTI_PACKAGES env var. Ignoring it."\n-            )\n-            multi = False\n-        if multi:\n-            print(\n-                "PLONE_RELEASER_MULTI_PACKAGES env variable set, so not pushing to coredev."\n-            )\n-            return\n-        msg = "Ok to push coredev?"\n-        if branch:\n-            msg = f"Ok to push coredev {branch}?"\n-        if ask(msg, default=True):\n-            print("Pushing changes to server.")\n-            g.push()\n+        # We used to offer pushing the coredev change, but this is no longer a\n+        # good idea.\n+        print(\n+            "WARNING: a change in one or more buildout.coredev branches was made. "\n+            "Please wait a few minutes and then push this change. Otherwise the "\n+            "newly uploaded package is not yet available on all PyPI mirrors. "\n+            "This would cause Jenkins and GitHub Actions to fail."\n+        )\n+        return\n \n \n def update_other_core_branches(data):\n'

Repository: plone.releaser


Branch: refs/heads/master
Date: 2024-05-09T11:18:39+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.releaser/commit/a49c70458a691642e13a904b59c57b340c3b6974

Merge pull request #70 from plone/maurits-no-coredev-push

No longer offer to push changes to buildout.coredev.

Files changed:
A news/69.bugfix
M plone/releaser/release.py

b'diff --git a/news/69.bugfix b/news/69.bugfix\nnew file mode 100644\nindex 0000000..84ace0c\n--- /dev/null\n+++ b/news/69.bugfix\n@@ -0,0 +1,4 @@\n+No longer offer to push changes to buildout.coredev.\n+This is no longer what we ever want: the newly uploaded package will not yet be available on all PyPI mirrors.\n+Fixes `issue 69 <https://github.com/plone/plone.releaser/issues/69>`_.\n+[maurits]\ndiff --git a/plone/releaser/release.py b/plone/releaser/release.py\nindex 3027a6f..01767b6 100644\n--- a/plone/releaser/release.py\n+++ b/plone/releaser/release.py\n@@ -220,31 +220,15 @@ def update_core(data, branch=None):\n         g.add("--all")\n         print("Committing changes.")\n         g.commit(message=message)\n-        # When doing releases of several packages in a row,\n-        # it is better to not push, because this means a needlessly high load on Jenkins.\n-        # Also, if you create a release and immediately push,\n-        # then Jenkins will not find the new release yet and fail:\n-        # it takes a few minutes for the release to be propagated to all PyPI mirrors.\n-        # Pushing still seems the best default, but let\'s have an easy way to not push.\n-        print("Checking PLONE_RELEASER_MULTI_PACKAGES env variable.")\n-        try:\n-            multi = int(os.getenv("PLONE_RELEASER_MULTI_PACKAGES"))\n-        except (TypeError, ValueError, AttributeError):\n-            print(\n-                "ERROR: could not parse PLONE_RELEASER_MULTI_PACKAGES env var. Ignoring it."\n-            )\n-            multi = False\n-        if multi:\n-            print(\n-                "PLONE_RELEASER_MULTI_PACKAGES env variable set, so not pushing to coredev."\n-            )\n-            return\n-        msg = "Ok to push coredev?"\n-        if branch:\n-            msg = f"Ok to push coredev {branch}?"\n-        if ask(msg, default=True):\n-            print("Pushing changes to server.")\n-            g.push()\n+        # We used to offer pushing the coredev change, but this is no longer a\n+        # good idea.\n+        print(\n+            "WARNING: a change in one or more buildout.coredev branches was made. "\n+            "Please wait a few minutes and then push this change. Otherwise the "\n+            "newly uploaded package is not yet available on all PyPI mirrors. "\n+            "This would cause Jenkins and GitHub Actions to fail."\n+        )\n+        return\n \n \n def update_other_core_branches(data):\n'

