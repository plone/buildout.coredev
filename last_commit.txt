Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2023-12-22T20:25:27+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/dca9b12e738200059f8d630bce4f1c9d8d033967

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..9365ef1b 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,22 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+max_line_length = 80\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 00000000..38918f42\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..b8edec02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,68 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release_ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex c2ea8a9a..486392f6 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,5 +1,56 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n *.pyc\n *.pyo\n-build\n-dist\n+\n+# translation related\n+*.mo\n+\n+# tools related\n+build/\n+.coverage\n+.*project\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+local.cfg\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex d915ae98..65dd6fd6 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,15 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "3333c742"\n+commit-id = "6a477508"\n+\n+[pyproject]\n+codespell_ignores = "alog,ist,"\n+dependencies_ignores = "[\'plone.namedfile\', \'z3c.blobfile\', \'Products.CMFDiffTool\']"\n+\n+[pre_commit]\n+extra_lines = """\n+        exclude: www/.*.pt\n+"""\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 3cdb1cc5..fffb9a5d 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -22,16 +23,40 @@ repos:\n     rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.1.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,31 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.22.0"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.1.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+        exclude: www/.*.pt\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex acb5196c..5c88d539 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,12 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +40,121 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,alog,ist,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n ignore-packages = [\'plone.namedfile\', \'z3c.blobfile\', \'Products.CMFDiffTool\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet,alog,ist"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex d9b6af75..7597a449 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,51 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +67,152 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n+##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir} -s Products.CMFEditions {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s Products.CMFEditions {posargs}\n+    rfbrowser init\n+    coverage run --branch --source Products.CMFEditions {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s Products.CMFEditions {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2023-12-22T20:25:27+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/26ae2d08f1ca0495ded09c00fbdbb4cd2ac0b81b

cleanup: remove unused file

Files changed:
D setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8f..0000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n'

Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2023-12-22T20:25:27+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/ebe23b2a6db192a64589a003d82670347371b1c7

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 5a6ba17..3f7f215 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,18 +1,22 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n-with open("README.rst") as myfile:\n-    long_description = myfile.read() + "\\n"\n-with open("CHANGES.rst") as myfile:\n-    long_description += myfile.read()\n version = "4.0.3.dev0"\n \n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n+\n setup(\n     name="Products.CMFEditions",\n     version=version,\n     description="Versioning for Plone",\n     long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n'

Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2023-12-22T20:25:27+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/44c1a73a3661042881cd0f6a9a9aa351a46a6066

fix: mark strings for translation

Files changed:
M Products/CMFEditions/browser/templates/diff.pt
M Products/CMFEditions/browser/templates/version_image_view.pt
M Products/CMFEditions/browser/templates/version_metadata_view.pt

b'diff --git a/Products/CMFEditions/browser/templates/diff.pt b/Products/CMFEditions/browser/templates/diff.pt\nindex 5f2ba8e..2c990b1 100644\n--- a/Products/CMFEditions/browser/templates/diff.pt\n+++ b/Products/CMFEditions/browser/templates/diff.pt\n@@ -243,6 +243,7 @@\n                       </pre>\n                     <p class="fieldDiff"\n                        tal:condition="not:has_ndiff"\n+                       i18n:translate=""\n                     >\n                         This field has no code difference view.\n                     </p>\n@@ -261,7 +262,7 @@\n                            condition="subdiffs"\n               >\n \n-                <h2>Changed files</h2>\n+                <h2 i18n:translate="">Changed files</h2>\n \n                 <ul tal:condition="subdiffs">\n                   <li tal:repeat="cs subdiffs">\n@@ -276,7 +277,7 @@\n               </tal:changed>\n \n               <tal:changed condition="view/changeset/getRemovedItems">\n-                <h2>Removed files</h2>\n+                <h2 i18n:translate="">Removed files</h2>\n                 <ul>\n                   <li tal:repeat="id view/changeset/getRemovedItems"\n                       tal:content="id"\n@@ -285,7 +286,7 @@\n               </tal:changed>\n \n               <tal:changed condition="view/changeset/getAddedItems">\n-                <h2>Added files</h2>\n+                <h2 i18n:translate="">Added files</h2>\n                 <ul tal:condition="view/changeset/getAddedItems">\n                   <li tal:repeat="id view/changeset/getAddedItems"><a tal:content="id"\n                        tal:attributes="\ndiff --git a/Products/CMFEditions/browser/templates/version_image_view.pt b/Products/CMFEditions/browser/templates/version_image_view.pt\nindex c4167ff..1a29640 100644\n--- a/Products/CMFEditions/browser/templates/version_image_view.pt\n+++ b/Products/CMFEditions/browser/templates/version_image_view.pt\n@@ -38,8 +38,10 @@\n \n           <span class="discreet visualNoPrint">\n             &mdash;\n-            <span i18n:translate="label_size">Size</span>:\n-                ${size}\n+            <span i18n:translate="label_size">Size</span><tal:ignore ignore="true"\n+                        i18n:ignore="true"\n+            >:\n+              ${size}</tal:ignore>\n             <span tal:condition="python:test(size, 0, 1)"\n                   i18n:translate="no_image_uploaded"\n             >\ndiff --git a/Products/CMFEditions/browser/templates/version_metadata_view.pt b/Products/CMFEditions/browser/templates/version_metadata_view.pt\nindex 252dfc5..ca60349 100644\n--- a/Products/CMFEditions/browser/templates/version_metadata_view.pt\n+++ b/Products/CMFEditions/browser/templates/version_metadata_view.pt\n@@ -12,7 +12,9 @@\n \n         <metal:metadata define-macro="metadata">\n \n-          <h1 class="documentFirstHeading">\n+          <h1 class="documentFirstHeading"\n+              i18n:translate=""\n+          >\n                 Metadata\n           </h1>\n           <div id="content-core">\n'

Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2023-12-22T20:25:28+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/cdcb1cc5cbf8b8f817ef66efa7a8483e9ace559c

fix: declare dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 3f7f215..ac6bf38 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -50,6 +50,7 @@\n             "plone.app.textfield",\n             "plone.base",\n             "plone.testing",\n+            "plone.namedfile",\n         ]\n     ),\n     install_requires=[\n'

Repository: Products.CMFEditions


Branch: refs/heads/master
Date: 2023-12-22T22:46:24+01:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFEditions/commit/f31865e3002d1a673cf0eb3fba54284fabcf480c

Merge pull request #99 from plone/config-with-default-template-22f401c4

Config with default template

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M Products/CMFEditions/browser/templates/diff.pt
M Products/CMFEditions/browser/templates/version_image_view.pt
M Products/CMFEditions/browser/templates/version_metadata_view.pt
M pyproject.toml
M setup.py
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..9365ef1b 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,22 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+max_line_length = 80\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 51%\nrename from setup.cfg\nrename to .flake8\nindex 0da8f8fb..38918f42 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -15,9 +13,10 @@ ignore =\n     # black takes care of spaces after commas\n     E231,\n \n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..b8edec02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,68 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release_ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex c2ea8a9a..486392f6 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,5 +1,56 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n *.pyc\n *.pyo\n-build\n-dist\n+\n+# translation related\n+*.mo\n+\n+# tools related\n+build/\n+.coverage\n+.*project\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+local.cfg\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex d915ae98..65dd6fd6 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,15 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "3333c742"\n+commit-id = "6a477508"\n+\n+[pyproject]\n+codespell_ignores = "alog,ist,"\n+dependencies_ignores = "[\'plone.namedfile\', \'z3c.blobfile\', \'Products.CMFDiffTool\']"\n+\n+[pre_commit]\n+extra_lines = """\n+        exclude: www/.*.pt\n+"""\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 3cdb1cc5..fffb9a5d 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -22,16 +23,40 @@ repos:\n     rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.1.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,31 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.22.0"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.1.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+        exclude: www/.*.pt\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/Products/CMFEditions/browser/templates/diff.pt b/Products/CMFEditions/browser/templates/diff.pt\nindex 5f2ba8e0..2c990b19 100644\n--- a/Products/CMFEditions/browser/templates/diff.pt\n+++ b/Products/CMFEditions/browser/templates/diff.pt\n@@ -243,6 +243,7 @@\n                       </pre>\n                     <p class="fieldDiff"\n                        tal:condition="not:has_ndiff"\n+                       i18n:translate=""\n                     >\n                         This field has no code difference view.\n                     </p>\n@@ -261,7 +262,7 @@\n                            condition="subdiffs"\n               >\n \n-                <h2>Changed files</h2>\n+                <h2 i18n:translate="">Changed files</h2>\n \n                 <ul tal:condition="subdiffs">\n                   <li tal:repeat="cs subdiffs">\n@@ -276,7 +277,7 @@\n               </tal:changed>\n \n               <tal:changed condition="view/changeset/getRemovedItems">\n-                <h2>Removed files</h2>\n+                <h2 i18n:translate="">Removed files</h2>\n                 <ul>\n                   <li tal:repeat="id view/changeset/getRemovedItems"\n                       tal:content="id"\n@@ -285,7 +286,7 @@\n               </tal:changed>\n \n               <tal:changed condition="view/changeset/getAddedItems">\n-                <h2>Added files</h2>\n+                <h2 i18n:translate="">Added files</h2>\n                 <ul tal:condition="view/changeset/getAddedItems">\n                   <li tal:repeat="id view/changeset/getAddedItems"><a tal:content="id"\n                        tal:attributes="\ndiff --git a/Products/CMFEditions/browser/templates/version_image_view.pt b/Products/CMFEditions/browser/templates/version_image_view.pt\nindex c4167ff5..1a29640d 100644\n--- a/Products/CMFEditions/browser/templates/version_image_view.pt\n+++ b/Products/CMFEditions/browser/templates/version_image_view.pt\n@@ -38,8 +38,10 @@\n \n           <span class="discreet visualNoPrint">\n             &mdash;\n-            <span i18n:translate="label_size">Size</span>:\n-                ${size}\n+            <span i18n:translate="label_size">Size</span><tal:ignore ignore="true"\n+                        i18n:ignore="true"\n+            >:\n+              ${size}</tal:ignore>\n             <span tal:condition="python:test(size, 0, 1)"\n                   i18n:translate="no_image_uploaded"\n             >\ndiff --git a/Products/CMFEditions/browser/templates/version_metadata_view.pt b/Products/CMFEditions/browser/templates/version_metadata_view.pt\nindex 252dfc53..ca603491 100644\n--- a/Products/CMFEditions/browser/templates/version_metadata_view.pt\n+++ b/Products/CMFEditions/browser/templates/version_metadata_view.pt\n@@ -12,7 +12,9 @@\n \n         <metal:metadata define-macro="metadata">\n \n-          <h1 class="documentFirstHeading">\n+          <h1 class="documentFirstHeading"\n+              i18n:translate=""\n+          >\n                 Metadata\n           </h1>\n           <div id="content-core">\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex acb5196c..5c88d539 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,12 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +40,121 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,alog,ist,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n ignore-packages = [\'plone.namedfile\', \'z3c.blobfile\', \'Products.CMFDiffTool\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet,alog,ist"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.py b/setup.py\nindex 5a6ba173..ac6bf38c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,18 +1,22 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n-with open("README.rst") as myfile:\n-    long_description = myfile.read() + "\\n"\n-with open("CHANGES.rst") as myfile:\n-    long_description += myfile.read()\n version = "4.0.3.dev0"\n \n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n+\n setup(\n     name="Products.CMFEditions",\n     version=version,\n     description="Versioning for Plone",\n     long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n@@ -46,6 +50,7 @@\n             "plone.app.textfield",\n             "plone.base",\n             "plone.testing",\n+            "plone.namedfile",\n         ]\n     ),\n     install_requires=[\ndiff --git a/tox.ini b/tox.ini\nindex d9b6af75..7597a449 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,51 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +67,152 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n+##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir} -s Products.CMFEditions {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s Products.CMFEditions {posargs}\n+    rfbrowser init\n+    coverage run --branch --source Products.CMFEditions {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s Products.CMFEditions {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

