Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-08-28T16:51:34+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/b8b1e546e84a7e66c22c20a1063c1c75463b9c39

black

Files changed:
M src/plone/restapi/services/types/add.py
M src/plone/restapi/services/types/delete.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_services_types.py
M src/plone/restapi/types/utils.py

b'diff --git a/src/plone/restapi/services/types/add.py b/src/plone/restapi/services/types/add.py\nindex 033c3b41b..a9162f835 100644\n--- a/src/plone/restapi/services/types/add.py\n+++ b/src/plone/restapi/services/types/add.py\n@@ -15,8 +15,7 @@\n \n @implementer(IPublishTraverse)\n class TypesPost(Service):\n-    """ Creates a new field/fieldset\n-    """\n+    """Creates a new field/fieldset"""\n \n     def __init__(self, context, request):\n         super(TypesPost, self).__init__(context, request)\ndiff --git a/src/plone/restapi/services/types/delete.py b/src/plone/restapi/services/types/delete.py\nindex 354c81e32..908017492 100644\n--- a/src/plone/restapi/services/types/delete.py\n+++ b/src/plone/restapi/services/types/delete.py\n@@ -14,8 +14,7 @@\n \n @implementer(IPublishTraverse)\n class TypesDelete(Service):\n-    """ Deletes a field/fieldset from content type\n-    """\n+    """Deletes a field/fieldset from content type"""\n \n     def __init__(self, context, request):\n         super(TypesDelete, self).__init__(context, request)\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 98d74b275..340af949e 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -627,7 +627,11 @@ def test_documentation_types_document_crud(self):\n             {\n                 "id": "author",\n                 "title": "Contact the author",\n-                "fields": ["author_email", "author_url", "author_name",],\n+                "fields": [\n+                    "author_email",\n+                    "author_url",\n+                    "author_name",\n+                ],\n             },\n             {"id": "contact_info", "title": "Contact info", "fields": []},\n         ]\n@@ -654,11 +658,15 @@ def test_documentation_types_document_crud(self):\n         #\n \n         # Remove field\n-        response = self.api_session.delete("/@types/Document/author_email",)\n+        response = self.api_session.delete(\n+            "/@types/Document/author_email",\n+        )\n         save_request_and_response_for_docs("types_document_delete_field", response)\n \n         # Remove fieldset\n-        response = self.api_session.delete("/@types/Document/contact_info",)\n+        response = self.api_session.delete(\n+            "/@types/Document/contact_info",\n+        )\n         save_request_and_response_for_docs("types_document_delete_fieldset", response)\n \n     def test_documentation_jwt_login(self):\ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 09ae69f69..75c13383d 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -224,7 +224,10 @@ def test_types_document_patch_one_fieldset(self):\n             json={\n                 "title": "Contact the author",\n                 "description": "Reach the author",\n-                "fields": ["author_url", "author_email",],\n+                "fields": [\n+                    "author_url",\n+                    "author_email",\n+                ],\n             },\n         )\n         self.assertEqual(response.status_code, 204)\n@@ -421,7 +424,9 @@ def test_types_document_put(self):\n         )  # noqa\n \n     def test_types_document_remove_field(self):\n-        response = self.api_session.delete("/@types/Document/author_email",)\n+        response = self.api_session.delete(\n+            "/@types/Document/author_email",\n+        )\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\n@@ -430,7 +435,9 @@ def test_types_document_remove_field(self):\n         self.assertTrue("author_email" not in response.json().get("properties"))  # noqa\n \n     def test_types_document_remove_fieldset(self):\n-        response = self.api_session.delete("/@types/Document/contact_info",)\n+        response = self.api_session.delete(\n+            "/@types/Document/contact_info",\n+        )\n         self.assertEqual(response.status_code, 204)\n \n         response = self.api_session.get("/@types/Document")\ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex aab9d908d..cd3d9b684 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -57,8 +57,7 @@\n \n @implementer(IDexterityContent)\n class FakeDXContext(object):\n-    """Fake DX content class, so we can re-use the DX field deserializers\n-    """\n+    """Fake DX content class, so we can re-use the DX field deserializers"""\n \n \n def create_form(context, request, base_schema, additional_schemata=None):\n@@ -272,9 +271,9 @@ def get_source_url(field, context, request):\n \n \n def serializeSchema(schema):\n-    """ Taken from plone.app.dexterity.serialize\n-        Finds the FTI and model associated with a schema, and synchronizes\n-        the schema to the FTI model_source attribute.\n+    """Taken from plone.app.dexterity.serialize\n+    Finds the FTI and model associated with a schema, and synchronizes\n+    the schema to the FTI model_source attribute.\n     """\n \n     # determine portal_type\n@@ -294,8 +293,7 @@ def serializeSchema(schema):\n \n \n def get_info_for_type(context, request, name):\n-    """ Get JSON info for the given portal type\n-    """\n+    """Get JSON info for the given portal type"""\n     schema = get_jsonschema_for_portal_type(name, getSite(), request)\n \n     if not hasattr(context, "schema"):\n@@ -322,8 +320,7 @@ def get_info_for_type(context, request, name):\n \n \n def get_info_for_field(context, request, name):\n-    """ Get JSON info for the given field name.\n-    """\n+    """Get JSON info for the given field name."""\n     field = context.publishTraverse(request, name)\n     adapter = queryMultiAdapter(\n         (field.field, context, request), interface=IJsonSchemaProvider\n@@ -335,8 +332,7 @@ def get_info_for_field(context, request, name):\n \n \n def get_info_for_fieldset(context, request, name):\n-    """ Get JSON info for the given fieldset name.\n-    """\n+    """Get JSON info for the given fieldset name."""\n     properties = {}\n     for fieldset in context.schema.queryTaggedValue(FIELDSETS_KEY, []):\n         if name != fieldset.__name__:\n@@ -359,8 +355,7 @@ def delete_field(context, request, name):\n \n \n def delete_fieldset(context, request, name):\n-    """ Taken from plone.schemaeditor 2.x `DeleteFieldset`\n-    """\n+    """Taken from plone.schemaeditor 2.x `DeleteFieldset`"""\n     new_fieldsets = []\n     fieldsets = context.schema.queryTaggedValue(FIELDSETS_KEY, [])\n     for fieldset in fieldsets:\n'

