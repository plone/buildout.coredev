Repository: plone.app.layout


Branch: refs/heads/master
Date: 2020-06-30T17:19:48+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.layout/commit/b0ccb249d0b1fc1aead289a5503933512341d351

Prevent breaking changes inside a minor Plone release

Fixes #239

Files changed:
A news/239.bugfix
M plone/app/layout/viewlets/common.py

b'diff --git a/news/239.bugfix b/news/239.bugfix\nnew file mode 100644\nindex 00000000..d1e2efb7\n--- /dev/null\n+++ b/news/239.bugfix\n@@ -0,0 +1 @@\n+Restore selectedTabs code that was removed in 3.4.1 to prevent breaking changes inside a minor Plone release. Plone doesn\'t use this code anymore, but third party addons may use it.\ndiff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 79f45617..60b118f2 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -394,6 +394,54 @@ def portal_tabs(self):\n         )\n         return portal_tabs_view.topLevelTabs()\n \n+    @deprecate("This method will be removed in Plone 6")\n+    def selectedTabs(self, default_tab="index_html", portal_tabs=()):\n+        portal = getToolByName(self.context, "portal_url").getPortalObject()\n+        plone_url = getNavigationRootObject(self.context, portal).absolute_url()\n+        plone_url_len = len(plone_url)\n+        request = self.request\n+        valid_actions = []\n+\n+        url = request["URL"]\n+        path = url[plone_url_len:]\n+        path_list = path.split("/")\n+        if len(path_list) <= 1:\n+            return {"portal": default_tab}\n+\n+        for action in portal_tabs:\n+            if not action["url"].startswith(plone_url):\n+                # In this case the action url is an external link. Then, we\n+                # avoid issues (bad portal_tab selection) continuing with next\n+                # action.\n+                continue\n+            action_path = action["url"][plone_url_len:]\n+            if not action_path.startswith("/"):\n+                action_path = "/" + action_path\n+            action_path_list = action_path.split("/")\n+            if action_path_list[1] == path_list[1]:\n+                # Make a list of the action ids, along with the path length\n+                # for choosing the longest (most relevant) path.\n+                valid_actions.append((len(action_path_list), action["id"]))\n+\n+        # Sort by path length, the longest matching path wins\n+        valid_actions.sort()\n+        if valid_actions:\n+            return {"portal": valid_actions[-1][1]}\n+\n+        return {"portal": default_tab}\n+\n+    @property\n+    @memoize\n+    @deprecate("This method will be removed in Plone 6")\n+    def selected_tabs(self):\n+        return self.selectedTabs(portal_tabs=self.portal_tabs)\n+\n+    @property\n+    @memoize\n+    @deprecate("This method will be removed in Plone 6")\n+    def selected_portal_tab(self):\n+        return self.selected_tabs["portal"]\n+\n \n class PersonalBarViewlet(ViewletBase):\n \n'

Repository: plone.app.layout


Branch: refs/heads/master
Date: 2020-06-30T22:09:27+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.layout/commit/bd91a54e5d059a428453b68a7adc9aa9d8b2770d

Merge pull request #240 from plone/239-bugfix

Prevent breaking changes inside a minor Plone release

Files changed:
A news/239.bugfix
M plone/app/layout/viewlets/common.py

b'diff --git a/news/239.bugfix b/news/239.bugfix\nnew file mode 100644\nindex 00000000..d1e2efb7\n--- /dev/null\n+++ b/news/239.bugfix\n@@ -0,0 +1 @@\n+Restore selectedTabs code that was removed in 3.4.1 to prevent breaking changes inside a minor Plone release. Plone doesn\'t use this code anymore, but third party addons may use it.\ndiff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 79f45617..60b118f2 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -394,6 +394,54 @@ def portal_tabs(self):\n         )\n         return portal_tabs_view.topLevelTabs()\n \n+    @deprecate("This method will be removed in Plone 6")\n+    def selectedTabs(self, default_tab="index_html", portal_tabs=()):\n+        portal = getToolByName(self.context, "portal_url").getPortalObject()\n+        plone_url = getNavigationRootObject(self.context, portal).absolute_url()\n+        plone_url_len = len(plone_url)\n+        request = self.request\n+        valid_actions = []\n+\n+        url = request["URL"]\n+        path = url[plone_url_len:]\n+        path_list = path.split("/")\n+        if len(path_list) <= 1:\n+            return {"portal": default_tab}\n+\n+        for action in portal_tabs:\n+            if not action["url"].startswith(plone_url):\n+                # In this case the action url is an external link. Then, we\n+                # avoid issues (bad portal_tab selection) continuing with next\n+                # action.\n+                continue\n+            action_path = action["url"][plone_url_len:]\n+            if not action_path.startswith("/"):\n+                action_path = "/" + action_path\n+            action_path_list = action_path.split("/")\n+            if action_path_list[1] == path_list[1]:\n+                # Make a list of the action ids, along with the path length\n+                # for choosing the longest (most relevant) path.\n+                valid_actions.append((len(action_path_list), action["id"]))\n+\n+        # Sort by path length, the longest matching path wins\n+        valid_actions.sort()\n+        if valid_actions:\n+            return {"portal": valid_actions[-1][1]}\n+\n+        return {"portal": default_tab}\n+\n+    @property\n+    @memoize\n+    @deprecate("This method will be removed in Plone 6")\n+    def selected_tabs(self):\n+        return self.selectedTabs(portal_tabs=self.portal_tabs)\n+\n+    @property\n+    @memoize\n+    @deprecate("This method will be removed in Plone 6")\n+    def selected_portal_tab(self):\n+        return self.selected_tabs["portal"]\n+\n \n class PersonalBarViewlet(ViewletBase):\n \n'

