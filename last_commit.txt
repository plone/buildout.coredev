Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-05-31T10:33:49+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/0bf7db2aae2ccb1ec3b951ee7f5d692579b70b22

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/53dc5b4c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..bb09dd7 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -37,3 +38,12 @@ indent_size = 2\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 0000000..c156803\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,14 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..4748f0f\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex 96329a7..f89f86b 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,7 +1,49 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n *.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+\n+# venv / buildout related\n bin/\n-lib/\n-include/\n-.installed.cfg\n develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 4f67994..561f26d 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "5623f8b3"\n+commit-id = "53dc5b4c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5c..46b7aec 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -32,6 +33,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +49,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/53dc5b4c.internal b/news/53dc5b4c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/53dc5b4c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 078bf8d..46d3d7a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -42,22 +43,91 @@ profile = "plone"\n [tool.black]\n target-version = ["py38"]\n \n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'plone.formwidget.contenttree\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 0fd5963..239b021 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,25 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n \n-[testenv]\n-allowlist_externals =\n-    sh\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,17 +41,28 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the package\'s dependencies\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -52,3 +72,60 @@ commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.relationfield {posargs}\n extras =\n     test\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.relationfield {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+usedevelop = true\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-05-31T10:34:09+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/8fbe53e0a2b0944f5997760243c20642a87082ee

chore: removed no longer needed setup.cfg.

Files changed:
D setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8f..0000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n'

Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-05-31T10:38:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/4e66fd21e8d8b3f594cd4f308995586b0ac0289d

Removed unneeded dependency on plone.app.dexterity.

This was only used for getting a message factory.  We get it from plone.base now.

`plone.app.dexterity` remains a test dependency though.

Files changed:
A news/1.bugfix
M plone/app/relationfield/behavior.py
M plone/app/relationfield/schemaeditor.py
M setup.py

b'diff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..fe7dc1b\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,3 @@\n+Removed unneeded dependency on plone.app.dexterity.\n+It remains a test dependency though.\n+[maurits]\ndiff --git a/plone/app/relationfield/behavior.py b/plone/app/relationfield/behavior.py\nindex 5ac5c7e..d872a91 100644\n--- a/plone/app/relationfield/behavior.py\n+++ b/plone/app/relationfield/behavior.py\n@@ -1,7 +1,7 @@\n-from plone.app.dexterity import _\n from plone.app.z3cform.widget import RelatedItemsFieldWidget\n from plone.autoform import directives as form\n from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base import PloneMessageFactory as _\n from plone.supermodel import model\n from plone.supermodel.directives import fieldset\n from z3c.relationfield.schema import RelationChoice\ndiff --git a/plone/app/relationfield/schemaeditor.py b/plone/app/relationfield/schemaeditor.py\nindex b729501..d14f797 100644\n--- a/plone/app/relationfield/schemaeditor.py\n+++ b/plone/app/relationfield/schemaeditor.py\n@@ -1,4 +1,5 @@\n from plone.app.vocabularies.catalog import CatalogSource\n+from plone.base import PloneMessageFactory as _\n from plone.schemaeditor.fields import FieldFactory\n from plone.schemaeditor.interfaces import IFieldEditFormSchema\n from plone.schemaeditor.interfaces import IFieldFactory\n@@ -8,14 +9,10 @@\n from zope import schema\n from zope.component import adapter\n from zope.component import queryUtility\n-from zope.i18n import MessageFactory\n from zope.interface import implementer\n from zope.intid.interfaces import IIntIds\n \n \n-_ = MessageFactory("plone")\n-\n-\n @implementer(IFieldFactory)\n class RelationFieldFactory(FieldFactory):\n     def available(self):\ndiff --git a/setup.py b/setup.py\nindex 74bc9db..3b1bc87 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -54,7 +54,6 @@\n         "plone.app.z3cform>=1.1.0",\n         "BTrees",\n         "Products.GenericSetup",\n-        "plone.app.dexterity",\n         "plone.behavior",\n         "plone.dexterity",\n         "plone.uuid",\n'

Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-05-31T10:48:53+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/64f754e802a44b079c7a3196fc1e60bb7969511a

chore: define dependencies.

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 3b1bc87..4e2b96d 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -36,41 +36,34 @@\n     python_requires=">=3.8",\n     install_requires=[\n         "setuptools",\n-        "zope.interface",\n-        "zope.component",\n-        "zope.schema",\n-        "zope.intid",\n+        "plone.base",\n+        # Keep Products.CMFCore because z3c.dependencychecker does not yet\n+        # check transitive dependencies in our config.\n+        "Products.CMFCore",\n         "five.intid",\n         "plone.app.intid",\n-        "z3c.form",\n-        "z3c.relationfield>0.7.999",\n-        "z3c.formwidget.query",\n-        "plone.autoform",\n-        "plone.supermodel",\n         "plone.app.vocabularies",\n-        "plone.schemaeditor>=1.3.5",\n-        "Products.CMFCore",\n-        "plone.rfc822",\n-        "plone.app.z3cform>=1.1.0",\n-        "BTrees",\n-        "Products.GenericSetup",\n+        "plone.app.z3cform",\n+        "plone.autoform",\n         "plone.behavior",\n         "plone.dexterity",\n+        "plone.formwidget.contenttree",\n+        "plone.rfc822",\n+        "plone.schemaeditor",\n+        "plone.supermodel",\n         "plone.uuid",\n-        "plone.z3cform",\n+        "z3c.form",\n         "z3c.objpath",\n+        "z3c.formwidget.query",\n+        "z3c.relationfield",\n         "zc.relation",\n     ],\n     extras_require={\n         "test": [\n-            "persistent",\n             "plone.app.contenttypes[test]",\n             "plone.app.testing",\n             "plone.app.dexterity",\n             "plone.testing",\n         ]\n     },\n-    entry_points="""\n-    # -*- Entry points: -*-\n-    """,\n )\n'

Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-05-31T11:10:04+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/429fee598c4e77c4eb3dc70abb92618891247ad3

Made plone.formwidget.contenttree a test dependency.

Its zcml is only loaded conditionally, except in the tests.

Files changed:
M .meta.toml
M pyproject.toml
M setup.py

b'diff --git a/.meta.toml b/.meta.toml\nindex 561f26d..55dbc31 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -4,3 +4,6 @@\n [meta]\n template = "default"\n commit-id = "53dc5b4c"\n+\n+[pyproject]\n+dependencies_ignores = "[\'plone.formwidget.contenttree\']"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 46d3d7a..0682a3c 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -92,6 +92,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'plone.formwidget.contenttree\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex 4e2b96d..fbf7aa1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -47,7 +47,6 @@\n         "plone.autoform",\n         "plone.behavior",\n         "plone.dexterity",\n-        "plone.formwidget.contenttree",\n         "plone.rfc822",\n         "plone.schemaeditor",\n         "plone.supermodel",\n@@ -63,6 +62,7 @@\n             "plone.app.contenttypes[test]",\n             "plone.app.testing",\n             "plone.app.dexterity",\n+            "plone.formwidget.contenttree",\n             "plone.testing",\n         ]\n     },\n'

Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-05-31T11:19:04+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/67da253a6df1a7a23d08899ac4c5e6d95e24b393

Fix coverage report by ignoring files that do not exist.

Files changed:
M pyproject.toml

b'diff --git a/pyproject.toml b/pyproject.toml\nindex 0682a3c..e32cde8 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -115,6 +115,10 @@ ignore = [\n     "mx.ini",\n \n ]\n+\n+[tool.coverage.report]\n+ignore_errors = true\n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pyproject]\n'

Repository: plone.app.relationfield


Branch: refs/heads/master
Date: 2023-06-01T10:04:23+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.relationfield/commit/610b1a4f73a337e1070a7acc7f05e1cc5d2c8861

Merge pull request #39 from plone/config-with-default-template-c81b8da7

Removed unneeded dependency on plone.app.dexterity.

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/1.bugfix
A news/53dc5b4c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M plone/app/relationfield/behavior.py
M plone/app/relationfield/schemaeditor.py
M pyproject.toml
M setup.py
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..bb09dd7 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -37,3 +38,12 @@ indent_size = 2\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 72%\nrename from setup.cfg\nrename to .flake8\nindex 0da8f8f..c156803 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -14,10 +12,3 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..4748f0f\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex 96329a7..f89f86b 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,7 +1,49 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n *.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+\n+# venv / buildout related\n bin/\n-lib/\n-include/\n-.installed.cfg\n develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 4f67994..55dbc31 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "5623f8b3"\n+commit-id = "53dc5b4c"\n+\n+[pyproject]\n+dependencies_ignores = "[\'plone.formwidget.contenttree\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5c..46b7aec 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -32,6 +33,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +49,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..fe7dc1b\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,3 @@\n+Removed unneeded dependency on plone.app.dexterity.\n+It remains a test dependency though.\n+[maurits]\ndiff --git a/news/53dc5b4c.internal b/news/53dc5b4c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/53dc5b4c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/relationfield/behavior.py b/plone/app/relationfield/behavior.py\nindex 5ac5c7e..d872a91 100644\n--- a/plone/app/relationfield/behavior.py\n+++ b/plone/app/relationfield/behavior.py\n@@ -1,7 +1,7 @@\n-from plone.app.dexterity import _\n from plone.app.z3cform.widget import RelatedItemsFieldWidget\n from plone.autoform import directives as form\n from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base import PloneMessageFactory as _\n from plone.supermodel import model\n from plone.supermodel.directives import fieldset\n from z3c.relationfield.schema import RelationChoice\ndiff --git a/plone/app/relationfield/schemaeditor.py b/plone/app/relationfield/schemaeditor.py\nindex b729501..d14f797 100644\n--- a/plone/app/relationfield/schemaeditor.py\n+++ b/plone/app/relationfield/schemaeditor.py\n@@ -1,4 +1,5 @@\n from plone.app.vocabularies.catalog import CatalogSource\n+from plone.base import PloneMessageFactory as _\n from plone.schemaeditor.fields import FieldFactory\n from plone.schemaeditor.interfaces import IFieldEditFormSchema\n from plone.schemaeditor.interfaces import IFieldFactory\n@@ -8,14 +9,10 @@\n from zope import schema\n from zope.component import adapter\n from zope.component import queryUtility\n-from zope.i18n import MessageFactory\n from zope.interface import implementer\n from zope.intid.interfaces import IIntIds\n \n \n-_ = MessageFactory("plone")\n-\n-\n @implementer(IFieldFactory)\n class RelationFieldFactory(FieldFactory):\n     def available(self):\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 078bf8d..e32cde8 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -42,22 +43,96 @@ profile = "plone"\n [tool.black]\n target-version = ["py38"]\n \n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n ignore-packages = [\'plone.formwidget.contenttree\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+\n+[tool.coverage.report]\n+ignore_errors = true\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.py b/setup.py\nindex 74bc9db..fbf7aa1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -36,42 +36,34 @@\n     python_requires=">=3.8",\n     install_requires=[\n         "setuptools",\n-        "zope.interface",\n-        "zope.component",\n-        "zope.schema",\n-        "zope.intid",\n+        "plone.base",\n+        # Keep Products.CMFCore because z3c.dependencychecker does not yet\n+        # check transitive dependencies in our config.\n+        "Products.CMFCore",\n         "five.intid",\n         "plone.app.intid",\n-        "z3c.form",\n-        "z3c.relationfield>0.7.999",\n-        "z3c.formwidget.query",\n-        "plone.autoform",\n-        "plone.supermodel",\n         "plone.app.vocabularies",\n-        "plone.schemaeditor>=1.3.5",\n-        "Products.CMFCore",\n-        "plone.rfc822",\n-        "plone.app.z3cform>=1.1.0",\n-        "BTrees",\n-        "Products.GenericSetup",\n-        "plone.app.dexterity",\n+        "plone.app.z3cform",\n+        "plone.autoform",\n         "plone.behavior",\n         "plone.dexterity",\n+        "plone.rfc822",\n+        "plone.schemaeditor",\n+        "plone.supermodel",\n         "plone.uuid",\n-        "plone.z3cform",\n+        "z3c.form",\n         "z3c.objpath",\n+        "z3c.formwidget.query",\n+        "z3c.relationfield",\n         "zc.relation",\n     ],\n     extras_require={\n         "test": [\n-            "persistent",\n             "plone.app.contenttypes[test]",\n             "plone.app.testing",\n             "plone.app.dexterity",\n+            "plone.formwidget.contenttree",\n             "plone.testing",\n         ]\n     },\n-    entry_points="""\n-    # -*- Entry points: -*-\n-    """,\n )\ndiff --git a/tox.ini b/tox.ini\nindex 0fd5963..239b021 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,25 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n \n-[testenv]\n-allowlist_externals =\n-    sh\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,17 +41,28 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the package\'s dependencies\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -52,3 +72,60 @@ commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.relationfield {posargs}\n extras =\n     test\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.relationfield {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+usedevelop = true\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

