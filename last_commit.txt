Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-06-18T11:49:21+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/0f6bfd01d3a9b8b2fd6dd24c962fb61ee54ec3a2

Remove duplicate test_serialize_to_json_collection_include_items function. (#967)

Files changed:
M src/plone/restapi/tests/test_serializer.py

b'diff --git a/src/plone/restapi/tests/test_serializer.py b/src/plone/restapi/tests/test_serializer.py\nindex 43d9825d4..10e12b8a4 100644\n--- a/src/plone/restapi/tests/test_serializer.py\n+++ b/src/plone/restapi/tests/test_serializer.py\n@@ -392,40 +392,6 @@ def test_serialize_to_json_collection_include_items(self):\n         self.assertEqual(items[1]["title"], self.portal.doc2.Title())\n         self.assertEqual(serialized.get("items_total"), 2)\n \n-    def test_serialize_to_json_collection_include_items(self):\n-        self.portal.invokeFactory("Collection", id="collection1")\n-        self.portal.collection1.title = "My Collection"\n-        self.portal.collection1.description = u"This is a collection with two documents"\n-        self.portal.collection1.query = [\n-            {\n-                "i": "portal_type",\n-                "o": "plone.app.querystring.operation.string.is",\n-                "v": "Document",\n-            }\n-        ]\n-        self.portal.invokeFactory("Document", id="doc2", title="Document 2")\n-        self.portal.doc1.reindexObject()\n-        self.portal.doc2.reindexObject()\n-\n-        self.assertEqual(\n-            u"Collection", self.serialize(self.portal.collection1).get("@type")\n-        )\n-        self.assertEqual(\n-            u"Collection", self.serialize(self.portal.collection1).get("@type")\n-        )\n-\n-        self.request.form["include_items"] = False\n-        without_items = self.serialize(self.portal.collection1)\n-        self.assertFalse("items" in without_items)\n-        self.assertFalse("items_total" in without_items)\n-\n-        self.request.form["include_items"] = True\n-        serialized = self.serialize(self.portal.collection1)\n-        items = serialized.get("items")\n-        self.assertEqual(items[0]["title"], self.portal.doc1.Title())\n-        self.assertEqual(items[1]["title"], self.portal.doc2.Title())\n-        self.assertEqual(serialized.get("items_total"), 2)\n-\n     def test_serialize_returns_site_root_common(self):\n         self.assertIn("title", self.serialize(self.portal))\n         self.assertIn("description", self.serialize(self.portal))\n'

