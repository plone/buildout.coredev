Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-11-04T13:05:15-05:00
Author: flipmcf (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/b8d3970e4f6f282669153d0022685395fadea19e

use base64 encoding for safe vocabulary tokens

Files changed:
M plone/app/vocabularies/terms.py

b'diff --git a/plone/app/vocabularies/terms.py b/plone/app/vocabularies/terms.py\nindex 5548de7..7732088 100644\n--- a/plone/app/vocabularies/terms.py\n+++ b/plone/app/vocabularies/terms.py\n@@ -1,5 +1,5 @@\n # -*- coding: utf-8 -*-\n-from binascii import b2a_qp\n+from binascii import b2a_base64\n from plone.app.vocabularies.interfaces import IBrowsableTerm\n from plone.app.vocabularies.interfaces import ITermWithDescription\n from Products.CMFPlone.utils import safe_unicode\n@@ -25,7 +25,10 @@ def safe_simpleterm_from_value(value):\n     - token need cleaned up: Vocabulary term tokens *must* be 7 bit values\n     - anything for display has to be cleaned up, titles *must* be unicode\n     """\n-    return SimpleTerm(value, b2a_qp(safe_encode(value)), safe_unicode(value))\n+    return SimpleTerm(value,\n+                      b2a_base64(safe_encode(value), newline=False),\n+                      safe_unicode(value)\n+                      )\n \n \n def safe_simplevocabulary_from_values(values, query=None):\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-11-04T13:22:42-05:00
Author: Flip McFadden (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/923f0ccd80ba87a37918e828fcdf551d25383baa

Create 64.bugfix

Files changed:
A news/64.bugfix

b'diff --git a/news/64.bugfix b/news/64.bugfix\nnew file mode 100644\nindex 0000000..ebf2f98\n--- /dev/null\n+++ b/news/64.bugfix\n@@ -0,0 +1,2 @@\n+change vocabulary tokens to be base64 encoded and make sure they do not have newlines.\n+see https://community.plone.org/t/tags-subject-field-mangling-long-terms/13067\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-11-04T14:39:31-05:00
Author: Flip McFadden (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/a1fec9a280ede4afc443c07dc84bb7e7bef94bde

Update plone/app/vocabularies/terms.py

Co-authored-by: Jens W. Klein &lt;jk@kleinundpartner.at&gt;

Files changed:
M plone/app/vocabularies/terms.py

b'diff --git a/plone/app/vocabularies/terms.py b/plone/app/vocabularies/terms.py\nindex 7732088..a4fb7ac 100644\n--- a/plone/app/vocabularies/terms.py\n+++ b/plone/app/vocabularies/terms.py\n@@ -25,10 +25,14 @@ def safe_simpleterm_from_value(value):\n     - token need cleaned up: Vocabulary term tokens *must* be 7 bit values\n     - anything for display has to be cleaned up, titles *must* be unicode\n     """\n-    return SimpleTerm(value,\n-                      b2a_base64(safe_encode(value), newline=False),\n-                      safe_unicode(value)\n-                      )\n+    if isinstance(value, six.text_type):\n+        try:\n+            token = value.decode(\'ascii\')\n+        except UnicodeDecodeError:\n+            token = b2a_base64(safe_encode(value)).strip()\n+    else:\n+        token = b2a_base64(safe_encode(value)).strip()\n+    return SimpleTerm(value, token, safe_unicode(value))\n \n \n def safe_simplevocabulary_from_values(values, query=None):\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-11-04T14:41:24-05:00
Author: Flip McFadden (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/e2dcab98e13a204e5dfbcfcd24cabe751a7a4837

Update terms.py

Files changed:
M plone/app/vocabularies/terms.py

b'diff --git a/plone/app/vocabularies/terms.py b/plone/app/vocabularies/terms.py\nindex a4fb7ac..d25b1d2 100644\n--- a/plone/app/vocabularies/terms.py\n+++ b/plone/app/vocabularies/terms.py\n@@ -27,7 +27,7 @@ def safe_simpleterm_from_value(value):\n     """\n     if isinstance(value, six.text_type):\n         try:\n-            token = value.decode(\'ascii\')\n+            token = value.encode(\'ascii\')\n         except UnicodeDecodeError:\n             token = b2a_base64(safe_encode(value)).strip()\n     else:\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-11-04T15:02:01-05:00
Author: flipmcf (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/f05d3b4b5805c45af23efada7cef98ba459478b1

we are encoding here, not decoding

Files changed:
M plone/app/vocabularies/terms.py

b"diff --git a/plone/app/vocabularies/terms.py b/plone/app/vocabularies/terms.py\nindex d25b1d2..e791018 100644\n--- a/plone/app/vocabularies/terms.py\n+++ b/plone/app/vocabularies/terms.py\n@@ -28,7 +28,7 @@ def safe_simpleterm_from_value(value):\n     if isinstance(value, six.text_type):\n         try:\n             token = value.encode('ascii')\n-        except UnicodeDecodeError:\n+        except UnicodeEncodeError:\n             token = b2a_base64(safe_encode(value)).strip()\n     else:\n         token = b2a_base64(safe_encode(value)).strip()\n"

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2021-01-21T13:16:15-05:00
Author: flipmcf (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/48a8869ed196e774573cb7f78c40efb874d8e44a

use base64.urlsafe_b64encode to create tokens

Files changed:
M plone/app/vocabularies/catalog.py
M plone/app/vocabularies/terms.py

b'diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py\nindex bed8130..e1d7e50 100644\n--- a/plone/app/vocabularies/catalog.py\n+++ b/plone/app/vocabularies/catalog.py\n@@ -437,11 +437,8 @@ class KeywordsVocabulary(object):\n         >>> sorted(result.by_value) == expected\n         True\n \n-        ... but tokens are bytes on Python 2 and text in Python 3\n-        >>> if six.PY2:\n-        ...     expected = [b\'bar\', b\'baz\', b\'blee\', b\'foo\', b\'non-=C3=83=C2=A5scii\']\n-        ... else:\n-        ...     expected = [u\'bar\', u\'baz\', u\'blee\', u\'foo\', u\'non-=C3=A5scii\']\n+        but tokens are base64 encoded text\n+        >>> expected = [\'YmF6\', \'YmFy\', \'YmxlZQ==\', \'Zm9v\', \'bm9uLcOlc2NpaQ==\']\n         >>> sorted(result.by_token) == expected\n         True\n \n@@ -458,15 +455,12 @@ class KeywordsVocabulary(object):\n         >>> tool.indexes[\'Subject\'] = index\n         >>> vocab = KeywordsVocabulary()\n         >>> result = vocab(context)\n-        >>> if six.PY2:\n-        ...     expected = [b\'=C3=83=C2=A4=C3=83=C2=BC=C3=83=C2=B6\', b\'nix\']\n-        ... else:\n-        ...     expected = [u\'=C3=A4=C3=BC=C3=B6\', u\'nix\']\n+        >>> expected = [\'bml4\', \'w6TDvMO2\']\n         >>> sorted(result.by_token) == expected\n         True\n         >>> set(result.by_value) == {u\'nix\', u\'\xc3\xa4\xc3\xbc\xc3\xb6\'}\n         True\n-        >>> result.getTermByToken(expected[0]).title == u\'\xc3\xa4\xc3\xbc\xc3\xb6\'\n+        >>> result.getTermByToken(expected[0]).title == u\'nix\'\n         True\n \n     """\ndiff --git a/plone/app/vocabularies/terms.py b/plone/app/vocabularies/terms.py\nindex e791018..7251da8 100644\n--- a/plone/app/vocabularies/terms.py\n+++ b/plone/app/vocabularies/terms.py\n@@ -1,5 +1,5 @@\n # -*- coding: utf-8 -*-\n-from binascii import b2a_base64\n+from base64 import urlsafe_b64encode\n from plone.app.vocabularies.interfaces import IBrowsableTerm\n from plone.app.vocabularies.interfaces import ITermWithDescription\n from Products.CMFPlone.utils import safe_unicode\n@@ -23,16 +23,10 @@ def safe_simpleterm_from_value(value):\n     """create SimpleTerm from an untrusted value.\n \n     - token need cleaned up: Vocabulary term tokens *must* be 7 bit values\n+    - tokens cannot contain newlines\n     - anything for display has to be cleaned up, titles *must* be unicode\n     """\n-    if isinstance(value, six.text_type):\n-        try:\n-            token = value.encode(\'ascii\')\n-        except UnicodeEncodeError:\n-            token = b2a_base64(safe_encode(value)).strip()\n-    else:\n-        token = b2a_base64(safe_encode(value)).strip()\n-    return SimpleTerm(value, token, safe_unicode(value))\n+    return SimpleTerm(value, urlsafe_b64encode(safe_encode(value)), safe_unicode(value))\n \n \n def safe_simplevocabulary_from_values(values, query=None):\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2021-01-21T13:29:01-05:00
Author: Flip McFadden (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/5811e8080cfe7f4b302c6f8cf8a21492824f1cf5

Update 64.bugfix

Files changed:
M news/64.bugfix

b'diff --git a/news/64.bugfix b/news/64.bugfix\nindex ebf2f98..da3b886 100644\n--- a/news/64.bugfix\n+++ b/news/64.bugfix\n@@ -1,2 +1,2 @@\n-change vocabulary tokens to be base64 encoded and make sure they do not have newlines.\n-see https://community.plone.org/t/tags-subject-field-mangling-long-terms/13067\n+change vocabulary tokens to use base64.urlsafe_b64encode().  No newlines and safe to use as an xml attribute\n+see https://community.plone.org/t/tags-subject-field-mangling-long-terms/13067 [flipmcf]\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2021-01-26T14:14:22-05:00
Author: flipmcf (flipmcf) <flipmcf@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/69246160398a470f87d9d531079b6e6ee44affdb

use unicode docstring so doctests pass in python 2 and 3

Files changed:
M plone/app/vocabularies/catalog.py

b'diff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py\nindex e1d7e50..e279c5b 100644\n--- a/plone/app/vocabularies/catalog.py\n+++ b/plone/app/vocabularies/catalog.py\n@@ -402,7 +402,7 @@ def results(self, name):\n \n @implementer(IVocabularyFactory)\n class KeywordsVocabulary(object):\n-    """Vocabulary factory listing all catalog keywords from the \'Subject\' index\n+    u"""Vocabulary factory listing all catalog keywords from the \'Subject\' index\n \n         >>> from plone.app.vocabularies.tests.base import DummyCatalog\n         >>> from plone.app.vocabularies.tests.base import create_context\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2021-01-27T10:43:39+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.vocabularies/commit/0917147f63c0313f6153a992e1a8891de5f0642a

Merge pull request #65 from RadioFreeAsia/master

Use base64 encoding for safe vocabulary tokens

Files changed:
A news/64.bugfix
M plone/app/vocabularies/catalog.py
M plone/app/vocabularies/terms.py

b'diff --git a/news/64.bugfix b/news/64.bugfix\nnew file mode 100644\nindex 0000000..da3b886\n--- /dev/null\n+++ b/news/64.bugfix\n@@ -0,0 +1,2 @@\n+change vocabulary tokens to use base64.urlsafe_b64encode().  No newlines and safe to use as an xml attribute\n+see https://community.plone.org/t/tags-subject-field-mangling-long-terms/13067 [flipmcf]\ndiff --git a/plone/app/vocabularies/catalog.py b/plone/app/vocabularies/catalog.py\nindex bed8130..e279c5b 100644\n--- a/plone/app/vocabularies/catalog.py\n+++ b/plone/app/vocabularies/catalog.py\n@@ -402,7 +402,7 @@ def results(self, name):\n \n @implementer(IVocabularyFactory)\n class KeywordsVocabulary(object):\n-    """Vocabulary factory listing all catalog keywords from the \'Subject\' index\n+    u"""Vocabulary factory listing all catalog keywords from the \'Subject\' index\n \n         >>> from plone.app.vocabularies.tests.base import DummyCatalog\n         >>> from plone.app.vocabularies.tests.base import create_context\n@@ -437,11 +437,8 @@ class KeywordsVocabulary(object):\n         >>> sorted(result.by_value) == expected\n         True\n \n-        ... but tokens are bytes on Python 2 and text in Python 3\n-        >>> if six.PY2:\n-        ...     expected = [b\'bar\', b\'baz\', b\'blee\', b\'foo\', b\'non-=C3=83=C2=A5scii\']\n-        ... else:\n-        ...     expected = [u\'bar\', u\'baz\', u\'blee\', u\'foo\', u\'non-=C3=A5scii\']\n+        but tokens are base64 encoded text\n+        >>> expected = [\'YmF6\', \'YmFy\', \'YmxlZQ==\', \'Zm9v\', \'bm9uLcOlc2NpaQ==\']\n         >>> sorted(result.by_token) == expected\n         True\n \n@@ -458,15 +455,12 @@ class KeywordsVocabulary(object):\n         >>> tool.indexes[\'Subject\'] = index\n         >>> vocab = KeywordsVocabulary()\n         >>> result = vocab(context)\n-        >>> if six.PY2:\n-        ...     expected = [b\'=C3=83=C2=A4=C3=83=C2=BC=C3=83=C2=B6\', b\'nix\']\n-        ... else:\n-        ...     expected = [u\'=C3=A4=C3=BC=C3=B6\', u\'nix\']\n+        >>> expected = [\'bml4\', \'w6TDvMO2\']\n         >>> sorted(result.by_token) == expected\n         True\n         >>> set(result.by_value) == {u\'nix\', u\'\xc3\xa4\xc3\xbc\xc3\xb6\'}\n         True\n-        >>> result.getTermByToken(expected[0]).title == u\'\xc3\xa4\xc3\xbc\xc3\xb6\'\n+        >>> result.getTermByToken(expected[0]).title == u\'nix\'\n         True\n \n     """\ndiff --git a/plone/app/vocabularies/terms.py b/plone/app/vocabularies/terms.py\nindex 5548de7..7251da8 100644\n--- a/plone/app/vocabularies/terms.py\n+++ b/plone/app/vocabularies/terms.py\n@@ -1,5 +1,5 @@\n # -*- coding: utf-8 -*-\n-from binascii import b2a_qp\n+from base64 import urlsafe_b64encode\n from plone.app.vocabularies.interfaces import IBrowsableTerm\n from plone.app.vocabularies.interfaces import ITermWithDescription\n from Products.CMFPlone.utils import safe_unicode\n@@ -23,9 +23,10 @@ def safe_simpleterm_from_value(value):\n     """create SimpleTerm from an untrusted value.\n \n     - token need cleaned up: Vocabulary term tokens *must* be 7 bit values\n+    - tokens cannot contain newlines\n     - anything for display has to be cleaned up, titles *must* be unicode\n     """\n-    return SimpleTerm(value, b2a_qp(safe_encode(value)), safe_unicode(value))\n+    return SimpleTerm(value, urlsafe_b64encode(safe_encode(value)), safe_unicode(value))\n \n \n def safe_simplevocabulary_from_values(values, query=None):\n'

