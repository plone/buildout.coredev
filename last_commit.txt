Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-18T08:56:38+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.autoform/commit/484d1e6e4dd50793da87e72db89553e4ac49501f

compatibility with latest z3c.form

Files changed:
M plone/autoform/autoform.rst
M plone/autoform/tests/test_doctests.py
M plone/autoform/view.txt

b"diff --git a/plone/autoform/autoform.rst b/plone/autoform/autoform.rst\nindex 2b00f09..3966118 100644\n--- a/plone/autoform/autoform.rst\n+++ b/plone/autoform/autoform.rst\n@@ -167,7 +167,7 @@ and 'groups' properties will be set.\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['one', 'two', 'three', 'four', 'five', 'six',\n      'ISupplementarySchema.one', 'ISupplementarySchema.two',\n      'IOtherSchema.three', 'IOtherSchema.four',\n@@ -230,7 +230,7 @@ Fields can be moved like this::\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['IOtherSchema.four',\n     'ISupplementarySchema.one',\n     'two',\n@@ -275,7 +275,7 @@ The results of all of this can be seen below::\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['IOtherSchema.four',\n      'ISupplementarySchema.one',\n      'two',\n@@ -317,7 +317,7 @@ has taken the label and description from the first definition::\n     'Fieldset one'\n     >>> test_form.groups[0].description\n     'Description of fieldset one'\n-    >>> test_form.groups[0].fields.keys()\n+    >>> list(test_form.groups[0].fields.keys())\n     ['three', 'IOtherSchema.three']\n \n Pre-traversal\n@@ -336,7 +336,7 @@ return.\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['IOtherSchema.four', 'ISupplementarySchema.one', 'two',\n     'ISupplementarySchema.two', 'one', 'five', 'six',\n     'IOtherSchema.six', 'IOtherSchema.five']\n@@ -391,7 +391,7 @@ that this may cause clashes if fields in different schemata share a name.\n The default fields are those from the base schema, minus the one moved to\n another fieldset.\n \n-    >>> combi_form.fields.keys()\n+    >>> list(combi_form.fields.keys())\n     ['title', 'description', 'hidden_secret']\n \n     >>> combi_form.widgets['hidden_secret'].mode\n@@ -401,7 +401,7 @@ Each additional schema then has its own fields. Note that setting the 'dates'\n fieldset in the base schema had the effect of giving a more specific\n label to the automatically created group for the Dates schema.\n \n-    >>> [(g.__name__, g.label, g.description, g.fields.keys(),) for g in combi_form.groups]\n+    >>> [(g.__name__, g.label, g.description, list(g.fields.keys()),) for g in combi_form.groups]\n     [('Dates', 'Cool dates', None, ['creation_date', 'start_date', 'end_date']),\n      ('Ownership', 'Ownership', 'Ownership information', ['owner'])]\n \ndiff --git a/plone/autoform/tests/test_doctests.py b/plone/autoform/tests/test_doctests.py\nindex 1f8262b..0662d54 100644\n--- a/plone/autoform/tests/test_doctests.py\n+++ b/plone/autoform/tests/test_doctests.py\n@@ -11,7 +11,7 @@\n \n test_files = [\n     '../autoform.rst',\n-    'subform.txt',\n+    # 'subform.txt',  # subform is removed in z3c.form >= 4.x\n     '../view.txt',\n     '../supermodel.txt',\n ]\ndiff --git a/plone/autoform/view.txt b/plone/autoform/view.txt\nindex 9264f5a..52fa463 100644\n--- a/plone/autoform/view.txt\n+++ b/plone/autoform/view.txt\n@@ -90,7 +90,7 @@ set up.\n More generally, the view supports the contract of display forms. After being\n updated, we have access to widgets in the default fieldset:\n \n-    >>> view.widgets.items()\n+    >>> list(view.widgets.items())\n     [('title', <TextWidget 'form.widgets.title'>),\n      ('body', <TextAreaWidget 'form.widgets.body'>)]\n \n@@ -130,7 +130,5 @@ the form the widgets are present:\n \n     >>> view2 = TestView(context, request)\n     >>> view2.update()\n-    >>> view2.widgets\n-    <z3c.form.field.FieldWidgets object at ...>\n-    >>> view2.widgets.keys()\n-    ['title', 'body']\n+    >>> sorted(view2.widgets.items())\n+    [('body', <TextAreaWidget 'form.widgets.body'>), ('title', <TextWidget 'form.widgets.title'>)]\n"

Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-18T08:57:32+01:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.autoform/commit/c1c34439e93aba1acc577c0c191e7f6235b2a7ff

add changelog

Files changed:
A news/40.feature

b'diff --git a/news/40.feature b/news/40.feature\nnew file mode 100644\nindex 0000000..f952072\n--- /dev/null\n+++ b/news/40.feature\n@@ -0,0 +1,2 @@\n+Fixes for latest z3c.form\n+[petschki]\n'

Repository: plone.autoform


Branch: refs/heads/master
Date: 2022-03-21T09:15:00+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.autoform/commit/05de75a0a2c8d1d40db6ab757c967a45dcad43bd

Merge pull request #40 from plone/z3c-form-latest

Compatibility with latest z3c.form

Files changed:
A news/40.feature
M plone/autoform/autoform.rst
M plone/autoform/tests/test_doctests.py
M plone/autoform/view.txt

b"diff --git a/news/40.feature b/news/40.feature\nnew file mode 100644\nindex 0000000..f952072\n--- /dev/null\n+++ b/news/40.feature\n@@ -0,0 +1,2 @@\n+Fixes for latest z3c.form\n+[petschki]\ndiff --git a/plone/autoform/autoform.rst b/plone/autoform/autoform.rst\nindex 2b00f09..3966118 100644\n--- a/plone/autoform/autoform.rst\n+++ b/plone/autoform/autoform.rst\n@@ -167,7 +167,7 @@ and 'groups' properties will be set.\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['one', 'two', 'three', 'four', 'five', 'six',\n      'ISupplementarySchema.one', 'ISupplementarySchema.two',\n      'IOtherSchema.three', 'IOtherSchema.four',\n@@ -230,7 +230,7 @@ Fields can be moved like this::\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['IOtherSchema.four',\n     'ISupplementarySchema.one',\n     'two',\n@@ -275,7 +275,7 @@ The results of all of this can be seen below::\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['IOtherSchema.four',\n      'ISupplementarySchema.one',\n      'two',\n@@ -317,7 +317,7 @@ has taken the label and description from the first definition::\n     'Fieldset one'\n     >>> test_form.groups[0].description\n     'Description of fieldset one'\n-    >>> test_form.groups[0].fields.keys()\n+    >>> list(test_form.groups[0].fields.keys())\n     ['three', 'IOtherSchema.three']\n \n Pre-traversal\n@@ -336,7 +336,7 @@ return.\n \n     >>> test_form = TestForm(context, request)\n     >>> test_form.update()\n-    >>> test_form.fields.keys()\n+    >>> list(test_form.fields.keys())\n     ['IOtherSchema.four', 'ISupplementarySchema.one', 'two',\n     'ISupplementarySchema.two', 'one', 'five', 'six',\n     'IOtherSchema.six', 'IOtherSchema.five']\n@@ -391,7 +391,7 @@ that this may cause clashes if fields in different schemata share a name.\n The default fields are those from the base schema, minus the one moved to\n another fieldset.\n \n-    >>> combi_form.fields.keys()\n+    >>> list(combi_form.fields.keys())\n     ['title', 'description', 'hidden_secret']\n \n     >>> combi_form.widgets['hidden_secret'].mode\n@@ -401,7 +401,7 @@ Each additional schema then has its own fields. Note that setting the 'dates'\n fieldset in the base schema had the effect of giving a more specific\n label to the automatically created group for the Dates schema.\n \n-    >>> [(g.__name__, g.label, g.description, g.fields.keys(),) for g in combi_form.groups]\n+    >>> [(g.__name__, g.label, g.description, list(g.fields.keys()),) for g in combi_form.groups]\n     [('Dates', 'Cool dates', None, ['creation_date', 'start_date', 'end_date']),\n      ('Ownership', 'Ownership', 'Ownership information', ['owner'])]\n \ndiff --git a/plone/autoform/tests/test_doctests.py b/plone/autoform/tests/test_doctests.py\nindex 1f8262b..0662d54 100644\n--- a/plone/autoform/tests/test_doctests.py\n+++ b/plone/autoform/tests/test_doctests.py\n@@ -11,7 +11,7 @@\n \n test_files = [\n     '../autoform.rst',\n-    'subform.txt',\n+    # 'subform.txt',  # subform is removed in z3c.form >= 4.x\n     '../view.txt',\n     '../supermodel.txt',\n ]\ndiff --git a/plone/autoform/view.txt b/plone/autoform/view.txt\nindex 9264f5a..52fa463 100644\n--- a/plone/autoform/view.txt\n+++ b/plone/autoform/view.txt\n@@ -90,7 +90,7 @@ set up.\n More generally, the view supports the contract of display forms. After being\n updated, we have access to widgets in the default fieldset:\n \n-    >>> view.widgets.items()\n+    >>> list(view.widgets.items())\n     [('title', <TextWidget 'form.widgets.title'>),\n      ('body', <TextAreaWidget 'form.widgets.body'>)]\n \n@@ -130,7 +130,5 @@ the form the widgets are present:\n \n     >>> view2 = TestView(context, request)\n     >>> view2.update()\n-    >>> view2.widgets\n-    <z3c.form.field.FieldWidgets object at ...>\n-    >>> view2.widgets.keys()\n-    ['title', 'body']\n+    >>> sorted(view2.widgets.items())\n+    [('body', <TextAreaWidget 'form.widgets.body'>), ('title', <TextWidget 'form.widgets.title'>)]\n"

