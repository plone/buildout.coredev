Repository: plone.releaser


Branch: refs/heads/master
Date: 2020-06-24T09:56:08+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.releaser/commit/59266d033c27375832943c88eedb4bfaa4ee45ac

Do not offer pushing to buildout.coredev is PLONE_RELEASER_MULTI_PACKAGES env var is set.

When doing releases of several packages in a row, it is better to not push, because this means a needlessly high load on Jenkins.
Also, if you create a release and immediately push, then Jenkins will not find the new release yet and fail:
it takes a few minutes for the release to be propagated to all PyPI mirrors.
Pushing still seems the best default, but let's have an easy way to not push.
We look for environment variable PLONE_RELEASER_MULTI_PACKAGES.
Best is value 0 or 1, but we try not to break if you have something else.

Files changed:
A news/37.feature
M plone/releaser/release.py

b'diff --git a/news/37.feature b/news/37.feature\nnew file mode 100644\nindex 0000000..54c54a8\n--- /dev/null\n+++ b/news/37.feature\n@@ -0,0 +1,4 @@\n+Support env var PLONE_RELEASER_MULTI_PACKAGES to signal doing multiple releases.\n+We still change `checkouts.cfg` and `versions.cfg` in the relevant coredev branches then,\n+but we do not offer to push them.\n+[maurits]\ndiff --git a/plone/releaser/release.py b/plone/releaser/release.py\nindex 5879a5d..9a7e818 100644\n--- a/plone/releaser/release.py\n+++ b/plone/releaser/release.py\n@@ -198,6 +198,21 @@ def update_core(data, branch=None):\n         g.add("checkouts.cfg")\n         print("Committing changes.")\n         g.commit(message=message)\n+        # When doing releases of several packages in a row,\n+        # it is better to not push, because this means a needlessly high load on Jenkins.\n+        # Also, if you create a release and immediately push,\n+        # then Jenkins will not find the new release yet and fail:\n+        # it takes a few minutes for the release to be propagated to all PyPI mirrors.\n+        # Pushing still seems the best default, but let\'s have an easy way to not push.\n+        print("Checking PLONE_RELEASER_MULTI_PACKAGES env variable.")\n+        try:\n+            multi = int(os.getenv("PLONE_RELEASER_MULTI_PACKAGES"))\n+        except (TypeError, ValueError, AttributeError):\n+            print("ERROR: could not parse PLONE_RELEASER_MULTI_PACKAGES env var. Ignoring it.")\n+            multi = False\n+        if multi:\n+            print("PLONE_RELEASER_MULTI_PACKAGES env variable set, so not pushing to coredev.")\n+            return\n         msg = "Ok to push coredev?"\n         if branch:\n             msg = "Ok to push coredev {0}?".format(branch)\n'

Repository: plone.releaser


Branch: refs/heads/master
Date: 2020-06-24T14:43:10+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.releaser/commit/a2b5158ce654f0f0b097cd8fe908c26d3c731a7e

Merge pull request #37 from plone/maurits/not-ask-push-so-much

Support env var to not offer pushing to buildout.coredev

Files changed:
A news/37.feature
M plone/releaser/release.py

b'diff --git a/news/37.feature b/news/37.feature\nnew file mode 100644\nindex 0000000..54c54a8\n--- /dev/null\n+++ b/news/37.feature\n@@ -0,0 +1,4 @@\n+Support env var PLONE_RELEASER_MULTI_PACKAGES to signal doing multiple releases.\n+We still change `checkouts.cfg` and `versions.cfg` in the relevant coredev branches then,\n+but we do not offer to push them.\n+[maurits]\ndiff --git a/plone/releaser/release.py b/plone/releaser/release.py\nindex 5879a5d..9a7e818 100644\n--- a/plone/releaser/release.py\n+++ b/plone/releaser/release.py\n@@ -198,6 +198,21 @@ def update_core(data, branch=None):\n         g.add("checkouts.cfg")\n         print("Committing changes.")\n         g.commit(message=message)\n+        # When doing releases of several packages in a row,\n+        # it is better to not push, because this means a needlessly high load on Jenkins.\n+        # Also, if you create a release and immediately push,\n+        # then Jenkins will not find the new release yet and fail:\n+        # it takes a few minutes for the release to be propagated to all PyPI mirrors.\n+        # Pushing still seems the best default, but let\'s have an easy way to not push.\n+        print("Checking PLONE_RELEASER_MULTI_PACKAGES env variable.")\n+        try:\n+            multi = int(os.getenv("PLONE_RELEASER_MULTI_PACKAGES"))\n+        except (TypeError, ValueError, AttributeError):\n+            print("ERROR: could not parse PLONE_RELEASER_MULTI_PACKAGES env var. Ignoring it.")\n+            multi = False\n+        if multi:\n+            print("PLONE_RELEASER_MULTI_PACKAGES env variable set, so not pushing to coredev.")\n+            return\n         msg = "Ok to push coredev?"\n         if branch:\n             msg = "Ok to push coredev {0}?".format(branch)\n'

