Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-10-02T18:46:03+03:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.restapi/commit/4bca68756fa9fa21ca02711405768de8a4ab63cc

Refs #1001 - Make tests more generic

Files changed:
A news/1001.bugfix
M src/plone/restapi/tests/test_services_types.py

b'diff --git a/news/1001.bugfix b/news/1001.bugfix\nnew file mode 100644\nindex 000000000..bbbe4935e\n--- /dev/null\n+++ b/news/1001.bugfix\n@@ -0,0 +1,2 @@\n+- Update tests to fix https://github.com/plone/plone.dexterity/pull/137\n+[@avoinea]\ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 75c13383d..040204f99 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -132,9 +132,10 @@ def test_types_document_get_field(self):\n         self.assertEqual(\n             "Email of the author", response.json().get("description")\n         )  # noqa\n-        self.assertEqual(\n-            "plone.dexterity.schema.generated.plone_0_Document",\n-            response.json().get("behavior"),\n+        self.assertTrue(\n+            response.json()\n+            .get("behavior")\n+            .startswith("plone.dexterity.schema.generated.plone_")\n         )  # noqa\n         self.assertEqual("string", response.json().get("type"))\n         self.assertEqual("email", response.json().get("widget"))\n@@ -169,9 +170,10 @@ def test_types_document_post_field(self):\n         self.assertEqual(response.status_code, 201)\n         self.assertEqual("Email", response.json().get("title"))\n         self.assertEqual("Foo bar email", response.json().get("description"))\n-        self.assertEqual(\n-            "plone.dexterity.schema.generated.plone_0_Document",\n-            response.json().get("behavior"),\n+        self.assertTrue(\n+            response.json()\n+            .get("behavior")\n+            .startswith("plone.dexterity.schema.generated.plone_")\n         )  # noqa\n         self.assertEqual("string", response.json().get("type"))\n         self.assertEqual("email", response.json().get("widget"))\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-10-05T10:12:05+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/68a00da63b92594bd442e5be6aa33169b33f0f7a

Merge pull request #1002 from plone/sync-schema-on-zeo-clients

Refs #1001 - Make tests more generic

Files changed:
A news/1001.bugfix
M src/plone/restapi/tests/test_services_types.py

b'diff --git a/news/1001.bugfix b/news/1001.bugfix\nnew file mode 100644\nindex 000000000..bbbe4935e\n--- /dev/null\n+++ b/news/1001.bugfix\n@@ -0,0 +1,2 @@\n+- Update tests to fix https://github.com/plone/plone.dexterity/pull/137\n+[@avoinea]\ndiff --git a/src/plone/restapi/tests/test_services_types.py b/src/plone/restapi/tests/test_services_types.py\nindex 75c13383d..040204f99 100644\n--- a/src/plone/restapi/tests/test_services_types.py\n+++ b/src/plone/restapi/tests/test_services_types.py\n@@ -132,9 +132,10 @@ def test_types_document_get_field(self):\n         self.assertEqual(\n             "Email of the author", response.json().get("description")\n         )  # noqa\n-        self.assertEqual(\n-            "plone.dexterity.schema.generated.plone_0_Document",\n-            response.json().get("behavior"),\n+        self.assertTrue(\n+            response.json()\n+            .get("behavior")\n+            .startswith("plone.dexterity.schema.generated.plone_")\n         )  # noqa\n         self.assertEqual("string", response.json().get("type"))\n         self.assertEqual("email", response.json().get("widget"))\n@@ -169,9 +170,10 @@ def test_types_document_post_field(self):\n         self.assertEqual(response.status_code, 201)\n         self.assertEqual("Email", response.json().get("title"))\n         self.assertEqual("Foo bar email", response.json().get("description"))\n-        self.assertEqual(\n-            "plone.dexterity.schema.generated.plone_0_Document",\n-            response.json().get("behavior"),\n+        self.assertTrue(\n+            response.json()\n+            .get("behavior")\n+            .startswith("plone.dexterity.schema.generated.plone_")\n         )  # noqa\n         self.assertEqual("string", response.json().get("type"))\n         self.assertEqual("email", response.json().get("widget"))\n'

