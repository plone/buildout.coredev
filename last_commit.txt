Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-04-17T01:25:37+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/27dee899810639790c848b0f43148d44b1140691

Removed Travis.

This was only testing Python 2.6, but master is for Plone 5.2.

Files changed:
D .travis.yml
D bootstrap.py
D buildout.cfg
D travis.cfg

b'diff --git a/.travis.yml b/.travis.yml\ndeleted file mode 100644\nindex 50fb93b..0000000\n--- a/.travis.yml\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-language: python\n-python:\n-  - 2.6\n-before_install:\n-  - pip install http://effbot.org/downloads/Imaging-1.1.6.tar.gz\n-  - sudo apt-get install -qq libxml2-dev libxslt-dev\n-install:\n-  - python bootstrap.py\n-  - bin/buildout -c travis.cfg -q\n-script:\n-  - bin/test -s plone.app.theming\n-  - bin/test -s plone.app.themingplugins\n-  - bin/test -s plone.resourceeditor\ndiff --git a/bootstrap.py b/bootstrap.py\ndeleted file mode 100644\nindex daeeef5..0000000\n--- a/bootstrap.py\n+++ /dev/null\n@@ -1,127 +0,0 @@\n-##############################################################################\n-#\n-# Copyright (c) 2006 Zope Foundation and Contributors.\n-# All Rights Reserved.\n-#\n-# This software is subject to the provisions of the Zope Public License,\n-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED\n-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n-# FOR A PARTICULAR PURPOSE.\n-#\n-##############################################################################\n-"""Bootstrap a buildout-based project\n-\n-Simply run this script in a directory containing a buildout.cfg.\n-The script accepts buildout command-line options, so you can\n-use the -c option to specify an alternate configuration file.\n-\n-$Id$\n-"""\n-\n-import os, shutil, sys, tempfile, urllib2\n-from optparse import OptionParser\n-\n-tmpeggs = tempfile.mkdtemp()\n-\n-is_jython = sys.platform.startswith(\'java\')\n-\n-# parsing arguments\n-parser = OptionParser(\n-    \'This is a custom version of the zc.buildout %prog script.  It is \'\n-    \'intended to meet a temporary need if you encounter problems with \'\n-    \'the zc.buildout 1.5 release.\')\n-parser.add_option("-v", "--version", dest="version", default=\'1.4.4\',\n-                          help=\'Use a specific zc.buildout version.  *This \'\n-                          \'bootstrap script defaults to \'\n-                          \'1.4.4, unlike usual buildpout bootstrap scripts.*\')\n-parser.add_option("-d", "--distribute",\n-                   action="store_true", dest="distribute", default=False,\n-                   help="Use Disribute rather than Setuptools.")\n-\n-parser.add_option("-c", None, action="store", dest="config_file",\n-                   help=("Specify the path to the buildout configuration "\n-                         "file to be used."))\n-\n-options, args = parser.parse_args()\n-\n-# if -c was provided, we push it back into args for buildout\' main function\n-if options.config_file is not None:\n-    args += [\'-c\', options.config_file]\n-\n-if options.version is not None:\n-    VERSION = \'==%s\' % options.version\n-else:\n-    VERSION = \'\'\n-\n-USE_DISTRIBUTE = options.distribute\n-args = args + [\'bootstrap\']\n-\n-to_reload = False\n-try:\n-    import pkg_resources\n-    if not hasattr(pkg_resources, \'_distribute\'):\n-        to_reload = True\n-        raise ImportError\n-except ImportError:\n-    ez = {}\n-    if USE_DISTRIBUTE:\n-        exec urllib2.urlopen(\'http://python-distribute.org/distribute_setup.py\'\n-                         ).read() in ez\n-        ez[\'use_setuptools\'](to_dir=tmpeggs, download_delay=0, no_fake=True)\n-    else:\n-        exec urllib2.urlopen(\'http://peak.telecommunity.com/dist/ez_setup.py\'\n-                             ).read() in ez\n-        ez[\'use_setuptools\'](to_dir=tmpeggs, download_delay=0)\n-\n-    if to_reload:\n-        reload(pkg_resources)\n-    else:\n-        import pkg_resources\n-\n-if sys.platform == \'win32\':\n-    def quote(c):\n-        if \' \' in c:\n-            return \'"%s"\' % c # work around spawn lamosity on windows\n-        else:\n-            return c\n-else:\n-    def quote (c):\n-        return c\n-\n-ws  = pkg_resources.working_set\n-\n-if USE_DISTRIBUTE:\n-    requirement = \'distribute\'\n-else:\n-    requirement = \'setuptools\'\n-\n-env = dict(os.environ,\n-           PYTHONPATH=\n-           ws.find(pkg_resources.Requirement.parse(requirement)).location\n-           )\n-\n-cmd = [quote(sys.executable),\n-       \'-c\',\n-       quote(\'from setuptools.command.easy_install import main; main()\'),\n-       \'-mqNxd\',\n-       quote(tmpeggs)]\n-\n-if \'bootstrap-testing-find-links\' in os.environ:\n-    cmd.extend([\'-f\', os.environ[\'bootstrap-testing-find-links\']])\n-\n-cmd.append(\'zc.buildout\' + VERSION)\n-\n-if is_jython:\n-    import subprocess\n-    exitcode = subprocess.Popen(cmd, env=env).wait()\n-else: # Windows prefers this, apparently; otherwise we would prefer subprocess\n-    exitcode = os.spawnle(*([os.P_WAIT, sys.executable] + cmd + [env]))\n-assert exitcode == 0\n-\n-ws.add_entry(tmpeggs)\n-ws.require(\'zc.buildout\' + VERSION)\n-import zc.buildout.buildout\n-zc.buildout.buildout.main(args)\n-shutil.rmtree(tmpeggs)\ndiff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex c9b6c24..0000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,92 +0,0 @@\n-[buildout]\n-extends =\n-    http://dist.plone.org/release/4.1-latest/versions.cfg\n-    http://good-py.appspot.com/release/plone.app.theming/1.0\n-parts =\n-    lxml\n-    test\n-    instance\n-    zopepy\n-    omelette\n-    paster\n-develop = .\n-extensions =\n-    mr.developer\n-    buildout.dumppickedversions\n-sources = sources\n-versions = versions\n-sources-dir = extras\n-auto-checkout =\n-    plone.app.themingplugins\n-\n-[versions]\n-plone.app.theming =\n-plone.app.themingplugins =\n-diazo = 1.0.3\n-\n-[lxml]\n-recipe = z3c.recipe.staticlxml\n-egg = lxml==${versions:lxml}\n-\n-[remotes]\n-repoze = git://github.com/repoze\n-lxml = git://github.com/lxml\n-plone = git://github.com/plone\n-svn_plone = http://svn.plone.org/svn/plone\n-collective = git://github.com/collective\n-svn_collective = http://svn.plone.org/svn/collective\n-\n-[sources]\n-diazo                           = git ${remotes:plone}/diazo.git\n-plone.resource                  = git ${remotes:plone}/plone.resource.git\n-plone.subrequest                = git ${remotes:plone}/plone.subrequest.git\n-plone.transformchain            = git ${remotes:plone}/plone.transformchain.git\n-repoze.xmliter                  = git ${remotes:repoze}/repoze.xmliter.git\n-lxml                            = git ${remotes:lxml}/lxml.git\n-plone.resourceeditor            = git ${remotes:plone}/plone.resourceeditor.git\n-plone.app.themingplugins        = git ${remotes:plone}/plone.app.themingplugins.git\n-plone.app.caching               = git ${remotes:plone}/plone.app.caching.git\n-\n-[instance]\n-recipe = plone.recipe.zope2instance\n-eggs =\n-    plone.app.theming\n-    plone.app.themingplugins\n-    plone.reload\n-user = admin:admin\n-resources = ${buildout:directory}/resources\n-\n-[zopepy]\n-recipe = zc.recipe.egg\n-eggs =\n-    plone.app.theming\n-    plone.app.themingplugins\n-interpreter = zopepy\n-\n-[test]\n-recipe = zc.recipe.testrunner\n-eggs =\n-    diazo [test]\n-    plone.app.theming [test]\n-    plone.app.themingplugins [test]\n-    plone.resource [test]\n-    plone.resourceeditor [test]\n-    plone.subrequest [test]\n-    plone.app.caching [test]\n-    repoze.xmliter\n-defaults = [\'--auto-color\', \'--auto-progress\']\n-\n-[paster]\n-recipe = zc.recipe.egg\n-eggs =\n-    diazo [wsgi]\n-    PasteScript\n-\n-[coverage-report]\n-recipe = zc.recipe.egg\n-eggs = z3c.coverage\n-arguments = (\'coverage\', \'report\')\n-\n-[omelette]\n-recipe = collective.recipe.omelette\n-eggs = ${instance:eggs}\ndiff --git a/travis.cfg b/travis.cfg\ndeleted file mode 100644\nindex b0d1094..0000000\n--- a/travis.cfg\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-[buildout]\n-extends = buildout.cfg\n-parts = test\n-\n-# network speedup\n-socket-timeout = 3\n-allow-hosts =\n-    *.python.org\n-    docutils.sourceforge.net\n-    prdownloads.sourceforge.net\n-    effbot.org\n\\ No newline at end of file\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-04-17T11:25:12+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.theming/commit/e2699c8da98c29fd5ed98f810047a5f90572867f

Merge pull request #174 from plone/maurits/remove-travis

Removed Travis.

Files changed:
D .travis.yml
D bootstrap.py
D buildout.cfg
D travis.cfg

b'diff --git a/.travis.yml b/.travis.yml\ndeleted file mode 100644\nindex 50fb93b..0000000\n--- a/.travis.yml\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-language: python\n-python:\n-  - 2.6\n-before_install:\n-  - pip install http://effbot.org/downloads/Imaging-1.1.6.tar.gz\n-  - sudo apt-get install -qq libxml2-dev libxslt-dev\n-install:\n-  - python bootstrap.py\n-  - bin/buildout -c travis.cfg -q\n-script:\n-  - bin/test -s plone.app.theming\n-  - bin/test -s plone.app.themingplugins\n-  - bin/test -s plone.resourceeditor\ndiff --git a/bootstrap.py b/bootstrap.py\ndeleted file mode 100644\nindex daeeef5..0000000\n--- a/bootstrap.py\n+++ /dev/null\n@@ -1,127 +0,0 @@\n-##############################################################################\n-#\n-# Copyright (c) 2006 Zope Foundation and Contributors.\n-# All Rights Reserved.\n-#\n-# This software is subject to the provisions of the Zope Public License,\n-# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.\n-# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED\n-# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS\n-# FOR A PARTICULAR PURPOSE.\n-#\n-##############################################################################\n-"""Bootstrap a buildout-based project\n-\n-Simply run this script in a directory containing a buildout.cfg.\n-The script accepts buildout command-line options, so you can\n-use the -c option to specify an alternate configuration file.\n-\n-$Id$\n-"""\n-\n-import os, shutil, sys, tempfile, urllib2\n-from optparse import OptionParser\n-\n-tmpeggs = tempfile.mkdtemp()\n-\n-is_jython = sys.platform.startswith(\'java\')\n-\n-# parsing arguments\n-parser = OptionParser(\n-    \'This is a custom version of the zc.buildout %prog script.  It is \'\n-    \'intended to meet a temporary need if you encounter problems with \'\n-    \'the zc.buildout 1.5 release.\')\n-parser.add_option("-v", "--version", dest="version", default=\'1.4.4\',\n-                          help=\'Use a specific zc.buildout version.  *This \'\n-                          \'bootstrap script defaults to \'\n-                          \'1.4.4, unlike usual buildpout bootstrap scripts.*\')\n-parser.add_option("-d", "--distribute",\n-                   action="store_true", dest="distribute", default=False,\n-                   help="Use Disribute rather than Setuptools.")\n-\n-parser.add_option("-c", None, action="store", dest="config_file",\n-                   help=("Specify the path to the buildout configuration "\n-                         "file to be used."))\n-\n-options, args = parser.parse_args()\n-\n-# if -c was provided, we push it back into args for buildout\' main function\n-if options.config_file is not None:\n-    args += [\'-c\', options.config_file]\n-\n-if options.version is not None:\n-    VERSION = \'==%s\' % options.version\n-else:\n-    VERSION = \'\'\n-\n-USE_DISTRIBUTE = options.distribute\n-args = args + [\'bootstrap\']\n-\n-to_reload = False\n-try:\n-    import pkg_resources\n-    if not hasattr(pkg_resources, \'_distribute\'):\n-        to_reload = True\n-        raise ImportError\n-except ImportError:\n-    ez = {}\n-    if USE_DISTRIBUTE:\n-        exec urllib2.urlopen(\'http://python-distribute.org/distribute_setup.py\'\n-                         ).read() in ez\n-        ez[\'use_setuptools\'](to_dir=tmpeggs, download_delay=0, no_fake=True)\n-    else:\n-        exec urllib2.urlopen(\'http://peak.telecommunity.com/dist/ez_setup.py\'\n-                             ).read() in ez\n-        ez[\'use_setuptools\'](to_dir=tmpeggs, download_delay=0)\n-\n-    if to_reload:\n-        reload(pkg_resources)\n-    else:\n-        import pkg_resources\n-\n-if sys.platform == \'win32\':\n-    def quote(c):\n-        if \' \' in c:\n-            return \'"%s"\' % c # work around spawn lamosity on windows\n-        else:\n-            return c\n-else:\n-    def quote (c):\n-        return c\n-\n-ws  = pkg_resources.working_set\n-\n-if USE_DISTRIBUTE:\n-    requirement = \'distribute\'\n-else:\n-    requirement = \'setuptools\'\n-\n-env = dict(os.environ,\n-           PYTHONPATH=\n-           ws.find(pkg_resources.Requirement.parse(requirement)).location\n-           )\n-\n-cmd = [quote(sys.executable),\n-       \'-c\',\n-       quote(\'from setuptools.command.easy_install import main; main()\'),\n-       \'-mqNxd\',\n-       quote(tmpeggs)]\n-\n-if \'bootstrap-testing-find-links\' in os.environ:\n-    cmd.extend([\'-f\', os.environ[\'bootstrap-testing-find-links\']])\n-\n-cmd.append(\'zc.buildout\' + VERSION)\n-\n-if is_jython:\n-    import subprocess\n-    exitcode = subprocess.Popen(cmd, env=env).wait()\n-else: # Windows prefers this, apparently; otherwise we would prefer subprocess\n-    exitcode = os.spawnle(*([os.P_WAIT, sys.executable] + cmd + [env]))\n-assert exitcode == 0\n-\n-ws.add_entry(tmpeggs)\n-ws.require(\'zc.buildout\' + VERSION)\n-import zc.buildout.buildout\n-zc.buildout.buildout.main(args)\n-shutil.rmtree(tmpeggs)\ndiff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex c9b6c24..0000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,92 +0,0 @@\n-[buildout]\n-extends =\n-    http://dist.plone.org/release/4.1-latest/versions.cfg\n-    http://good-py.appspot.com/release/plone.app.theming/1.0\n-parts =\n-    lxml\n-    test\n-    instance\n-    zopepy\n-    omelette\n-    paster\n-develop = .\n-extensions =\n-    mr.developer\n-    buildout.dumppickedversions\n-sources = sources\n-versions = versions\n-sources-dir = extras\n-auto-checkout =\n-    plone.app.themingplugins\n-\n-[versions]\n-plone.app.theming =\n-plone.app.themingplugins =\n-diazo = 1.0.3\n-\n-[lxml]\n-recipe = z3c.recipe.staticlxml\n-egg = lxml==${versions:lxml}\n-\n-[remotes]\n-repoze = git://github.com/repoze\n-lxml = git://github.com/lxml\n-plone = git://github.com/plone\n-svn_plone = http://svn.plone.org/svn/plone\n-collective = git://github.com/collective\n-svn_collective = http://svn.plone.org/svn/collective\n-\n-[sources]\n-diazo                           = git ${remotes:plone}/diazo.git\n-plone.resource                  = git ${remotes:plone}/plone.resource.git\n-plone.subrequest                = git ${remotes:plone}/plone.subrequest.git\n-plone.transformchain            = git ${remotes:plone}/plone.transformchain.git\n-repoze.xmliter                  = git ${remotes:repoze}/repoze.xmliter.git\n-lxml                            = git ${remotes:lxml}/lxml.git\n-plone.resourceeditor            = git ${remotes:plone}/plone.resourceeditor.git\n-plone.app.themingplugins        = git ${remotes:plone}/plone.app.themingplugins.git\n-plone.app.caching               = git ${remotes:plone}/plone.app.caching.git\n-\n-[instance]\n-recipe = plone.recipe.zope2instance\n-eggs =\n-    plone.app.theming\n-    plone.app.themingplugins\n-    plone.reload\n-user = admin:admin\n-resources = ${buildout:directory}/resources\n-\n-[zopepy]\n-recipe = zc.recipe.egg\n-eggs =\n-    plone.app.theming\n-    plone.app.themingplugins\n-interpreter = zopepy\n-\n-[test]\n-recipe = zc.recipe.testrunner\n-eggs =\n-    diazo [test]\n-    plone.app.theming [test]\n-    plone.app.themingplugins [test]\n-    plone.resource [test]\n-    plone.resourceeditor [test]\n-    plone.subrequest [test]\n-    plone.app.caching [test]\n-    repoze.xmliter\n-defaults = [\'--auto-color\', \'--auto-progress\']\n-\n-[paster]\n-recipe = zc.recipe.egg\n-eggs =\n-    diazo [wsgi]\n-    PasteScript\n-\n-[coverage-report]\n-recipe = zc.recipe.egg\n-eggs = z3c.coverage\n-arguments = (\'coverage\', \'report\')\n-\n-[omelette]\n-recipe = collective.recipe.omelette\n-eggs = ${instance:eggs}\ndiff --git a/travis.cfg b/travis.cfg\ndeleted file mode 100644\nindex b0d1094..0000000\n--- a/travis.cfg\n+++ /dev/null\n@@ -1,11 +0,0 @@\n-[buildout]\n-extends = buildout.cfg\n-parts = test\n-\n-# network speedup\n-socket-timeout = 3\n-allow-hosts =\n-    *.python.org\n-    docutils.sourceforge.net\n-    prdownloads.sourceforge.net\n-    effbot.org\n\\ No newline at end of file\n'

