Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-18T19:09:16+02:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/fafb94cf497cd004410459e751bbefe186c8f87a

Use details element for collapsibles in the resource registry

Makes it possible to toggle elements even with broken or missing javascript.

Fixes #3942

Files changed:
A news/3942.bugfix
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 297f2ff231..b64a9b996a 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -102,39 +102,27 @@\n              "\n         >\n           <tal:block tal:repeat="bundle python:view.bundles_data">\n-            <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n-              <h2 class="accordion-header"\n-                  id="heading-${python:bundle[\'safe_name\']}"\n-              >\n-                <button class="accordion-button"\n-                        aria-controls="collapse-${python:bundle[\'safe_name\']}"\n-                        aria-expanded="false"\n-                        type="button"\n-                        data-bs-target="#collapse-${python:bundle[\'safe_name\']}"\n-                        data-bs-toggle="collapse"\n-                >\n-                  <span class="me-2"\n-                        tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']"\n-                        i18n:translate=""\n-                  ><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n-                  <span class="me-2"\n-                        tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']"\n-                        i18n:translate=""\n-                  ><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n-                  <span class="me-2"\n-                        tal:condition="python:not bundle[\'name\']"\n+            <details class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n+              <summary class="accordion-button">\n+                <span class="me-2"\n+                      tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']"\n+                      i18n:translate=""\n+                ><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+                <span class="me-2"\n+                      tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']"\n+                      i18n:translate=""\n+                ><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+                <span class="me-2"\n+                      tal:condition="python:not bundle[\'name\']"\n+                      i18n:translate=""\n+                ><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+                <h2 class="accordion-header fs-5 fw-bold" tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</h2>\n+                <h2 class="accordion-header fs-5 fw-bold" tal:condition="python:not bundle[\'name\']"\n                         i18n:translate=""\n-                  ><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n-                  <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n-                  <strong tal:condition="python:not bundle[\'name\']"\n-                          i18n:translate=""\n-                  >Add new bundle</strong>\n-                </button>\n-              </h2>\n-              <div class="accordion-collapse collapse show"\n-                   id="collapse-${python:bundle[\'safe_name\']}"\n+                >Add new bundle</h2>\n+              </summary>\n+              <div id="collapse-${python:bundle[\'safe_name\']}"\n                    aria-labelledby="heading${python:bundle[\'safe_name\']}"\n-                   data-bs-parent="#accordionRR"\n               >\n                 <div class="accordion-body">\n                   <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n@@ -267,9 +255,10 @@\n                   </form>\n                 </div>\n               </div>\n-            </div>\n+            </details>\n           </tal:block>\n         </div>\n+\n         <div class="mt-3">\n           <h2 i18n:translate="">Additional Resources</h2>\n           <p i18n:translate="">After the above resources, the following might get loaded:</p>\n@@ -292,14 +281,14 @@\n           </dl>\n         </div>\n       </div>\n+\n       <script>\n-     /* collapse accordion via script here, so that it stays open when JS is disabled */\n-     window.addEventListener(\'DOMContentLoaded\', (event) => {\n-      document.querySelector(".alert.js-errors").style.display = "none";\n-      document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n-      document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n-    });\n+        window.addEventListener(\'DOMContentLoaded\', (event) => {\n+          /* Hide the JavaScript warning when JavaScript is enabled. */\n+          document.querySelector(".alert.js-errors").style.display = "none";\n+        });\n       </script>\n+\n     </metal:main>\n \n   </body>\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 29ae11ae00..7318055c2b 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -489,7 +489,7 @@ def test_add_resource(self):\n         add_form.getControl("add").click()\n \n         self.assertIn(\n-            \'<h2 class="accordion-header" id="heading-my-resource">\',\n+            "<h2>my-resource</h2>",\n             self.browser.contents,\n         )\n \n@@ -507,6 +507,6 @@ def test_update_resource(self):\n         form.getControl("update").click()\n \n         self.assertIn(\n-            \'<h2 class="accordion-header" id="heading-new-resource-name">\',\n+            "<h2>new-resource-name</h2>",\n             self.browser.contents,\n         )\ndiff --git a/news/3942.bugfix b/news/3942.bugfix\nnew file mode 100644\nindex 0000000000..1418369236\n--- /dev/null\n+++ b/news/3942.bugfix\n@@ -0,0 +1,5 @@\n+Use details element for collapsibles in the resource registry\n+\n+Makes it possible to toggle elements even with broken or missing javascript.\n+\n+Fixes #3942\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-18T19:09:16+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/8fb58474dce66c7da7f74e4ecd90fd075f8945f6

Properly connect form labels with their inputs.

Fixes #3942

Files changed:
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M news/3942.bugfix

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex b64a9b996a..2385c90f98 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -121,140 +121,123 @@\n                         i18n:translate=""\n                 >Add new bundle</h2>\n               </summary>\n-              <div id="collapse-${python:bundle[\'safe_name\']}"\n-                   aria-labelledby="heading${python:bundle[\'safe_name\']}"\n+              <form class="accordion-body"\n+                    action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+                    method="post"\n               >\n-                <div class="accordion-body">\n-                  <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n-                        method="post"\n-                  >\n-                    <input name="original_name"\n-                           type="hidden"\n+                <input name="original_name"\n+                       type="hidden"\n+                       value="${python:bundle[\'name\']}"\n+                />\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    <tal:i18n i18n:translate="label_bundle_name">Name</tal:i18n>\n+                    <input class="form-control"\n+                           name="name"\n+                           type="text"\n                            value="${python:bundle[\'name\']}"\n                     />\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="name"\n-                             i18n:translate="label_bundle_name"\n-                      >Name</label>\n-                      <input class="form-control"\n-                             name="name"\n-                             type="text"\n-                             value="${python:bundle[\'name\']}"\n-                      />\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="jscompilation"\n-                      >Javascript</label>\n-                      <input class="form-control"\n-                             name="jscompilation"\n-                             type="text"\n-                             value="${python:bundle[\'jscompilation\']}"\n-                      />\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="csscompilation"\n-                      >CSS</label>\n-                      <input class="form-control"\n-                             name="csscompilation"\n-                             type="text"\n-                             value="${python:bundle[\'csscompilation\']}"\n-                      />\n-                    </div>\n-                    <div class="form-check mb-3">\n-                      <input class="form-check-input"\n-                             checked="${python:\'checked\' if bundle[\'enabled\'] else None}"\n-                             name="enabled"\n-                             type="checkbox"\n-                             value=""\n-                      />\n-                      <label class="form-check-label"\n-                             for="enabled"\n-                             i18n:translate="label_bundle_enabled"\n-                      >\n-                    enabled\n-                      </label>\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="expression"\n-                             i18n:translate="label_bundle_condition"\n-                      >Condition</label>\n-                      <input class="form-control"\n-                             name="expression"\n-                             placeholder="expression"\n-                             type="text"\n-                             value="${python:bundle[\'expression\']}"\n-                             i18n:attributes="placeholder label_expression_placeholder"\n-                      />\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="depends"\n-                             i18n:translate=""\n-                      >Depends on</label>\n-                      <input class="form-control"\n-                             name="depends"\n-                             type="text"\n-                             value="${python:bundle[\'depends\']}"\n-                      />\n-                    </div>\n-                    <div class="form-check mb-3">\n-                      <input class="form-check-input"\n-                             checked="${python:\'checked\' if bundle[\'load_async\'] else None}"\n-                             name="load_async"\n-                             type="checkbox"\n-                             value="1"\n-                      />\n-                      <label class="form-check-label"\n-                             for="load_async"\n-                             i18n:translate="label_bundle_js_load_async"\n-                      >\n-                    Async\n-                      </label>\n-                    </div>\n-                    <div class="form-check mb-3">\n-                      <input class="form-check-input"\n-                             checked="${python:\'checked\' if bundle[\'load_defer\'] else None}"\n-                             name="load_defer"\n-                             type="checkbox"\n-                             value="1"\n-                      />\n-                      <label class="form-check-label"\n-                             for="load_defer"\n-                             i18n:translate="label_bundle_js_load_defer"\n-                      >\n-                    Defer\n-                      </label>\n-                    </div>\n-                    <div class="mb-3">\n-                      <button class="btn btn-primary me-1"\n-                              name="action"\n-                              type="submit"\n-                              value="update"\n-                              tal:condition="python:bundle[\'name\']"\n-                              i18n:translate=""\n-                      >Save</button>\n-                      <button class="btn btn-success me-1"\n-                              name="action"\n-                              type="submit"\n-                              value="add"\n-                              tal:condition="python:not bundle[\'name\']"\n-                              i18n:translate=""\n-                      >Add</button>\n-                      <button class="btn btn-danger"\n-                              name="action"\n-                              type="submit"\n-                              value="delete"\n-                              tal:condition="python:bundle[\'name\']"\n-                              i18n:translate=""\n-                      >Delete</button>\n-                    </div>\n-                  </form>\n+                  </label>\n                 </div>\n-              </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    JavaScript\n+                    <input class="form-control"\n+                           name="jscompilation"\n+                           type="text"\n+                           value="${python:bundle[\'jscompilation\']}"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    CSS\n+                    <input class="form-control"\n+                           name="csscompilation"\n+                           type="text"\n+                           value="${python:bundle[\'csscompilation\']}"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <label class="form-check-label">\n+                    <input class="form-check-input"\n+                           checked="${python:\'checked\' if bundle[\'enabled\'] else None}"\n+                           name="enabled"\n+                           type="checkbox"\n+                           value=""\n+                    />\n+                    <tal:i18n i18n:translate="label_bundle_enabled">enabled</tal:i18n>\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    <tal:i18n i18n:translate="label_bundle_condition">Condition</tal:i18n>\n+                    <input class="form-control"\n+                           name="expression"\n+                           placeholder="expression"\n+                           type="text"\n+                           value="${python:bundle[\'expression\']}"\n+                           i18n:attributes="placeholder label_expression_placeholder"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    <tal:i18n i18n:translate="">Depends on</tal:i18n>\n+                    <input class="form-control"\n+                           name="depends"\n+                           type="text"\n+                           value="${python:bundle[\'depends\']}"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <label class="form-check-label">\n+                    <input class="form-check-input"\n+                           checked="${python:\'checked\' if bundle[\'load_async\'] else None}"\n+                           name="load_async"\n+                           type="checkbox"\n+                           value="1"\n+                    />\n+                    <tal:i18n i18n:translate="label_bundle_js_load_async">Async</tal:i18n>\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <label class="form-check-label">\n+                    <input class="form-check-input"\n+                           checked="${python:\'checked\' if bundle[\'load_defer\'] else None}"\n+                           name="load_defer"\n+                           type="checkbox"\n+                           value="1"\n+                    />\n+                    <tal:i18n i18n:translate="label_bundle_js_load_defer">Defer</tal:i18n>\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <button class="btn btn-primary me-1"\n+                          name="action"\n+                          type="submit"\n+                          value="update"\n+                          tal:condition="python:bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Save</button>\n+                  <button class="btn btn-success me-1"\n+                          name="action"\n+                          type="submit"\n+                          value="add"\n+                          tal:condition="python:not bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Add</button>\n+                  <button class="btn btn-danger"\n+                          name="action"\n+                          type="submit"\n+                          value="delete"\n+                          tal:condition="python:bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Delete</button>\n+                </div>\n+              </form>\n             </details>\n           </tal:block>\n         </div>\ndiff --git a/news/3942.bugfix b/news/3942.bugfix\nindex 1418369236..a939eff395 100644\n--- a/news/3942.bugfix\n+++ b/news/3942.bugfix\n@@ -1,5 +1,6 @@\n Use details element for collapsibles in the resource registry\n \n Makes it possible to toggle elements even with broken or missing javascript.\n+Also properly connect form labels with their inputs.\n \n Fixes #3942\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T10:33:19+02:00
Author: Manuel Reinhardt (reinhardt) <reinhardt@syslab.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/f6ea8828741f47b7e1028fb4143065b35ffa236f

Make the tests expect the new markup

Fixes #3942

Files changed:
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 7318055c2b..12021ceb0a 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -489,7 +489,7 @@ def test_add_resource(self):\n         add_form.getControl("add").click()\n \n         self.assertIn(\n-            "<h2>my-resource</h2>",\n+            \'<h2 class="accordion-header fs-5 fw-bold">my-resource</h2>\',\n             self.browser.contents,\n         )\n \n@@ -507,6 +507,6 @@ def test_update_resource(self):\n         form.getControl("update").click()\n \n         self.assertIn(\n-            "<h2>new-resource-name</h2>",\n+            \'<h2 class="accordion-header fs-5 fw-bold">new-resource-name</h2>\',\n             self.browser.contents,\n         )\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-06-19T12:49:29+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/039b25788c06c161329c5f67bd2c25abf20b1bc2

Merge pull request #3976 from plone/3942-resource-registry-collapsible

Use details element for collapsibles in the resource registry

Files changed:
A news/3942.bugfix
M Products/CMFPlone/controlpanel/browser/resourceregistry.pt
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\nindex 297f2ff231..2385c90f98 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.pt\n@@ -102,174 +102,146 @@\n              "\n         >\n           <tal:block tal:repeat="bundle python:view.bundles_data">\n-            <div class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n-              <h2 class="accordion-header"\n-                  id="heading-${python:bundle[\'safe_name\']}"\n-              >\n-                <button class="accordion-button"\n-                        aria-controls="collapse-${python:bundle[\'safe_name\']}"\n-                        aria-expanded="false"\n-                        type="button"\n-                        data-bs-target="#collapse-${python:bundle[\'safe_name\']}"\n-                        data-bs-toggle="collapse"\n-                >\n-                  <span class="me-2"\n-                        tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']"\n-                        i18n:translate=""\n-                  ><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n-                  <span class="me-2"\n-                        tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']"\n+            <details class="accordion-item ${python:\'active\' if bundle[\'name\'] == request.form.get(\'name\', None) else \'\'}">\n+              <summary class="accordion-button">\n+                <span class="me-2"\n+                      tal:condition="python:bundle[\'name\'] and bundle[\'enabled\']"\n+                      i18n:translate=""\n+                ><tal:icon tal:replace="structure python:icons.tag(\'file-check\', tag_alt=\'Enabled bundle\')" /></span>\n+                <span class="me-2"\n+                      tal:condition="python:bundle[\'name\'] and not bundle[\'enabled\']"\n+                      i18n:translate=""\n+                ><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n+                <span class="me-2"\n+                      tal:condition="python:not bundle[\'name\']"\n+                      i18n:translate=""\n+                ><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n+                <h2 class="accordion-header fs-5 fw-bold" tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</h2>\n+                <h2 class="accordion-header fs-5 fw-bold" tal:condition="python:not bundle[\'name\']"\n                         i18n:translate=""\n-                  ><tal:icon tal:replace="structure python:icons.tag(\'file-x\', tag_alt=\'Disabled bundle\')" /></span>\n-                  <span class="me-2"\n-                        tal:condition="python:not bundle[\'name\']"\n-                        i18n:translate=""\n-                  ><tal:icon tal:replace="structure python:icons.tag(\'file-plus\', tag_alt=\'Add a bundle\')" /></span>\n-                  <strong tal:condition="python:bundle[\'name\']">${python:bundle["name"]}</strong>\n-                  <strong tal:condition="python:not bundle[\'name\']"\n-                          i18n:translate=""\n-                  >Add new bundle</strong>\n-                </button>\n-              </h2>\n-              <div class="accordion-collapse collapse show"\n-                   id="collapse-${python:bundle[\'safe_name\']}"\n-                   aria-labelledby="heading${python:bundle[\'safe_name\']}"\n-                   data-bs-parent="#accordionRR"\n+                >Add new bundle</h2>\n+              </summary>\n+              <form class="accordion-body"\n+                    action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n+                    method="post"\n               >\n-                <div class="accordion-body">\n-                  <form action="${python:context.absolute_url()}/@@resourceregistry-controlpanel"\n-                        method="post"\n-                  >\n-                    <input name="original_name"\n-                           type="hidden"\n+                <input name="original_name"\n+                       type="hidden"\n+                       value="${python:bundle[\'name\']}"\n+                />\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    <tal:i18n i18n:translate="label_bundle_name">Name</tal:i18n>\n+                    <input class="form-control"\n+                           name="name"\n+                           type="text"\n                            value="${python:bundle[\'name\']}"\n                     />\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="name"\n-                             i18n:translate="label_bundle_name"\n-                      >Name</label>\n-                      <input class="form-control"\n-                             name="name"\n-                             type="text"\n-                             value="${python:bundle[\'name\']}"\n-                      />\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="jscompilation"\n-                      >Javascript</label>\n-                      <input class="form-control"\n-                             name="jscompilation"\n-                             type="text"\n-                             value="${python:bundle[\'jscompilation\']}"\n-                      />\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="csscompilation"\n-                      >CSS</label>\n-                      <input class="form-control"\n-                             name="csscompilation"\n-                             type="text"\n-                             value="${python:bundle[\'csscompilation\']}"\n-                      />\n-                    </div>\n-                    <div class="form-check mb-3">\n-                      <input class="form-check-input"\n-                             checked="${python:\'checked\' if bundle[\'enabled\'] else None}"\n-                             name="enabled"\n-                             type="checkbox"\n-                             value=""\n-                      />\n-                      <label class="form-check-label"\n-                             for="enabled"\n-                             i18n:translate="label_bundle_enabled"\n-                      >\n-                    enabled\n-                      </label>\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="expression"\n-                             i18n:translate="label_bundle_condition"\n-                      >Condition</label>\n-                      <input class="form-control"\n-                             name="expression"\n-                             placeholder="expression"\n-                             type="text"\n-                             value="${python:bundle[\'expression\']}"\n-                             i18n:attributes="placeholder label_expression_placeholder"\n-                      />\n-                    </div>\n-                    <div class="mb-3">\n-                      <label class="form-label"\n-                             for="depends"\n-                             i18n:translate=""\n-                      >Depends on</label>\n-                      <input class="form-control"\n-                             name="depends"\n-                             type="text"\n-                             value="${python:bundle[\'depends\']}"\n-                      />\n-                    </div>\n-                    <div class="form-check mb-3">\n-                      <input class="form-check-input"\n-                             checked="${python:\'checked\' if bundle[\'load_async\'] else None}"\n-                             name="load_async"\n-                             type="checkbox"\n-                             value="1"\n-                      />\n-                      <label class="form-check-label"\n-                             for="load_async"\n-                             i18n:translate="label_bundle_js_load_async"\n-                      >\n-                    Async\n-                      </label>\n-                    </div>\n-                    <div class="form-check mb-3">\n-                      <input class="form-check-input"\n-                             checked="${python:\'checked\' if bundle[\'load_defer\'] else None}"\n-                             name="load_defer"\n-                             type="checkbox"\n-                             value="1"\n-                      />\n-                      <label class="form-check-label"\n-                             for="load_defer"\n-                             i18n:translate="label_bundle_js_load_defer"\n-                      >\n-                    Defer\n-                      </label>\n-                    </div>\n-                    <div class="mb-3">\n-                      <button class="btn btn-primary me-1"\n-                              name="action"\n-                              type="submit"\n-                              value="update"\n-                              tal:condition="python:bundle[\'name\']"\n-                              i18n:translate=""\n-                      >Save</button>\n-                      <button class="btn btn-success me-1"\n-                              name="action"\n-                              type="submit"\n-                              value="add"\n-                              tal:condition="python:not bundle[\'name\']"\n-                              i18n:translate=""\n-                      >Add</button>\n-                      <button class="btn btn-danger"\n-                              name="action"\n-                              type="submit"\n-                              value="delete"\n-                              tal:condition="python:bundle[\'name\']"\n-                              i18n:translate=""\n-                      >Delete</button>\n-                    </div>\n-                  </form>\n+                  </label>\n                 </div>\n-              </div>\n-            </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    JavaScript\n+                    <input class="form-control"\n+                           name="jscompilation"\n+                           type="text"\n+                           value="${python:bundle[\'jscompilation\']}"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    CSS\n+                    <input class="form-control"\n+                           name="csscompilation"\n+                           type="text"\n+                           value="${python:bundle[\'csscompilation\']}"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <label class="form-check-label">\n+                    <input class="form-check-input"\n+                           checked="${python:\'checked\' if bundle[\'enabled\'] else None}"\n+                           name="enabled"\n+                           type="checkbox"\n+                           value=""\n+                    />\n+                    <tal:i18n i18n:translate="label_bundle_enabled">enabled</tal:i18n>\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    <tal:i18n i18n:translate="label_bundle_condition">Condition</tal:i18n>\n+                    <input class="form-control"\n+                           name="expression"\n+                           placeholder="expression"\n+                           type="text"\n+                           value="${python:bundle[\'expression\']}"\n+                           i18n:attributes="placeholder label_expression_placeholder"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <label class="form-label">\n+                    <tal:i18n i18n:translate="">Depends on</tal:i18n>\n+                    <input class="form-control"\n+                           name="depends"\n+                           type="text"\n+                           value="${python:bundle[\'depends\']}"\n+                    />\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <label class="form-check-label">\n+                    <input class="form-check-input"\n+                           checked="${python:\'checked\' if bundle[\'load_async\'] else None}"\n+                           name="load_async"\n+                           type="checkbox"\n+                           value="1"\n+                    />\n+                    <tal:i18n i18n:translate="label_bundle_js_load_async">Async</tal:i18n>\n+                  </label>\n+                </div>\n+                <div class="form-check mb-3">\n+                  <label class="form-check-label">\n+                    <input class="form-check-input"\n+                           checked="${python:\'checked\' if bundle[\'load_defer\'] else None}"\n+                           name="load_defer"\n+                           type="checkbox"\n+                           value="1"\n+                    />\n+                    <tal:i18n i18n:translate="label_bundle_js_load_defer">Defer</tal:i18n>\n+                  </label>\n+                </div>\n+                <div class="mb-3">\n+                  <button class="btn btn-primary me-1"\n+                          name="action"\n+                          type="submit"\n+                          value="update"\n+                          tal:condition="python:bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Save</button>\n+                  <button class="btn btn-success me-1"\n+                          name="action"\n+                          type="submit"\n+                          value="add"\n+                          tal:condition="python:not bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Add</button>\n+                  <button class="btn btn-danger"\n+                          name="action"\n+                          type="submit"\n+                          value="delete"\n+                          tal:condition="python:bundle[\'name\']"\n+                          i18n:translate=""\n+                  >Delete</button>\n+                </div>\n+              </form>\n+            </details>\n           </tal:block>\n         </div>\n+\n         <div class="mt-3">\n           <h2 i18n:translate="">Additional Resources</h2>\n           <p i18n:translate="">After the above resources, the following might get loaded:</p>\n@@ -292,14 +264,14 @@\n           </dl>\n         </div>\n       </div>\n+\n       <script>\n-     /* collapse accordion via script here, so that it stays open when JS is disabled */\n-     window.addEventListener(\'DOMContentLoaded\', (event) => {\n-      document.querySelector(".alert.js-errors").style.display = "none";\n-      document.querySelectorAll(".accordion-item:not(.active) .accordion-button").forEach(el => el.classList.add("collapsed"));\n-      document.querySelectorAll(".accordion-item:not(.active) .accordion-collapse").forEach(el => el.classList.remove("show"));\n-    });\n+        window.addEventListener(\'DOMContentLoaded\', (event) => {\n+          /* Hide the JavaScript warning when JavaScript is enabled. */\n+          document.querySelector(".alert.js-errors").style.display = "none";\n+        });\n       </script>\n+\n     </metal:main>\n \n   </body>\ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 29ae11ae00..12021ceb0a 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -489,7 +489,7 @@ def test_add_resource(self):\n         add_form.getControl("add").click()\n \n         self.assertIn(\n-            \'<h2 class="accordion-header" id="heading-my-resource">\',\n+            \'<h2 class="accordion-header fs-5 fw-bold">my-resource</h2>\',\n             self.browser.contents,\n         )\n \n@@ -507,6 +507,6 @@ def test_update_resource(self):\n         form.getControl("update").click()\n \n         self.assertIn(\n-            \'<h2 class="accordion-header" id="heading-new-resource-name">\',\n+            \'<h2 class="accordion-header fs-5 fw-bold">new-resource-name</h2>\',\n             self.browser.contents,\n         )\ndiff --git a/news/3942.bugfix b/news/3942.bugfix\nnew file mode 100644\nindex 0000000000..a939eff395\n--- /dev/null\n+++ b/news/3942.bugfix\n@@ -0,0 +1,6 @@\n+Use details element for collapsibles in the resource registry\n+\n+Makes it possible to toggle elements even with broken or missing javascript.\n+Also properly connect form labels with their inputs.\n+\n+Fixes #3942\n'

