Repository: plone.restapi


Branch: refs/heads/main
Date: 2024-02-15T13:56:21-08:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/48025e847734473286151c08cb88ee132a105d00

Fix serializer block with anchors, remove trailing slash before the anchor (#1748)

* Fix serializer block with anchors, remove trailing slash before the anchor

* Changelog

* Handle trailing slash + fragment in deserializer

* Update news/1748.bugfix

* lint

---------

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

Files changed:
A news/1748.bugfix
M src/plone/restapi/deserializer/utils.py
M src/plone/restapi/serializer/utils.py
M src/plone/restapi/tests/test_blocks_deserializer.py
M src/plone/restapi/tests/test_blocks_serializer.py

b'diff --git a/news/1748.bugfix b/news/1748.bugfix\nnew file mode 100644\nindex 000000000..2cf695fb0\n--- /dev/null\n+++ b/news/1748.bugfix\n@@ -0,0 +1 @@\n+Fixed an edge case in the blocks resolveuid transforms with a trailing slash before a fragment. @sneridagh \ndiff --git a/src/plone/restapi/deserializer/utils.py b/src/plone/restapi/deserializer/utils.py\nindex 9a266d0e9..67d67d555 100644\n--- a/src/plone/restapi/deserializer/utils.py\n+++ b/src/plone/restapi/deserializer/utils.py\n@@ -31,7 +31,7 @@ def path2uid(context, link):\n     suffix = ""\n     match = PATH_RE.match(path)\n     if match is not None:\n-        path = match.group(1)\n+        path = match.group(1).rstrip("/")\n         suffix = match.group(2) or ""\n \n     obj = portal.unrestrictedTraverse(path, None)\ndiff --git a/src/plone/restapi/serializer/utils.py b/src/plone/restapi/serializer/utils.py\nindex c94c5ee0a..89ce0b005 100644\n--- a/src/plone/restapi/serializer/utils.py\n+++ b/src/plone/restapi/serializer/utils.py\n@@ -8,7 +8,7 @@\n import re\n \n \n-RESOLVEUID_RE = re.compile("^(?:|.*/)resolve[Uu]id/([^/#]*)/?(.*)?$")\n+RESOLVEUID_RE = re.compile("^(?:|.*/)resolve[Uu]id/([^/#]*)?(.*)?$")\n \n \n def resolve_uid(path):\n@@ -29,7 +29,7 @@ def resolve_uid(path):\n         return path, None\n     href = brain.getURL()\n     if suffix:\n-        return href + "/" + suffix, brain\n+        return href + suffix, brain\n     target_object = brain._unrestrictedGetObject()\n     adapter = queryMultiAdapter(\n         (target_object, target_object.REQUEST),\ndiff --git a/src/plone/restapi/tests/test_blocks_deserializer.py b/src/plone/restapi/tests/test_blocks_deserializer.py\nindex 5fa3996ad..874e5446e 100644\n--- a/src/plone/restapi/tests/test_blocks_deserializer.py\n+++ b/src/plone/restapi/tests/test_blocks_deserializer.py\n@@ -535,6 +535,36 @@ def test_slate_simple_link_deserializer_with_suffix_and_anchor(self):\n             link, f"../resolveuid/{self.image.UID()}/@@download/file#anchor-id"\n         )\n \n+    def test_slate_simple_link_deserializer_with_slash_and_anchor(self):\n+        blocks = {\n+            "abc": {\n+                "@type": "slate",\n+                "plaintext": "Frontpage content here",\n+                "value": [\n+                    {\n+                        "children": [\n+                            {"text": "Frontpage "},\n+                            {\n+                                "children": [{"text": "content "}],\n+                                "data": {\n+                                    "url": "%s/image-1/#anchor-id"\n+                                    % self.portal.absolute_url()\n+                                },\n+                                "type": "link",\n+                            },\n+                            {"text": "here"},\n+                        ],\n+                        "type": "h2",\n+                    }\n+                ],\n+            }\n+        }\n+\n+        res = self.deserialize(blocks=blocks)\n+        value = res.blocks["abc"]["value"]\n+        link = value[0]["children"][1]["data"]["url"]\n+        self.assertEqual(link, f"../resolveuid/{self.image.UID()}#anchor-id")\n+\n     def test_aquisition_messing_with_link_deserializer(self):\n         self.portal.invokeFactory(\n             "Folder",\ndiff --git a/src/plone/restapi/tests/test_blocks_serializer.py b/src/plone/restapi/tests/test_blocks_serializer.py\nindex dd9b1bd9e..df1ee63bf 100644\n--- a/src/plone/restapi/tests/test_blocks_serializer.py\n+++ b/src/plone/restapi/tests/test_blocks_serializer.py\n@@ -318,7 +318,7 @@ def test_simple_link_serializer_with_anchor(self):\n         )\n         value = res["abc"]["value"]\n         link = value[0]["children"][1]["data"]["url"]\n-        self.assertEqual(link, f"{self.portal[\'doc1\'].absolute_url()}/#anchor-id")\n+        self.assertEqual(link, f"{self.portal[\'doc1\'].absolute_url()}#anchor-id")\n \n     def test_simple_link_serializer_with_suffix(self):\n         doc_uid = IUUID(self.portal["doc1"])\n'

