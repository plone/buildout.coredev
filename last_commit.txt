Repository: plone.restapi


Branch: refs/heads/main
Date: 2024-06-16T17:02:01-07:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.restapi/commit/9d11653fe2da0c50ee4d74bef1d8a416879c4168

Remove use of `portal_properties` in context navigation. (#1795)

Theoretically we checked `portal_properties.site_properties.sortAttribute`.

Files changed:
A news/125.bugfix
M src/plone/restapi/services/contextnavigation/get.py

b'diff --git a/news/125.bugfix b/news/125.bugfix\nnew file mode 100644\nindex 0000000000..4a5dd28024\n--- /dev/null\n+++ b/news/125.bugfix\n@@ -0,0 +1,3 @@\n+Remove use of `portal_properties` in context navigation.\n+Theoretically we checked `portal_properties.site_properties.sortAttribute`.\n+[maurits]\ndiff --git a/src/plone/restapi/services/contextnavigation/get.py b/src/plone/restapi/services/contextnavigation/get.py\nindex d5d5ba1c97..0fe0d7a054 100644\n--- a/src/plone/restapi/services/contextnavigation/get.py\n+++ b/src/plone/restapi/services/contextnavigation/get.py\n@@ -625,9 +625,6 @@ def __init__(self, context, data):\n         self.context = context\n         self.data = data\n \n-        portal_properties = getToolByName(context, "portal_properties")\n-        navtree_properties = getattr(portal_properties, "navtree_properties")\n-\n         # Acquire a custom nav query if available\n         customQuery = getattr(context, "getCustomNavQuery", None)\n         if customQuery is not None and safe_callable(customQuery):\n@@ -668,14 +665,6 @@ def __init__(self, context, data):\n         # Only list the applicable types\n         query["portal_type"] = typesToList(context)\n \n-        # Apply the desired sort\n-        sortAttribute = navtree_properties.getProperty("sortAttribute", None)\n-        if sortAttribute is not None:\n-            query["sort_on"] = sortAttribute\n-            sortOrder = navtree_properties.getProperty("sortOrder", None)\n-            if sortOrder is not None:\n-                query["sort_order"] = sortOrder\n-\n         # Filter on workflow states, if enabled\n         registry = getUtility(IRegistry)\n         navigation_settings = registry.forInterface(INavigationSchema, prefix="plone")\n'

