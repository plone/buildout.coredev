Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2020-08-03T15:21:39+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/2db40871582ac8ce59d18820ac6cf2df07a5fc1d

fast-listen support multiple addresses

Fixed an issue that prevented the instance to start
when http-address has multiple entries and http-fast-listen is on

Fixes #146

Files changed:
A news/146.bugfix
M src/plone/recipe/zope2instance/ctl.py

b'diff --git a/news/146.bugfix b/news/146.bugfix\nnew file mode 100644\nindex 0000000..5f09cd7\n--- /dev/null\n+++ b/news/146.bugfix\n@@ -0,0 +1,3 @@\n+Fixed an issue that prevented the instance to start\n+when http-address has multiple entries and http-fast-listen is on\n+[ale-rt]\ndiff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex c6fd851..2dea043 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -891,35 +891,41 @@ def help_adduser(self):\n \n \n def serve_paste(app, global_conf, **kw):\n-    sock = None\n+    sockets = []\n     if \'prebound\' in global_conf:\n-        _sock = socket.fromfd(\n-            int(global_conf[\'prebound\']), socket.AF_INET, socket.SOCK_STREAM)\n-        if six.PY2:\n-            sock = socket.socket()\n-            sock._sock = _sock\n-        else:\n-            sock = _sock\n-        kw.update(sockets=[sock])\n+        filenos = global_conf[\'prebound\'].split()\n+        for fileno in filenos:\n+            _sock = socket.fromfd(\n+                int(fileno), socket.AF_INET, socket.SOCK_STREAM)\n+            if six.PY2:\n+                sock = socket.socket()\n+                sock._sock = _sock\n+            else:\n+                sock = _sock\n+            sockets.append(sock)\n+        kw.update(sockets=sockets)\n     try:\n         waitress.serve(app, **kw)\n     finally:\n-        if isinstance(sock, socket.socket):\n+        for sock in sockets:\n             sock.close()\n     return 0\n \n \n def server_factory(global_conf, **kws):\n     if \'fast-listen\' in kws:\n-        host, port = kws[\'fast-listen\'].split(\':\')\n-        prebound = dispatcher()\n-        prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n-        prebound.set_reuse_addr()\n-        prebound.bind((host, int(port)))\n-        prebound.listen(5)\n-        while not prebound.readable():\n-            sleep(1)\n-        global_conf.update(prebound=str(prebound.socket.fileno()))\n+        filenos = []\n+        for host_port in kws[\'fast-listen\'].split():\n+            host, port = host_port.split(\':\')\n+            prebound = dispatcher()\n+            prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n+            prebound.set_reuse_addr()\n+            prebound.bind((host, int(port)))\n+            prebound.listen(5)\n+            while not prebound.readable():\n+                sleep(1)\n+            filenos.append(str(prebound.socket.fileno()))\n+        global_conf.update(prebound=" ".join(filenos))\n         del kws[\'fast-listen\']\n     del kws[\'paste.server_factory\']\n \n'

Repository: plone.recipe.zope2instance


Branch: refs/heads/master
Date: 2020-08-04T00:37:42+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.recipe.zope2instance/commit/d610f9c35459bf73a99ff99e091e28c52deab165

Merge pull request #147 from plone/146-fixed

fast-listen support multiple addresses

Files changed:
A news/146.bugfix
M src/plone/recipe/zope2instance/ctl.py

b'diff --git a/news/146.bugfix b/news/146.bugfix\nnew file mode 100644\nindex 0000000..5f09cd7\n--- /dev/null\n+++ b/news/146.bugfix\n@@ -0,0 +1,3 @@\n+Fixed an issue that prevented the instance to start\n+when http-address has multiple entries and http-fast-listen is on\n+[ale-rt]\ndiff --git a/src/plone/recipe/zope2instance/ctl.py b/src/plone/recipe/zope2instance/ctl.py\nindex c6fd851..2dea043 100644\n--- a/src/plone/recipe/zope2instance/ctl.py\n+++ b/src/plone/recipe/zope2instance/ctl.py\n@@ -891,35 +891,41 @@ def help_adduser(self):\n \n \n def serve_paste(app, global_conf, **kw):\n-    sock = None\n+    sockets = []\n     if \'prebound\' in global_conf:\n-        _sock = socket.fromfd(\n-            int(global_conf[\'prebound\']), socket.AF_INET, socket.SOCK_STREAM)\n-        if six.PY2:\n-            sock = socket.socket()\n-            sock._sock = _sock\n-        else:\n-            sock = _sock\n-        kw.update(sockets=[sock])\n+        filenos = global_conf[\'prebound\'].split()\n+        for fileno in filenos:\n+            _sock = socket.fromfd(\n+                int(fileno), socket.AF_INET, socket.SOCK_STREAM)\n+            if six.PY2:\n+                sock = socket.socket()\n+                sock._sock = _sock\n+            else:\n+                sock = _sock\n+            sockets.append(sock)\n+        kw.update(sockets=sockets)\n     try:\n         waitress.serve(app, **kw)\n     finally:\n-        if isinstance(sock, socket.socket):\n+        for sock in sockets:\n             sock.close()\n     return 0\n \n \n def server_factory(global_conf, **kws):\n     if \'fast-listen\' in kws:\n-        host, port = kws[\'fast-listen\'].split(\':\')\n-        prebound = dispatcher()\n-        prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n-        prebound.set_reuse_addr()\n-        prebound.bind((host, int(port)))\n-        prebound.listen(5)\n-        while not prebound.readable():\n-            sleep(1)\n-        global_conf.update(prebound=str(prebound.socket.fileno()))\n+        filenos = []\n+        for host_port in kws[\'fast-listen\'].split():\n+            host, port = host_port.split(\':\')\n+            prebound = dispatcher()\n+            prebound.create_socket(socket.AF_INET, socket.SOCK_STREAM)\n+            prebound.set_reuse_addr()\n+            prebound.bind((host, int(port)))\n+            prebound.listen(5)\n+            while not prebound.readable():\n+                sleep(1)\n+            filenos.append(str(prebound.socket.fileno()))\n+        global_conf.update(prebound=" ".join(filenos))\n         del kws[\'fast-listen\']\n     del kws[\'paste.server_factory\']\n \n'

