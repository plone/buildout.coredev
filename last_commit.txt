Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-10-17T09:31:58-07:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/4d49209aa3c742d5246a75cc8c010065a2f28d5e

Allow substring matches when filtering aliases in the URL Management control panel (#4031)

* Allow substring matches when filtering aliases in the URL Management control panel

* Add a marker to help use this from plone.restapi

* changelog

Files changed:
A news/4031.feature
M Products/CMFPlone/controlpanel/browser/redirects.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py

b'diff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex 9ddd6a2f97..25e271028e 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -164,6 +164,10 @@ def view_url(self):\n \n \n class RedirectionSet:\n+    # Marker so that plone.restapi can detect if this is\n+    # a version that supports the start and end parameters\n+    supports_date_range_filtering = True\n+\n     def __init__(self, query="", created="", manual="", start="", end=""):\n         self.storage = getUtility(IRedirectionStorage)\n \n@@ -172,7 +176,7 @@ def __init__(self, query="", created="", manual="", start="", end=""):\n         self.portal_path_len = len(self.portal_path)\n \n         # noinspection PyProtectedMember\n-        if query:\n+        if query and query.startswith("/"):\n             # with query path /Plone/news:\n             # min_k is /Plone/news and\n             # max_k is /Plone/newt\n@@ -180,6 +184,8 @@ def __init__(self, query="", created="", manual="", start="", end=""):\n             min_k = "{:s}/{:s}".format(self.portal_path, query.strip("/"))\n             max_k = min_k[:-1] + chr(ord(min_k[-1]) + 1)\n             self.data = self.storage._paths.keys(min=min_k, max=max_k, excludemax=True)\n+        elif query:\n+            self.data = [path for path in self.storage._paths.keys() if query in path]\n         else:\n             self.data = self.storage._paths.keys()\n         if manual:\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\nindex 8e8d3057ab..51d2d7fb2d 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n@@ -241,6 +241,9 @@ def test_redirection_controlpanel_filtering(self):\n         # this should return one and not two (we need excludemax=True)\n         redirects = RedirectionSet(query="/foo1/777")\n         self.assertEqual(len(redirects), 1)\n+        # query without an initial slash matches any substring\n+        redirects = RedirectionSet(query="999")\n+        self.assertEqual(len(redirects), 2)\n \n         request = self.layer["request"].clone()\n         request.form["q"] = "/foo"\ndiff --git a/news/4031.feature b/news/4031.feature\nnew file mode 100644\nindex 0000000000..767054e50c\n--- /dev/null\n+++ b/news/4031.feature\n@@ -0,0 +1 @@\n+URL Management control panel: Find substring matches when querying aliases. @davisagli\n'

