Repository: mockup


Branch: refs/heads/master
Date: 2020-10-09T14:06:14+02:00
Author: Nicola Zambello (nzambello) <nzambello@protonmail.com>
Commit: https://github.com/plone/mockup/commit/1199d0e6cef3a9ba603c07f9db6e7a0c9d499cf9

[a11y] focus handling in modal pattern

Files changed:
A news/11.bugfix
M mockup/patterns/modal/pattern.js

b'diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js\nindex 45eccea5f..ee2ed1d3e 100644\n--- a/mockup/patterns/modal/pattern.js\n+++ b/mockup/patterns/modal/pattern.js\n@@ -126,11 +126,11 @@ define([\n         classContentName: \'\',  // String, class name to be applied to the content of the modal, useful for modal specific styling\n         template: \'\' +\n           \'<div class="<%= options.className %>">\' +\n-          \'  <div class="<%= options.classDialog %>">\' +\n+          \'  <div class="<%= options.classDialog %>" role="dialog" <% if (title) { %>aria-labelledby="plone-modal-title" <% } %> tabindex="-1">\' +\n           \'    <div class="<%= options.classModal %>">\' +\n           \'      <div class="<%= options.classHeaderName %>">\' +\n-          \'        <a class="plone-modal-close">&times;</a>\' +\n-          \'        <% if (title) { %><h2 class="plone-modal-title"><%= title %></h2><% } %>\' +\n+          \'        <a class="plone-modal-close" aria-label="Close modal" title="Close modal" href="#">&times;</a>\' +\n+          \'        <% if (title) { %><h2 class="plone-modal-title" id="plone-modal-title" tabindex="0"><%= title %></h2><% } %>\' +\n           \'      </div>\' +\n           \'      <div class="<%= options.classBodyName %>">\' +\n           \'        <div class="<%= options.classPrependName %>"><%= prepend %></div> \' +\n@@ -552,8 +552,13 @@ define([\n         });\n       }\n \n-\n-\n+      if (self.options.backdropOptions.closeOnClick === true) {\n+        $(document).on(\'click\', function(e) {\n+          if (!$(e.target).closest(\'.\' + self.options.templateOptions.classModal).length) {\n+            self.hide();\n+          }\n+        });\n+      }\n \n       $(window.parent).resize(function() {\n         self.positionModal();\n@@ -747,6 +752,46 @@ define([\n       return self.$modal !== null && self.$modal !== undefined;\n     },\n \n+    activateFocusTrap: function() {\n+      var self = this;\n+      var inputs = self.$modal.find(\'.\' + self.options.templateOptions.classBodyName).first().find(\n+        \'select, input, textarea, button, a\'\n+      );\n+\n+      if (inputs.length === 0) {\n+        inputs = self.$modal.find(\'.plone-modal-title\');\n+      }\n+\n+      var firstInput = inputs.first();\n+      var lastInput = inputs.last();\n+      var closeInput = self.$modal.find(\'.plone-modal-close\').first();\n+\n+      $(document).on(\'keydown\', \'.\' + self.options.templateOptions.classDialog, function(e) {\n+        if (e.which === 9) {\n+          e.preventDefault();\n+\n+          var $target = $(e.target)\n+          var currentIndex = inputs.index($target);\n+\n+          if (currentIndex >= 0 && currentIndex < inputs.length) {\n+            var nextIndex = currentIndex + (e.shiftKey ? -1 : 1);\n+\n+            if (nextIndex < 0 || nextIndex >= inputs.length) {\n+              closeInput.focus();\n+            } else {\n+              inputs.get(nextIndex).focus();\n+            }\n+          } else if (e.shiftKey) {\n+            lastInput.focus();\n+          } else {\n+            firstInput.focus();\n+          }\n+        }\n+      });\n+\n+      self.$modal.find(\'.plone-modal-title\').focus();\n+    },\n+\n     positionModal: function() {\n       /* re-position modal at any point.\n        *\n@@ -883,6 +928,7 @@ define([\n       });\n       $(\'body\').addClass(\'plone-modal-open\');\n       self.emit(\'shown\');\n+      self.activateFocusTrap();\n     },\n     hide: function() {\n       var self = this;\n@@ -909,6 +955,7 @@ define([\n         $(window.parent).off(\'resize.plone-modal.patterns\');\n       }\n       self.emit(\'hidden\');\n+      self.$el.focus();\n     },\n \n     redraw: function(response, options) {\ndiff --git a/news/11.bugfix b/news/11.bugfix\nnew file mode 100644\nindex 000000000..d0994d746\n--- /dev/null\n+++ b/news/11.bugfix\n@@ -0,0 +1,2 @@\n+[a11y] focus handling in modal pattern\n+[nzambello]\n'

Repository: mockup


Branch: refs/heads/master
Date: 2020-10-09T14:06:14+02:00
Author: ionlizarazu (ionlizarazu) <ilizarazu@codesyntax.com>
Commit: https://github.com/plone/mockup/commit/590d229599433bac4f2265ce7dfa7857c408bf17

avoid hidden inputs, trap also footer content to submit and correct the outside click handler

Files changed:
M mockup/patterns/modal/pattern.js

b"diff --git a/mockup/patterns/modal/pattern.js b/mockup/patterns/modal/pattern.js\nindex ee2ed1d3e..4a04c81c6 100644\n--- a/mockup/patterns/modal/pattern.js\n+++ b/mockup/patterns/modal/pattern.js\n@@ -552,14 +552,6 @@ define([\n         });\n       }\n \n-      if (self.options.backdropOptions.closeOnClick === true) {\n-        $(document).on('click', function(e) {\n-          if (!$(e.target).closest('.' + self.options.templateOptions.classModal).length) {\n-            self.hide();\n-          }\n-        });\n-      }\n-\n       $(window.parent).resize(function() {\n         self.positionModal();\n       });\n@@ -754,32 +746,42 @@ define([\n \n     activateFocusTrap: function() {\n       var self = this;\n-      var inputs = self.$modal.find('.' + self.options.templateOptions.classBodyName).first().find(\n-        'select, input, textarea, button, a'\n+      var inputsBody = self.$modal.find('.' + self.options.templateOptions.classBodyName).first().find(\n+        'select, input[type!=hidden], textarea, button, a'\n+      );\n+      var inputsFooter = self.$modal.find('.' + self.options.templateOptions.classFooterName).first().find(\n+        'select, input[type!=hidden], textarea, button, a'\n       );\n+      var inputs=[]\n+      for (var i=0; i<inputsBody.length; i++){\n+        if($(inputsBody[i]).is(':visible')){\n+          inputs.push(inputsBody[i])\n+        }\n+      }\n+      for (var j=0; j<inputsFooter.length; j++){\n+        if($(inputsFooter[j]).is(':visible')){\n+          inputs.push(inputsFooter[j])\n+        }\n+      }\n \n       if (inputs.length === 0) {\n         inputs = self.$modal.find('.plone-modal-title');\n       }\n-\n-      var firstInput = inputs.first();\n-      var lastInput = inputs.last();\n+      var firstInput = inputs[0];\n+      var lastInput = inputs[inputs.length-1];\n       var closeInput = self.$modal.find('.plone-modal-close').first();\n-\n       $(document).on('keydown', '.' + self.options.templateOptions.classDialog, function(e) {\n         if (e.which === 9) {\n           e.preventDefault();\n \n           var $target = $(e.target)\n-          var currentIndex = inputs.index($target);\n-\n+          var currentIndex = $.inArray($target[0],inputs);\n           if (currentIndex >= 0 && currentIndex < inputs.length) {\n             var nextIndex = currentIndex + (e.shiftKey ? -1 : 1);\n-\n             if (nextIndex < 0 || nextIndex >= inputs.length) {\n               closeInput.focus();\n             } else {\n-              inputs.get(nextIndex).focus();\n+              inputs[nextIndex].focus();\n             }\n           } else if (e.shiftKey) {\n             lastInput.focus();\n@@ -788,6 +790,13 @@ define([\n           }\n         }\n       });\n+      if (self.options.backdropOptions.closeOnClick === true) {\n+        self.$modal.on('click', function(e) {\n+          if (!$(e.target).closest('.' + self.options.templateOptions.classModal).length) {\n+            self.hide();\n+          }\n+        });\n+      }\n \n       self.$modal.find('.plone-modal-title').focus();\n     },\n"

