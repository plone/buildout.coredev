Repository: plone.dexterity


Branch: refs/heads/master
Date: 2020-10-05T14:41:29+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/726bcd7b684e1be2f790b16adea8000a67796420

DefaultReadFile properly implements the IStreamIterator interface

Fixes #138

Files changed:
A plone/dexterity/tests/test_filerepresentation.py
M news/138.bugfix
M plone/dexterity/filerepresentation.py
M plone/dexterity/tests/case.py
M plone/dexterity/tests/test_webdav.py

b'diff --git a/news/138.bugfix b/news/138.bugfix\nindex 8013edf..2c8138e 100644\n--- a/news/138.bugfix\n+++ b/news/138.bugfix\n@@ -1 +1,2 @@\n Use mock from unittest on Python 3 [ale-rt]\n+DefaultReadFile properly implements the IStreamIterator interface [ale-rt]\ndiff --git a/plone/dexterity/filerepresentation.py b/plone/dexterity/filerepresentation.py\nindex b3ee215..5e9bf7a 100644\n--- a/plone/dexterity/filerepresentation.py\n+++ b/plone/dexterity/filerepresentation.py\n@@ -666,6 +666,8 @@ def size(self):\n         self._getStream()\n         return self._size\n \n+    __len__ = size\n+\n     # internal helper methods\n \n     @memoize\n@@ -698,6 +700,11 @@ def _getStream(self):\n         out.seek(0)\n         return out\n \n+    def __next__(self):\n+        """ Iterate over the stream\n+        """\n+        return self._getStream().__next__()\n+\n \n @implementer(IRawWriteFile)\n class WriteFileBase(object):\ndiff --git a/plone/dexterity/tests/case.py b/plone/dexterity/tests/case.py\nindex 5d0304f..56bbdac 100644\n--- a/plone/dexterity/tests/case.py\n+++ b/plone/dexterity/tests/case.py\n@@ -102,6 +102,22 @@ def __init__(self, **kw):\n         self.__dict__.update(kw)\n \n \n+class ItemDummy(Dummy):\n+    """ Dummy objects with title getter and setter """\n+\n+    title = \'\'\n+    portal_type = \'foo\'\n+\n+    def Title(self):\n+        return self.title\n+\n+    def setTitle(self, title):\n+        self.title = title\n+\n+    def getId(self):\n+        return self.__dict__.get(\'id\', \'\')\n+\n+\n # from mocker\n def _global_replace(remove, install):\n     """Replace object \'remove\' with object \'install\' on all dictionaries."""\ndiff --git a/plone/dexterity/tests/test_filerepresentation.py b/plone/dexterity/tests/test_filerepresentation.py\nnew file mode 100644\nindex 0000000..70f2b56\n--- /dev/null\n+++ b/plone/dexterity/tests/test_filerepresentation.py\n@@ -0,0 +1,18 @@\n+from .case import ItemDummy\n+from .case import MockTestCase\n+from plone.dexterity.filerepresentation import DefaultReadFile\n+from zope.interface.verify import verifyObject\n+from ZPublisher.Iterators import IStreamIterator\n+\n+\n+class TestFileRepresentation(MockTestCase):\n+    def create_dummy(self, **kw):\n+        return ItemDummy(**kw)\n+\n+    def test_defaultreadfile_verify_iface(self):\n+\n+        dummy = DefaultReadFile(ItemDummy())\n+        self.assertTrue(IStreamIterator.providedBy(dummy))\n+        self.assertTrue(verifyObject(IStreamIterator, dummy))\n+        self.assertEqual(b"".join(dummy), b"Portal-Type: foo\\n\\n")\n+        self.assertEqual(len(dummy), 18)\ndiff --git a/plone/dexterity/tests/test_webdav.py b/plone/dexterity/tests/test_webdav.py\nindex 96d4c12..d496a54 100644\n--- a/plone/dexterity/tests/test_webdav.py\n+++ b/plone/dexterity/tests/test_webdav.py\n@@ -5,7 +5,7 @@\n \n if HAS_ZSERVER:\n \n-    from .case import Dummy\n+    from .case import ItemDummy\n     from email.message import Message\n     from mock import Mock\n     from OFS.Folder import Folder\n@@ -63,21 +63,6 @@ def _createResponse(self):\n             return HTTPResponse()\n \n \n-    class ItemDummy(Dummy):\n-        """ Dummy objects with title getter and setter """\n-\n-        title = \'\'\n-\n-        def Title(self):\n-            return self.title\n-\n-        def setTitle(self, title):\n-            self.title = title\n-\n-        def getId(self):\n-            return self.__dict__.get(\'id\', \'\')\n-\n-\n     class TestWebZope2DAVAPI(MockTestCase):\n \n         def test_get_size_no_adapter(self):\n'

Repository: plone.dexterity


Branch: refs/heads/master
Date: 2020-10-05T16:31:51+02:00
Author: Wolfgang Thomas (pysailor) <thomas@syslab.com>
Commit: https://github.com/plone/plone.dexterity/commit/72915aa0785b5a36ca3328e9e3f6bd7f478b129c

Merge pull request #139 from plone/138-fixed

DefaultReadFile properly implements the IStreamIterator interface

Files changed:
A plone/dexterity/tests/test_filerepresentation.py
M news/138.bugfix
M plone/dexterity/filerepresentation.py
M plone/dexterity/tests/case.py
M plone/dexterity/tests/test_webdav.py

b'diff --git a/news/138.bugfix b/news/138.bugfix\nindex 8013edf..2c8138e 100644\n--- a/news/138.bugfix\n+++ b/news/138.bugfix\n@@ -1 +1,2 @@\n Use mock from unittest on Python 3 [ale-rt]\n+DefaultReadFile properly implements the IStreamIterator interface [ale-rt]\ndiff --git a/plone/dexterity/filerepresentation.py b/plone/dexterity/filerepresentation.py\nindex b3ee215..5e9bf7a 100644\n--- a/plone/dexterity/filerepresentation.py\n+++ b/plone/dexterity/filerepresentation.py\n@@ -666,6 +666,8 @@ def size(self):\n         self._getStream()\n         return self._size\n \n+    __len__ = size\n+\n     # internal helper methods\n \n     @memoize\n@@ -698,6 +700,11 @@ def _getStream(self):\n         out.seek(0)\n         return out\n \n+    def __next__(self):\n+        """ Iterate over the stream\n+        """\n+        return self._getStream().__next__()\n+\n \n @implementer(IRawWriteFile)\n class WriteFileBase(object):\ndiff --git a/plone/dexterity/tests/case.py b/plone/dexterity/tests/case.py\nindex 5d0304f..56bbdac 100644\n--- a/plone/dexterity/tests/case.py\n+++ b/plone/dexterity/tests/case.py\n@@ -102,6 +102,22 @@ def __init__(self, **kw):\n         self.__dict__.update(kw)\n \n \n+class ItemDummy(Dummy):\n+    """ Dummy objects with title getter and setter """\n+\n+    title = \'\'\n+    portal_type = \'foo\'\n+\n+    def Title(self):\n+        return self.title\n+\n+    def setTitle(self, title):\n+        self.title = title\n+\n+    def getId(self):\n+        return self.__dict__.get(\'id\', \'\')\n+\n+\n # from mocker\n def _global_replace(remove, install):\n     """Replace object \'remove\' with object \'install\' on all dictionaries."""\ndiff --git a/plone/dexterity/tests/test_filerepresentation.py b/plone/dexterity/tests/test_filerepresentation.py\nnew file mode 100644\nindex 0000000..70f2b56\n--- /dev/null\n+++ b/plone/dexterity/tests/test_filerepresentation.py\n@@ -0,0 +1,18 @@\n+from .case import ItemDummy\n+from .case import MockTestCase\n+from plone.dexterity.filerepresentation import DefaultReadFile\n+from zope.interface.verify import verifyObject\n+from ZPublisher.Iterators import IStreamIterator\n+\n+\n+class TestFileRepresentation(MockTestCase):\n+    def create_dummy(self, **kw):\n+        return ItemDummy(**kw)\n+\n+    def test_defaultreadfile_verify_iface(self):\n+\n+        dummy = DefaultReadFile(ItemDummy())\n+        self.assertTrue(IStreamIterator.providedBy(dummy))\n+        self.assertTrue(verifyObject(IStreamIterator, dummy))\n+        self.assertEqual(b"".join(dummy), b"Portal-Type: foo\\n\\n")\n+        self.assertEqual(len(dummy), 18)\ndiff --git a/plone/dexterity/tests/test_webdav.py b/plone/dexterity/tests/test_webdav.py\nindex 96d4c12..d496a54 100644\n--- a/plone/dexterity/tests/test_webdav.py\n+++ b/plone/dexterity/tests/test_webdav.py\n@@ -5,7 +5,7 @@\n \n if HAS_ZSERVER:\n \n-    from .case import Dummy\n+    from .case import ItemDummy\n     from email.message import Message\n     from mock import Mock\n     from OFS.Folder import Folder\n@@ -63,21 +63,6 @@ def _createResponse(self):\n             return HTTPResponse()\n \n \n-    class ItemDummy(Dummy):\n-        """ Dummy objects with title getter and setter """\n-\n-        title = \'\'\n-\n-        def Title(self):\n-            return self.title\n-\n-        def setTitle(self, title):\n-            self.title = title\n-\n-        def getId(self):\n-            return self.__dict__.get(\'id\', \'\')\n-\n-\n     class TestWebZope2DAVAPI(MockTestCase):\n \n         def test_get_size_no_adapter(self):\n'

