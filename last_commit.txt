Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-10-09T11:28:48+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/67003908f61c7a10891bb3e16361d4c796597d7e

Restore the capability of the resource registry to serve OFS files as
resources.

This was possible in Plone 5.2 and broken by the upgrade to Plone 6.
Do not break if the resource is not found or callable.

Files changed:
A news/4022.bugfix
M Products/CMFPlone/resources/utils.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nindex a0632ec8dc..4cbb8bbf67 100644\n--- a/Products/CMFPlone/resources/utils.py\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -1,6 +1,7 @@\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n+from OFS.Image import File\n from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n@@ -75,9 +76,15 @@ def get_resource(context, path):\n     if hasattr(aq_base(resource), "GET"):\n         # for FileResource\n         result = resource.GET()\n-    else:\n+    elif isinstance(resource, File):\n+        # An OFS.Image.File object\n+        result = resource.data\n+    elif callable(resource):\n         # any BrowserView\n         result = resource()\n+    else:\n+        logger.info("Cannot get data from resource %r", resource)\n+        result = b""\n     context.REQUEST.response = response_before\n     return result\n \ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 12021ceb0a..235ba8cf87 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,3 +1,4 @@\n+from OFS.Image import File\n from plone.app.testing import logout\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n@@ -13,6 +14,7 @@\n from Products.CMFPlone.resources.browser.resource import REQUEST_CACHE_KEY\n from Products.CMFPlone.resources.browser.resource import ScriptsView\n from Products.CMFPlone.resources.browser.resource import StylesView\n+from Products.CMFPlone.resources.webresource import PloneScriptResource\n from Products.CMFPlone.tests import PloneTestCase\n from zope.component import getUtility\n \n@@ -180,6 +182,30 @@ def test_bundle_depends_on_missing(self):\n         # bundle should be skipped when rendering\n         self.assertNotIn("http://foo.bar/foobar.js", results)\n \n+    def test_resource_browser_static_resource(self):\n+        resource = PloneScriptResource(self.portal, resource="++resource++plone-admin-ui.js")\n+        self.assertIn(\n+            b"window.onload", resource.file_data,\n+        )\n+\n+    def test_resource_ofs_file(self):\n+        self.portal["foo.js"] = File("foo.js", "Title", b\'console.log()\')\n+        resource = PloneScriptResource(self.portal, resource="foo.js")\n+        self.assertEqual(\n+            resource.file_data, b\'console.log()\',\n+        )\n+\n+    def test_resource_view(self):\n+        resource = PloneScriptResource(self.portal, resource="@@ok")\n+        self.assertEqual(\n+            resource.file_data, b\'OK\',\n+        )\n+\n+    def test_resource_bogus(self):\n+        resource = PloneScriptResource(self.portal, resource="I_do_not_exist")\n+        self.assertEqual(\n+            resource.file_data, b\'I_do_not_exist\',\n+        )\n \n class TestStylesViewlet(PloneTestCase.PloneTestCase):\n     def test_styles_viewlet(self):\ndiff --git a/news/4022.bugfix b/news/4022.bugfix\nnew file mode 100644\nindex 0000000000..292aac9553\n--- /dev/null\n+++ b/news/4022.bugfix\n@@ -0,0 +1,2 @@\n+Resource registry: Support OFS.Image.File objects.\n+[ale-rt, thet]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-10-10T00:14:49+02:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/ad248d7e0c5ea2b7a0649575abb6c79e891e620c

Merge pull request #4024 from plone/fix-get-resource

[6.1] Restore the capability of the resource registry to serve OFS files as resources

Files changed:
A news/4022.bugfix
M Products/CMFPlone/resources/utils.py
M Products/CMFPlone/tests/testResourceRegistries.py

b'diff --git a/Products/CMFPlone/resources/utils.py b/Products/CMFPlone/resources/utils.py\nindex a0632ec8dc..4cbb8bbf67 100644\n--- a/Products/CMFPlone/resources/utils.py\n+++ b/Products/CMFPlone/resources/utils.py\n@@ -1,6 +1,7 @@\n from Acquisition import aq_base\n from Acquisition import aq_inner\n from Acquisition import aq_parent\n+from OFS.Image import File\n from plone.base.interfaces.resources import OVERRIDE_RESOURCE_DIRECTORY_NAME\n from plone.resource.file import FilesystemFile\n from plone.resource.interfaces import IResourceDirectory\n@@ -75,9 +76,15 @@ def get_resource(context, path):\n     if hasattr(aq_base(resource), "GET"):\n         # for FileResource\n         result = resource.GET()\n-    else:\n+    elif isinstance(resource, File):\n+        # An OFS.Image.File object\n+        result = resource.data\n+    elif callable(resource):\n         # any BrowserView\n         result = resource()\n+    else:\n+        logger.info("Cannot get data from resource %r", resource)\n+        result = b""\n     context.REQUEST.response = response_before\n     return result\n \ndiff --git a/Products/CMFPlone/tests/testResourceRegistries.py b/Products/CMFPlone/tests/testResourceRegistries.py\nindex 12021ceb0a..235ba8cf87 100644\n--- a/Products/CMFPlone/tests/testResourceRegistries.py\n+++ b/Products/CMFPlone/tests/testResourceRegistries.py\n@@ -1,3 +1,4 @@\n+from OFS.Image import File\n from plone.app.testing import logout\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n@@ -13,6 +14,7 @@\n from Products.CMFPlone.resources.browser.resource import REQUEST_CACHE_KEY\n from Products.CMFPlone.resources.browser.resource import ScriptsView\n from Products.CMFPlone.resources.browser.resource import StylesView\n+from Products.CMFPlone.resources.webresource import PloneScriptResource\n from Products.CMFPlone.tests import PloneTestCase\n from zope.component import getUtility\n \n@@ -180,6 +182,30 @@ def test_bundle_depends_on_missing(self):\n         # bundle should be skipped when rendering\n         self.assertNotIn("http://foo.bar/foobar.js", results)\n \n+    def test_resource_browser_static_resource(self):\n+        resource = PloneScriptResource(self.portal, resource="++resource++plone-admin-ui.js")\n+        self.assertIn(\n+            b"window.onload", resource.file_data,\n+        )\n+\n+    def test_resource_ofs_file(self):\n+        self.portal["foo.js"] = File("foo.js", "Title", b\'console.log()\')\n+        resource = PloneScriptResource(self.portal, resource="foo.js")\n+        self.assertEqual(\n+            resource.file_data, b\'console.log()\',\n+        )\n+\n+    def test_resource_view(self):\n+        resource = PloneScriptResource(self.portal, resource="@@ok")\n+        self.assertEqual(\n+            resource.file_data, b\'OK\',\n+        )\n+\n+    def test_resource_bogus(self):\n+        resource = PloneScriptResource(self.portal, resource="I_do_not_exist")\n+        self.assertEqual(\n+            resource.file_data, b\'I_do_not_exist\',\n+        )\n \n class TestStylesViewlet(PloneTestCase.PloneTestCase):\n     def test_styles_viewlet(self):\ndiff --git a/news/4022.bugfix b/news/4022.bugfix\nnew file mode 100644\nindex 0000000000..292aac9553\n--- /dev/null\n+++ b/news/4022.bugfix\n@@ -0,0 +1,2 @@\n+Resource registry: Support OFS.Image.File objects.\n+[ale-rt, thet]\n'

