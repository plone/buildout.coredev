Repository: plone.app.dexterity


Branch: refs/heads/master
Date: 2020-10-05T16:17:38+02:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.app.dexterity/commit/f1862dbebc8d7f74422e1ace0ab8379c6b58f07f

Refs #313 - Fix tests to match plone.dexterity dynamic schema name (#314)

* Refs #313 - Fix tests to match plone.dexterity dynamic schema name

Files changed:
A news/313.bugfix
M plone/app/dexterity/tests/editing.rst

b'diff --git a/news/313.bugfix b/news/313.bugfix\nnew file mode 100644\nindex 0000000..bbbe493\n--- /dev/null\n+++ b/news/313.bugfix\n@@ -0,0 +1,2 @@\n+- Update tests to fix https://github.com/plone/plone.dexterity/pull/137\n+[@avoinea]\ndiff --git a/plone/app/dexterity/tests/editing.rst b/plone/app/dexterity/tests/editing.rst\nindex 4741177..bc6e725 100644\n--- a/plone/app/dexterity/tests/editing.rst\n+++ b/plone/app/dexterity/tests/editing.rst\n@@ -116,7 +116,6 @@ and saved::\n   >>> from plone.i18n.normalizer.interfaces import IIDNormalizer\n   >>> from plone.schemaeditor import interfaces\n   >>> normalizer = component.getUtility(IIDNormalizer)\n-  >>> schema = plonista.lookupSchema()\n   >>> for name, factory in sorted(component.getUtilitiesFor(\n   ...     interfaces.IFieldFactory)):\n   ...     if hasattr(factory, \'protected\') and factory.protected(None):\n@@ -129,6 +128,7 @@ and saved::\n   ...     browser.getControl(\'Field type\').getControl(\n   ...         value=factory.title).selected = True\n   ...     browser.getControl(\'Add\').click()\n+  ...     schema = plonista.lookupSchema()\n   ...     assert browser.url == "http://nohost/plone/dexterity-types/plonista/@@add-field", (\n   ...         "Couldn\'t successfully add %r" % name)\n   ...     assert field_id in schema, \'%r not in %r\' % (\n'

