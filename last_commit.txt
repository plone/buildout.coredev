Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-05-07T12:55:33+02:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/56885947e9d59397095fe29df35cd53cc43c8949

Fixed @translations endpoint to only retrieve the translations that the current user can really access (#938)

Files changed:
A news/937.bugfix
M src/plone/restapi/services/multilingual/pam.py
M src/plone/restapi/tests/test_translations.py

b'diff --git a/news/937.bugfix b/news/937.bugfix\nnew file mode 100644\nindex 00000000..6ba29412\n--- /dev/null\n+++ b/news/937.bugfix\n@@ -0,0 +1,5 @@\n+- Fixed @translations endpoint to only retrieve the translations that the current user\n+  can really access using ``get_restricted_translations`` instead. This fixes the use\n+  case where an user with no permissions on a translation accessing the endpoint returned\n+  a 401.\n+  [sneridagh]\ndiff --git a/src/plone/restapi/services/multilingual/pam.py b/src/plone/restapi/services/multilingual/pam.py\nindex 74c3f050..8bd78ab8 100644\n--- a/src/plone/restapi/services/multilingual/pam.py\n+++ b/src/plone/restapi/services/multilingual/pam.py\n@@ -34,7 +34,7 @@ def __call__(self, expand=False):\n \n         translations = []\n         manager = ITranslationManager(self.context)\n-        for language, translation in manager.get_translations().items():\n+        for language, translation in manager.get_restricted_translations().items():\n             if language != ILanguage(self.context).get_language():\n                 translations.append(\n                     {"@id": translation.absolute_url(), "language": language}\ndiff --git a/src/plone/restapi/tests/test_translations.py b/src/plone/restapi/tests/test_translations.py\nindex 46d88676..3769441c 100644\n--- a/src/plone/restapi/tests/test_translations.py\n+++ b/src/plone/restapi/tests/test_translations.py\n@@ -1,4 +1,5 @@\n # -*- coding: utf-8 -*-\n+from plone import api\n from plone.app.testing import login\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n@@ -152,6 +153,26 @@ def test_calling_with_inexistent_content_gives_400(self):\n         )\n         self.assertEqual(400, response.status_code)\n \n+    def test_get_translations_on_content_with_no_permissions(self):\n+        response = requests.post(\n+            "{}/@translations".format(self.en_content.absolute_url()),\n+            headers={"Accept": "application/json"},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={"id": self.es_content.absolute_url()},\n+        )\n+        self.assertEqual(201, response.status_code)\n+        api.content.transition(self.en_content, "publish")\n+        transaction.commit()\n+\n+        response = requests.get(\n+            "{}/@translations".format(self.en_content.absolute_url()),\n+            headers={"Accept": "application/json"},\n+        )\n+\n+        self.assertEqual(200, response.status_code)\n+        response = response.json()\n+        self.assertTrue(len(response["items"]) == 0)\n+\n \n @unittest.skipUnless(\n     PAM_INSTALLED, "plone.app.multilingual is installed by default only in Plone 5"\n'

