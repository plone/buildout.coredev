Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2020-05-20T04:42:05+02:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/778be8f352e8cde600b4db99a8683211a3fb6793

range support

Files changed:
A buildout.cfg
M plone/formwidget/namedfile/widget.py
M plone/formwidget/namedfile/widget.rst

b'diff --git a/buildout.cfg b/buildout.cfg\nnew file mode 100644\nindex 0000000..28a3221\n--- /dev/null\n+++ b/buildout.cfg\n@@ -0,0 +1,39 @@\n+[buildout]\n+extensions = mr.developer\n+extends =\n+    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.2.x.cfg\n+    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg\n+package-name = plone.formwidget.namedfile\n+package-extras = [test]\n+versions = versions\n+parts +=\n+    omelette\n+    releaser\n+    code-analysis\n+    coverage-sh\n+    code-analysis\n+    createcoverage\n+auto-checkout =\n+    plone.namedfile\n+\n+[sources]\n+plone.namedfile = git https://github.com/plone/plone.namedfile branch=range\n+\n+[test]\n+defaults = [\'-s\', \'${buildout:package-name}\', \'--auto-color\', \'--auto-progress\']\n+\n+[omelette]\n+recipe = collective.recipe.omelette\n+eggs = ${instance:eggs}\n+\n+[releaser]\n+recipe = zc.recipe.egg\n+eggs =\n+    zest.releaser\n+    pyroma\n+\n+[versions]\n+plone.formwidget.namedfile =\n+plone.namedfile =\n+zc.buildout =\n+setuptools =\ndiff --git a/plone/formwidget/namedfile/widget.py b/plone/formwidget/namedfile/widget.py\nindex d7c2566..c97920d 100644\n--- a/plone/formwidget/namedfile/widget.py\n+++ b/plone/formwidget/namedfile/widget.py\n@@ -7,6 +7,7 @@\n from plone.formwidget.namedfile.interfaces import IFileUploadTemporaryStorage\n from plone.formwidget.namedfile.interfaces import INamedFileWidget\n from plone.formwidget.namedfile.interfaces import INamedImageWidget\n+from plone.namedfile.browser import Download as DownloadBase\n from plone.namedfile.file import NamedBlobFile\n from plone.namedfile.file import NamedBlobImage\n from plone.namedfile.file import NamedFile\n@@ -373,7 +374,7 @@ def alt(self):\n \n \n @implementer(IPublishTraverse)\n-class Download(BrowserView):\n+class Download(DownloadBase):\n     """Download a file, via ../context/form/++widget++/@@download/filename\n     """\n \n@@ -414,7 +415,8 @@ def __call__(self):\n             self.filename = getattr(file_, \'filename\', None)\n \n         set_headers(file_, self.request.response, filename=self.filename)\n-        return stream_data(file_)\n+        request_range = self.handle_request_range(file_)\n+        return stream_data(file_, **request_range)\n \n \n @implementer(IFieldWidget)\ndiff --git a/plone/formwidget/namedfile/widget.rst b/plone/formwidget/namedfile/widget.rst\nindex 29a3db3..f432bc8 100644\n--- a/plone/formwidget/namedfile/widget.rst\n+++ b/plone/formwidget/namedfile/widget.rst\n@@ -452,11 +452,11 @@ instances and the two named file/image widgets::\n   >>> from zope.component import getMultiAdapter\n   >>> from z3c.form.interfaces import IDataConverter\n   >>> from z3c.form.interfaces import NOT_CHANGED\n-  \n+\n   >>> file_converter = getMultiAdapter((IContent[\'file_field\'], file_widget), IDataConverter)\n   >>> image_converter = getMultiAdapter((IContent[\'image_field\'], image_widget), IDataConverter)\n \n-An initial upload of a file will never include the action field, \n+An initial upload of a file will never include the action field,\n so let\'s remove it from our test requests\n \n   >>> del file_widget.request.form[\'widget.name.file.action\']\n@@ -532,8 +532,8 @@ being returned::\n   >>> field_value is IContent[\'image_field\'].missing_value\n   True\n \n-If the file has already been uploaded and the user selects \'Keep Existing File\' \n-in the widget, the widget will include \'action\':\'nochange\' in the form post, \n+If the file has already been uploaded and the user selects \'Keep Existing File\'\n+in the widget, the widget will include \'action\':\'nochange\' in the form post,\n and the converter will always set the value to z3c.form.interfaces.NOT_CHANGED::\n \n   >>> file_widget.request.form[\'widget.name.file.action\'] = \'nochange\'\n@@ -542,7 +542,7 @@ and the converter will always set the value to z3c.form.interfaces.NOT_CHANGED::\n   >>> image_widget.request.form[\'widget.name.image.action\'] = \'nochange\'\n   >>> image_converter.toFieldValue(u\'\') is NOT_CHANGED\n   True\n-  \n+\n \n The Base64Converter for Bytes fields\n ------------------------------------\n@@ -946,6 +946,38 @@ The Download view on Bytes fields\n   "attachment; filename*=UTF-8\'\'test.jpg"\n \n \n+Range support\n+-------------\n+\n+Checking for partial requests support::\n+\n+  >>> request = make_request()\n+  >>> view = Download(bytes_file_widget, request)\n+  >>> view()\n+  b\'testfile\'\n+  >>> request.response.getHeader(\'Content-Length\')\n+  \'8\'\n+  >>> request.response.getHeader(\'Accept-Ranges\')\n+  \'bytes\'\n+\n+Request a specific range::\n+\n+  >>> request = make_request(environ={\'HTTP_RANGE\': \'bytes=0-3\'})\n+  >>> view = Download(bytes_file_widget, request)\n+  >>> view()\n+  b\'test\'\n+  >>> request.response.getStatus()\n+  206\n+\n+The Content-Length header now indicates the size of the requested range (and not the full size of the image).\n+The Content-Range response header indicates where in the full resource this partial message belongs.::\n+\n+  >>> request.response.getHeader(\'Content-Length\')\n+  \'4\'\n+  >>> request.response.getHeader(\'Content-Range\')\n+  \'bytes 0-3/8\'\n+\n+\n The validator\n -------------\n \n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2020-05-20T04:47:00+02:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/ca5dddb46f01af136582c7c60d7f5613220fe14f

changelog

Files changed:
A news/44.feature

b'diff --git a/news/44.feature b/news/44.feature\nnew file mode 100644\nindex 0000000..3ac4fbd\n--- /dev/null\n+++ b/news/44.feature\n@@ -0,0 +1,2 @@\n+- Range support (https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests)\n+  [mamico]\n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2020-06-24T09:30:26+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/9b4d2360b69807429583310eb922b573ca72af02

Removed temporarily added buildout.cfg.

Files changed:
D buildout.cfg

b"diff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex 28a3221..0000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-[buildout]\n-extensions = mr.developer\n-extends =\n-    https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-5.2.x.cfg\n-    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg\n-package-name = plone.formwidget.namedfile\n-package-extras = [test]\n-versions = versions\n-parts +=\n-    omelette\n-    releaser\n-    code-analysis\n-    coverage-sh\n-    code-analysis\n-    createcoverage\n-auto-checkout =\n-    plone.namedfile\n-\n-[sources]\n-plone.namedfile = git https://github.com/plone/plone.namedfile branch=range\n-\n-[test]\n-defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']\n-\n-[omelette]\n-recipe = collective.recipe.omelette\n-eggs = ${instance:eggs}\n-\n-[releaser]\n-recipe = zc.recipe.egg\n-eggs =\n-    zest.releaser\n-    pyroma\n-\n-[versions]\n-plone.formwidget.namedfile =\n-plone.namedfile =\n-zc.buildout =\n-setuptools =\n"

Repository: plone.formwidget.namedfile


Branch: refs/heads/master
Date: 2020-06-24T11:55:13+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/8af788b3c605ceb732eaf3c100e10047a2b1182e

Merge pull request #44 from plone/range

range support

Files changed:
A news/44.feature
M plone/formwidget/namedfile/widget.py
M plone/formwidget/namedfile/widget.rst

b'diff --git a/news/44.feature b/news/44.feature\nnew file mode 100644\nindex 0000000..3ac4fbd\n--- /dev/null\n+++ b/news/44.feature\n@@ -0,0 +1,2 @@\n+- Range support (https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests)\n+  [mamico]\ndiff --git a/plone/formwidget/namedfile/widget.py b/plone/formwidget/namedfile/widget.py\nindex d7c2566..c97920d 100644\n--- a/plone/formwidget/namedfile/widget.py\n+++ b/plone/formwidget/namedfile/widget.py\n@@ -7,6 +7,7 @@\n from plone.formwidget.namedfile.interfaces import IFileUploadTemporaryStorage\n from plone.formwidget.namedfile.interfaces import INamedFileWidget\n from plone.formwidget.namedfile.interfaces import INamedImageWidget\n+from plone.namedfile.browser import Download as DownloadBase\n from plone.namedfile.file import NamedBlobFile\n from plone.namedfile.file import NamedBlobImage\n from plone.namedfile.file import NamedFile\n@@ -373,7 +374,7 @@ def alt(self):\n \n \n @implementer(IPublishTraverse)\n-class Download(BrowserView):\n+class Download(DownloadBase):\n     """Download a file, via ../context/form/++widget++/@@download/filename\n     """\n \n@@ -414,7 +415,8 @@ def __call__(self):\n             self.filename = getattr(file_, \'filename\', None)\n \n         set_headers(file_, self.request.response, filename=self.filename)\n-        return stream_data(file_)\n+        request_range = self.handle_request_range(file_)\n+        return stream_data(file_, **request_range)\n \n \n @implementer(IFieldWidget)\ndiff --git a/plone/formwidget/namedfile/widget.rst b/plone/formwidget/namedfile/widget.rst\nindex 29a3db3..f432bc8 100644\n--- a/plone/formwidget/namedfile/widget.rst\n+++ b/plone/formwidget/namedfile/widget.rst\n@@ -452,11 +452,11 @@ instances and the two named file/image widgets::\n   >>> from zope.component import getMultiAdapter\n   >>> from z3c.form.interfaces import IDataConverter\n   >>> from z3c.form.interfaces import NOT_CHANGED\n-  \n+\n   >>> file_converter = getMultiAdapter((IContent[\'file_field\'], file_widget), IDataConverter)\n   >>> image_converter = getMultiAdapter((IContent[\'image_field\'], image_widget), IDataConverter)\n \n-An initial upload of a file will never include the action field, \n+An initial upload of a file will never include the action field,\n so let\'s remove it from our test requests\n \n   >>> del file_widget.request.form[\'widget.name.file.action\']\n@@ -532,8 +532,8 @@ being returned::\n   >>> field_value is IContent[\'image_field\'].missing_value\n   True\n \n-If the file has already been uploaded and the user selects \'Keep Existing File\' \n-in the widget, the widget will include \'action\':\'nochange\' in the form post, \n+If the file has already been uploaded and the user selects \'Keep Existing File\'\n+in the widget, the widget will include \'action\':\'nochange\' in the form post,\n and the converter will always set the value to z3c.form.interfaces.NOT_CHANGED::\n \n   >>> file_widget.request.form[\'widget.name.file.action\'] = \'nochange\'\n@@ -542,7 +542,7 @@ and the converter will always set the value to z3c.form.interfaces.NOT_CHANGED::\n   >>> image_widget.request.form[\'widget.name.image.action\'] = \'nochange\'\n   >>> image_converter.toFieldValue(u\'\') is NOT_CHANGED\n   True\n-  \n+\n \n The Base64Converter for Bytes fields\n ------------------------------------\n@@ -946,6 +946,38 @@ The Download view on Bytes fields\n   "attachment; filename*=UTF-8\'\'test.jpg"\n \n \n+Range support\n+-------------\n+\n+Checking for partial requests support::\n+\n+  >>> request = make_request()\n+  >>> view = Download(bytes_file_widget, request)\n+  >>> view()\n+  b\'testfile\'\n+  >>> request.response.getHeader(\'Content-Length\')\n+  \'8\'\n+  >>> request.response.getHeader(\'Accept-Ranges\')\n+  \'bytes\'\n+\n+Request a specific range::\n+\n+  >>> request = make_request(environ={\'HTTP_RANGE\': \'bytes=0-3\'})\n+  >>> view = Download(bytes_file_widget, request)\n+  >>> view()\n+  b\'test\'\n+  >>> request.response.getStatus()\n+  206\n+\n+The Content-Length header now indicates the size of the requested range (and not the full size of the image).\n+The Content-Range response header indicates where in the full resource this partial message belongs.::\n+\n+  >>> request.response.getHeader(\'Content-Length\')\n+  \'4\'\n+  >>> request.response.getHeader(\'Content-Range\')\n+  \'bytes 0-3/8\'\n+\n+\n The validator\n -------------\n \n'

