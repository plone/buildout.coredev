Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-13T17:53:38+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a13731457cdb1dec9c647cc2efcb579b73f0aa54

fix resource viewlet cache

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 403057745f..aefaf67019 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -6,16 +6,15 @@\n from plone.app.theming.utils import theming_policy\n from plone.base.interfaces import IBundleRegistry\n from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.Expression import createExprContext\n-from Products.CMFCore.Expression import Expression\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component.hooks import getSite\n \n+import hashlib\n import logging\n import webresource\n \n+\n logger = logging.getLogger(__name__)\n \n REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n@@ -35,19 +34,39 @@ class ResourceBase:\n     initialization.\n     """\n \n+    def _request_bundles(self):\n+        request = self.request\n+        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n+        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n+        # include sub/parent request\n+        while request.get("PARENT_REQUEST", None):\n+            request = request["PARENT_REQUEST"]\n+            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n+            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+        return request_enabled_bundles, request_disabled_bundles\n+\n+    def _cache_attr_name(self, site):\n+        hashtool = hashlib.sha256()\n+        hashtool.update(self.__class__.__name__)\n+        hashtool.update(site.absolute_url())\n+        e_bundles, d_bundles = self._request_bundles()\n+        for bundle in e_bundles + d_bundles:\n+            hashtool.update(bundle)\n+        return f"_v_renderend_cache_{hashtool.hexdigest()}"\n+\n     @property\n     def _rendered_cache(self):\n         if getConfiguration().debug_mode:\n             return\n         self.registry = getUtility(IRegistry)\n         if not self.registry["plone.resources.development"]:\n-            return getattr(\n-                self.context, f"_v_renderend_cached_{self.__class__.__name__}", None\n-            )\n+            site = getSite()\n+            return getattr(site, self._cache_attr_name(site), None)\n \n     @_rendered_cache.setter\n     def _rendered_cache(self, value):\n-        setattr(self.context, f"_v_renderend_cached_{self.__class__.__name__}", value)\n+        site = getSite()\n+        setattr(site, self._cache_attr_name(site), value)\n \n     def update(self):\n         # cache on request\n@@ -87,15 +106,7 @@ def update(self):\n \n         theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n         theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n-\n-        # include sub/parent request\n-        request = self.request\n-        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n-        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n-        while request.get("PARENT_REQUEST", None):\n-            request = request["PARENT_REQUEST"]\n-            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n-            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+        request_enabled_bundles = request_disabled_bundles = self._request_bundles()\n \n         # collect names\n         js_names = {name for name, rec in records.items() if rec.jscompilation}\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-13T18:02:35+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/233d2b7a5e5d30d046e0cfecfd7296f207f273fa

hashlib loves binary

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex aefaf67019..d98fdcf2f5 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -47,11 +47,11 @@ def _request_bundles(self):\n \n     def _cache_attr_name(self, site):\n         hashtool = hashlib.sha256()\n-        hashtool.update(self.__class__.__name__)\n-        hashtool.update(site.absolute_url())\n+        hashtool.update(self.__class__.__name__.encode(\'utf8\'))\n+        hashtool.update(site.absolute_url().encode(\'utf8\'))\n         e_bundles, d_bundles = self._request_bundles()\n         for bundle in e_bundles + d_bundles:\n-            hashtool.update(bundle)\n+            hashtool.update(bundle.encode(\'utf8\'))\n         return f"_v_renderend_cache_{hashtool.hexdigest()}"\n \n     @property\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-13T18:07:17+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/3d3be5843029b5d5922f23078046f8ae1e9d11ae

unused variable removed

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex d98fdcf2f5..d9e2d65162 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -145,7 +145,7 @@ def update(self):\n                         )\n                         depends = graceful_depends\n                 external = record.jscompilation.startswith("http")\n-                resource = PloneScriptResource(\n+                PloneScriptResource(\n                     context=self.context,\n                     name=name,\n                     depends=depends,\n@@ -181,7 +181,7 @@ def update(self):\n                         )\n                         depends = graceful_depends\n                 external = record.csscompilation.startswith("http")\n-                resource = PloneStyleResource(\n+                PloneStyleResource(\n                     context=self.context,\n                     name=name,\n                     depends=depends,\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-13T18:07:50+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/a04d79991c90e906c0ae21c7e3109244095da4d9

sets need other operator

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex d9e2d65162..b2efbe73d9 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -50,7 +50,7 @@ def _cache_attr_name(self, site):\n         hashtool.update(self.__class__.__name__.encode(\'utf8\'))\n         hashtool.update(site.absolute_url().encode(\'utf8\'))\n         e_bundles, d_bundles = self._request_bundles()\n-        for bundle in e_bundles + d_bundles:\n+        for bundle in e_bundles | d_bundles:\n             hashtool.update(bundle.encode(\'utf8\'))\n         return f"_v_renderend_cache_{hashtool.hexdigest()}"\n \n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-13T18:10:37+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/649eb469757aab4520a0ce32089ad8e2d5d8a531

add news file

Files changed:
A news/3503.bugfix

b'diff --git a/news/3503.bugfix b/news/3503.bugfix\nnew file mode 100644\nindex 0000000000..6c2deda046\n--- /dev/null\n+++ b/news/3503.bugfix\n@@ -0,0 +1,3 @@\n+Bugfix: Resource viewlet cache took not enough factors into account (like base url).\n+[jnsens]\n+\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-14T13:10:41+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/2a4edbe70fc54f48944fbdb6b30245a8d2eb68b1

typo, must be an unpack

Files changed:
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex b2efbe73d9..bc42561754 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -106,7 +106,7 @@ def update(self):\n \n         theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n         theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n-        request_enabled_bundles = request_disabled_bundles = self._request_bundles()\n+        request_enabled_bundles, request_disabled_bundles = self._request_bundles()\n \n         # collect names\n         js_names = {name for name, rec in records.items() if rec.jscompilation}\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2022-04-14T15:20:20+03:00
Author: Maik Derstappen (MrTango) <md@derico.de>
Commit: https://github.com/plone/Products.CMFPlone/commit/9ca65c8cd65bd17c243c961cfb42f38d1200112e

Merge pull request #3503 from plone/fix-resource-viewlet-cache

Fix resource viewlet cache

Files changed:
A news/3503.bugfix
M Products/CMFPlone/resources/browser/resource.py

b'diff --git a/Products/CMFPlone/resources/browser/resource.py b/Products/CMFPlone/resources/browser/resource.py\nindex 403057745f..bc42561754 100644\n--- a/Products/CMFPlone/resources/browser/resource.py\n+++ b/Products/CMFPlone/resources/browser/resource.py\n@@ -6,16 +6,15 @@\n from plone.app.theming.utils import theming_policy\n from plone.base.interfaces import IBundleRegistry\n from plone.registry.interfaces import IRegistry\n-from Products.CMFCore.Expression import createExprContext\n-from Products.CMFCore.Expression import Expression\n-from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.resources import RESOURCE_DEVELOPMENT_MODE\n from zope.component import getMultiAdapter\n from zope.component import getUtility\n+from zope.component.hooks import getSite\n \n+import hashlib\n import logging\n import webresource\n \n+\n logger = logging.getLogger(__name__)\n \n REQUEST_CACHE_KEY = "_WEBRESOURCE_CACHE_"\n@@ -35,19 +34,39 @@ class ResourceBase:\n     initialization.\n     """\n \n+    def _request_bundles(self):\n+        request = self.request\n+        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n+        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n+        # include sub/parent request\n+        while request.get("PARENT_REQUEST", None):\n+            request = request["PARENT_REQUEST"]\n+            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n+            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+        return request_enabled_bundles, request_disabled_bundles\n+\n+    def _cache_attr_name(self, site):\n+        hashtool = hashlib.sha256()\n+        hashtool.update(self.__class__.__name__.encode(\'utf8\'))\n+        hashtool.update(site.absolute_url().encode(\'utf8\'))\n+        e_bundles, d_bundles = self._request_bundles()\n+        for bundle in e_bundles | d_bundles:\n+            hashtool.update(bundle.encode(\'utf8\'))\n+        return f"_v_renderend_cache_{hashtool.hexdigest()}"\n+\n     @property\n     def _rendered_cache(self):\n         if getConfiguration().debug_mode:\n             return\n         self.registry = getUtility(IRegistry)\n         if not self.registry["plone.resources.development"]:\n-            return getattr(\n-                self.context, f"_v_renderend_cached_{self.__class__.__name__}", None\n-            )\n+            site = getSite()\n+            return getattr(site, self._cache_attr_name(site), None)\n \n     @_rendered_cache.setter\n     def _rendered_cache(self, value):\n-        setattr(self.context, f"_v_renderend_cached_{self.__class__.__name__}", value)\n+        site = getSite()\n+        setattr(site, self._cache_attr_name(site), value)\n \n     def update(self):\n         # cache on request\n@@ -87,15 +106,7 @@ def update(self):\n \n         theme_enabled_bundles = getattr(theme, "enabled_bundles", [])\n         theme_disabled_bundles = getattr(theme, "disabled_bundles", [])\n-\n-        # include sub/parent request\n-        request = self.request\n-        request_enabled_bundles = set(getattr(request, "enabled_bundles", []))\n-        request_disabled_bundles = set(getattr(request, "disabled_bundles", []))\n-        while request.get("PARENT_REQUEST", None):\n-            request = request["PARENT_REQUEST"]\n-            request_enabled_bundles.update(getattr(request, "enabled_bundles", []))\n-            request_disabled_bundles.update(getattr(request, "disabled_bundles", []))\n+        request_enabled_bundles, request_disabled_bundles = self._request_bundles()\n \n         # collect names\n         js_names = {name for name, rec in records.items() if rec.jscompilation}\n@@ -134,7 +145,7 @@ def update(self):\n                         )\n                         depends = graceful_depends\n                 external = record.jscompilation.startswith("http")\n-                resource = PloneScriptResource(\n+                PloneScriptResource(\n                     context=self.context,\n                     name=name,\n                     depends=depends,\n@@ -170,7 +181,7 @@ def update(self):\n                         )\n                         depends = graceful_depends\n                 external = record.csscompilation.startswith("http")\n-                resource = PloneStyleResource(\n+                PloneStyleResource(\n                     context=self.context,\n                     name=name,\n                     depends=depends,\ndiff --git a/news/3503.bugfix b/news/3503.bugfix\nnew file mode 100644\nindex 0000000000..6c2deda046\n--- /dev/null\n+++ b/news/3503.bugfix\n@@ -0,0 +1,3 @@\n+Bugfix: Resource viewlet cache took not enough factors into account (like base url).\n+[jnsens]\n+\n'

