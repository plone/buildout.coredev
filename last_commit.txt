Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-06-30T23:23:24+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/39552a78b55d5fb520a7c63e8e3f9501c79ccaef

add upgrade step Fix Registry Settings

Files changed:
M plone/app/upgrade/v60/configure.zcml
M plone/app/upgrade/v60/final.py

b'diff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex b120cc8b..57b7b12a 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -311,8 +311,8 @@\n         <!-- Plone 6.0.7 -->\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            handler="..utils.null_upgrade_step"\n+            title="Fix Registry ISyndication Settings"\n+            handler=".final.fix_syndication_settings"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v60/final.py b/plone/app/upgrade/v60/final.py\nindex df51c04b..1a079d2e 100644\n--- a/plone/app/upgrade/v60/final.py\n+++ b/plone/app/upgrade/v60/final.py\n@@ -1,6 +1,7 @@\n from AccessControl.Permission import Permission\n from plone.base.utils import get_installer\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n from zope.component.hooks import getSite\n \n@@ -138,3 +139,58 @@ def fix_tinymce_menubar(context):\n     value.insert(index, "view")\n     value.insert(index, "tools")\n     record.value = value\n+\n+def fix_syndication_settings(context):\n+    """Fix Syndication Setting in the registry \n+    Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings\n+    is moved to plone.base.interfaces.syndication.ISiteSyndicationSettings.\n+\n+    See https://github.com/plone/Products.CMFPlone/issues/3805\n+    """\n+    registry = getUtility(IRegistry)\n+    record_keys = list(registry.records.keys())\n+    portal_catalog = getToolByName(context,\'portal_catalog\')\n+    \n+    old_iface = "Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n+    new_iface ="plone.base.interfaces.syndication.ISiteSyndicationSettings"\n+\n+    fieldnames=[\n+        "allowed",\n+        "default_enabled",\n+        "search_rss_enabled",\n+        "show_author_info",\n+        "render_body",\n+        "max_items",\n+        "allowed_feed_types",\n+        "site_rss_items",\n+        "show_syndication_button",\n+        "show_syndication_link"\n+    ]\n+\n+    # write old record values to new record\n+    for fieldname in fieldnames:\n+        old_key = f"{old_iface}.{fieldname}"\n+        new_key = f"{new_iface}.{fieldname}"\n+        record = registry.records.get(old_key)\n+        if record is not None:\n+            if fieldname == \'site_rss_items\':\n+                # handle none existing items\n+                # if in path in catalog add to the record\n+                items = list(record.value)\n+                newitems=[]\n+                for item in items:\n+                    brains = portal_catalog(path={ "query": item })\n+                    if len(brains) > 0:\n+                        newitems.append(item)\n+                \n+                registry[new_key] = tuple(newitems)\n+\n+            else:\n+                registry[new_key] = record.value\n+\n+\n+    # delete the old records\n+    for fieldname in fieldnames:\n+        key = f"{old_iface}.{fieldname}"\n+        if key in record_keys:\n+            del registry.records[key]\n\\ No newline at end of file\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-06-30T23:23:36+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/1e687090a9315c9ab8b984c3ba9f3f6443e765e5

Add test for Upgrade Step

Files changed:
A plone/app/upgrade/tests/test_fix_registry_settings.py

b'diff --git a/plone/app/upgrade/tests/test_fix_registry_settings.py b/plone/app/upgrade/tests/test_fix_registry_settings.py\nnew file mode 100644\nindex 00000000..99407453\n--- /dev/null\n+++ b/plone/app/upgrade/tests/test_fix_registry_settings.py\n@@ -0,0 +1,70 @@\n+from plone.app.upgrade import utils\n+from plone.app.upgrade.tests.base import MigrationTest\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+from Products.CMFCore.utils import getToolByName\n+\n+\n+class TestFixRegistrySettings(MigrationTest):\n+    \n+    def test_fix_syndication_settings(self):\n+        # add fake settings, simulate the old iface settings of \n+\n+        from plone.app.upgrade.v60.final import fix_syndication_settings\n+        from plone.registry.interfaces import IRegistry\n+        from zope.component import getUtility\n+\n+        registry = getUtility(IRegistry)\n+        \n+        registry.registerInterface(ISiteSyndicationSettings, prefix="Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings")\n+        \n+        records = list(registry.records.keys())\n+        \n+        old_iface = "Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n+        new_iface ="plone.base.interfaces.syndication.ISiteSyndicationSettings"\n+\n+        fieldnames=[\n+            "allowed",\n+            "default_enabled",\n+            "search_rss_enabled",\n+            "show_author_info",\n+            "render_body",\n+            "max_items",\n+            "allowed_feed_types",\n+            "site_rss_items",\n+            "show_syndication_button",\n+            "show_syndication_link"\n+        ]\n+\n+        # test both fields from the new and the old interface are in the registry\n+        for fieldname in fieldnames:\n+\n+            recordname = f"{old_iface}.{fieldname}"\n+            self.assertIn(recordname, records)\n+            \n+            recordname = f"{new_iface}.{fieldname}"\n+            self.assertIn(recordname, records)\n+        \n+        # remove the old fields\n+        fix_syndication_settings(self.portal)\n+\n+        records = list(registry.records.keys())\n+\n+        # test only fields from the new are in the registry\n+        for fieldname in fieldnames:\n+\n+            recordname = f"{old_iface}.{fieldname}"\n+            self.assertNotIn(recordname, records)\n+            \n+            recordname = f"{new_iface}.{fieldname}"\n+            self.assertIn(recordname, records)\n+\n+        \n+\n+\n+def test_suite():\n+    from unittest import makeSuite\n+    from unittest import TestSuite\n+\n+    suite = TestSuite()\n+    suite.addTest(makeSuite(TestFixRegistrySettings))\n+    return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-06-30T23:23:43+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/4337d3b86d85aec0c83fae485b89563dc3e897c0

add News

Files changed:
A news/315.bugfix

b'diff --git a/news/315.bugfix b/news/315.bugfix\nnew file mode 100644\nindex 00000000..df9454e8\n--- /dev/null\n+++ b/news/315.bugfix\n@@ -0,0 +1,2 @@\n+Add Upgrade Step to fix ISyndicationSettings\n+[1letter]\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-06-30T23:53:32+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/39236d8d5bb2b71af9e048052924b67474819147

Update fix_syndication_settings

- use the uid in tuple for site_rss_items

Files changed:
M plone/app/upgrade/v60/final.py

b'diff --git a/plone/app/upgrade/v60/final.py b/plone/app/upgrade/v60/final.py\nindex 1a079d2e..867fb1f3 100644\n--- a/plone/app/upgrade/v60/final.py\n+++ b/plone/app/upgrade/v60/final.py\n@@ -4,6 +4,7 @@\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n from zope.component.hooks import getSite\n+from zope.schema.interfaces import IVocabularyFactory\n \n import logging\n \n@@ -150,7 +151,11 @@ def fix_syndication_settings(context):\n     registry = getUtility(IRegistry)\n     record_keys = list(registry.records.keys())\n     portal_catalog = getToolByName(context,\'portal_catalog\')\n-    \n+\n+    portal_url = getToolByName(context, "portal_url")\n+    portal = portal_url.getPortalObject()\n+    path = "/".join(portal.getPhysicalPath())\n+\n     old_iface = "Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n     new_iface ="plone.base.interfaces.syndication.ISiteSyndicationSettings"\n \n@@ -179,12 +184,11 @@ def fix_syndication_settings(context):\n                 items = list(record.value)\n                 newitems=[]\n                 for item in items:\n-                    brains = portal_catalog(path={ "query": item })\n+                    brains = portal_catalog(path={ "query": f"{path}{item}", "depth": 0})                    \n                     if len(brains) > 0:\n-                        newitems.append(item)\n-                \n+                        brain = brains[0]\n+                        newitems.append(brain.UID)                \n                 registry[new_key] = tuple(newitems)\n-\n             else:\n                 registry[new_key] = record.value\n \n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-07-01T10:42:51+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/852d58b1ad99266ceecae1a35b6eed8c929bd1af

remove unused import

Files changed:
M plone/app/upgrade/v60/final.py

b'diff --git a/plone/app/upgrade/v60/final.py b/plone/app/upgrade/v60/final.py\nindex 867fb1f3..6d994f97 100644\n--- a/plone/app/upgrade/v60/final.py\n+++ b/plone/app/upgrade/v60/final.py\n@@ -4,7 +4,6 @@\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n from zope.component.hooks import getSite\n-from zope.schema.interfaces import IVocabularyFactory\n \n import logging\n \n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-07-01T10:43:21+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/5c327dad6136b33907039c1653be86de62d51fe9

add more comments in test

Files changed:
M plone/app/upgrade/tests/test_fix_registry_settings.py

b'diff --git a/plone/app/upgrade/tests/test_fix_registry_settings.py b/plone/app/upgrade/tests/test_fix_registry_settings.py\nindex 99407453..6b663c46 100644\n--- a/plone/app/upgrade/tests/test_fix_registry_settings.py\n+++ b/plone/app/upgrade/tests/test_fix_registry_settings.py\n@@ -1,13 +1,13 @@\n from plone.app.upgrade import utils\n from plone.app.upgrade.tests.base import MigrationTest\n from plone.base.interfaces.syndication import ISiteSyndicationSettings\n-from Products.CMFCore.utils import getToolByName\n \n \n class TestFixRegistrySettings(MigrationTest):\n     \n     def test_fix_syndication_settings(self):\n-        # add fake settings, simulate the old iface settings of \n+        # add fake settings, simulate the old iface settings of\n+        # Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings \n \n         from plone.app.upgrade.v60.final import fix_syndication_settings\n         from plone.registry.interfaces import IRegistry\n@@ -15,7 +15,10 @@ def test_fix_syndication_settings(self):\n \n         registry = getUtility(IRegistry)\n         \n-        registry.registerInterface(ISiteSyndicationSettings, prefix="Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings")\n+        registry.registerInterface(\n+            ISiteSyndicationSettings,\n+            prefix="Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n+        )\n         \n         records = list(registry.records.keys())\n         \n@@ -44,7 +47,7 @@ def test_fix_syndication_settings(self):\n             recordname = f"{new_iface}.{fieldname}"\n             self.assertIn(recordname, records)\n         \n-        # remove the old fields\n+        # remove the old fields and copy the record values\n         fix_syndication_settings(self.portal)\n \n         records = list(registry.records.keys())\n@@ -58,9 +61,6 @@ def test_fix_syndication_settings(self):\n             recordname = f"{new_iface}.{fieldname}"\n             self.assertIn(recordname, records)\n \n-        \n-\n-\n def test_suite():\n     from unittest import makeSuite\n     from unittest import TestSuite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-07-02T10:17:54+02:00
Author: 1letter (1letter) <1letter@gmx.de>
Commit: https://github.com/plone/plone.app.upgrade/commit/eab66f76b31e921212ccd2b19f35fac21f82f825

remove unused code

Files changed:
M plone/app/upgrade/tests/test_fix_registry_settings.py

b'diff --git a/plone/app/upgrade/tests/test_fix_registry_settings.py b/plone/app/upgrade/tests/test_fix_registry_settings.py\nindex 6b663c46..6bce0465 100644\n--- a/plone/app/upgrade/tests/test_fix_registry_settings.py\n+++ b/plone/app/upgrade/tests/test_fix_registry_settings.py\n@@ -60,11 +60,3 @@ def test_fix_syndication_settings(self):\n             \n             recordname = f"{new_iface}.{fieldname}"\n             self.assertIn(recordname, records)\n-\n-def test_suite():\n-    from unittest import makeSuite\n-    from unittest import TestSuite\n-\n-    suite = TestSuite()\n-    suite.addTest(makeSuite(TestFixRegistrySettings))\n-    return suite\n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2023-07-03T07:34:44+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.upgrade/commit/fd8ba3066f1f2ea7aefd1299eb4c671e193ad0df

Merge pull request #317 from plone/fix#315

Fix#315

Files changed:
A news/315.bugfix
A plone/app/upgrade/tests/test_fix_registry_settings.py
M plone/app/upgrade/v60/configure.zcml
M plone/app/upgrade/v60/final.py

b'diff --git a/news/315.bugfix b/news/315.bugfix\nnew file mode 100644\nindex 00000000..df9454e8\n--- /dev/null\n+++ b/news/315.bugfix\n@@ -0,0 +1,2 @@\n+Add Upgrade Step to fix ISyndicationSettings\n+[1letter]\ndiff --git a/plone/app/upgrade/tests/test_fix_registry_settings.py b/plone/app/upgrade/tests/test_fix_registry_settings.py\nnew file mode 100644\nindex 00000000..6bce0465\n--- /dev/null\n+++ b/plone/app/upgrade/tests/test_fix_registry_settings.py\n@@ -0,0 +1,62 @@\n+from plone.app.upgrade import utils\n+from plone.app.upgrade.tests.base import MigrationTest\n+from plone.base.interfaces.syndication import ISiteSyndicationSettings\n+\n+\n+class TestFixRegistrySettings(MigrationTest):\n+    \n+    def test_fix_syndication_settings(self):\n+        # add fake settings, simulate the old iface settings of\n+        # Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings \n+\n+        from plone.app.upgrade.v60.final import fix_syndication_settings\n+        from plone.registry.interfaces import IRegistry\n+        from zope.component import getUtility\n+\n+        registry = getUtility(IRegistry)\n+        \n+        registry.registerInterface(\n+            ISiteSyndicationSettings,\n+            prefix="Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n+        )\n+        \n+        records = list(registry.records.keys())\n+        \n+        old_iface = "Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n+        new_iface ="plone.base.interfaces.syndication.ISiteSyndicationSettings"\n+\n+        fieldnames=[\n+            "allowed",\n+            "default_enabled",\n+            "search_rss_enabled",\n+            "show_author_info",\n+            "render_body",\n+            "max_items",\n+            "allowed_feed_types",\n+            "site_rss_items",\n+            "show_syndication_button",\n+            "show_syndication_link"\n+        ]\n+\n+        # test both fields from the new and the old interface are in the registry\n+        for fieldname in fieldnames:\n+\n+            recordname = f"{old_iface}.{fieldname}"\n+            self.assertIn(recordname, records)\n+            \n+            recordname = f"{new_iface}.{fieldname}"\n+            self.assertIn(recordname, records)\n+        \n+        # remove the old fields and copy the record values\n+        fix_syndication_settings(self.portal)\n+\n+        records = list(registry.records.keys())\n+\n+        # test only fields from the new are in the registry\n+        for fieldname in fieldnames:\n+\n+            recordname = f"{old_iface}.{fieldname}"\n+            self.assertNotIn(recordname, records)\n+            \n+            recordname = f"{new_iface}.{fieldname}"\n+            self.assertIn(recordname, records)\ndiff --git a/plone/app/upgrade/v60/configure.zcml b/plone/app/upgrade/v60/configure.zcml\nindex b120cc8b..57b7b12a 100644\n--- a/plone/app/upgrade/v60/configure.zcml\n+++ b/plone/app/upgrade/v60/configure.zcml\n@@ -311,8 +311,8 @@\n         <!-- Plone 6.0.7 -->\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            handler="..utils.null_upgrade_step"\n+            title="Fix Registry ISyndication Settings"\n+            handler=".final.fix_syndication_settings"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v60/final.py b/plone/app/upgrade/v60/final.py\nindex df51c04b..6d994f97 100644\n--- a/plone/app/upgrade/v60/final.py\n+++ b/plone/app/upgrade/v60/final.py\n@@ -1,6 +1,7 @@\n from AccessControl.Permission import Permission\n from plone.base.utils import get_installer\n from plone.registry.interfaces import IRegistry\n+from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n from zope.component.hooks import getSite\n \n@@ -138,3 +139,61 @@ def fix_tinymce_menubar(context):\n     value.insert(index, "view")\n     value.insert(index, "tools")\n     record.value = value\n+\n+def fix_syndication_settings(context):\n+    """Fix Syndication Setting in the registry \n+    Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings\n+    is moved to plone.base.interfaces.syndication.ISiteSyndicationSettings.\n+\n+    See https://github.com/plone/Products.CMFPlone/issues/3805\n+    """\n+    registry = getUtility(IRegistry)\n+    record_keys = list(registry.records.keys())\n+    portal_catalog = getToolByName(context,\'portal_catalog\')\n+\n+    portal_url = getToolByName(context, "portal_url")\n+    portal = portal_url.getPortalObject()\n+    path = "/".join(portal.getPhysicalPath())\n+\n+    old_iface = "Products.CMFPlone.interfaces.syndication.ISiteSyndicationSettings"\n+    new_iface ="plone.base.interfaces.syndication.ISiteSyndicationSettings"\n+\n+    fieldnames=[\n+        "allowed",\n+        "default_enabled",\n+        "search_rss_enabled",\n+        "show_author_info",\n+        "render_body",\n+        "max_items",\n+        "allowed_feed_types",\n+        "site_rss_items",\n+        "show_syndication_button",\n+        "show_syndication_link"\n+    ]\n+\n+    # write old record values to new record\n+    for fieldname in fieldnames:\n+        old_key = f"{old_iface}.{fieldname}"\n+        new_key = f"{new_iface}.{fieldname}"\n+        record = registry.records.get(old_key)\n+        if record is not None:\n+            if fieldname == \'site_rss_items\':\n+                # handle none existing items\n+                # if in path in catalog add to the record\n+                items = list(record.value)\n+                newitems=[]\n+                for item in items:\n+                    brains = portal_catalog(path={ "query": f"{path}{item}", "depth": 0})                    \n+                    if len(brains) > 0:\n+                        brain = brains[0]\n+                        newitems.append(brain.UID)                \n+                registry[new_key] = tuple(newitems)\n+            else:\n+                registry[new_key] = record.value\n+\n+\n+    # delete the old records\n+    for fieldname in fieldnames:\n+        key = f"{old_iface}.{fieldname}"\n+        if key in record_keys:\n+            del registry.records[key]\n\\ No newline at end of file\n'

