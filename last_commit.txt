Repository: plone.dexterity


Branch: refs/heads/master
Date: 2020-10-05T11:29:28+02:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/32f923322077eb98b49845676c7534e0fddb96fd

Use mock from unittest on Python 3

Files changed:
A news/138.bugfix
M plone/dexterity/tests/case.py
M plone/dexterity/tests/test_content.py
M plone/dexterity/tests/test_factory.py
M plone/dexterity/tests/test_fti.py
M plone/dexterity/tests/test_primary.py
M plone/dexterity/tests/test_schema.py
M plone/dexterity/tests/test_schema_cache.py
M plone/dexterity/tests/test_security.py
M plone/dexterity/tests/test_utils.py
M plone/dexterity/tests/test_views.py
M setup.py

b'diff --git a/news/138.bugfix b/news/138.bugfix\nnew file mode 100644\nindex 0000000..8013edf\n--- /dev/null\n+++ b/news/138.bugfix\n@@ -0,0 +1 @@\n+Use mock from unittest on Python 3 [ale-rt]\ndiff --git a/plone/dexterity/tests/case.py b/plone/dexterity/tests/case.py\nindex b62b68d..5d0304f 100644\n--- a/plone/dexterity/tests/case.py\n+++ b/plone/dexterity/tests/case.py\n@@ -1,6 +1,4 @@\n # -*- coding: utf-8 -*-\n-from mock import Mock\n-\n import gc\n import pkg_resources\n import six\n@@ -15,6 +13,11 @@\n except pkg_resources.DistributionNotFound:\n     HAS_ZSERVER = False\n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n \n class MockTestCase(unittest.TestCase):\n     """Base class for tests using mocks.\ndiff --git a/plone/dexterity/tests/test_content.py b/plone/dexterity/tests/test_content.py\nindex 3bdf69f..bd86c50 100644\n--- a/plone/dexterity/tests/test_content.py\n+++ b/plone/dexterity/tests/test_content.py\n@@ -3,7 +3,6 @@\n from datetime import date\n from datetime import datetime\n from DateTime import DateTime\n-from mock import Mock\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.behavior.interfaces import IBehavior\n from plone.behavior.interfaces import IBehaviorAssignable\n@@ -30,6 +29,17 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+try:\n+    from unittest.mock import patch\n+except ImportError:\n+    from mock import patch\n+\n+\n class TestContent(MockTestCase):\n \n     def setUp(self):\n@@ -600,12 +610,10 @@ def test_name_unicode_id_str(self):\n \n     def test_item_dublincore(self):\n         from DateTime import DateTime\n-        # Mock Zope DateTime\n-        import mock\n+\n         import plone.dexterity\n-        datetime_patcher = mock.patch.object(\n-            plone.dexterity.content, \'DateTime\'\n-        )\n+\n+        datetime_patcher = patch.object(plone.dexterity.content, \'DateTime\')\n         mocked_datetime = datetime_patcher.start()\n         mocked_datetime.return_value = DateTime(2014, 6, 1)\n         self.addCleanup(datetime_patcher.stop)\n@@ -661,12 +669,9 @@ def test_item_dublincore(self):\n \n     def test_item_dublincore_date(self):\n         from DateTime import DateTime\n-        # Mock Zope DateTime\n-        import mock\n+\n         import plone.dexterity\n-        datetime_patcher = mock.patch.object(\n-            plone.dexterity.content, \'DateTime\'\n-        )\n+        datetime_patcher = patch.object(plone.dexterity.content, \'DateTime\')\n         mocked_datetime = datetime_patcher.start()\n         mocked_datetime.return_value = DateTime(2014, 6, 1)\n         self.addCleanup(datetime_patcher.stop)\n@@ -707,12 +712,9 @@ def test_item_dublincore_date(self):\n \n     def test_item_dublincore_datetime(self):\n         from DateTime import DateTime\n-        # Mock Zope DateTime\n-        import mock\n+\n         import plone.dexterity\n-        datetime_patcher = mock.patch.object(\n-            plone.dexterity.content, \'DateTime\'\n-        )\n+        datetime_patcher = patch.object(plone.dexterity.content, \'DateTime\')\n         mocked_datetime = datetime_patcher.start()\n         mocked_datetime.return_value = DateTime(2014, 6, 1)\n         self.addCleanup(datetime_patcher.stop)\ndiff --git a/plone/dexterity/tests/test_factory.py b/plone/dexterity/tests/test_factory.py\nindex 6656a1f..f8621b2 100644\n--- a/plone/dexterity/tests/test_factory.py\n+++ b/plone/dexterity/tests/test_factory.py\n@@ -1,13 +1,15 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity.factory import DexterityFactory\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IDexterityFTI\n from zope.interface import Interface\n \n-import unittest\n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n \n class IDummy(Interface):\n     pass\ndiff --git a/plone/dexterity/tests/test_fti.py b/plone/dexterity/tests/test_fti.py\nindex 506af26..018587f 100644\n--- a/plone/dexterity/tests/test_fti.py\n+++ b/plone/dexterity/tests/test_fti.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity import utils\n from plone.dexterity.schema import portalTypeToSchemaName\n from plone.dexterity.factory import DexterityFactory\n@@ -34,6 +33,12 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+\n class TestClass(object):\n     meta_type = "Test Class"\n \ndiff --git a/plone/dexterity/tests/test_primary.py b/plone/dexterity/tests/test_primary.py\nindex 03a3c83..e24741b 100644\n--- a/plone/dexterity/tests/test_primary.py\n+++ b/plone/dexterity/tests/test_primary.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity.content import Item\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IDexterityFTI\n@@ -11,6 +10,11 @@\n from zope.interface import Interface\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n class PrimaryFieldInfoTestCase(MockTestCase):\n     def test_primary_field_info(self):\n \ndiff --git a/plone/dexterity/tests/test_schema.py b/plone/dexterity/tests/test_schema.py\nindex e032a7a..87b3ec6 100644\n--- a/plone/dexterity/tests/test_schema.py\n+++ b/plone/dexterity/tests/test_schema.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity import schema\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IContentType\n@@ -16,6 +15,11 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n class TestSchemaModuleFactory(MockTestCase):\n \n     def test_transient_schema(self):\ndiff --git a/plone/dexterity/tests/test_schema_cache.py b/plone/dexterity/tests/test_schema_cache.py\nindex 9d901e3..df4aa1a 100644\n--- a/plone/dexterity/tests/test_schema_cache.py\n+++ b/plone/dexterity/tests/test_schema_cache.py\n@@ -1,14 +1,20 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n-from mock import patch\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.dexterity.schema import SCHEMA_CACHE\n from zope.interface import Interface\n \n-import unittest\n-import warnings\n+\n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+try:\n+    from unittest.mock import patch\n+except ImportError:\n+    from mock import patch\n \n \n class TestSchemaCache(MockTestCase):\n@@ -66,16 +72,15 @@ def test_unexistent_behaviors_lookup(self):\n         fti.behaviors = ["foo.bar"]\n \n         with patch("warnings.warn") as mock_warnings:\n-            warning_list = [call[1][0] for call in mock_warnings.mock_calls]\n             SCHEMA_CACHE.behavior_registrations(u\'testtype\')\n             # Verify the warning has been issued\n-            self.assertEqual(\n-                mock_warnings.mock_calls[-1].args[0],\n+            mock_warnings.assert_called_once_with(\n                 (\n                     \'No behavior registration found for behavior named \'\n                     \'"foo.bar" for factory "testtype" - trying deprecated \'\n                     \'fallback lookup (will be removed in 3.0)..."\'\n-                )\n+                ),\n+                DeprecationWarning,\n             )\n \n     def test_repeated_subtypes_lookup(self):\ndiff --git a/plone/dexterity/tests/test_security.py b/plone/dexterity/tests/test_security.py\nindex ef40774..aeebc0b 100644\n--- a/plone/dexterity/tests/test_security.py\n+++ b/plone/dexterity/tests/test_security.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.autoform.interfaces import READ_PERMISSIONS_KEY\n from plone.dexterity.content import Container\n from plone.dexterity.content import Item\n@@ -15,6 +14,10 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n class TestAttributeProtection(MockTestCase):\n \n     def setUp(self):\ndiff --git a/plone/dexterity/tests/test_utils.py b/plone/dexterity/tests/test_utils.py\nindex aa9443c..c4c7401 100644\n--- a/plone/dexterity/tests/test_utils.py\n+++ b/plone/dexterity/tests/test_utils.py\n@@ -1,10 +1,15 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity import utils\n from plone.dexterity.fti import DexterityFTI\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+\n class TestUtils(MockTestCase):\n \n     def test_getAdditionalSchemata(self):\ndiff --git a/plone/dexterity/tests/test_views.py b/plone/dexterity/tests/test_views.py\nindex bb7e550..a5a6cb0 100644\n--- a/plone/dexterity/tests/test_views.py\n+++ b/plone/dexterity/tests/test_views.py\n@@ -1,7 +1,6 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n from AccessControl import Unauthorized\n-from mock import Mock\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.behavior.interfaces import IBehaviorAssignable\n from plone.dexterity.browser.add import DefaultAddForm\n@@ -41,6 +40,12 @@\n import six\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+\n class TestRequest(TestRequestBase):\n     """Zope 3\'s TestRequest doesn\'t support item assignment, but Zope 2\'s\n     request does.\ndiff --git a/setup.py b/setup.py\nindex f17fff7..89c14cd 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -92,7 +92,7 @@ def read(filename):\n         \'test\': [\n             \'plone.testing\',\n             \'Products.CMFPlone\',\n-            \'mock\',\n+            "mock;python_version<\'3\'"\n         ]\n     },\n     entry_points="""\n'

Repository: plone.dexterity


Branch: refs/heads/master
Date: 2020-10-05T14:37:57+02:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.dexterity/commit/ec4d8ff7467f0544adb994e38fdedff9ba75fa96

Merge pull request #140 from plone/138-fixed-part1

Use mock from unittest on Python 3

Files changed:
A news/138.bugfix
M plone/dexterity/tests/case.py
M plone/dexterity/tests/test_content.py
M plone/dexterity/tests/test_factory.py
M plone/dexterity/tests/test_fti.py
M plone/dexterity/tests/test_primary.py
M plone/dexterity/tests/test_schema.py
M plone/dexterity/tests/test_schema_cache.py
M plone/dexterity/tests/test_security.py
M plone/dexterity/tests/test_utils.py
M plone/dexterity/tests/test_views.py
M setup.py

b'diff --git a/news/138.bugfix b/news/138.bugfix\nnew file mode 100644\nindex 0000000..8013edf\n--- /dev/null\n+++ b/news/138.bugfix\n@@ -0,0 +1 @@\n+Use mock from unittest on Python 3 [ale-rt]\ndiff --git a/plone/dexterity/tests/case.py b/plone/dexterity/tests/case.py\nindex b62b68d..5d0304f 100644\n--- a/plone/dexterity/tests/case.py\n+++ b/plone/dexterity/tests/case.py\n@@ -1,6 +1,4 @@\n # -*- coding: utf-8 -*-\n-from mock import Mock\n-\n import gc\n import pkg_resources\n import six\n@@ -15,6 +13,11 @@\n except pkg_resources.DistributionNotFound:\n     HAS_ZSERVER = False\n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n \n class MockTestCase(unittest.TestCase):\n     """Base class for tests using mocks.\ndiff --git a/plone/dexterity/tests/test_content.py b/plone/dexterity/tests/test_content.py\nindex 3bdf69f..bd86c50 100644\n--- a/plone/dexterity/tests/test_content.py\n+++ b/plone/dexterity/tests/test_content.py\n@@ -3,7 +3,6 @@\n from datetime import date\n from datetime import datetime\n from DateTime import DateTime\n-from mock import Mock\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.behavior.interfaces import IBehavior\n from plone.behavior.interfaces import IBehaviorAssignable\n@@ -30,6 +29,17 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+try:\n+    from unittest.mock import patch\n+except ImportError:\n+    from mock import patch\n+\n+\n class TestContent(MockTestCase):\n \n     def setUp(self):\n@@ -600,12 +610,10 @@ def test_name_unicode_id_str(self):\n \n     def test_item_dublincore(self):\n         from DateTime import DateTime\n-        # Mock Zope DateTime\n-        import mock\n+\n         import plone.dexterity\n-        datetime_patcher = mock.patch.object(\n-            plone.dexterity.content, \'DateTime\'\n-        )\n+\n+        datetime_patcher = patch.object(plone.dexterity.content, \'DateTime\')\n         mocked_datetime = datetime_patcher.start()\n         mocked_datetime.return_value = DateTime(2014, 6, 1)\n         self.addCleanup(datetime_patcher.stop)\n@@ -661,12 +669,9 @@ def test_item_dublincore(self):\n \n     def test_item_dublincore_date(self):\n         from DateTime import DateTime\n-        # Mock Zope DateTime\n-        import mock\n+\n         import plone.dexterity\n-        datetime_patcher = mock.patch.object(\n-            plone.dexterity.content, \'DateTime\'\n-        )\n+        datetime_patcher = patch.object(plone.dexterity.content, \'DateTime\')\n         mocked_datetime = datetime_patcher.start()\n         mocked_datetime.return_value = DateTime(2014, 6, 1)\n         self.addCleanup(datetime_patcher.stop)\n@@ -707,12 +712,9 @@ def test_item_dublincore_date(self):\n \n     def test_item_dublincore_datetime(self):\n         from DateTime import DateTime\n-        # Mock Zope DateTime\n-        import mock\n+\n         import plone.dexterity\n-        datetime_patcher = mock.patch.object(\n-            plone.dexterity.content, \'DateTime\'\n-        )\n+        datetime_patcher = patch.object(plone.dexterity.content, \'DateTime\')\n         mocked_datetime = datetime_patcher.start()\n         mocked_datetime.return_value = DateTime(2014, 6, 1)\n         self.addCleanup(datetime_patcher.stop)\ndiff --git a/plone/dexterity/tests/test_factory.py b/plone/dexterity/tests/test_factory.py\nindex 6656a1f..f8621b2 100644\n--- a/plone/dexterity/tests/test_factory.py\n+++ b/plone/dexterity/tests/test_factory.py\n@@ -1,13 +1,15 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity.factory import DexterityFactory\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IDexterityFTI\n from zope.interface import Interface\n \n-import unittest\n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n \n class IDummy(Interface):\n     pass\ndiff --git a/plone/dexterity/tests/test_fti.py b/plone/dexterity/tests/test_fti.py\nindex 506af26..018587f 100644\n--- a/plone/dexterity/tests/test_fti.py\n+++ b/plone/dexterity/tests/test_fti.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity import utils\n from plone.dexterity.schema import portalTypeToSchemaName\n from plone.dexterity.factory import DexterityFactory\n@@ -34,6 +33,12 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+\n class TestClass(object):\n     meta_type = "Test Class"\n \ndiff --git a/plone/dexterity/tests/test_primary.py b/plone/dexterity/tests/test_primary.py\nindex 03a3c83..e24741b 100644\n--- a/plone/dexterity/tests/test_primary.py\n+++ b/plone/dexterity/tests/test_primary.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity.content import Item\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IDexterityFTI\n@@ -11,6 +10,11 @@\n from zope.interface import Interface\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n class PrimaryFieldInfoTestCase(MockTestCase):\n     def test_primary_field_info(self):\n \ndiff --git a/plone/dexterity/tests/test_schema.py b/plone/dexterity/tests/test_schema.py\nindex e032a7a..87b3ec6 100644\n--- a/plone/dexterity/tests/test_schema.py\n+++ b/plone/dexterity/tests/test_schema.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity import schema\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IContentType\n@@ -16,6 +15,11 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n class TestSchemaModuleFactory(MockTestCase):\n \n     def test_transient_schema(self):\ndiff --git a/plone/dexterity/tests/test_schema_cache.py b/plone/dexterity/tests/test_schema_cache.py\nindex 9d901e3..df4aa1a 100644\n--- a/plone/dexterity/tests/test_schema_cache.py\n+++ b/plone/dexterity/tests/test_schema_cache.py\n@@ -1,14 +1,20 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n-from mock import patch\n from plone.dexterity.fti import DexterityFTI\n from plone.dexterity.interfaces import IDexterityFTI\n from plone.dexterity.schema import SCHEMA_CACHE\n from zope.interface import Interface\n \n-import unittest\n-import warnings\n+\n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+try:\n+    from unittest.mock import patch\n+except ImportError:\n+    from mock import patch\n \n \n class TestSchemaCache(MockTestCase):\n@@ -66,16 +72,15 @@ def test_unexistent_behaviors_lookup(self):\n         fti.behaviors = ["foo.bar"]\n \n         with patch("warnings.warn") as mock_warnings:\n-            warning_list = [call[1][0] for call in mock_warnings.mock_calls]\n             SCHEMA_CACHE.behavior_registrations(u\'testtype\')\n             # Verify the warning has been issued\n-            self.assertEqual(\n-                mock_warnings.mock_calls[-1].args[0],\n+            mock_warnings.assert_called_once_with(\n                 (\n                     \'No behavior registration found for behavior named \'\n                     \'"foo.bar" for factory "testtype" - trying deprecated \'\n                     \'fallback lookup (will be removed in 3.0)..."\'\n-                )\n+                ),\n+                DeprecationWarning,\n             )\n \n     def test_repeated_subtypes_lookup(self):\ndiff --git a/plone/dexterity/tests/test_security.py b/plone/dexterity/tests/test_security.py\nindex ef40774..aeebc0b 100644\n--- a/plone/dexterity/tests/test_security.py\n+++ b/plone/dexterity/tests/test_security.py\n@@ -1,6 +1,5 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.autoform.interfaces import READ_PERMISSIONS_KEY\n from plone.dexterity.content import Container\n from plone.dexterity.content import Item\n@@ -15,6 +14,10 @@\n import zope.schema\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n class TestAttributeProtection(MockTestCase):\n \n     def setUp(self):\ndiff --git a/plone/dexterity/tests/test_utils.py b/plone/dexterity/tests/test_utils.py\nindex aa9443c..c4c7401 100644\n--- a/plone/dexterity/tests/test_utils.py\n+++ b/plone/dexterity/tests/test_utils.py\n@@ -1,10 +1,15 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n-from mock import Mock\n from plone.dexterity import utils\n from plone.dexterity.fti import DexterityFTI\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+\n class TestUtils(MockTestCase):\n \n     def test_getAdditionalSchemata(self):\ndiff --git a/plone/dexterity/tests/test_views.py b/plone/dexterity/tests/test_views.py\nindex bb7e550..a5a6cb0 100644\n--- a/plone/dexterity/tests/test_views.py\n+++ b/plone/dexterity/tests/test_views.py\n@@ -1,7 +1,6 @@\n # -*- coding: utf-8 -*-\n from .case import MockTestCase\n from AccessControl import Unauthorized\n-from mock import Mock\n from plone.autoform.interfaces import IFormFieldProvider\n from plone.behavior.interfaces import IBehaviorAssignable\n from plone.dexterity.browser.add import DefaultAddForm\n@@ -41,6 +40,12 @@\n import six\n \n \n+try:\n+    from unittest.mock import Mock\n+except ImportError:\n+    from mock import Mock\n+\n+\n class TestRequest(TestRequestBase):\n     """Zope 3\'s TestRequest doesn\'t support item assignment, but Zope 2\'s\n     request does.\ndiff --git a/setup.py b/setup.py\nindex f17fff7..89c14cd 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -92,7 +92,7 @@ def read(filename):\n         \'test\': [\n             \'plone.testing\',\n             \'Products.CMFPlone\',\n-            \'mock\',\n+            "mock;python_version<\'3\'"\n         ]\n     },\n     entry_points="""\n'

