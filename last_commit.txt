Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2022-03-06T15:24:59+01:00
Author: Johannes Raggam (thet) <thetetet@gmail.com>
Commit: https://github.com/plone/plone.app.contentlisting/commit/2dc6f4c3e77eafe972d77cf6bfcf79a2ecce586a

realobject: Do not throw an AttributeError when accessing attributes which return None.

Files changed:
A news/42.bugfix
M plone/app/contentlisting/realobject.py
M plone/app/contentlisting/tests/test_integration_unit.py

b'diff --git a/news/42.bugfix b/news/42.bugfix\nnew file mode 100644\nindex 0000000..5c41a2c\n--- /dev/null\n+++ b/news/42.bugfix\n@@ -0,0 +1 @@\n+realobject: Do not throw an AttributeError when accessing attributes which return ``None``.\ndiff --git a/plone/app/contentlisting/realobject.py b/plone/app/contentlisting/realobject.py\nindex a9b4410..2de10a0 100644\n--- a/plone/app/contentlisting/realobject.py\n+++ b/plone/app/contentlisting/realobject.py\n@@ -10,6 +10,9 @@\n from zope.interface import implementer\n \n \n+MARKER = object()\n+\n+\n @implementer(IContentListingObject)\n class RealContentListingObject(BaseContentListingObject):\n     """A content object representation wrapping a real content object.\n@@ -35,8 +38,8 @@ def __getattr__(self, name):\n         if name.startswith(\'_\'):\n             raise AttributeError(name)\n         obj = self.getObject()\n-        obj_name = getattr(aq_base(obj), name, None)\n-        if obj_name is not None:\n+        obj_name = getattr(aq_base(obj), name, MARKER)\n+        if obj_name is not MARKER:\n             return obj_name\n         else:\n             raise AttributeError(name)\ndiff --git a/plone/app/contentlisting/tests/test_integration_unit.py b/plone/app/contentlisting/tests/test_integration_unit.py\nindex 8406083..525ce94 100644\n--- a/plone/app/contentlisting/tests/test_integration_unit.py\n+++ b/plone/app/contentlisting/tests/test_integration_unit.py\n@@ -252,6 +252,16 @@ def test_item_uuid(self):\n         assert uuid\n         assert uuid != self.item.getPath()\n \n+    def test_item_get_none(self):\n+        self.realitem.test_none = None\n+        try:\n+            self.assertEqual(self.item.test_none, None)\n+        except AttributeError:\n+            self.fail(\n+                "Accessing attributes which return ``None`` should not "\n+                "result in an AttributeError."\n+            )\n+\n \n class TestFolderContents(unittest.TestCase):\n     """Testing that the folder contents browserview works and behaves\n'

Repository: plone.app.contentlisting


Branch: refs/heads/master
Date: 2022-03-06T17:28:36+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contentlisting/commit/755256d875faa41091384c84b06f8a863f09e11c

Merge pull request #42 from plone/thet-realobj-none

realobject: Do not throw an AttributeError when accessing attributes â€¦

Files changed:
A news/42.bugfix
M plone/app/contentlisting/realobject.py
M plone/app/contentlisting/tests/test_integration_unit.py

b'diff --git a/news/42.bugfix b/news/42.bugfix\nnew file mode 100644\nindex 0000000..5c41a2c\n--- /dev/null\n+++ b/news/42.bugfix\n@@ -0,0 +1 @@\n+realobject: Do not throw an AttributeError when accessing attributes which return ``None``.\ndiff --git a/plone/app/contentlisting/realobject.py b/plone/app/contentlisting/realobject.py\nindex a9b4410..2de10a0 100644\n--- a/plone/app/contentlisting/realobject.py\n+++ b/plone/app/contentlisting/realobject.py\n@@ -10,6 +10,9 @@\n from zope.interface import implementer\n \n \n+MARKER = object()\n+\n+\n @implementer(IContentListingObject)\n class RealContentListingObject(BaseContentListingObject):\n     """A content object representation wrapping a real content object.\n@@ -35,8 +38,8 @@ def __getattr__(self, name):\n         if name.startswith(\'_\'):\n             raise AttributeError(name)\n         obj = self.getObject()\n-        obj_name = getattr(aq_base(obj), name, None)\n-        if obj_name is not None:\n+        obj_name = getattr(aq_base(obj), name, MARKER)\n+        if obj_name is not MARKER:\n             return obj_name\n         else:\n             raise AttributeError(name)\ndiff --git a/plone/app/contentlisting/tests/test_integration_unit.py b/plone/app/contentlisting/tests/test_integration_unit.py\nindex 8406083..525ce94 100644\n--- a/plone/app/contentlisting/tests/test_integration_unit.py\n+++ b/plone/app/contentlisting/tests/test_integration_unit.py\n@@ -252,6 +252,16 @@ def test_item_uuid(self):\n         assert uuid\n         assert uuid != self.item.getPath()\n \n+    def test_item_get_none(self):\n+        self.realitem.test_none = None\n+        try:\n+            self.assertEqual(self.item.test_none, None)\n+        except AttributeError:\n+            self.fail(\n+                "Accessing attributes which return ``None`` should not "\n+                "result in an AttributeError."\n+            )\n+\n \n class TestFolderContents(unittest.TestCase):\n     """Testing that the folder contents browserview works and behaves\n'

