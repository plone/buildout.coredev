Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-26T00:37:03+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/ad3229b534f5afc2dd83047f3fe346807229f6fa

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 00000000..7ef4f64d\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..a7f25e02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 4f5edc52..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,17 +1,51 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.py[co]\n-build\n-dist\n-.project\n-.pydevproject\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n-/bin\n-/parts\n-/develop-eggs\n-/include\n-/lib*\n-.*.swp\n-pip-selfcheck.json\n-.idea\n-.vscode\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex eb3c765b..4ca29709 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "3b8337e6"\n+commit-id = "cfffba8c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex ea50e477..7de9fd70 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -22,16 +23,40 @@ repos:\n     rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 7a2d8b0e..e442bd0f 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,30 +37,121 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex b4cbd552..1ede4c7b 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +52,138 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.z3cform {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s plone.app.z3cform {posargs}\n+    coverage run --branch --source plone.app.z3cform {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.z3cform {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-26T07:32:27+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/2df2cc8b472a71de500ffbe968874342e04074a8

cleanup: remove unused file

Files changed:
D buildout.cfg
D requirements.txt
D setup.cfg

b'diff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex 36d3536..0000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-[buildout]\n-extends = https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-6.0.x.cfg\n-package-name = plone.app.z3cform\n-package-extras = [tests]\n-\n-[versions]\n-plone.app.z3cform =\n-zc.buildout =\n-plone.app.textfield = 1.3.6\ndiff --git a/requirements.txt b/requirements.txt\ndeleted file mode 100644\nindex 2cf3ea6..0000000\n--- a/requirements.txt\n+++ /dev/null\n@@ -1 +0,0 @@\n-zc.buildout==3.0.0b4\ndiff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 4a2916b..0000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,25 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-    *.cfg\n-    requirements.txt\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-26T07:32:27+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/f0b14d9916094523daaa61eb899d4f398585e127

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 4e496da..c2cc5f1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,25 +1,17 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n-import os\n-\n-\n-def read(*rnames):\n-    return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n-\n \n version = "4.2.2.dev0"\n \n long_description = (\n-    read("README.rst")\n-    + "\\n"\n-    + read("plone", "app", "z3cform", "wysiwyg", "README.rst")\n-    + "\\n"\n-    + read("plone", "app", "z3cform", "inline_validation.rst")\n-    + "\\n"\n-    + read("CHANGES.rst")\n-    + "\\n"\n+    f"{Path(\'README.rst\').read_text()}\\n"\n+    f"{(Path(\'plone\') / \'app\' / \'z3cform\' / \'wysiwyg\' / \'README.rst\').read_text()}\\n"\n+    f"{(Path(\'plone\') / \'app\' / \'z3cform\' / \'inline_validation.rst\').read_text()}\\n"\n+    f"{Path(\'CHANGES.rst\').read_text()}"\n )\n+\n test_requirements = [\n     "plone.app.contenttypes[test]",\n     "plone.app.layout",\n@@ -39,6 +31,9 @@ def read(*rnames):\n     description="A collection of widgets, templates and other components "\n     "for use with z3c.form and Plone",\n     long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-26T07:58:55+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/376eb29e9605905614d3e4e35c2239cdd6c31cb1

fix: adjust translations

Files changed:
M plone/app/z3cform/templates/link_input.pt

b'diff --git a/plone/app/z3cform/templates/link_input.pt b/plone/app/z3cform/templates/link_input.pt\nindex 1067218..9529822 100644\n--- a/plone/app/z3cform/templates/link_input.pt\n+++ b/plone/app/z3cform/templates/link_input.pt\n@@ -1,4 +1,12 @@\n-<div i18n:domain="plone">\n+<div xmlns="http://www.w3.org/1999/xhtml"\n+     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+     xmlns:metal="http://xml.zope.org/namespaces/metal"\n+     xmlns:tal="http://xml.zope.org/namespaces/tal"\n+     lang="en"\n+     xml:lang="en"\n+     i18n:domain="plone"\n+>\n+\n   <div class="linkModal">\n \n     <div class="pat-autotoc autotabs"\n@@ -51,13 +59,11 @@\n                  i18n:translate="help_external_url"\n           >External URL (can be relative within this site or absolute if it starts with http:// or https://)</label>\n           <input class="form-control"\n-                 name="external"\n+                 name="${view/name}.external"\n                  placeholder="https://domain.com"\n                  type="text"\n-                 tal:attributes="\n-                   name string:${view/name}.external;\n-                   value value;\n-                 "\n+                 value="${value}"\n+                 i18n:attributes="placeholder"\n           />\n         </div>\n       </span>\n@@ -80,13 +86,11 @@\n                    i18n:translate="help_email_url"\n             >Email Address</label>\n             <input class="form-control"\n-                   name="email"\n+                   name="${view/name}.email"\n                    placeholder="name@domain.com"\n                    type="email"\n-                   tal:attributes="\n-                     name string:${view/name}.email;\n-                     value value;\n-                   "\n+                   value="${value}"\n+                   i18n:attributes="placeholder"\n             />\n           </div>\n           <div class="mb-3">\n@@ -94,10 +98,10 @@\n                    i18n:translate="help_email_url_subject"\n             >Email Subject (optional)</label>\n             <input class="form-control"\n-                   name="subject"\n+                   name="${view/name}.subject"\n                    type="text"\n-                   tal:attributes="\n-                     name string:${view/name}.subject;\n+                   value="${value}"\n+                   tal:define="\n                      value view/value/email_subject | nothing;\n                    "\n             />\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-29T16:59:22+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/2fe1f95b7d4262b284688599a50fb3895a280920

fix dependencies

Files changed:
M .meta.toml
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/utils.py
M plone/app/z3cform/widgets/relateditems.py
M pyproject.toml
M setup.py

b'diff --git a/.meta.toml b/.meta.toml\nindex 4ca2970..b86a4e0 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -4,3 +4,6 @@\n [meta]\n template = "default"\n commit-id = "cfffba8c"\n+\n+[pyproject]\n+dependencies_ignores = "[\'lxml\']"\ndiff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex d487bea..2cdf58d 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -1287,8 +1287,8 @@ def test_related_items_widget(self):\n         )\n \n     def test_related_items_widget_nav_root(self):\n-        from plone.app.layout.navigation.interfaces import INavigationRoot\n         from plone.app.z3cform.widgets.relateditems import RelatedItemsWidget\n+        from plone.base.interfaces import INavigationRoot\n \n         EXPECTED_ROOT_PATH = "/plone"\n         EXPECTED_ROOT_URL = "http://nohost/plone"\ndiff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex 886ce9b..a7a079b 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -1,6 +1,6 @@\n from Acquisition import aq_base\n from copy import deepcopy\n-from plone.app.layout.navigation.root import getNavigationRootObject\n+from plone.base.navigationroot import get_navigation_root_object\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.interfaces import ISiteRoot\n@@ -159,7 +159,7 @@ def get_portal():\n def get_portal_url(context):\n     portal = get_portal()\n     if portal:\n-        root = getNavigationRootObject(context, portal)\n+        root = get_navigation_root_object(context, portal)\n         if root:\n             try:\n                 return root.absolute_url()\ndiff --git a/plone/app/z3cform/widgets/relateditems.py b/plone/app/z3cform/widgets/relateditems.py\nindex 2416f0b..f862db0 100644\n--- a/plone/app/z3cform/widgets/relateditems.py\n+++ b/plone/app/z3cform/widgets/relateditems.py\n@@ -2,7 +2,6 @@\n from OFS.interfaces import IFolder\n from OFS.interfaces import ISimpleItem\n from plone.app.contentlisting.interfaces import IContentListing\n-from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.app.z3cform.interfaces import IRelatedItemsWidget\n from plone.app.z3cform.utils import dict_merge\n from plone.app.z3cform.utils import get_context_url\n@@ -10,6 +9,7 @@\n from plone.app.z3cform.widgets.base import BaseWidget\n from plone.app.z3cform.widgets.patterns import InputWidget\n from plone.base import PloneMessageFactory as _\n+from plone.base.navigationroot import get_navigation_root_object\n from plone.base.utils import get_top_site_from_url\n from Products.CMFCore.utils import getToolByName\n from z3c.form.browser.text import TextWidget as z3cform_TextWidget\n@@ -64,7 +64,7 @@ def get_relateditems_options(\n                 title = result[0].Title if result else value\n             options["initialValues"][value] = title\n \n-    nav_root = getNavigationRootObject(context, site)\n+    nav_root = get_navigation_root_object(context, site)\n \n     if not ISimpleItem.providedBy(context):\n         context = nav_root\ndiff --git a/pyproject.toml b/pyproject.toml\nindex e442bd0..a115456 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -116,6 +116,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'lxml\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex c2cc5f1..7d34f71 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -14,7 +14,6 @@\n \n test_requirements = [\n     "plone.app.contenttypes[test]",\n-    "plone.app.layout",\n     "plone.app.testing",\n     "plone.autoform",\n     "plone.browserlayer",\n@@ -62,6 +61,10 @@\n     install_requires=[\n         "plone.app.textfield>=1.3.6",\n         "plone.base",\n+        "plone.app.contentlisting",\n+        "plone.app.vocabularies",\n+        "plone.dexterity",\n+        "plone.i18n",\n         "plone.protect",\n         "plone.registry",\n         "plone.schema",\n@@ -71,7 +74,7 @@\n         "pytz",\n         "setuptools",\n         "z3c.form >= 4.0",\n-        "z3c.formwidget.query",\n+        "z3c.relationfield",\n         "zope.deprecation",\n         "zope.globalrequest",\n         "Zope",\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-29T17:08:31+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/7f2f946be07944361715803840ad3475572d0d53

ignore `plone.app.vocabularies` for now because it creates circular dependency

Files changed:
M .gitignore
M .meta.toml
M pyproject.toml
M setup.py

b'diff --git a/.gitignore b/.gitignore\nindex 81594fd..b0e1075 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -41,6 +41,7 @@ var/\n /venv/\n .installed.txt\n \n+forest.*\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex b86a4e0..8a7c0c2 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -6,4 +6,9 @@ template = "default"\n commit-id = "cfffba8c"\n \n [pyproject]\n-dependencies_ignores = "[\'lxml\']"\n+dependencies_ignores = "[\'lxml\', \'plone.app.vocabularies\']"\n+\n+[gitignore]\n+extra_lines = """\n+forest.*\n+"""\ndiff --git a/pyproject.toml b/pyproject.toml\nindex a115456..e7e6bc5 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -116,7 +116,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'lxml\']\n+ignore-packages = [\'lxml\', \'plone.app.vocabularies\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex 7d34f71..949d4c8 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -62,7 +62,6 @@\n         "plone.app.textfield>=1.3.6",\n         "plone.base",\n         "plone.app.contentlisting",\n-        "plone.app.vocabularies",\n         "plone.dexterity",\n         "plone.i18n",\n         "plone.protect",\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-06-29T17:33:31+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/186a221599131e5fd93cf08204de1cf1f9af8177

Merge pull request #172 from plone/config-with-default-template-940e733a

Config with default template

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M plone/app/z3cform/templates/link_input.pt
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/utils.py
M plone/app/z3cform/widgets/relateditems.py
M pyproject.toml
M setup.py
M tox.ini
D buildout.cfg
D requirements.txt
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 62%\nrename from setup.cfg\nrename to .flake8\nindex 4a2916b8..7ef4f64d 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -15,11 +13,10 @@ ignore =\n     # black takes care of spaces after commas\n     E231,\n \n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-    *.cfg\n-    requirements.txt\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..a7f25e02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 4f5edc52..b0e10754 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,17 +1,52 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.py[co]\n-build\n-dist\n-.project\n-.pydevproject\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n-/bin\n-/parts\n-/develop-eggs\n-/include\n-/lib*\n-.*.swp\n-pip-selfcheck.json\n-.idea\n-.vscode\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+forest.*\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex eb3c765b..8a7c0c2f 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,14 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "3b8337e6"\n+commit-id = "cfffba8c"\n+\n+[pyproject]\n+dependencies_ignores = "[\'lxml\', \'plone.app.vocabularies\']"\n+\n+[gitignore]\n+extra_lines = """\n+forest.*\n+"""\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex ea50e477..7de9fd70 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -22,16 +23,40 @@ repos:\n     rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/buildout.cfg b/buildout.cfg\ndeleted file mode 100644\nindex 36d3536c..00000000\n--- a/buildout.cfg\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-[buildout]\n-extends = https://raw.githubusercontent.com/collective/buildout.plonetest/master/test-6.0.x.cfg\n-package-name = plone.app.z3cform\n-package-extras = [tests]\n-\n-[versions]\n-plone.app.z3cform =\n-zc.buildout =\n-plone.app.textfield = 1.3.6\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/z3cform/templates/link_input.pt b/plone/app/z3cform/templates/link_input.pt\nindex 10672186..95298223 100644\n--- a/plone/app/z3cform/templates/link_input.pt\n+++ b/plone/app/z3cform/templates/link_input.pt\n@@ -1,4 +1,12 @@\n-<div i18n:domain="plone">\n+<div xmlns="http://www.w3.org/1999/xhtml"\n+     xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+     xmlns:metal="http://xml.zope.org/namespaces/metal"\n+     xmlns:tal="http://xml.zope.org/namespaces/tal"\n+     lang="en"\n+     xml:lang="en"\n+     i18n:domain="plone"\n+>\n+\n   <div class="linkModal">\n \n     <div class="pat-autotoc autotabs"\n@@ -51,13 +59,11 @@\n                  i18n:translate="help_external_url"\n           >External URL (can be relative within this site or absolute if it starts with http:// or https://)</label>\n           <input class="form-control"\n-                 name="external"\n+                 name="${view/name}.external"\n                  placeholder="https://domain.com"\n                  type="text"\n-                 tal:attributes="\n-                   name string:${view/name}.external;\n-                   value value;\n-                 "\n+                 value="${value}"\n+                 i18n:attributes="placeholder"\n           />\n         </div>\n       </span>\n@@ -80,13 +86,11 @@\n                    i18n:translate="help_email_url"\n             >Email Address</label>\n             <input class="form-control"\n-                   name="email"\n+                   name="${view/name}.email"\n                    placeholder="name@domain.com"\n                    type="email"\n-                   tal:attributes="\n-                     name string:${view/name}.email;\n-                     value value;\n-                   "\n+                   value="${value}"\n+                   i18n:attributes="placeholder"\n             />\n           </div>\n           <div class="mb-3">\n@@ -94,10 +98,10 @@\n                    i18n:translate="help_email_url_subject"\n             >Email Subject (optional)</label>\n             <input class="form-control"\n-                   name="subject"\n+                   name="${view/name}.subject"\n                    type="text"\n-                   tal:attributes="\n-                     name string:${view/name}.subject;\n+                   value="${value}"\n+                   tal:define="\n                      value view/value/email_subject | nothing;\n                    "\n             />\ndiff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex d487beae..2cdf58dc 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -1287,8 +1287,8 @@ def test_related_items_widget(self):\n         )\n \n     def test_related_items_widget_nav_root(self):\n-        from plone.app.layout.navigation.interfaces import INavigationRoot\n         from plone.app.z3cform.widgets.relateditems import RelatedItemsWidget\n+        from plone.base.interfaces import INavigationRoot\n \n         EXPECTED_ROOT_PATH = "/plone"\n         EXPECTED_ROOT_URL = "http://nohost/plone"\ndiff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex 886ce9b0..a7a079b7 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -1,6 +1,6 @@\n from Acquisition import aq_base\n from copy import deepcopy\n-from plone.app.layout.navigation.root import getNavigationRootObject\n+from plone.base.navigationroot import get_navigation_root_object\n from Products.CMFCore.interfaces import IContentish\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.interfaces import ISiteRoot\n@@ -159,7 +159,7 @@ def get_portal():\n def get_portal_url(context):\n     portal = get_portal()\n     if portal:\n-        root = getNavigationRootObject(context, portal)\n+        root = get_navigation_root_object(context, portal)\n         if root:\n             try:\n                 return root.absolute_url()\ndiff --git a/plone/app/z3cform/widgets/relateditems.py b/plone/app/z3cform/widgets/relateditems.py\nindex 2416f0bd..f862db0d 100644\n--- a/plone/app/z3cform/widgets/relateditems.py\n+++ b/plone/app/z3cform/widgets/relateditems.py\n@@ -2,7 +2,6 @@\n from OFS.interfaces import IFolder\n from OFS.interfaces import ISimpleItem\n from plone.app.contentlisting.interfaces import IContentListing\n-from plone.app.layout.navigation.root import getNavigationRootObject\n from plone.app.z3cform.interfaces import IRelatedItemsWidget\n from plone.app.z3cform.utils import dict_merge\n from plone.app.z3cform.utils import get_context_url\n@@ -10,6 +9,7 @@\n from plone.app.z3cform.widgets.base import BaseWidget\n from plone.app.z3cform.widgets.patterns import InputWidget\n from plone.base import PloneMessageFactory as _\n+from plone.base.navigationroot import get_navigation_root_object\n from plone.base.utils import get_top_site_from_url\n from Products.CMFCore.utils import getToolByName\n from z3c.form.browser.text import TextWidget as z3cform_TextWidget\n@@ -64,7 +64,7 @@ def get_relateditems_options(\n                 title = result[0].Title if result else value\n             options["initialValues"][value] = title\n \n-    nav_root = getNavigationRootObject(context, site)\n+    nav_root = get_navigation_root_object(context, site)\n \n     if not ISimpleItem.providedBy(context):\n         context = nav_root\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 7a2d8b0e..e7e6bc5b 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,30 +37,122 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'lxml\', \'plone.app.vocabularies\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/requirements.txt b/requirements.txt\ndeleted file mode 100644\nindex 2cf3ea62..00000000\n--- a/requirements.txt\n+++ /dev/null\n@@ -1 +0,0 @@\n-zc.buildout==3.0.0b4\ndiff --git a/setup.py b/setup.py\nindex 4e496dad..949d4c8c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,28 +1,19 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n-import os\n-\n-\n-def read(*rnames):\n-    return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n-\n \n version = "4.2.2.dev0"\n \n long_description = (\n-    read("README.rst")\n-    + "\\n"\n-    + read("plone", "app", "z3cform", "wysiwyg", "README.rst")\n-    + "\\n"\n-    + read("plone", "app", "z3cform", "inline_validation.rst")\n-    + "\\n"\n-    + read("CHANGES.rst")\n-    + "\\n"\n+    f"{Path(\'README.rst\').read_text()}\\n"\n+    f"{(Path(\'plone\') / \'app\' / \'z3cform\' / \'wysiwyg\' / \'README.rst\').read_text()}\\n"\n+    f"{(Path(\'plone\') / \'app\' / \'z3cform\' / \'inline_validation.rst\').read_text()}\\n"\n+    f"{Path(\'CHANGES.rst\').read_text()}"\n )\n+\n test_requirements = [\n     "plone.app.contenttypes[test]",\n-    "plone.app.layout",\n     "plone.app.testing",\n     "plone.autoform",\n     "plone.browserlayer",\n@@ -39,6 +30,9 @@ def read(*rnames):\n     description="A collection of widgets, templates and other components "\n     "for use with z3c.form and Plone",\n     long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n@@ -67,6 +61,9 @@ def read(*rnames):\n     install_requires=[\n         "plone.app.textfield>=1.3.6",\n         "plone.base",\n+        "plone.app.contentlisting",\n+        "plone.dexterity",\n+        "plone.i18n",\n         "plone.protect",\n         "plone.registry",\n         "plone.schema",\n@@ -76,7 +73,7 @@ def read(*rnames):\n         "pytz",\n         "setuptools",\n         "z3c.form >= 4.0",\n-        "z3c.formwidget.query",\n+        "z3c.relationfield",\n         "zope.deprecation",\n         "zope.globalrequest",\n         "Zope",\ndiff --git a/tox.ini b/tox.ini\nindex b4cbd552..1ede4c7b 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +52,138 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.z3cform {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s plone.app.z3cform {posargs}\n+    coverage run --branch --source plone.app.z3cform {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.z3cform {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

