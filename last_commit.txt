Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2022-12-12T16:54:21+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/d7df3f1d0eafae68086792766748328ecb542387

custom_json_handler: get obj type only once.

We could use isinstance, but I guess this might be faster.

Files changed:
M plone/app/content/utils.py

b'diff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex b6e9794..b6080c2 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -10,12 +10,13 @@\n def custom_json_handler(obj):\n     if obj == Missing.Value:\n         return None\n-    if type(obj) in (datetime.datetime, datetime.date):\n+    obj_type = type(obj)\n+    if obj_type in (datetime.datetime, datetime.date):\n         return obj.isoformat()\n-    if type(obj) == DateTime:\n+    if obj_type == DateTime:\n         dt = DateTime(obj)\n         return dt.ISO()\n-    if type(obj) == set:\n+    if obj_type == set:\n         return list(obj)\n     return obj\n \n'

Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2022-12-12T16:54:21+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/00dd405eb7b783d3aef4601a88b90f3d60f44174

custom_json_handler: no need to create a DateTime from a DateTime.

Files changed:
M plone/app/content/utils.py

b'diff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex b6080c2..c6d2442 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -14,8 +14,7 @@ def custom_json_handler(obj):\n     if obj_type in (datetime.datetime, datetime.date):\n         return obj.isoformat()\n     if obj_type == DateTime:\n-        dt = DateTime(obj)\n-        return dt.ISO()\n+        return obj.ISO()\n     if obj_type == set:\n         return list(obj)\n     return obj\n'

Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2022-12-12T16:54:22+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/d2882293f27c8151973751db17cb75298bea8c0b

Fix ValueError: Circular reference detected for PersistentMapping.

Fixes https://github.com/plone/plone.app.content/issues/246

Files changed:
A news/246.bugfix
M plone/app/content/utils.py

b'diff --git a/news/246.bugfix b/news/246.bugfix\nnew file mode 100644\nindex 00000000..0f43a9b5\n--- /dev/null\n+++ b/news/246.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for PersistentMapping.\n+[maurits]\ndiff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex c6d24422..5cdce21a 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -1,5 +1,7 @@\n # -*- coding: utf-8 -*-\n from DateTime import DateTime\n+from persistent.list import PersistentList\n+from persistent.mapping import PersistentMapping\n \n import Missing\n import datetime\n@@ -17,6 +19,10 @@ def custom_json_handler(obj):\n         return obj.ISO()\n     if obj_type == set:\n         return list(obj)\n+    if obj_type == PersistentMapping:\n+        return dict(obj)\n+    if obj_type == PersistentList:\n+        return list(obj)\n     return obj\n \n \n'

Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2022-12-12T16:54:22+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/f7e078bef2d42ea2a972c794251467e3fa39c38c

Fix ValueError: Circular reference detected for RelationValue.

Fixes https://github.com/plone/plone.app.content/issues/128

Files changed:
A news/128.bugfix
M plone/app/content/utils.py

b"diff --git a/news/128.bugfix b/news/128.bugfix\nnew file mode 100644\nindex 0000000..0ad2426\n--- /dev/null\n+++ b/news/128.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for RelationValue.\n+[maurits]\ndiff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex 5cdce21..763bbe9 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -8,6 +8,11 @@\n # use simplejson because it's ahead of stdlib and supports more types\n import simplejson\n \n+try:\n+    from z3c.relationfield.relation import RelationValue\n+except ImportError:\n+    RelationValue = None\n+\n \n def custom_json_handler(obj):\n     if obj == Missing.Value:\n@@ -23,6 +28,8 @@ def custom_json_handler(obj):\n         return dict(obj)\n     if obj_type == PersistentList:\n         return list(obj)\n+    if RelationValue is not None and obj_type == RelationValue:\n+        return obj.to_id\n     return obj\n \n \n"

Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2022-12-12T22:27:41+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.content/commit/b5b5a2ec096d3200de8e378d411168a03bad12da

Merge pull request #260 from plone/3.x-custom_json_handler

Backport fix of "ValueError: Circular reference detected" on RelationValue and other fixes of custom_json_handler

Files changed:
A news/128.bugfix
A news/246.bugfix
M plone/app/content/utils.py

b"diff --git a/news/128.bugfix b/news/128.bugfix\nnew file mode 100644\nindex 00000000..0ad24266\n--- /dev/null\n+++ b/news/128.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for RelationValue.\n+[maurits]\ndiff --git a/news/246.bugfix b/news/246.bugfix\nnew file mode 100644\nindex 00000000..0f43a9b5\n--- /dev/null\n+++ b/news/246.bugfix\n@@ -0,0 +1,2 @@\n+Fix ValueError: Circular reference detected for PersistentMapping.\n+[maurits]\ndiff --git a/plone/app/content/utils.py b/plone/app/content/utils.py\nindex b6e97940..763bbe97 100644\n--- a/plone/app/content/utils.py\n+++ b/plone/app/content/utils.py\n@@ -1,22 +1,35 @@\n # -*- coding: utf-8 -*-\n from DateTime import DateTime\n+from persistent.list import PersistentList\n+from persistent.mapping import PersistentMapping\n \n import Missing\n import datetime\n # use simplejson because it's ahead of stdlib and supports more types\n import simplejson\n \n+try:\n+    from z3c.relationfield.relation import RelationValue\n+except ImportError:\n+    RelationValue = None\n+\n \n def custom_json_handler(obj):\n     if obj == Missing.Value:\n         return None\n-    if type(obj) in (datetime.datetime, datetime.date):\n+    obj_type = type(obj)\n+    if obj_type in (datetime.datetime, datetime.date):\n         return obj.isoformat()\n-    if type(obj) == DateTime:\n-        dt = DateTime(obj)\n-        return dt.ISO()\n-    if type(obj) == set:\n+    if obj_type == DateTime:\n+        return obj.ISO()\n+    if obj_type == set:\n+        return list(obj)\n+    if obj_type == PersistentMapping:\n+        return dict(obj)\n+    if obj_type == PersistentList:\n         return list(obj)\n+    if RelationValue is not None and obj_type == RelationValue:\n+        return obj.to_id\n     return obj\n \n \n"

