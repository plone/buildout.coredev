Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-06-25T08:52:25+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.users/commit/28958093b95fc801b80ca109bc622a1e99885923

Configuring with plone/meta

Files changed:
A news/cfffba8c.internal
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex bb09dd73..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -33,6 +33,10 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\ndiff --git a/.flake8 b/.flake8\nindex c1568033..7ef4f64d 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -12,3 +12,11 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f4..a7f25e02 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -15,14 +15,14 @@ on:\n \n jobs:\n   qa:\n-    uses: plone/meta/.github/workflows/qa.yml@master\n+    uses: plone/meta/.github/workflows/qa.yml@main\n   test:\n-    uses: plone/meta/.github/workflows/test.yml@master\n+    uses: plone/meta/.github/workflows/test.yml@main\n   coverage:\n-    uses: plone/meta/.github/workflows/coverage.yml@master\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n-    uses: plone/meta/.github/workflows/dependencies.yml@master\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n   release-ready:\n-    uses: plone/meta/.github/workflows/release_ready.yml@master\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex f89f86be..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -15,6 +15,7 @@ docs/_build\n __pycache__/\n .tox\n .vscode/\n+node_modules/\n \n # venv / buildout related\n bin/\n@@ -23,6 +24,7 @@ eggs/\n .eggs/\n etc/\n .installed.cfg\n+include/\n lib/\n lib64\n .mr.developer.cfg\n@@ -42,7 +44,7 @@ var/\n \n ##\n # Add extra configuration options in .meta.toml:\n-#  [pre_commit]\n+#  [gitignore]\n #  extra_lines = """\n #  _your own configuration lines_\n #  """\ndiff --git a/.meta.toml b/.meta.toml\nindex fd724703..0a061e9b 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,7 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "e08b1234"\n+commit-id = "cfffba8c"\n \n [pyproject]\n codespell_ignores = "complet,exemple"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 46b7aece..7de9fd70 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.4.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -20,13 +20,29 @@ repos:\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.0.4\n+    rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 25301075..62234f63 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -37,12 +37,36 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.codespell]\n ignore-words-list = "discreet,complet,exemple"\n skip = "*.po,"\ndiff --git a/tox.ini b/tox.ini\nindex c8ffeba4..3369a402 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -77,31 +77,65 @@ description = run the distribution tests\n use_develop = true\n skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.users {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run --source plone.app.users {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n+    coverage run --branch --source plone.app.users {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n \n+\n [testenv:release-check]\n description = ensure that the distribution is ready to release\n skip_install = true\n@@ -122,6 +156,15 @@ commands =\n description = ensure there are no cyclic dependencies\n use_develop = true\n skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n allowlist_externals =\n     sh\n deps =\n@@ -134,13 +177,13 @@ commands =\n     # Generate a DOT graph with the circular dependencies, if any\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n-    pipforester -i forest.json --check-cycles\n+    pipforester -i forest.json --check-cycles -o /dev/null\n \n \n ##\n # Add extra configuration options in .meta.toml:\n #  [tox]\n #  extra_lines = """\n-#      my_other_environment\n+#  _your own configuration lines_\n #  """\n ##\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-06-25T09:03:01+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.users/commit/8eaebf58eb4b4f47fedd313eb1f0e461942064b2

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 50031a4..1f45d9e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,11 +1,12 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n version = "3.0.4.dev0"\n \n-long_description = "{}\\n\\n{}".format(\n-    open("README.rst").read(), open("CHANGES.rst").read()\n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n )\n \n extras_require = {\n@@ -27,6 +28,9 @@\n     description="A package for all things users and groups related (specific "\n     "to plone)",\n     long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-10-04T18:01:53+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.users/commit/1c5127b08d905a21e4aa138c44f20960ce6dd419

Merge pull request #121 from plone/config-with-default-template-b8544502

Config with default template

Files changed:
A news/cfffba8c.internal
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.py
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex bb09dd73..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -33,6 +33,10 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\ndiff --git a/.flake8 b/.flake8\nindex c1568033..7ef4f64d 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -12,3 +12,11 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f4..a7f25e02 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -15,14 +15,14 @@ on:\n \n jobs:\n   qa:\n-    uses: plone/meta/.github/workflows/qa.yml@master\n+    uses: plone/meta/.github/workflows/qa.yml@main\n   test:\n-    uses: plone/meta/.github/workflows/test.yml@master\n+    uses: plone/meta/.github/workflows/test.yml@main\n   coverage:\n-    uses: plone/meta/.github/workflows/coverage.yml@master\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n-    uses: plone/meta/.github/workflows/dependencies.yml@master\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n   release-ready:\n-    uses: plone/meta/.github/workflows/release_ready.yml@master\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex f89f86be..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -15,6 +15,7 @@ docs/_build\n __pycache__/\n .tox\n .vscode/\n+node_modules/\n \n # venv / buildout related\n bin/\n@@ -23,6 +24,7 @@ eggs/\n .eggs/\n etc/\n .installed.cfg\n+include/\n lib/\n lib64\n .mr.developer.cfg\n@@ -42,7 +44,7 @@ var/\n \n ##\n # Add extra configuration options in .meta.toml:\n-#  [pre_commit]\n+#  [gitignore]\n #  extra_lines = """\n #  _your own configuration lines_\n #  """\ndiff --git a/.meta.toml b/.meta.toml\nindex fd724703..0a061e9b 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,7 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "e08b1234"\n+commit-id = "cfffba8c"\n \n [pyproject]\n codespell_ignores = "complet,exemple"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 46b7aece..7de9fd70 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.4.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -20,13 +20,29 @@ repos:\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.0.4\n+    rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 25301075..62234f63 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -37,12 +37,36 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.codespell]\n ignore-words-list = "discreet,complet,exemple"\n skip = "*.po,"\ndiff --git a/setup.py b/setup.py\nindex 50031a4a..1f45d9e1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,11 +1,12 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n version = "3.0.4.dev0"\n \n-long_description = "{}\\n\\n{}".format(\n-    open("README.rst").read(), open("CHANGES.rst").read()\n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n )\n \n extras_require = {\n@@ -27,6 +28,9 @@\n     description="A package for all things users and groups related (specific "\n     "to plone)",\n     long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\ndiff --git a/tox.ini b/tox.ini\nindex c8ffeba4..3369a402 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -77,31 +77,65 @@ description = run the distribution tests\n use_develop = true\n skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.users {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run --source plone.app.users {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n+    coverage run --branch --source plone.app.users {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n \n+\n [testenv:release-check]\n description = ensure that the distribution is ready to release\n skip_install = true\n@@ -122,6 +156,15 @@ commands =\n description = ensure there are no cyclic dependencies\n use_develop = true\n skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n allowlist_externals =\n     sh\n deps =\n@@ -134,13 +177,13 @@ commands =\n     # Generate a DOT graph with the circular dependencies, if any\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n-    pipforester -i forest.json --check-cycles\n+    pipforester -i forest.json --check-cycles -o /dev/null\n \n \n ##\n # Add extra configuration options in .meta.toml:\n #  [tox]\n #  extra_lines = """\n-#      my_other_environment\n+#  _your own configuration lines_\n #  """\n ##\n'

