Repository: plone.app.caching


Branch: refs/heads/2.x
Date: 2022-12-21T12:20:56+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/52885bf0f81ccb655196a65226e424ae74b9b253

Fix tests to work with the Zope security fix.

Accept binary and text type, as long as it is empty.
Fixes https://github.com/plone/plone.app.caching/issues/106

Files changed:
A news/106.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/106.bugfix b/news/106.bugfix\nnew file mode 100644\nindex 0000000..9c52366\n--- /dev/null\n+++ b/news/106.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests to work with the Zope security fix.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex 5cca979..a8dab3c 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -69,6 +69,11 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n+    def assertBrowserEmpty(self, browser):\n+        # assert that browser.contents is an empty bytes/string/unicode.\n+        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n+        self.assertFalse(browser.contents)\n+\n     def test_composite_viewsxx(self):\n         # This is a clone of the same test for \'without-caching-proxy\'\n         # Can we just call that test from this context?\n@@ -193,7 +198,7 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -261,7 +266,7 @@ def test_composite_viewsxx(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -354,7 +359,7 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -484,7 +489,7 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request an image scale\n         now = stable_now()\n@@ -535,7 +540,7 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 59d5a96..de07d9d 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -57,6 +57,11 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n+    def assertBrowserEmpty(self, browser):\n+        # assert that browser.contents is an empty bytes/string/unicode.\n+        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n+        self.assertFalse(browser.contents)\n+\n     def test_composite_views(self):\n \n         catalog = self.portal[\'portal_catalog\']\n@@ -188,7 +193,7 @@ def test_composite_views(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -255,7 +260,7 @@ def test_composite_views(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -341,7 +346,7 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -427,7 +432,7 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request an image scale\n         now = stable_now()\n@@ -476,7 +481,7 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

Repository: plone.app.caching


Branch: refs/heads/2.x
Date: 2022-12-21T15:18:44+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/480be00e58b5a72b5907bcc9f7ee4964997892ee

Merge pull request #108 from plone/maurits-fix-tests-after-zope-security-fix-2x

Fix tests to work with the Zope security fix. [Plone 5]

Files changed:
A news/106.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/106.bugfix b/news/106.bugfix\nnew file mode 100644\nindex 0000000..9c52366\n--- /dev/null\n+++ b/news/106.bugfix\n@@ -0,0 +1,2 @@\n+Fix tests to work with the Zope security fix.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex 5cca979..a8dab3c 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -69,6 +69,11 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n+    def assertBrowserEmpty(self, browser):\n+        # assert that browser.contents is an empty bytes/string/unicode.\n+        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n+        self.assertFalse(browser.contents)\n+\n     def test_composite_viewsxx(self):\n         # This is a clone of the same test for \'without-caching-proxy\'\n         # Can we just call that test from this context?\n@@ -193,7 +198,7 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -261,7 +266,7 @@ def test_composite_viewsxx(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -354,7 +359,7 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -484,7 +489,7 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request an image scale\n         now = stable_now()\n@@ -535,7 +540,7 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 59d5a96..de07d9d 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -57,6 +57,11 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n+    def assertBrowserEmpty(self, browser):\n+        # assert that browser.contents is an empty bytes/string/unicode.\n+        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n+        self.assertFalse(browser.contents)\n+\n     def test_composite_views(self):\n \n         catalog = self.portal[\'portal_catalog\']\n@@ -188,7 +193,7 @@ def test_composite_views(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -255,7 +260,7 @@ def test_composite_views(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -341,7 +346,7 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -427,7 +432,7 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request an image scale\n         now = stable_now()\n@@ -476,7 +481,7 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertEqual(b\'\', browser.contents)\n+        self.assertBrowserEmpty(browser)\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

