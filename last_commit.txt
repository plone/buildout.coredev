Repository: plone.restapi


Branch: refs/heads/main
Date: 2024-05-16T21:27:27+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/f3d82162c112c6b1071e0b64b85ee0cdcb1b0305

Black 24.4.2 (#1787)

* Upgrade Plone 6.0.7 to 6.0.11.1

* Add Plone 6.1

* Add changelog

* Pin Black==24.4.2

* Run black

Files changed:
M constraints.txt
M plone-5.2.x.cfg
M plone-6.0.x.cfg
M src/plone/restapi/services/locking/__init__.py
M src/plone/restapi/services/relations/add.py
M src/plone/restapi/services/relations/delete.py
M src/plone/restapi/services/types/get.py
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_services_contextnavigation.py
M src/plone/restapi/types/adapters.py
M src/plone/restapi/types/interfaces.py
M src/plone/restapi/types/utils.py

b'diff --git a/constraints.txt b/constraints.txt\nindex f2204a07f..c69b2f01b 100644\n--- a/constraints.txt\n+++ b/constraints.txt\n@@ -1,2 +1,2 @@\n-black == 22.3.0\n+black == 24.4.2\n flake8 == 4.0.1\n\\ No newline at end of file\ndiff --git a/plone-5.2.x.cfg b/plone-5.2.x.cfg\nindex d2924baf4..4840fc775 100644\n--- a/plone-5.2.x.cfg\n+++ b/plone-5.2.x.cfg\n@@ -4,7 +4,6 @@ extends =\n     base.cfg\n \n [versions]\n-black = 22.3.0\n \n # we need the newest plone.rest release\n plone.rest = 3.0.1\ndiff --git a/plone-6.0.x.cfg b/plone-6.0.x.cfg\nindex b3f43581f..5c418ddfe 100644\n--- a/plone-6.0.x.cfg\n+++ b/plone-6.0.x.cfg\n@@ -13,7 +13,6 @@ recipe = plone.recipe.zope2instance\n zodb-temporary-storage = off\n \n [versions]\n-black = 22.3.0\n pygments = 2.14.0\n plone.app.linkintegrity = 4.0.3\n robotframework-browser = 17.5.2\ndiff --git a/src/plone/restapi/services/locking/__init__.py b/src/plone/restapi/services/locking/__init__.py\nindex 53fce1b03..1b22e975a 100644\n--- a/src/plone/restapi/services/locking/__init__.py\n+++ b/src/plone/restapi/services/locking/__init__.py\n@@ -1,5 +1,6 @@\n """ Locking\n """\n+\n from datetime import datetime\n from datetime import timezone\n from plone import api\ndiff --git a/src/plone/restapi/services/relations/add.py b/src/plone/restapi/services/relations/add.py\nindex de9b18656..2bcc1cee9 100644\n--- a/src/plone/restapi/services/relations/add.py\n+++ b/src/plone/restapi/services/relations/add.py\n@@ -93,9 +93,7 @@ def reply(self):\n                 msg = (\n                     "Source and target not found."\n                     if not source_obj and not target_obj\n-                    else "Source not found."\n-                    if not source_obj\n-                    else "Target not found."\n+                    else "Source not found." if not source_obj else "Target not found."\n                 )\n                 msg = f"Failed on creating a relation. {msg}"\n                 log.error(f"{msg} {relationdata}")\ndiff --git a/src/plone/restapi/services/relations/delete.py b/src/plone/restapi/services/relations/delete.py\nindex 5d8f69119..cb4d56a6e 100644\n--- a/src/plone/restapi/services/relations/delete.py\n+++ b/src/plone/restapi/services/relations/delete.py\n@@ -40,9 +40,11 @@ def reply(self):\n                     msg = (\n                         "Source and target not found."\n                         if not source_obj and not target_obj\n-                        else "Source not found."\n-                        if not source_obj\n-                        else "Target not found."\n+                        else (\n+                            "Source not found."\n+                            if not source_obj\n+                            else "Target not found."\n+                        )\n                     )\n                     msg = f"Failed on deleting a relation. {msg}"\n                     log.error(f"{msg} {relationdata}")\ndiff --git a/src/plone/restapi/services/types/get.py b/src/plone/restapi/services/types/get.py\nindex 536dbd449..af20cdd01 100644\n--- a/src/plone/restapi/services/types/get.py\n+++ b/src/plone/restapi/services/types/get.py\n@@ -76,9 +76,9 @@ def __call__(self, expand=False):\n                 "id": fti.getId(),\n                 "title": translate(fti.Title(), context=self.request),\n                 "addable": fti.getId() in allowed_types if can_add else False,\n-                "immediately_addable": fti.getId() in immediately_types\n-                if can_add\n-                else False,\n+                "immediately_addable": (\n+                    fti.getId() in immediately_types if can_add else False\n+                ),\n             }\n             for fti in ftis\n         ]\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex 9c0fc9d34..c25b896ef 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -1710,9 +1710,9 @@ def test_update_with_lock(self):\n             headers={"Lock-Token": token},\n             json={"title": "New Title"},\n         )\n-        response.request.headers[\n-            "Lock-Token"\n-        ] = "0.684672730996-0.25195226375-00105A989226:1477076400.000"  # noqa\n+        response.request.headers["Lock-Token"] = (\n+            "0.684672730996-0.25195226375-00105A989226:1477076400.000"  # noqa\n+        )\n         save_request_and_response_for_docs("lock_update", response)\n \n     def test_querystring_get(self):\ndiff --git a/src/plone/restapi/tests/test_services_contextnavigation.py b/src/plone/restapi/tests/test_services_contextnavigation.py\nindex 3e2f8daf4..9f8405e95 100644\n--- a/src/plone/restapi/tests/test_services_contextnavigation.py\n+++ b/src/plone/restapi/tests/test_services_contextnavigation.py\n@@ -597,7 +597,7 @@ def testTopLevelWithNavigationRoot(self):\n             self.portal.folder2.folder21,\n             opts(\n                 topLevel=1,\n-                root_path="/folder2"\n+                root_path="/folder2",\n                 # self.portal.folder2.UID()\n             ),\n         )\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex 2998ca7de..d7ceb2091 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -1,4 +1,5 @@\n """JsonSchema providers."""\n+\n from plone.app.textfield.interfaces import IRichText\n from plone.restapi.types.interfaces import IJsonSchemaProvider\n from plone.restapi.types.utils import get_fieldsets\ndiff --git a/src/plone/restapi/types/interfaces.py b/src/plone/restapi/types/interfaces.py\nindex f1584bfa2..90ac37701 100644\n--- a/src/plone/restapi/types/interfaces.py\n+++ b/src/plone/restapi/types/interfaces.py\n@@ -1,4 +1,5 @@\n """Interfaces."""\n+\n from zope.interface import Interface\n \n \ndiff --git a/src/plone/restapi/types/utils.py b/src/plone/restapi/types/utils.py\nindex b3f78c991..e146f9b99 100644\n--- a/src/plone/restapi/types/utils.py\n+++ b/src/plone/restapi/types/utils.py\n@@ -115,9 +115,11 @@ def get_form_fieldsets(form):\n         fieldset = {\n             "id": group.__name__,\n             "title": translate(group.label, context=getRequest()),\n-            "description": translate(group.description, context=getRequest())\n-            if group.description is not None\n-            else "",\n+            "description": (\n+                translate(group.description, context=getRequest())\n+                if group.description is not None\n+                else ""\n+            ),\n             "fields": list(group.fields.values()),\n             "behavior": "plone",\n         }\n'

