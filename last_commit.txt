Repository: plone.app.debugtoolbar


Branch: refs/heads/master
Date: 2022-11-25T16:18:55+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.debugtoolbar/commit/32dfe010ea9b7c7c3a02c1ecbddeb4c4a76abe63

Add support for Python 3.11

Files changed:
M setup.py
M src/plone/app/debugtoolbar/browser/context.py
M src/plone/app/debugtoolbar/browser/interactive.py

b'diff --git a/setup.py b/setup.py\nindex 2d7f93d..dc755d6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -34,6 +34,8 @@\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n+        "Programming Language :: Python :: 3.10",\n+        "Programming Language :: Python :: 3.11",\n     ],\n     keywords=\'plone debug toolbar\',\n     author=\'Martin Aspeli\',\ndiff --git a/src/plone/app/debugtoolbar/browser/context.py b/src/plone/app/debugtoolbar/browser/context.py\nindex 977d14d..6e386fc 100644\n--- a/src/plone/app/debugtoolbar/browser/context.py\n+++ b/src/plone/app/debugtoolbar/browser/context.py\n@@ -137,8 +137,11 @@ def update(self):\n \n                     signature = name + "()"\n                     try:\n-                        signature = name + inspect.formatargspec(*inspect.getargspec(attr))\n-                    except TypeError:\n+                        if six.PY2:\n+                            signature = name + inspect.formatargspec(*inspect.getargspec(attr))\n+                        else:\n+                            signature = name + str(inspect.signature(attr))\n+                    except (TypeError, ValueError):\n                         pass\n \n                     self.methods.append({\ndiff --git a/src/plone/app/debugtoolbar/browser/interactive.py b/src/plone/app/debugtoolbar/browser/interactive.py\nindex 7ec35a7..4a56493 100644\n--- a/src/plone/app/debugtoolbar/browser/interactive.py\n+++ b/src/plone/app/debugtoolbar/browser/interactive.py\n@@ -141,7 +141,7 @@ def __call__(self):\n         except:\n             output = "%s" % traceback.format_exc()\n \n-        if isinstance(output, six.text_type):\n+        if isinstance(output, six.text_type) and six.PY2:\n             output = output.encode(\'ascii\', \'xmlcharrefreplace\')\n         elif not isinstance(output, str):\n             output = repr(output)\n'

Repository: plone.app.debugtoolbar


Branch: refs/heads/master
Date: 2022-11-25T16:20:12+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.debugtoolbar/commit/f988708a251fa15f355018b6b652d2f13e4a696b

add changenote

Files changed:
A news/30.bugfix

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..16fcea9\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+Add support for Python 3.11 [pbauer]\n\\ No newline at end of file\n'

Repository: plone.app.debugtoolbar


Branch: refs/heads/master
Date: 2022-11-28T17:25:56+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.debugtoolbar/commit/a558fcc53defc351100ab033aaf5637e4ac0a4a5

Merge pull request #30 from plone/python311

Add support for Python 3.11

Files changed:
A news/30.bugfix
M setup.py
M src/plone/app/debugtoolbar/browser/context.py
M src/plone/app/debugtoolbar/browser/interactive.py

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..16fcea9\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+Add support for Python 3.11 [pbauer]\n\\ No newline at end of file\ndiff --git a/setup.py b/setup.py\nindex 2d7f93d..dc755d6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -34,6 +34,8 @@\n         "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n+        "Programming Language :: Python :: 3.10",\n+        "Programming Language :: Python :: 3.11",\n     ],\n     keywords=\'plone debug toolbar\',\n     author=\'Martin Aspeli\',\ndiff --git a/src/plone/app/debugtoolbar/browser/context.py b/src/plone/app/debugtoolbar/browser/context.py\nindex 977d14d..6e386fc 100644\n--- a/src/plone/app/debugtoolbar/browser/context.py\n+++ b/src/plone/app/debugtoolbar/browser/context.py\n@@ -137,8 +137,11 @@ def update(self):\n \n                     signature = name + "()"\n                     try:\n-                        signature = name + inspect.formatargspec(*inspect.getargspec(attr))\n-                    except TypeError:\n+                        if six.PY2:\n+                            signature = name + inspect.formatargspec(*inspect.getargspec(attr))\n+                        else:\n+                            signature = name + str(inspect.signature(attr))\n+                    except (TypeError, ValueError):\n                         pass\n \n                     self.methods.append({\ndiff --git a/src/plone/app/debugtoolbar/browser/interactive.py b/src/plone/app/debugtoolbar/browser/interactive.py\nindex 7ec35a7..4a56493 100644\n--- a/src/plone/app/debugtoolbar/browser/interactive.py\n+++ b/src/plone/app/debugtoolbar/browser/interactive.py\n@@ -141,7 +141,7 @@ def __call__(self):\n         except:\n             output = "%s" % traceback.format_exc()\n \n-        if isinstance(output, six.text_type):\n+        if isinstance(output, six.text_type) and six.PY2:\n             output = output.encode(\'ascii\', \'xmlcharrefreplace\')\n         elif not isinstance(output, str):\n             output = repr(output)\n'

