Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2023-07-11T19:27:17+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/3b4c2178991ceda43e5a8060495e291709cc3153

Fix several Indonesian problems.

This language has ``id`` as code.  This is not allowed as an id in Plone, so it is already created as ``id-id`` instead.
This needs some special handling:

* Do not unset the language on the Indonesian root language folder when saving the control panel.  This fixes https://github.com/plone/plone.app.multilingual/issues/304.
* Root language switcher: redirect to ``id-id`` if the Indonesian language is preferred.

Files changed:
A news/304.bugfix.1
A news/304.bugfix.2
A src/plone/app/multilingual/tests/test_switcher.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/browser/switcher.py
M src/plone/app/multilingual/tests/test_setup.py

b'diff --git a/news/304.bugfix.1 b/news/304.bugfix.1\nnew file mode 100644\nindex 000000000..ba6bdcb96\n--- /dev/null\n+++ b/news/304.bugfix.1\n@@ -0,0 +1,4 @@\n+Do not unset the language on the Indonesian root language folder when saving the control panel.\n+This language has ``id`` as code.  This is not allowed as an id in Plone, so it is created as ``id-id`` instead.\n+This needs some special handling.\n+[maurits]\ndiff --git a/news/304.bugfix.2 b/news/304.bugfix.2\nnew file mode 100644\nindex 000000000..270319045\n--- /dev/null\n+++ b/news/304.bugfix.2\n@@ -0,0 +1,2 @@\n+Root language switcher: redirect to ``id-id`` if the Indonesian language is preferred.\n+[maurits]\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 88f0131d3..05e5172ae 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -118,6 +118,7 @@ def set_default_language_content(self):\n                 [\n                     id_ not in _languagelist,\n                     id_ not in _combinedlanguagelist,\n+                    id_ != "id-id",\n                     ITranslatable.providedBy(portal[id_]),\n                 ]\n             ):\ndiff --git a/src/plone/app/multilingual/browser/switcher.py b/src/plone/app/multilingual/browser/switcher.py\nindex 88602d759..3820bd320 100644\n--- a/src/plone/app/multilingual/browser/switcher.py\n+++ b/src/plone/app/multilingual/browser/switcher.py\n@@ -16,6 +16,10 @@ def __call__(self):\n         plt = getToolByName(context, "portal_languages")\n         pref = plt.getPreferredLanguage(self.request)\n         default = plt.getDefaultLanguage()\n+        # Handle Indonesian: its language code "id" is not allowed in Plone as\n+        # content id, so its LRF is called "id-id".\n+        pref = "id-id" if pref == "id" else pref\n+        default = "id-id" if default == "id" else default\n         ids = self.context.keys()\n         target = (pref in ids) and pref or default\n         url = f"{context.absolute_url()}/{target}"\ndiff --git a/src/plone/app/multilingual/tests/test_setup.py b/src/plone/app/multilingual/tests/test_setup.py\nindex 289a9f758..b56fdaef5 100644\n--- a/src/plone/app/multilingual/tests/test_setup.py\n+++ b/src/plone/app/multilingual/tests/test_setup.py\n@@ -5,6 +5,7 @@\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.testing import PAM_INTEGRATION_PRESET_TESTING\n from plone.app.multilingual.testing import PAM_INTEGRATION_TESTING\n+from plone.base.interfaces import ILanguage\n from Products.CMFCore.utils import getToolByName\n from zope.interface import alsoProvides\n \n@@ -40,9 +41,12 @@ def test_no_languagefolder_created(self):\n             self.assertNotIn(lang, portal_objects)\n \n     def test_all_supported_languages(self):\n-        """There was a language which code is \'id\'.\n+        """There is a language which code is \'id\'.\n+\n+        This is Indonesian, or Bahasa Indonesia in that language.\n         This broke the root language folder setup process.\n         To get rid of that the folder is \'id-id\'.\n+        Here we test all languages, to be sure we catch such a corner case.\n         """\n         all_langs = AllContentLanguageVocabulary()(self.portal)\n         for lang in all_langs:\n@@ -57,10 +61,11 @@ def test_all_supported_languages(self):\n         portal_objects = self.portal.objectIds()\n \n         for lang in all_langs.by_value.keys():\n-            if lang == "id":\n-                self.assertIn("id-id", portal_objects)\n-            else:\n-                self.assertIn(lang, portal_objects)\n+            # Special handling for Indonesian.\n+            folder_id = "id-id" if lang == "id" else lang\n+            self.assertIn(folder_id, portal_objects)\n+            folder = self.portal[folder_id]\n+            self.assertEqual(ILanguage(folder).get_language(), lang)\n \n     def test_type_of_language_folders(self):\n         """The created objects have to be \'Language Root Folder\'."""\n@@ -75,10 +80,10 @@ def test_type_of_language_folders(self):\n         setup_tool.setupSite(self.portal)\n \n         for lang in all_langs.by_value.keys():\n-            if lang == "id":\n-                self.assertEqual(self.portal.get("id-id").portal_type, "LRF")\n-            else:\n-                self.assertEqual(self.portal.get(lang).portal_type, "LRF")\n+            # Special handling for Indonesian.\n+            folder_id = "id-id" if lang == "id" else lang\n+            folder = self.portal[folder_id]\n+            self.assertEqual(folder.portal_type, "LRF")\n \n \n class TestSetupMultilingualPresetSite(unittest.TestCase):\ndiff --git a/src/plone/app/multilingual/tests/test_switcher.py b/src/plone/app/multilingual/tests/test_switcher.py\nnew file mode 100644\nindex 000000000..14a8ac6db\n--- /dev/null\n+++ b/src/plone/app/multilingual/tests/test_switcher.py\n@@ -0,0 +1,58 @@\n+from plone.app.multilingual.browser.setup import SetupMultilingualSite\n+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n+from plone.testing.z2 import Browser\n+from Products.CMFCore.utils import getToolByName\n+from zope.interface import alsoProvides\n+\n+import transaction\n+import unittest\n+\n+\n+class TestLanguageSwitcher(unittest.TestCase):\n+    layer = PAM_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        # Set test variables\n+        self.portal = self.layer["portal"]\n+        self.language_tool = getToolByName(self.portal, "portal_languages")\n+        self.portal_url = self.portal.absolute_url()\n+        self.request = self.layer["request"]\n+        alsoProvides(self.layer["request"], IPloneAppMultilingualInstalled)\n+\n+        # Add Indonesian as supported language, because this has corner cases:\n+        # it\'s LRF cannot have id "id", so it is "id-id".\n+        self.language_tool.addSupportedLanguage("id")\n+        multilingual_setup_tool = SetupMultilingualSite()\n+        multilingual_setup_tool.setupSite(self.portal)\n+        transaction.commit()\n+\n+        # Setup testbrowser\n+        self.browser = Browser(self.layer["app"])\n+        self.browser.handleErrors = False\n+\n+    def test_switcher_redirects_to_default_english(self):\n+        self.browser.open(self.portal_url)\n+        self.assertEqual(self.browser.url, self.portal_url + "/en")\n+\n+    def test_switcher_redirects_to_default_indonesian(self):\n+        self.language_tool.setDefaultLanguage("id")\n+        transaction.commit()\n+        self.browser.open(self.portal_url)\n+        self.assertEqual(self.browser.url, self.portal_url + "/id-id")\n+\n+    def test_switcher_redirects_to_preferred_catalan(self):\n+        # Tell Plone that we prefer Catalan.\n+        self.browser.open(self.portal_url + "/ca?set_language=ca")\n+        # Go to the site root.\n+        self.browser.open(self.portal_url)\n+        # We get redirected to our preferred language root folder.\n+        self.assertEqual(self.browser.url, self.portal_url + "/ca")\n+\n+    def test_switcher_redirects_to_preferred_indonesian(self):\n+        # Tell Plone that we prefer Indonesian.\n+        self.browser.open(self.portal_url + "/id-id?set_language=id")\n+        # Go to the site root.\n+        self.browser.open(self.portal_url)\n+        # We get redirected to our preferred language root folder.\n+        self.assertEqual(self.browser.url, self.portal_url + "/id-id")\n'

Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2023-07-11T19:27:36+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/aeb548fcdd40c7e9fb22203c221c2adfc74a9afc

Added upgrade to recursively fix the Indonesian language folder.

Set the Indonesian language on the folder and all contained content items.
This is only done when the folder itself has the wrong language.

Files changed:
M news/304.bugfix.1
M src/plone/app/multilingual/profiles/default/metadata.xml
M src/plone/app/multilingual/upgrades.py
M src/plone/app/multilingual/upgrades.zcml

b'diff --git a/news/304.bugfix.1 b/news/304.bugfix.1\nindex ba6bdcb9..9504473b 100644\n--- a/news/304.bugfix.1\n+++ b/news/304.bugfix.1\n@@ -1,4 +1,5 @@\n Do not unset the language on the Indonesian root language folder when saving the control panel.\n This language has ``id`` as code.  This is not allowed as an id in Plone, so it is created as ``id-id`` instead.\n This needs some special handling.\n+Added upgrade to recursively fix this language folder to set the Indonesian language.  This is only done when the folder itself has the wrong language.\n [maurits]\ndiff --git a/src/plone/app/multilingual/profiles/default/metadata.xml b/src/plone/app/multilingual/profiles/default/metadata.xml\nindex d7e94be6..acd6fba1 100644\n--- a/src/plone/app/multilingual/profiles/default/metadata.xml\n+++ b/src/plone/app/multilingual/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>1001</version>\n+  <version>1002</version>\n   <dependencies>\n     <dependency>profile-plone.app.dexterity:default</dependency>\n   </dependencies>\ndiff --git a/src/plone/app/multilingual/upgrades.py b/src/plone/app/multilingual/upgrades.py\nindex 4649df20..26918519 100644\n--- a/src/plone/app/multilingual/upgrades.py\n+++ b/src/plone/app/multilingual/upgrades.py\n@@ -1,4 +1,5 @@\n from plone.app.multilingual import logger\n+from plone.app.multilingual.subscriber import set_recursive_language\n from plone.base.interfaces import ILanguage\n from plone.base.utils import unrestricted_construct_instance\n from plone.registry.interfaces import IRegistry\n@@ -216,3 +217,24 @@ def update_old_layouts(context):\n                 new_layout,\n                 "/".join(obj.getPhysicalPath()),\n             )\n+\n+\n+def fix_indonesian_language(context):\n+    """Fix the Indonesian language root folder, if it is there.\n+\n+    Indonesian needs special handling: its language code "id" is not allowed in\n+    Plone as content id, so its LRF is called "id-id".\n+    Not all parts of the code were always aware of this.\n+    Result is that this LRF may have English (or nothing) as language.\n+    """\n+    utool = getToolByName(context, "portal_url")\n+    portal = utool.getPortalObject()\n+    if "id-id" not in portal.objectIds():\n+        logger.info("Indonesian folder not available, so no need to fix.")\n+        return\n+    folder = portal["id-id"]\n+    if ILanguage(folder).get_language() == "id":\n+        logger.info("Indonesian folder \'id-id\' already has language \'id\'.")\n+        return\n+    logger.info("Recursively setting language of \'id-id\' folder to Bahasa Indonesia.")\n+    set_recursive_language(folder, "id")\ndiff --git a/src/plone/app/multilingual/upgrades.zcml b/src/plone/app/multilingual/upgrades.zcml\nindex 9396c830..b5130e65 100644\n--- a/src/plone/app/multilingual/upgrades.zcml\n+++ b/src/plone/app/multilingual/upgrades.zcml\n@@ -83,4 +83,12 @@\n       handler=".upgrades.update_old_layouts"\n       />\n \n+  <genericsetup:upgradeStep\n+      title="Fix Indonesian language"\n+      profile="plone.app.multilingual:default"\n+      source="1001"\n+      destination="1002"\n+      handler=".upgrades.fix_indonesian_language"\n+      />\n+\n </configure>\n'

Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2023-07-11T19:27:37+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/752ace10325252a62c27ea2e3dc1b204db0a9725

Fix set_recursive_language to actually find child objects.

Files changed:
A news/304.bugfix.3
M src/plone/app/multilingual/subscriber.py
M src/plone/app/multilingual/tests/test_subscribers.py

b'diff --git a/news/304.bugfix.3 b/news/304.bugfix.3\nnew file mode 100644\nindex 00000000..dc56d81c\n--- /dev/null\n+++ b/news/304.bugfix.3\n@@ -0,0 +1,2 @@\n+Fix ``set_recursive_language`` to actually find child objects.\n+[maurits]\ndiff --git a/src/plone/app/multilingual/subscriber.py b/src/plone/app/multilingual/subscriber.py\nindex 971df42d..6f71c7ad 100644\n--- a/src/plone/app/multilingual/subscriber.py\n+++ b/src/plone/app/multilingual/subscriber.py\n@@ -123,7 +123,7 @@ def set_recursive_language(ob, language):\n         ITranslationManager(ob).update()\n         reindex_object(ob)\n \n-    for child in IFolderish.providedBy(ob) and ob.items() or ():\n+    for child in IFolderish.providedBy(ob) and ob.values() or ():\n         if ITranslatable.providedBy(child):\n             set_recursive_language(child, language)\n \ndiff --git a/src/plone/app/multilingual/tests/test_subscribers.py b/src/plone/app/multilingual/tests/test_subscribers.py\nindex e1197d80..ad3cdef8 100644\n--- a/src/plone/app/multilingual/tests/test_subscribers.py\n+++ b/src/plone/app/multilingual/tests/test_subscribers.py\n@@ -53,7 +53,7 @@ def test_moved_event(self):\n         a_ca_copied = self.portal["en"][a_ca.id]\n         self.assertEqual(ILanguage(a_ca_copied).get_language(), "en")\n \n-    def test_copied_event(self):\n+    def test_copied_event_doc(self):\n         """When an object is copied from within one Language Root Folder into\n         a different Language Root Folder it changes its language to that of the\n         folder it is copied into\n@@ -67,6 +67,43 @@ def test_copied_event(self):\n         a_ca_copied = self.portal["en"][a_ca.id]\n         self.assertEqual(ILanguage(a_ca_copied).get_language(), "en")\n \n+    def test_copied_event_folder(self):\n+        """When an object is copied from within one Language Root Folder into\n+        a different Language Root Folder it changes its language to that of the\n+        folder it is copied into.  This recursively includes all its content.\n+        """\n+        folder_ca = createContentInContainer(\n+            self.portal["ca"], "Folder", title="Test folder"\n+        )\n+        doc_ca = createContentInContainer(folder_ca, "Document", title="Test document")\n+\n+        id_ = self.portal["ca"].manage_copyObjects(folder_ca.id)\n+        self.portal["en"].manage_pasteObjects(id_)\n+        folder_ca_copied = self.portal["en"][folder_ca.id]\n+        self.assertEqual(ILanguage(folder_ca_copied).get_language(), "en")\n+        doc_ca_copied = folder_ca_copied[doc_ca.id]\n+        self.assertEqual(ILanguage(doc_ca_copied).get_language(), "en")\n+\n+    def test_set_recursive_language(self):\n+        """Directly test the set_recursive_language function.\n+\n+        There was a problem due to \'items\' versus \'values\',\n+        which meant the recursive part did not work at all.\n+        """\n+        from plone.app.multilingual.subscriber import set_recursive_language\n+\n+        folder_ca = createContentInContainer(\n+            self.portal["ca"], "Folder", title="Test folder"\n+        )\n+        doc_ca = createContentInContainer(folder_ca, "Document", title="Test document")\n+        self.assertEqual(ILanguage(folder_ca).get_language(), "ca")\n+        self.assertEqual(ILanguage(doc_ca).get_language(), "ca")\n+\n+        # Recursively set the language.\n+        set_recursive_language(folder_ca, "en")\n+        self.assertEqual(ILanguage(folder_ca).get_language(), "en")\n+        self.assertEqual(ILanguage(doc_ca).get_language(), "en")\n+\n     def test_moved_to_assets_folder(self):\n         """When an object is moved from within one Language Root Folder into\n         the Language Independent Folder (named \'Assets\') it becomes language\n'

Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2023-07-12T19:03:25+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.multilingual/commit/820f42553e2b51d85e08ae4669e7713a7ad10c99

Merge pull request #424 from plone/maurits-indonesian-7x

Fix several problems with the Indonesian language [7.x]

Files changed:
A news/304.bugfix.1
A news/304.bugfix.2
A news/304.bugfix.3
A src/plone/app/multilingual/tests/test_switcher.py
M src/plone/app/multilingual/browser/setup.py
M src/plone/app/multilingual/browser/switcher.py
M src/plone/app/multilingual/profiles/default/metadata.xml
M src/plone/app/multilingual/subscriber.py
M src/plone/app/multilingual/tests/test_setup.py
M src/plone/app/multilingual/tests/test_subscribers.py
M src/plone/app/multilingual/upgrades.py
M src/plone/app/multilingual/upgrades.zcml

b'diff --git a/news/304.bugfix.1 b/news/304.bugfix.1\nnew file mode 100644\nindex 000000000..9504473b5\n--- /dev/null\n+++ b/news/304.bugfix.1\n@@ -0,0 +1,5 @@\n+Do not unset the language on the Indonesian root language folder when saving the control panel.\n+This language has ``id`` as code.  This is not allowed as an id in Plone, so it is created as ``id-id`` instead.\n+This needs some special handling.\n+Added upgrade to recursively fix this language folder to set the Indonesian language.  This is only done when the folder itself has the wrong language.\n+[maurits]\ndiff --git a/news/304.bugfix.2 b/news/304.bugfix.2\nnew file mode 100644\nindex 000000000..270319045\n--- /dev/null\n+++ b/news/304.bugfix.2\n@@ -0,0 +1,2 @@\n+Root language switcher: redirect to ``id-id`` if the Indonesian language is preferred.\n+[maurits]\ndiff --git a/news/304.bugfix.3 b/news/304.bugfix.3\nnew file mode 100644\nindex 000000000..dc56d81c4\n--- /dev/null\n+++ b/news/304.bugfix.3\n@@ -0,0 +1,2 @@\n+Fix ``set_recursive_language`` to actually find child objects.\n+[maurits]\ndiff --git a/src/plone/app/multilingual/browser/setup.py b/src/plone/app/multilingual/browser/setup.py\nindex 88f0131d3..05e5172ae 100644\n--- a/src/plone/app/multilingual/browser/setup.py\n+++ b/src/plone/app/multilingual/browser/setup.py\n@@ -118,6 +118,7 @@ def set_default_language_content(self):\n                 [\n                     id_ not in _languagelist,\n                     id_ not in _combinedlanguagelist,\n+                    id_ != "id-id",\n                     ITranslatable.providedBy(portal[id_]),\n                 ]\n             ):\ndiff --git a/src/plone/app/multilingual/browser/switcher.py b/src/plone/app/multilingual/browser/switcher.py\nindex 88602d759..3820bd320 100644\n--- a/src/plone/app/multilingual/browser/switcher.py\n+++ b/src/plone/app/multilingual/browser/switcher.py\n@@ -16,6 +16,10 @@ def __call__(self):\n         plt = getToolByName(context, "portal_languages")\n         pref = plt.getPreferredLanguage(self.request)\n         default = plt.getDefaultLanguage()\n+        # Handle Indonesian: its language code "id" is not allowed in Plone as\n+        # content id, so its LRF is called "id-id".\n+        pref = "id-id" if pref == "id" else pref\n+        default = "id-id" if default == "id" else default\n         ids = self.context.keys()\n         target = (pref in ids) and pref or default\n         url = f"{context.absolute_url()}/{target}"\ndiff --git a/src/plone/app/multilingual/profiles/default/metadata.xml b/src/plone/app/multilingual/profiles/default/metadata.xml\nindex d7e94be60..acd6fba1c 100644\n--- a/src/plone/app/multilingual/profiles/default/metadata.xml\n+++ b/src/plone/app/multilingual/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>1001</version>\n+  <version>1002</version>\n   <dependencies>\n     <dependency>profile-plone.app.dexterity:default</dependency>\n   </dependencies>\ndiff --git a/src/plone/app/multilingual/subscriber.py b/src/plone/app/multilingual/subscriber.py\nindex 971df42dc..6f71c7add 100644\n--- a/src/plone/app/multilingual/subscriber.py\n+++ b/src/plone/app/multilingual/subscriber.py\n@@ -123,7 +123,7 @@ def set_recursive_language(ob, language):\n         ITranslationManager(ob).update()\n         reindex_object(ob)\n \n-    for child in IFolderish.providedBy(ob) and ob.items() or ():\n+    for child in IFolderish.providedBy(ob) and ob.values() or ():\n         if ITranslatable.providedBy(child):\n             set_recursive_language(child, language)\n \ndiff --git a/src/plone/app/multilingual/tests/test_setup.py b/src/plone/app/multilingual/tests/test_setup.py\nindex 289a9f758..b56fdaef5 100644\n--- a/src/plone/app/multilingual/tests/test_setup.py\n+++ b/src/plone/app/multilingual/tests/test_setup.py\n@@ -5,6 +5,7 @@\n from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n from plone.app.multilingual.testing import PAM_INTEGRATION_PRESET_TESTING\n from plone.app.multilingual.testing import PAM_INTEGRATION_TESTING\n+from plone.base.interfaces import ILanguage\n from Products.CMFCore.utils import getToolByName\n from zope.interface import alsoProvides\n \n@@ -40,9 +41,12 @@ def test_no_languagefolder_created(self):\n             self.assertNotIn(lang, portal_objects)\n \n     def test_all_supported_languages(self):\n-        """There was a language which code is \'id\'.\n+        """There is a language which code is \'id\'.\n+\n+        This is Indonesian, or Bahasa Indonesia in that language.\n         This broke the root language folder setup process.\n         To get rid of that the folder is \'id-id\'.\n+        Here we test all languages, to be sure we catch such a corner case.\n         """\n         all_langs = AllContentLanguageVocabulary()(self.portal)\n         for lang in all_langs:\n@@ -57,10 +61,11 @@ def test_all_supported_languages(self):\n         portal_objects = self.portal.objectIds()\n \n         for lang in all_langs.by_value.keys():\n-            if lang == "id":\n-                self.assertIn("id-id", portal_objects)\n-            else:\n-                self.assertIn(lang, portal_objects)\n+            # Special handling for Indonesian.\n+            folder_id = "id-id" if lang == "id" else lang\n+            self.assertIn(folder_id, portal_objects)\n+            folder = self.portal[folder_id]\n+            self.assertEqual(ILanguage(folder).get_language(), lang)\n \n     def test_type_of_language_folders(self):\n         """The created objects have to be \'Language Root Folder\'."""\n@@ -75,10 +80,10 @@ def test_type_of_language_folders(self):\n         setup_tool.setupSite(self.portal)\n \n         for lang in all_langs.by_value.keys():\n-            if lang == "id":\n-                self.assertEqual(self.portal.get("id-id").portal_type, "LRF")\n-            else:\n-                self.assertEqual(self.portal.get(lang).portal_type, "LRF")\n+            # Special handling for Indonesian.\n+            folder_id = "id-id" if lang == "id" else lang\n+            folder = self.portal[folder_id]\n+            self.assertEqual(folder.portal_type, "LRF")\n \n \n class TestSetupMultilingualPresetSite(unittest.TestCase):\ndiff --git a/src/plone/app/multilingual/tests/test_subscribers.py b/src/plone/app/multilingual/tests/test_subscribers.py\nindex e1197d807..ad3cdef8c 100644\n--- a/src/plone/app/multilingual/tests/test_subscribers.py\n+++ b/src/plone/app/multilingual/tests/test_subscribers.py\n@@ -53,7 +53,7 @@ def test_moved_event(self):\n         a_ca_copied = self.portal["en"][a_ca.id]\n         self.assertEqual(ILanguage(a_ca_copied).get_language(), "en")\n \n-    def test_copied_event(self):\n+    def test_copied_event_doc(self):\n         """When an object is copied from within one Language Root Folder into\n         a different Language Root Folder it changes its language to that of the\n         folder it is copied into\n@@ -67,6 +67,43 @@ def test_copied_event(self):\n         a_ca_copied = self.portal["en"][a_ca.id]\n         self.assertEqual(ILanguage(a_ca_copied).get_language(), "en")\n \n+    def test_copied_event_folder(self):\n+        """When an object is copied from within one Language Root Folder into\n+        a different Language Root Folder it changes its language to that of the\n+        folder it is copied into.  This recursively includes all its content.\n+        """\n+        folder_ca = createContentInContainer(\n+            self.portal["ca"], "Folder", title="Test folder"\n+        )\n+        doc_ca = createContentInContainer(folder_ca, "Document", title="Test document")\n+\n+        id_ = self.portal["ca"].manage_copyObjects(folder_ca.id)\n+        self.portal["en"].manage_pasteObjects(id_)\n+        folder_ca_copied = self.portal["en"][folder_ca.id]\n+        self.assertEqual(ILanguage(folder_ca_copied).get_language(), "en")\n+        doc_ca_copied = folder_ca_copied[doc_ca.id]\n+        self.assertEqual(ILanguage(doc_ca_copied).get_language(), "en")\n+\n+    def test_set_recursive_language(self):\n+        """Directly test the set_recursive_language function.\n+\n+        There was a problem due to \'items\' versus \'values\',\n+        which meant the recursive part did not work at all.\n+        """\n+        from plone.app.multilingual.subscriber import set_recursive_language\n+\n+        folder_ca = createContentInContainer(\n+            self.portal["ca"], "Folder", title="Test folder"\n+        )\n+        doc_ca = createContentInContainer(folder_ca, "Document", title="Test document")\n+        self.assertEqual(ILanguage(folder_ca).get_language(), "ca")\n+        self.assertEqual(ILanguage(doc_ca).get_language(), "ca")\n+\n+        # Recursively set the language.\n+        set_recursive_language(folder_ca, "en")\n+        self.assertEqual(ILanguage(folder_ca).get_language(), "en")\n+        self.assertEqual(ILanguage(doc_ca).get_language(), "en")\n+\n     def test_moved_to_assets_folder(self):\n         """When an object is moved from within one Language Root Folder into\n         the Language Independent Folder (named \'Assets\') it becomes language\ndiff --git a/src/plone/app/multilingual/tests/test_switcher.py b/src/plone/app/multilingual/tests/test_switcher.py\nnew file mode 100644\nindex 000000000..14a8ac6db\n--- /dev/null\n+++ b/src/plone/app/multilingual/tests/test_switcher.py\n@@ -0,0 +1,58 @@\n+from plone.app.multilingual.browser.setup import SetupMultilingualSite\n+from plone.app.multilingual.interfaces import IPloneAppMultilingualInstalled\n+from plone.app.multilingual.testing import PAM_FUNCTIONAL_TESTING\n+from plone.testing.z2 import Browser\n+from Products.CMFCore.utils import getToolByName\n+from zope.interface import alsoProvides\n+\n+import transaction\n+import unittest\n+\n+\n+class TestLanguageSwitcher(unittest.TestCase):\n+    layer = PAM_FUNCTIONAL_TESTING\n+\n+    def setUp(self):\n+        # Set test variables\n+        self.portal = self.layer["portal"]\n+        self.language_tool = getToolByName(self.portal, "portal_languages")\n+        self.portal_url = self.portal.absolute_url()\n+        self.request = self.layer["request"]\n+        alsoProvides(self.layer["request"], IPloneAppMultilingualInstalled)\n+\n+        # Add Indonesian as supported language, because this has corner cases:\n+        # it\'s LRF cannot have id "id", so it is "id-id".\n+        self.language_tool.addSupportedLanguage("id")\n+        multilingual_setup_tool = SetupMultilingualSite()\n+        multilingual_setup_tool.setupSite(self.portal)\n+        transaction.commit()\n+\n+        # Setup testbrowser\n+        self.browser = Browser(self.layer["app"])\n+        self.browser.handleErrors = False\n+\n+    def test_switcher_redirects_to_default_english(self):\n+        self.browser.open(self.portal_url)\n+        self.assertEqual(self.browser.url, self.portal_url + "/en")\n+\n+    def test_switcher_redirects_to_default_indonesian(self):\n+        self.language_tool.setDefaultLanguage("id")\n+        transaction.commit()\n+        self.browser.open(self.portal_url)\n+        self.assertEqual(self.browser.url, self.portal_url + "/id-id")\n+\n+    def test_switcher_redirects_to_preferred_catalan(self):\n+        # Tell Plone that we prefer Catalan.\n+        self.browser.open(self.portal_url + "/ca?set_language=ca")\n+        # Go to the site root.\n+        self.browser.open(self.portal_url)\n+        # We get redirected to our preferred language root folder.\n+        self.assertEqual(self.browser.url, self.portal_url + "/ca")\n+\n+    def test_switcher_redirects_to_preferred_indonesian(self):\n+        # Tell Plone that we prefer Indonesian.\n+        self.browser.open(self.portal_url + "/id-id?set_language=id")\n+        # Go to the site root.\n+        self.browser.open(self.portal_url)\n+        # We get redirected to our preferred language root folder.\n+        self.assertEqual(self.browser.url, self.portal_url + "/id-id")\ndiff --git a/src/plone/app/multilingual/upgrades.py b/src/plone/app/multilingual/upgrades.py\nindex 4649df20f..269185191 100644\n--- a/src/plone/app/multilingual/upgrades.py\n+++ b/src/plone/app/multilingual/upgrades.py\n@@ -1,4 +1,5 @@\n from plone.app.multilingual import logger\n+from plone.app.multilingual.subscriber import set_recursive_language\n from plone.base.interfaces import ILanguage\n from plone.base.utils import unrestricted_construct_instance\n from plone.registry.interfaces import IRegistry\n@@ -216,3 +217,24 @@ def update_old_layouts(context):\n                 new_layout,\n                 "/".join(obj.getPhysicalPath()),\n             )\n+\n+\n+def fix_indonesian_language(context):\n+    """Fix the Indonesian language root folder, if it is there.\n+\n+    Indonesian needs special handling: its language code "id" is not allowed in\n+    Plone as content id, so its LRF is called "id-id".\n+    Not all parts of the code were always aware of this.\n+    Result is that this LRF may have English (or nothing) as language.\n+    """\n+    utool = getToolByName(context, "portal_url")\n+    portal = utool.getPortalObject()\n+    if "id-id" not in portal.objectIds():\n+        logger.info("Indonesian folder not available, so no need to fix.")\n+        return\n+    folder = portal["id-id"]\n+    if ILanguage(folder).get_language() == "id":\n+        logger.info("Indonesian folder \'id-id\' already has language \'id\'.")\n+        return\n+    logger.info("Recursively setting language of \'id-id\' folder to Bahasa Indonesia.")\n+    set_recursive_language(folder, "id")\ndiff --git a/src/plone/app/multilingual/upgrades.zcml b/src/plone/app/multilingual/upgrades.zcml\nindex 9396c830f..b5130e650 100644\n--- a/src/plone/app/multilingual/upgrades.zcml\n+++ b/src/plone/app/multilingual/upgrades.zcml\n@@ -83,4 +83,12 @@\n       handler=".upgrades.update_old_layouts"\n       />\n \n+  <genericsetup:upgradeStep\n+      title="Fix Indonesian language"\n+      profile="plone.app.multilingual:default"\n+      source="1001"\n+      destination="1002"\n+      handler=".upgrades.fix_indonesian_language"\n+      />\n+\n </configure>\n'

