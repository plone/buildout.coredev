Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2021-03-19T15:32:42+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/047b872d1e6ead476990902dc09e15c08d6d74c4

Fix permission checks for the @@getSource view

Allow to use the @@getSource view when we are in an add form and we do
not have the "Modify portal content" permission

Fixes #221

Files changed:
A news/221.bugfix
M plone/app/content/browser/vocabulary.py
M plone/app/content/tests/test_widgets.py
M setup.py

b'diff --git a/news/221.bugfix b/news/221.bugfix\nnew file mode 100644\nindex 0000000..77740ba\n--- /dev/null\n+++ b/news/221.bugfix\n@@ -0,0 +1 @@\n+Allow to use the @@getSource view when we are in an add form and we do not have the "Modify portal content" permission\ndiff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py\nindex b00c1e0..604860e 100644\n--- a/plone/app/content/browser/vocabulary.py\n+++ b/plone/app/content/browser/vocabulary.py\n@@ -9,6 +9,7 @@\n from plone.app.querystring import queryparser\n from plone.app.z3cform.interfaces import IFieldPermissionChecker\n from plone.autoform.interfaces import WRITE_PERMISSIONS_KEY\n+from plone.memoize.view import memoize\n from plone.supermodel.utils import mergedTaggedValueDict\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n@@ -17,6 +18,7 @@\n from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path\n from Products.MimetypesRegistry.MimeTypeItem import PREFIX\n from types import FunctionType\n+from z3c.form.interfaces import IAddForm\n from z3c.form.interfaces import ISubForm\n from zope.component import getUtility\n from zope.component import queryAdapter\n@@ -373,19 +375,23 @@ def get_context(self):\n             context = self.context.context\n         return context\n \n+    @property\n+    @memoize\n+    def default_permission(self):\n+        if IAddForm.providedBy(self.context.form):\n+            return "cmf.AddPortalContent"\n+        return "cmf.ModifyPortalContent"\n+\n     def get_vocabulary(self):\n         widget = self.context\n         field = widget.field.bind(widget.context)\n \n         # check field\'s write permission\n         info = mergedTaggedValueDict(field.interface, WRITE_PERMISSIONS_KEY)\n-        permission_name = info.get(field.__name__, \'cmf.ModifyPortalContent\')\n+        permission_name = info.get(field.__name__, self.default_permission)\n         permission = queryUtility(IPermission, name=permission_name)\n         if permission is None:\n-            permission = getUtility(\n-                IPermission,\n-                name=\'cmf.ModifyPortalContent\'\n-            )\n+            permission = getUtility(IPermission, name=self.default_permission)\n         if not getSecurityManager().checkPermission(\n             permission.title,\n             self.get_context()\ndiff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py\nindex 05a1d12..24278cf 100644\n--- a/plone/app/content/tests/test_widgets.py\n+++ b/plone/app/content/tests/test_widgets.py\n@@ -496,6 +496,25 @@ def search_catalog(self, query):\n         data = json.loads(view())\n         self.assertEqual(data[\'error\'], \'Vocabulary lookup not allowed.\')\n \n+    def testSourceDefaultPermission(self):\n+        from plone.app.content.browser.vocabulary import SourceView\n+        from z3c.form.browser.text import TextWidget\n+\n+        widget = TextWidget(self.request)\n+        view = SourceView(widget, self.request)\n+        self.assertEqual(view.default_permission, "cmf.ModifyPortalContent")\n+\n+    def testSourceDefaultPermissionOnAddForm(self):\n+        from plone.app.content.browser.vocabulary import SourceView\n+        from z3c.form import form\n+        from z3c.form.browser.text import TextWidget\n+\n+        widget = TextWidget(self.request)\n+        widget.form = form.AddForm(self.portal, self.request)\n+\n+        view = SourceView(widget, self.request)\n+        self.assertEqual(view.default_permission, "cmf.AddPortalContent")\n+\n     def testSourceTextQuery(self):\n         from z3c.form.browser.text import TextWidget\n         from zope.interface import implementer\ndiff --git a/setup.py b/setup.py\nindex 0af97c4..84914df 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -54,6 +54,7 @@\n         \'setuptools\',\n         \'simplejson\',\n         \'six\',\n+        \'z3c.form\',\n         \'zope.component\',\n         \'zope.container\',\n         \'zope.deferredimport\',\n'

Repository: plone.app.content


Branch: refs/heads/3.x
Date: 2021-03-19T18:27:57+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.content/commit/cc0c3f0029ab5320228a490e68003f88309a5087

Merge pull request #222 from plone/fix-221-3.x

Fix permission checks for the @@getSource view (Plone 5.2)

Files changed:
A news/221.bugfix
M plone/app/content/browser/vocabulary.py
M plone/app/content/tests/test_widgets.py
M setup.py

b'diff --git a/news/221.bugfix b/news/221.bugfix\nnew file mode 100644\nindex 0000000..77740ba\n--- /dev/null\n+++ b/news/221.bugfix\n@@ -0,0 +1 @@\n+Allow to use the @@getSource view when we are in an add form and we do not have the "Modify portal content" permission\ndiff --git a/plone/app/content/browser/vocabulary.py b/plone/app/content/browser/vocabulary.py\nindex b00c1e0..604860e 100644\n--- a/plone/app/content/browser/vocabulary.py\n+++ b/plone/app/content/browser/vocabulary.py\n@@ -9,6 +9,7 @@\n from plone.app.querystring import queryparser\n from plone.app.z3cform.interfaces import IFieldPermissionChecker\n from plone.autoform.interfaces import WRITE_PERMISSIONS_KEY\n+from plone.memoize.view import memoize\n from plone.supermodel.utils import mergedTaggedValueDict\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone import PloneMessageFactory as _\n@@ -17,6 +18,7 @@\n from Products.MimetypesRegistry.MimeTypeItem import guess_icon_path\n from Products.MimetypesRegistry.MimeTypeItem import PREFIX\n from types import FunctionType\n+from z3c.form.interfaces import IAddForm\n from z3c.form.interfaces import ISubForm\n from zope.component import getUtility\n from zope.component import queryAdapter\n@@ -373,19 +375,23 @@ def get_context(self):\n             context = self.context.context\n         return context\n \n+    @property\n+    @memoize\n+    def default_permission(self):\n+        if IAddForm.providedBy(self.context.form):\n+            return "cmf.AddPortalContent"\n+        return "cmf.ModifyPortalContent"\n+\n     def get_vocabulary(self):\n         widget = self.context\n         field = widget.field.bind(widget.context)\n \n         # check field\'s write permission\n         info = mergedTaggedValueDict(field.interface, WRITE_PERMISSIONS_KEY)\n-        permission_name = info.get(field.__name__, \'cmf.ModifyPortalContent\')\n+        permission_name = info.get(field.__name__, self.default_permission)\n         permission = queryUtility(IPermission, name=permission_name)\n         if permission is None:\n-            permission = getUtility(\n-                IPermission,\n-                name=\'cmf.ModifyPortalContent\'\n-            )\n+            permission = getUtility(IPermission, name=self.default_permission)\n         if not getSecurityManager().checkPermission(\n             permission.title,\n             self.get_context()\ndiff --git a/plone/app/content/tests/test_widgets.py b/plone/app/content/tests/test_widgets.py\nindex 05a1d12..24278cf 100644\n--- a/plone/app/content/tests/test_widgets.py\n+++ b/plone/app/content/tests/test_widgets.py\n@@ -496,6 +496,25 @@ def search_catalog(self, query):\n         data = json.loads(view())\n         self.assertEqual(data[\'error\'], \'Vocabulary lookup not allowed.\')\n \n+    def testSourceDefaultPermission(self):\n+        from plone.app.content.browser.vocabulary import SourceView\n+        from z3c.form.browser.text import TextWidget\n+\n+        widget = TextWidget(self.request)\n+        view = SourceView(widget, self.request)\n+        self.assertEqual(view.default_permission, "cmf.ModifyPortalContent")\n+\n+    def testSourceDefaultPermissionOnAddForm(self):\n+        from plone.app.content.browser.vocabulary import SourceView\n+        from z3c.form import form\n+        from z3c.form.browser.text import TextWidget\n+\n+        widget = TextWidget(self.request)\n+        widget.form = form.AddForm(self.portal, self.request)\n+\n+        view = SourceView(widget, self.request)\n+        self.assertEqual(view.default_permission, "cmf.AddPortalContent")\n+\n     def testSourceTextQuery(self):\n         from z3c.form.browser.text import TextWidget\n         from zope.interface import implementer\ndiff --git a/setup.py b/setup.py\nindex 0af97c4..84914df 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -54,6 +54,7 @@\n         \'setuptools\',\n         \'simplejson\',\n         \'six\',\n+        \'z3c.form\',\n         \'zope.component\',\n         \'zope.container\',\n         \'zope.deferredimport\',\n'

