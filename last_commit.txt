Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-16T16:02:56+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/2155d91921b867f525ecc7bb3264607987832d01

Remove unused plone.app.event in order to cleanup the circular dependencies

Files changed:
M plone/app/contenttypes/testing.py
M setup.py

b'diff --git a/plone/app/contenttypes/testing.py b/plone/app/contenttypes/testing.py\nindex 32da14a2..4c530fba 100644\n--- a/plone/app/contenttypes/testing.py\n+++ b/plone/app/contenttypes/testing.py\n@@ -1,6 +1,5 @@\n from plone.app.contenttypes.interfaces import IPloneAppContenttypesLayer\n from plone.app.contenttypes.tests.robot.variables import TEST_FOLDER_ID\n-from plone.app.event.testing import PAEvent_FIXTURE\n from plone.app.robotframework.testing import REMOTE_LIBRARY_BUNDLE_FIXTURE\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n@@ -24,7 +23,6 @@ def set_browserlayer(request):\n \n class PloneAppContenttypes(PloneSandboxLayer):\n     defaultBases = (\n-        PAEvent_FIXTURE,\n         PLONE_FIXTURE,\n     )\n \n@@ -32,9 +30,6 @@ def setUpZope(self, app, configurationContext):\n         import plone.app.contenttypes\n \n         self.loadZCML(package=plone.app.contenttypes)\n-        import plone.app.event.dx\n-\n-        self.loadZCML(package=plone.app.event.dx)\n \n     def setUpPloneSite(self, portal):\n         portal.portal_workflow.setDefaultChain("simple_publication_workflow")\n@@ -43,7 +38,7 @@ def setUpPloneSite(self, portal):\n class PloneAppContenttypesRobot(PloneAppContenttypes):\n     """Same as the default but with a added folder \'robot-test-folder\'."""\n \n-    defaultBases = (PAEvent_FIXTURE, REMOTE_LIBRARY_BUNDLE_FIXTURE)\n+    defaultBases = (REMOTE_LIBRARY_BUNDLE_FIXTURE,)\n \n     def setUpPloneSite(self, portal):\n         portal.acl_users.userFolderAddUser(\ndiff --git a/setup.py b/setup.py\nindex e7d0e58a..52afb5a4 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -48,7 +48,6 @@ def read(*rnames):\n     install_requires=[\n         "setuptools",\n         "plone.app.contentmenu",\n-        "plone.app.event >= 2.0",\n         "plone.app.dexterity >= 2.0.7",  # has a fix for INameFromFilename\n         "plone.app.linkintegrity",\n         "plone.app.querystring >= 1.2.2",  # custom_query support\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-16T16:08:34+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/99a15f868561ecbee7e4684671d0924588769a04

Add changelog

Files changed:
A news/663.breaking

b'diff --git a/news/663.breaking b/news/663.breaking\nnew file mode 100644\nindex 000000000..98b086cef\n--- /dev/null\n+++ b/news/663.breaking\n@@ -0,0 +1 @@\n+Remove the unused dependecy plone.app.event\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-16T16:18:05+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/27e989ae3665905351297f331dbbfd189cbbd039

Blacked

Files changed:
M news/663.breaking
M plone/app/contenttypes/testing.py

b'diff --git a/news/663.breaking b/news/663.breaking\nindex 98b086ce..9d6769bf 100644\n--- a/news/663.breaking\n+++ b/news/663.breaking\n@@ -1 +1 @@\n-Remove the unused dependecy plone.app.event\n+Remove the unused dependency plone.app.event\ndiff --git a/plone/app/contenttypes/testing.py b/plone/app/contenttypes/testing.py\nindex 4c530fba..e2cf3829 100644\n--- a/plone/app/contenttypes/testing.py\n+++ b/plone/app/contenttypes/testing.py\n@@ -22,9 +22,7 @@ def set_browserlayer(request):\n \n \n class PloneAppContenttypes(PloneSandboxLayer):\n-    defaultBases = (\n-        PLONE_FIXTURE,\n-    )\n+    defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n         import plone.app.contenttypes\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T12:28:39+02:00
Author: Roman (folix-01) <72063601+folix-01@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/864f4dc1808582d5be6ba2837bfedc31b64c74ef

Update and rename 663.breaking to 663.bugfix

Files changed:
A news/663.bugfix
D news/663.breaking

b'diff --git a/news/663.breaking b/news/663.bugfix\nsimilarity index 78%\nrename from news/663.breaking\nrename to news/663.bugfix\nindex 9d6769bf..8df5f235 100644\n--- a/news/663.breaking\n+++ b/news/663.bugfix\n@@ -1 +1,2 @@\n Remove the unused dependency plone.app.event\n+[@folix-01]\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T16:00:05+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0e3d6b1f13a88ed4139433ee529986949dd7b768

Remove plone.app.event from the dependencies profile

Files changed:
M plone/app/contenttypes/profiles/default/metadata.xml

b'diff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml\nindex 5c9f46a8..b3d89363 100644\n--- a/plone/app/contenttypes/profiles/default/metadata.xml\n+++ b/plone/app/contenttypes/profiles/default/metadata.xml\n@@ -3,7 +3,6 @@\n   <version>3000</version>\n   <dependencies>\n     <dependency>profile-plone.app.dexterity:default</dependency>\n-    <dependency>profile-plone.app.event:default</dependency>\n     <dependency>profile-plone.app.querystring:default</dependency>\n     <dependency>profile-plone.app.relationfield:default</dependency>\n     <dependency>profile-plone.app.versioningbehavior:default</dependency>\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T16:01:47+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b50e7ca2cf6ee589865eec015522dd1455ab5b70

Remove events folder creation

Files changed:
M plone/app/contenttypes/setuphandlers.py

b'diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex ad88700a..6a22fb12 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -76,7 +76,9 @@ def addContentToContainer(container, object, checkConstraints=True):\n         if container_fti is not None and not container_fti.allowType(\n             object.portal_type\n         ):\n-            raise ValueError(f"Disallowed subobject type: {object.portal_type}")\n+            raise ValueError(\n+                f"Disallowed subobject type: {object.portal_type}"\n+            )\n \n     chooser = INameChooser(container)\n     if hasattr(object, "id") and chooser.checkName(object.id, object):\n@@ -169,7 +171,9 @@ def create_frontpage(portal, target_language):\n     if portal.text:\n         # Do not overwrite existing content\n         return\n-    portal.title = _translate("front-title", target_language, "Welcome to Plone")\n+    portal.title = _translate(\n+        "front-title", target_language, "Welcome to Plone"\n+    )\n     portal.description = _translate(\n         "front-description",\n         target_language,\n@@ -186,7 +190,9 @@ def create_frontpage(portal, target_language):\n                 front_text = translated_text\n     request = getattr(portal, "REQUEST", None)\n     if front_text is None and request is not None:\n-        view = queryMultiAdapter((portal, request), name="plone-frontpage-setup")\n+        view = queryMultiAdapter(\n+            (portal, request), name="plone-frontpage-setup"\n+        )\n         if view is not None:\n             front_text = _bodyfinder(view.index()).strip()\n     portal.text = RichTextValue(front_text, "text/html", "text/x-html-safe")\n@@ -198,7 +204,9 @@ def create_news_topic(portal, target_language):\n \n     if news_id not in portal.keys():\n         title = _translate("news-title", target_language, "News")\n-        description = _translate("news-description", target_language, "Site News")\n+        description = _translate(\n+            "news-description", target_language, "Site News"\n+        )\n         container = createContent(\n             "Folder",\n             id=news_id,\n@@ -248,67 +256,14 @@ def create_news_topic(portal, target_language):\n         _publish(aggregator)\n \n \n-def create_events_topic(portal, target_language):\n-    events_id = "events"\n-\n-    if events_id not in portal.keys():\n-        title = _translate("events-title", target_language, "Events")\n-        description = _translate("events-description", target_language, "Site Events")\n-        container = createContent(\n-            "Folder",\n-            id=events_id,\n-            title=title,\n-            description=description,\n-            language=target_language.replace("_", "-").lower(),\n-        )\n-        container = addContentToContainer(portal, container)\n-        unrestricted_construct_instance(\n-            "Collection",\n-            container,\n-            id="aggregator",\n-            title=title,\n-            description=description,\n-        )\n-        aggregator = container["aggregator"]\n-\n-        # Constrain types\n-        allowed_types = [\n-            "Event",\n-        ]\n-\n-        _setup_constrains(container, allowed_types)\n-\n-        container.setOrdering("unordered")\n-        container.setDefaultPage("aggregator")\n-        _publish(container)\n-\n-        # Set the Collection criteria.\n-        #: Sort on the Event start date\n-        aggregator.sort_on = "start"\n-        aggregator.sort_reversed = True\n-        #: Query by Type and Review State\n-        aggregator.query = [\n-            {\n-                "i": "portal_type",\n-                "o": "plone.app.querystring.operation.selection.any",\n-                "v": ["Event"],\n-            },\n-            {\n-                "i": "review_state",\n-                "o": "plone.app.querystring.operation.selection.any",\n-                "v": ["published"],\n-            },\n-        ]\n-        aggregator.setLayout("event_listing")\n-        _publish(aggregator)\n-\n-\n def configure_members_folder(portal, target_language):\n     members_id = "Members"\n \n     if members_id not in portal.keys():\n         title = _translate("members-title", target_language, "Users")\n-        description = _translate("members-description", target_language, "Site Users")\n+        description = _translate(\n+            "members-description", target_language, "Site Users"\n+        )\n         container = createContent(\n             "Folder",\n             id=members_id,\n@@ -340,7 +295,6 @@ def import_content(context):\n     target_language, is_combined_language, locale = _get_locales_info(portal)\n     create_frontpage(portal, target_language)\n     create_news_topic(portal, target_language)\n-    create_events_topic(portal, target_language)\n     configure_members_folder(portal, target_language)\n \n \n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T16:04:27+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/b204528c470e3933cf5a78dc4b539063148c5439

Balacked

Files changed:
M plone/app/contenttypes/setuphandlers.py

b'diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex 6a22fb12..28d2c26c 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -76,9 +76,7 @@ def addContentToContainer(container, object, checkConstraints=True):\n         if container_fti is not None and not container_fti.allowType(\n             object.portal_type\n         ):\n-            raise ValueError(\n-                f"Disallowed subobject type: {object.portal_type}"\n-            )\n+            raise ValueError(f"Disallowed subobject type: {object.portal_type}")\n \n     chooser = INameChooser(container)\n     if hasattr(object, "id") and chooser.checkName(object.id, object):\n@@ -171,9 +169,7 @@ def create_frontpage(portal, target_language):\n     if portal.text:\n         # Do not overwrite existing content\n         return\n-    portal.title = _translate(\n-        "front-title", target_language, "Welcome to Plone"\n-    )\n+    portal.title = _translate("front-title", target_language, "Welcome to Plone")\n     portal.description = _translate(\n         "front-description",\n         target_language,\n@@ -190,9 +186,7 @@ def create_frontpage(portal, target_language):\n                 front_text = translated_text\n     request = getattr(portal, "REQUEST", None)\n     if front_text is None and request is not None:\n-        view = queryMultiAdapter(\n-            (portal, request), name="plone-frontpage-setup"\n-        )\n+        view = queryMultiAdapter((portal, request), name="plone-frontpage-setup")\n         if view is not None:\n             front_text = _bodyfinder(view.index()).strip()\n     portal.text = RichTextValue(front_text, "text/html", "text/x-html-safe")\n@@ -204,9 +198,7 @@ def create_news_topic(portal, target_language):\n \n     if news_id not in portal.keys():\n         title = _translate("news-title", target_language, "News")\n-        description = _translate(\n-            "news-description", target_language, "Site News"\n-        )\n+        description = _translate("news-description", target_language, "Site News")\n         container = createContent(\n             "Folder",\n             id=news_id,\n@@ -261,9 +253,7 @@ def configure_members_folder(portal, target_language):\n \n     if members_id not in portal.keys():\n         title = _translate("members-title", target_language, "Users")\n-        description = _translate(\n-            "members-description", target_language, "Site Users"\n-        )\n+        description = _translate("members-description", target_language, "Site Users")\n         container = createContent(\n             "Folder",\n             id=members_id,\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T16:14:50+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/51c01a2dc5f4a864a96ee44b33db17151221824b

Remove plone.app.event from the basic zcml configuration

Files changed:
M plone/app/contenttypes/configure.zcml

b'diff --git a/plone/app/contenttypes/configure.zcml b/plone/app/contenttypes/configure.zcml\nindex ddfd9d3d..546f39c0 100644\n--- a/plone/app/contenttypes/configure.zcml\n+++ b/plone/app/contenttypes/configure.zcml\n@@ -35,7 +35,6 @@\n   <include package="plone.namedfile" />\n   <include package="plone.app.contentmenu" />\n   <include package="plone.app.dexterity" />\n-  <include package="plone.app.event" />\n   <include package="plone.app.linkintegrity" />\n   <include package="plone.app.lockingbehavior" />\n   <include package="plone.app.querystring" />\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T16:50:09+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/6a7f4252387c77232cd2362fea72657a7163fa55

Install plone.app.event profile conditionaly

Files changed:
M plone/app/contenttypes/configure.zcml
M plone/app/contenttypes/setuphandlers.py

b'diff --git a/plone/app/contenttypes/configure.zcml b/plone/app/contenttypes/configure.zcml\nindex 546f39c0..b3743269 100644\n--- a/plone/app/contenttypes/configure.zcml\n+++ b/plone/app/contenttypes/configure.zcml\n@@ -35,6 +35,7 @@\n   <include package="plone.namedfile" />\n   <include package="plone.app.contentmenu" />\n   <include package="plone.app.dexterity" />\n+  <include zcml:condition="installed plone.app.event" package="plone.app.event" />\n   <include package="plone.app.linkintegrity" />\n   <include package="plone.app.lockingbehavior" />\n   <include package="plone.app.querystring" />\ndiff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex 28d2c26c..a067d880 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -5,6 +5,7 @@\n from plone.app.textfield.value import RichTextValue\n from plone.base.interfaces import INonInstallable\n from plone.base.interfaces.constrains import ISelectableConstrainTypes\n+from plone.base.utils import get_installer\n from plone.base.utils import unrestricted_construct_instance\n from plone.dexterity.fti import IDexterityFTI\n from plone.dexterity.utils import createContent\n@@ -24,6 +25,15 @@\n from zope.i18n.locales.provider import LoadLocaleError\n from zope.interface import implementer\n \n+import pkg_resources\n+\n+\n+try:\n+    pkg_resources.get_distribution("plone.app.event")\n+    HAS_EVENT = True\n+except pkg_resources.DistributionNotFound:\n+    HAS_EVENT = False\n+\n \n @implementer(INonInstallable)\n class HiddenProfiles:\n@@ -76,7 +86,9 @@ def addContentToContainer(container, object, checkConstraints=True):\n         if container_fti is not None and not container_fti.allowType(\n             object.portal_type\n         ):\n-            raise ValueError(f"Disallowed subobject type: {object.portal_type}")\n+            raise ValueError(\n+                f"Disallowed subobject type: {object.portal_type}"\n+            )\n \n     chooser = INameChooser(container)\n     if hasattr(object, "id") and chooser.checkName(object.id, object):\n@@ -169,7 +181,9 @@ def create_frontpage(portal, target_language):\n     if portal.text:\n         # Do not overwrite existing content\n         return\n-    portal.title = _translate("front-title", target_language, "Welcome to Plone")\n+    portal.title = _translate(\n+        "front-title", target_language, "Welcome to Plone"\n+    )\n     portal.description = _translate(\n         "front-description",\n         target_language,\n@@ -186,7 +200,9 @@ def create_frontpage(portal, target_language):\n                 front_text = translated_text\n     request = getattr(portal, "REQUEST", None)\n     if front_text is None and request is not None:\n-        view = queryMultiAdapter((portal, request), name="plone-frontpage-setup")\n+        view = queryMultiAdapter(\n+            (portal, request), name="plone-frontpage-setup"\n+        )\n         if view is not None:\n             front_text = _bodyfinder(view.index()).strip()\n     portal.text = RichTextValue(front_text, "text/html", "text/x-html-safe")\n@@ -198,7 +214,9 @@ def create_news_topic(portal, target_language):\n \n     if news_id not in portal.keys():\n         title = _translate("news-title", target_language, "News")\n-        description = _translate("news-description", target_language, "Site News")\n+        description = _translate(\n+            "news-description", target_language, "Site News"\n+        )\n         container = createContent(\n             "Folder",\n             id=news_id,\n@@ -248,12 +266,71 @@ def create_news_topic(portal, target_language):\n         _publish(aggregator)\n \n \n+def create_events_topic(portal, target_language):\n+    events_id = "events"\n+\n+    if events_id not in portal.keys():\n+        title = _translate("events-title", target_language, "Events")\n+        description = _translate(\n+            "events-description", target_language, "Site Events"\n+        )\n+        container = createContent(\n+            "Folder",\n+            id=events_id,\n+            title=title,\n+            description=description,\n+            language=target_language.replace("_", "-").lower(),\n+        )\n+        container = addContentToContainer(portal, container)\n+        unrestricted_construct_instance(\n+            "Collection",\n+            container,\n+            id="aggregator",\n+            title=title,\n+            description=description,\n+        )\n+        aggregator = container["aggregator"]\n+\n+        # Constrain types\n+        allowed_types = [\n+            "Event",\n+        ]\n+\n+        _setup_constrains(container, allowed_types)\n+\n+        container.setOrdering("unordered")\n+        container.setDefaultPage("aggregator")\n+        _publish(container)\n+\n+        # Set the Collection criteria.\n+        #: Sort on the Event start date\n+        aggregator.sort_on = "start"\n+        aggregator.sort_reversed = True\n+        #: Query by Type and Review State\n+        aggregator.query = [\n+            {\n+                "i": "portal_type",\n+                "o": "plone.app.querystring.operation.selection.any",\n+                "v": ["Event"],\n+            },\n+            {\n+                "i": "review_state",\n+                "o": "plone.app.querystring.operation.selection.any",\n+                "v": ["published"],\n+            },\n+        ]\n+        aggregator.setLayout("event_listing")\n+        _publish(aggregator)\n+\n+\n def configure_members_folder(portal, target_language):\n     members_id = "Members"\n \n     if members_id not in portal.keys():\n         title = _translate("members-title", target_language, "Users")\n-        description = _translate("members-description", target_language, "Site Users")\n+        description = _translate(\n+            "members-description", target_language, "Site Users"\n+        )\n         container = createContent(\n             "Folder",\n             id=members_id,\n@@ -285,6 +362,10 @@ def import_content(context):\n     target_language, is_combined_language, locale = _get_locales_info(portal)\n     create_frontpage(portal, target_language)\n     create_news_topic(portal, target_language)\n+\n+    if HAS_EVENT:\n+        create_events_topic(portal, target_language)\n+\n     configure_members_folder(portal, target_language)\n \n \n@@ -293,3 +374,8 @@ def setup_various(context):\n     target_language, is_combined_language, locale = _get_locales_info(portal)\n     _setup_calendar(portal, locale)\n     _setup_visible_ids(portal, target_language, locale)\n+\n+    # install explicitly the plone.app.event\n+    if HAS_EVENT:\n+        installer = get_installer(portal)\n+        installer.install_product("plone.app.event")\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T16:50:59+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/90e4f5a4ee5be106d0ac2e12741bb818fe811a10

Blacked

Files changed:
M plone/app/contenttypes/setuphandlers.py

b'diff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex a067d880..f1b88145 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -86,9 +86,7 @@ def addContentToContainer(container, object, checkConstraints=True):\n         if container_fti is not None and not container_fti.allowType(\n             object.portal_type\n         ):\n-            raise ValueError(\n-                f"Disallowed subobject type: {object.portal_type}"\n-            )\n+            raise ValueError(f"Disallowed subobject type: {object.portal_type}")\n \n     chooser = INameChooser(container)\n     if hasattr(object, "id") and chooser.checkName(object.id, object):\n@@ -181,9 +179,7 @@ def create_frontpage(portal, target_language):\n     if portal.text:\n         # Do not overwrite existing content\n         return\n-    portal.title = _translate(\n-        "front-title", target_language, "Welcome to Plone"\n-    )\n+    portal.title = _translate("front-title", target_language, "Welcome to Plone")\n     portal.description = _translate(\n         "front-description",\n         target_language,\n@@ -200,9 +196,7 @@ def create_frontpage(portal, target_language):\n                 front_text = translated_text\n     request = getattr(portal, "REQUEST", None)\n     if front_text is None and request is not None:\n-        view = queryMultiAdapter(\n-            (portal, request), name="plone-frontpage-setup"\n-        )\n+        view = queryMultiAdapter((portal, request), name="plone-frontpage-setup")\n         if view is not None:\n             front_text = _bodyfinder(view.index()).strip()\n     portal.text = RichTextValue(front_text, "text/html", "text/x-html-safe")\n@@ -214,9 +208,7 @@ def create_news_topic(portal, target_language):\n \n     if news_id not in portal.keys():\n         title = _translate("news-title", target_language, "News")\n-        description = _translate(\n-            "news-description", target_language, "Site News"\n-        )\n+        description = _translate("news-description", target_language, "Site News")\n         container = createContent(\n             "Folder",\n             id=news_id,\n@@ -271,9 +263,7 @@ def create_events_topic(portal, target_language):\n \n     if events_id not in portal.keys():\n         title = _translate("events-title", target_language, "Events")\n-        description = _translate(\n-            "events-description", target_language, "Site Events"\n-        )\n+        description = _translate("events-description", target_language, "Site Events")\n         container = createContent(\n             "Folder",\n             id=events_id,\n@@ -328,9 +318,7 @@ def configure_members_folder(portal, target_language):\n \n     if members_id not in portal.keys():\n         title = _translate("members-title", target_language, "Users")\n-        description = _translate(\n-            "members-description", target_language, "Site Users"\n-        )\n+        description = _translate("members-description", target_language, "Site Users")\n         container = createContent(\n             "Folder",\n             id=members_id,\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-17T17:01:08+02:00
Author: Roman (folix-01) <roman.kysil@redturtle.it>
Commit: https://github.com/plone/plone.app.contenttypes/commit/0df2c01c7677c8d698bab2742b3b765c3b5a7535

Zprettied

Files changed:
M plone/app/contenttypes/configure.zcml

b'diff --git a/plone/app/contenttypes/configure.zcml b/plone/app/contenttypes/configure.zcml\nindex b3743269..4513d6a1 100644\n--- a/plone/app/contenttypes/configure.zcml\n+++ b/plone/app/contenttypes/configure.zcml\n@@ -35,7 +35,10 @@\n   <include package="plone.namedfile" />\n   <include package="plone.app.contentmenu" />\n   <include package="plone.app.dexterity" />\n-  <include zcml:condition="installed plone.app.event" package="plone.app.event" />\n+  <include\n+      package="plone.app.event"\n+      zcml:condition="installed plone.app.event"\n+      />\n   <include package="plone.app.linkintegrity" />\n   <include package="plone.app.lockingbehavior" />\n   <include package="plone.app.querystring" />\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-05-18T10:22:51+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.contenttypes/commit/7f5c54c5871824daf9ce4813a1d0cf27de7845dd

Merge pull request #664 from plone/remove_ploneappevent

Remove plone.app.event from dependencies

Files changed:
A news/663.bugfix
M plone/app/contenttypes/configure.zcml
M plone/app/contenttypes/profiles/default/metadata.xml
M plone/app/contenttypes/setuphandlers.py
M plone/app/contenttypes/testing.py
M setup.py

b'diff --git a/news/663.bugfix b/news/663.bugfix\nnew file mode 100644\nindex 00000000..8df5f235\n--- /dev/null\n+++ b/news/663.bugfix\n@@ -0,0 +1,2 @@\n+Remove the unused dependency plone.app.event\n+[@folix-01]\ndiff --git a/plone/app/contenttypes/configure.zcml b/plone/app/contenttypes/configure.zcml\nindex ddfd9d3d..4513d6a1 100644\n--- a/plone/app/contenttypes/configure.zcml\n+++ b/plone/app/contenttypes/configure.zcml\n@@ -35,7 +35,10 @@\n   <include package="plone.namedfile" />\n   <include package="plone.app.contentmenu" />\n   <include package="plone.app.dexterity" />\n-  <include package="plone.app.event" />\n+  <include\n+      package="plone.app.event"\n+      zcml:condition="installed plone.app.event"\n+      />\n   <include package="plone.app.linkintegrity" />\n   <include package="plone.app.lockingbehavior" />\n   <include package="plone.app.querystring" />\ndiff --git a/plone/app/contenttypes/profiles/default/metadata.xml b/plone/app/contenttypes/profiles/default/metadata.xml\nindex 5c9f46a8..b3d89363 100644\n--- a/plone/app/contenttypes/profiles/default/metadata.xml\n+++ b/plone/app/contenttypes/profiles/default/metadata.xml\n@@ -3,7 +3,6 @@\n   <version>3000</version>\n   <dependencies>\n     <dependency>profile-plone.app.dexterity:default</dependency>\n-    <dependency>profile-plone.app.event:default</dependency>\n     <dependency>profile-plone.app.querystring:default</dependency>\n     <dependency>profile-plone.app.relationfield:default</dependency>\n     <dependency>profile-plone.app.versioningbehavior:default</dependency>\ndiff --git a/plone/app/contenttypes/setuphandlers.py b/plone/app/contenttypes/setuphandlers.py\nindex ad88700a..f1b88145 100644\n--- a/plone/app/contenttypes/setuphandlers.py\n+++ b/plone/app/contenttypes/setuphandlers.py\n@@ -5,6 +5,7 @@\n from plone.app.textfield.value import RichTextValue\n from plone.base.interfaces import INonInstallable\n from plone.base.interfaces.constrains import ISelectableConstrainTypes\n+from plone.base.utils import get_installer\n from plone.base.utils import unrestricted_construct_instance\n from plone.dexterity.fti import IDexterityFTI\n from plone.dexterity.utils import createContent\n@@ -24,6 +25,15 @@\n from zope.i18n.locales.provider import LoadLocaleError\n from zope.interface import implementer\n \n+import pkg_resources\n+\n+\n+try:\n+    pkg_resources.get_distribution("plone.app.event")\n+    HAS_EVENT = True\n+except pkg_resources.DistributionNotFound:\n+    HAS_EVENT = False\n+\n \n @implementer(INonInstallable)\n class HiddenProfiles:\n@@ -340,7 +350,10 @@ def import_content(context):\n     target_language, is_combined_language, locale = _get_locales_info(portal)\n     create_frontpage(portal, target_language)\n     create_news_topic(portal, target_language)\n-    create_events_topic(portal, target_language)\n+\n+    if HAS_EVENT:\n+        create_events_topic(portal, target_language)\n+\n     configure_members_folder(portal, target_language)\n \n \n@@ -349,3 +362,8 @@ def setup_various(context):\n     target_language, is_combined_language, locale = _get_locales_info(portal)\n     _setup_calendar(portal, locale)\n     _setup_visible_ids(portal, target_language, locale)\n+\n+    # install explicitly the plone.app.event\n+    if HAS_EVENT:\n+        installer = get_installer(portal)\n+        installer.install_product("plone.app.event")\ndiff --git a/plone/app/contenttypes/testing.py b/plone/app/contenttypes/testing.py\nindex 32da14a2..e2cf3829 100644\n--- a/plone/app/contenttypes/testing.py\n+++ b/plone/app/contenttypes/testing.py\n@@ -1,6 +1,5 @@\n from plone.app.contenttypes.interfaces import IPloneAppContenttypesLayer\n from plone.app.contenttypes.tests.robot.variables import TEST_FOLDER_ID\n-from plone.app.event.testing import PAEvent_FIXTURE\n from plone.app.robotframework.testing import REMOTE_LIBRARY_BUNDLE_FIXTURE\n from plone.app.testing import FunctionalTesting\n from plone.app.testing import IntegrationTesting\n@@ -23,18 +22,12 @@ def set_browserlayer(request):\n \n \n class PloneAppContenttypes(PloneSandboxLayer):\n-    defaultBases = (\n-        PAEvent_FIXTURE,\n-        PLONE_FIXTURE,\n-    )\n+    defaultBases = (PLONE_FIXTURE,)\n \n     def setUpZope(self, app, configurationContext):\n         import plone.app.contenttypes\n \n         self.loadZCML(package=plone.app.contenttypes)\n-        import plone.app.event.dx\n-\n-        self.loadZCML(package=plone.app.event.dx)\n \n     def setUpPloneSite(self, portal):\n         portal.portal_workflow.setDefaultChain("simple_publication_workflow")\n@@ -43,7 +36,7 @@ def setUpPloneSite(self, portal):\n class PloneAppContenttypesRobot(PloneAppContenttypes):\n     """Same as the default but with a added folder \'robot-test-folder\'."""\n \n-    defaultBases = (PAEvent_FIXTURE, REMOTE_LIBRARY_BUNDLE_FIXTURE)\n+    defaultBases = (REMOTE_LIBRARY_BUNDLE_FIXTURE,)\n \n     def setUpPloneSite(self, portal):\n         portal.acl_users.userFolderAddUser(\ndiff --git a/setup.py b/setup.py\nindex e7d0e58a..52afb5a4 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -48,7 +48,6 @@ def read(*rnames):\n     install_requires=[\n         "setuptools",\n         "plone.app.contentmenu",\n-        "plone.app.event >= 2.0",\n         "plone.app.dexterity >= 2.0.7",  # has a fix for INameFromFilename\n         "plone.app.linkintegrity",\n         "plone.app.querystring >= 1.2.2",  # custom_query support\n'

