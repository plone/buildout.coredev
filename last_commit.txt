Repository: plone.folder


Branch: refs/heads/master
Date: 2020-05-19T18:20:06+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.folder/commit/ffab7d1fe4684d0a273f946e529be3d86b1846c2

optimize loop in moveObjectsByDelta

Files changed:
A news/15.bugfix
M src/plone/folder/default.py
M src/plone/folder/partial.py

b'diff --git a/news/15.bugfix b/news/15.bugfix\nnew file mode 100644\nindex 0000000..a5ee223\n--- /dev/null\n+++ b/news/15.bugfix\n@@ -0,0 +1,3 @@\n+Micro-optimization of often called loop in moveObjectsByDelta.\n+``x in y`` is up to 1000 times faster if y is a set and not a list.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/src/plone/folder/default.py b/src/plone/folder/default.py\nindex 768911b..84d4c8d 100644\n--- a/src/plone/folder/default.py\n+++ b/src/plone/folder/default.py\n@@ -81,8 +81,12 @@ def moveObjectsByDelta(\n             if delta > 0:\n                 subset_ids.reverse()\n             idx = 0\n+            # micro-optimization 1: set is 1000 time faster on contains than list\n+            subset_ids_as_set = set(subset_ids)\n+            # micro-optimization 2: speedup on lookup in bytecode\n+            order_getitem = order.__getitem__\n             for i in range(len(order)):\n-                if order[i] not in subset_ids:\n+                if order_getitem(i) not in subset_ids_as_set:\n                     continue\n                 obj_id = subset_ids[idx]\n                 try:\ndiff --git a/src/plone/folder/partial.py b/src/plone/folder/partial.py\nindex 6891dd2..5ef625d 100644\n--- a/src/plone/folder/partial.py\n+++ b/src/plone/folder/partial.py\n@@ -15,7 +15,7 @@\n \n @implementer(IExplicitOrdering)\n class PartialOrdering(object):\n-    """ this implementation uses a list ot store order information on a\n+    """ this implementation uses a list to store order information on a\n         regular attribute of the folderish object;  explicit ordering\n         is supported """\n     adapts(IOrderableFolder)\n@@ -96,8 +96,10 @@ def moveObjectsByDelta(self, ids, delta, subset_ids=None,\n             if delta > 0:\n                 subset_ids.reverse()\n             idx = 0\n+            # micro-optimization: set is 1000 time faster on contains than list\n+            subset_ids_as_set = set(subset_ids)\n             for i, value in enumerate(self.order):\n-                if value in subset_ids:\n+                if value in subset_ids_as_set:\n                     id = subset_ids[idx]\n                     try:\n                         self.order[i] = id\n'

Repository: plone.folder


Branch: refs/heads/master
Date: 2020-05-19T20:24:04+02:00
Author: agitator (agitator) <agitator@users.noreply.github.com>
Commit: https://github.com/plone/plone.folder/commit/658ab7c020d9e8a856d64b68006eb7d39dbdfd18

Merge pull request #15 from plone/optimize-moveObjectsByDelta

optimize loop in moveObjectsByDelta

Files changed:
A news/15.bugfix
M src/plone/folder/default.py
M src/plone/folder/partial.py

b'diff --git a/news/15.bugfix b/news/15.bugfix\nnew file mode 100644\nindex 0000000..a5ee223\n--- /dev/null\n+++ b/news/15.bugfix\n@@ -0,0 +1,3 @@\n+Micro-optimization of often called loop in moveObjectsByDelta.\n+``x in y`` is up to 1000 times faster if y is a set and not a list.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/src/plone/folder/default.py b/src/plone/folder/default.py\nindex 768911b..84d4c8d 100644\n--- a/src/plone/folder/default.py\n+++ b/src/plone/folder/default.py\n@@ -81,8 +81,12 @@ def moveObjectsByDelta(\n             if delta > 0:\n                 subset_ids.reverse()\n             idx = 0\n+            # micro-optimization 1: set is 1000 time faster on contains than list\n+            subset_ids_as_set = set(subset_ids)\n+            # micro-optimization 2: speedup on lookup in bytecode\n+            order_getitem = order.__getitem__\n             for i in range(len(order)):\n-                if order[i] not in subset_ids:\n+                if order_getitem(i) not in subset_ids_as_set:\n                     continue\n                 obj_id = subset_ids[idx]\n                 try:\ndiff --git a/src/plone/folder/partial.py b/src/plone/folder/partial.py\nindex 6891dd2..5ef625d 100644\n--- a/src/plone/folder/partial.py\n+++ b/src/plone/folder/partial.py\n@@ -15,7 +15,7 @@\n \n @implementer(IExplicitOrdering)\n class PartialOrdering(object):\n-    """ this implementation uses a list ot store order information on a\n+    """ this implementation uses a list to store order information on a\n         regular attribute of the folderish object;  explicit ordering\n         is supported """\n     adapts(IOrderableFolder)\n@@ -96,8 +96,10 @@ def moveObjectsByDelta(self, ids, delta, subset_ids=None,\n             if delta > 0:\n                 subset_ids.reverse()\n             idx = 0\n+            # micro-optimization: set is 1000 time faster on contains than list\n+            subset_ids_as_set = set(subset_ids)\n             for i, value in enumerate(self.order):\n-                if value in subset_ids:\n+                if value in subset_ids_as_set:\n                     id = subset_ids[idx]\n                     try:\n                         self.order[i] = id\n'

