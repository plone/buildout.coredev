Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:45+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/2535ed0939a291b4f5fd5ff3f9d2554fcaa26c46

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A .pre-commit-config.yaml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..919b411 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 0000000..7ef4f64\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..a7f25e0\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 23adb66..81594fd 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,13 +1,51 @@\n-*.py[co]\n-/borg.localrole.egg-info/\n-*.mo\n-build\n-dist\n-.project\n-.pydevproject\n-.settings\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n+*.egg-info\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n-/bin\n-/develop-eggs\n-/parts\n-*.bak\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 642e0d7..4ca2970 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,10 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "68486a87"\n-\n-[dependencies]\n-mappings = [\n-    "Zope = [\'Products.PageTemplates\', \'ZPublisher\', ]",\n-    ]\n+commit-id = "cfffba8c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..7de9fd7\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,84 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.4.0\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.3.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.1.0a2\n+    hooks:\n+    -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.4\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 7ff4077..e442bd0 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,11 +37,121 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n-Zope = [\'Products.PageTemplates\', \'ZPublisher\', ]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n+  # Zope dependencies\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n+]\n+\'plone.base\' = [\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n+]\n+python-dateutil = [\'dateutil\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 5a29bed..a4303c0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,75 +1,189 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n envlist =\n-    format\n     lint\n+    test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n-py_files = git ls-files "*.py"\n-text_files = git ls-files "*.rst" "*.md"\n-xml_files = git ls-files "*.xml"\n-zcml_files = git ls-files "*.zcml"\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n-description = automatically reformat python code\n+description = automatically reformat code\n skip_install = true\n deps =\n-    pyupgrade\n-    isort\n-    black\n-    zpretty\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n-    sh -c \'{[testenv]py_files} | xargs isort\'\n-    sh -c \'{[testenv]py_files} | xargs black\'\n-    sh -c \'{[testenv]xml_files} | xargs zpretty -x -i || true\'\n-    sh -c \'{[testenv]zcml_files} | xargs zpretty -z -i || true\'\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n skip_install = true\n deps =\n-    flake8\n-    codespell\n-    tomli  # needed for codespell to read pyproject.toml\n-    check-manifest\n-    pyroma\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs flake8\'\n-    sh -c \'{[testenv]py_files} | xargs codespell\'\n-    sh -c \'{[testenv]text_files} | xargs codespell\'\n-    check-manifest\n-    pyroma -n 10 .\n+    pre-commit run -a\n \n [testenv:dependencies]\n description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n-    z3c.dependencychecker\n-    -c lint-requirements.txt\n+    build\n+    z3c.dependencychecker==2.11\n commands =\n+    python -m build --sdist --no-isolation\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph with the distribution dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n deps =\n-    pipdeptree\n+    pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n-    -c lint-requirements.txt\n commands =\n-    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-description = run the distribution\'s tests\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s borg.localrole {posargs}\n+extras =\n+    test\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n-    borg.localrole[test]\n-    pytest\n-    gocept.pytestlayer\n+    coverage\n+    zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    pip install -e .\n-    pytest\n+    coverage run --branch --source borg.localrole {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s borg.localrole {posargs}\n+    coverage report -m --format markdown\n+    coverage xml\n+extras =\n+    test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:45+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/a9347e12865055d849d07315e52d53a26c80e455

cleanup: remove unused file

Files changed:
D lint-requirements.txt
D setup.cfg

b'diff --git a/lint-requirements.txt b/lint-requirements.txt\ndeleted file mode 100644\nindex 2a91911..0000000\n--- a/lint-requirements.txt\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-black==22.12.0\n-check-manifest==0.49\n-codespell==2.2.2\n-flake8==6.0.0\n-isort==5.11.4\n-pipdeptree==2.3.3\n-pyroma==4.1\n-pyupgrade==3.3.1\n-z3c.dependencychecker==2.10\n-zpretty==2.4.1\ndiff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 8849fbc..0000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    tox.ini\n-    lint-requirements.txt\n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:45+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/c8d98b29aef49d2a6b0067108a22bddec974c2bb

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex d11973a..0cbf370 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,3 +1,4 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n@@ -5,15 +6,17 @@\n name = "borg.localrole"\n version = "3.1.11.dev0"\n \n-readme = open("README.rst").read()\n-history = open("CHANGES.rst").read()\n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n \n setup(\n     name=name,\n     version=version,\n     description="A PAS plugin which can manage local roles via an "\n     "adapter lookup on the current context",\n-    long_description=readme + "\\n" + history,\n+    long_description=long_description,\n+    long_description_content_type="text/x-rst",\n     keywords="Plone PAS local roles",\n     author="Borg Collective",\n     author_email="borg@plone.org",\n@@ -46,6 +49,8 @@\n         "Acquisition",\n         "Zope",\n     ],\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n@@ -59,9 +64,6 @@\n         "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",  # noqa\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n-        "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:45+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/41e3f2c9e79787cd1b8270c0045addd9922f0f83

chore: run black

Files changed:
M borg/localrole/setuphandlers.py

b'diff --git a/borg/localrole/setuphandlers.py b/borg/localrole/setuphandlers.py\nindex f30b14d..d6a9737 100644\n--- a/borg/localrole/setuphandlers.py\n+++ b/borg/localrole/setuphandlers.py\n@@ -2,7 +2,6 @@\n \n \n def importVarious(context):\n-\n     if context.readDataFile("borg.localrole_various.txt") is None:\n         return\n \n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:46+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/8061b03e72f2ef0a6f0ed0cae3cbad8ae3ed2e15

chore: run zpretty

Files changed:
M borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt

b'diff --git a/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt b/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\nindex d6609f5..1cbe588 100644\n--- a/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\n+++ b/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\n@@ -1,28 +1,39 @@\n <h1 tal:replace="structure here/manage_page_header">Header</h1>\n \n-<h2 tal:define="form_title string:Add Workspace Local Role Manager"\n-      tal:replace="structure here/manage_form_title">Form Title</h2>\n+<h2 tal:define="\n+      form_title string:Add Workspace Local Role Manager;\n+    "\n+    tal:replace="structure here/manage_form_title"\n+>Form Title</h2>\n \n-  <p class="form-help">\n+<p class="form-help">\n   Install a Workspace local role manager. This plugin will enable\n   workspaces to provide the correct local rules for users assigned\n   to that workspace.\n-  </p>\n+</p>\n \n-<form action="manage_addWorkspaceLocalRoleManager" method="POST">\n+<form action="manage_addWorkspaceLocalRoleManager"\n+      method="POST"\n+>\n   <table>\n     <tr>\n       <td class="form-label">Id</td>\n-      <td><input type="text" name="id"/></td>\n+      <td><input name="id"\n+               type="text"\n+        /></td>\n     </tr>\n     <tr>\n       <td class="form-label">Title</td>\n-      <td><input type="text" name="Title"/></td>\n+      <td><input name="Title"\n+               type="text"\n+        /></td>\n     </tr>\n     <tr>\n       <td colspan="2">\n         <div class="form-element">\n-          <input type="submit" value="Add local role manager"/>\n+          <input type="submit"\n+                 value="Add local role manager"\n+          />\n         </div>\n       </td>\n     </tr>\n@@ -30,4 +41,3 @@\n </form>\n \n <h1 tal:replace="structure here/manage_page_footer">Footer</h1>\n-\n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:46+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/095bed44e929fe8d90700ea38b8573267bdce6e6

chore: apply flake8 tips

Files changed:
M borg/localrole/tests.py

b'diff --git a/borg/localrole/tests.py b/borg/localrole/tests.py\nindex efaf773..853abb7 100644\n--- a/borg/localrole/tests.py\n+++ b/borg/localrole/tests.py\n@@ -7,7 +7,6 @@\n \n import borg.localrole\n import doctest\n-import re\n import unittest\n \n \n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-06-26T11:29:46+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/borg.localrole/commit/46874cba1acfaab025f577004557f6d913e1cb78

fix: mark strings to not be translated

Files changed:
M borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt

b'diff --git a/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt b/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\nindex 1cbe588..854e95c 100644\n--- a/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\n+++ b/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\n@@ -6,7 +6,9 @@\n     tal:replace="structure here/manage_form_title"\n >Form Title</h2>\n \n-<p class="form-help">\n+<p class="form-help"\n+   i18n:ignore="true"\n+>\n   Install a Workspace local role manager. This plugin will enable\n   workspaces to provide the correct local rules for users assigned\n   to that workspace.\n@@ -17,13 +19,17 @@\n >\n   <table>\n     <tr>\n-      <td class="form-label">Id</td>\n+      <td class="form-label"\n+          i18n:ignore="true"\n+      >Id</td>\n       <td><input name="id"\n                type="text"\n         /></td>\n     </tr>\n     <tr>\n-      <td class="form-label">Title</td>\n+      <td class="form-label"\n+          i18n:ignore="true"\n+      >Title</td>\n       <td><input name="Title"\n                type="text"\n         /></td>\n@@ -33,6 +39,7 @@\n         <div class="form-element">\n           <input type="submit"\n                  value="Add local role manager"\n+                 i18n:ignore-attributes="value"\n           />\n         </div>\n       </td>\n'

Repository: borg.localrole


Branch: refs/heads/master
Date: 2023-10-04T17:45:23+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/borg.localrole/commit/78ba10ff3e70d181c7a0438f5fa27cf009902092

Merge pull request #15 from plone/config-with-default-template-3ea02c34

Config with default template

Files changed:
A .flake8
A .github/workflows/meta.yml
A .pre-commit-config.yaml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M borg/localrole/setuphandlers.py
M borg/localrole/tests.py
M borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt
M pyproject.toml
M setup.py
M tox.ini
D lint-requirements.txt
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..919b411 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 62%\nrename from setup.cfg\nrename to .flake8\nindex 8849fbc..7ef4f64 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -15,9 +13,10 @@ ignore =\n     # black takes care of spaces after commas\n     E231,\n \n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    tox.ini\n-    lint-requirements.txt\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..a7f25e0\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 23adb66..81594fd 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,13 +1,51 @@\n-*.py[co]\n-/borg.localrole.egg-info/\n-*.mo\n-build\n-dist\n-.project\n-.pydevproject\n-.settings\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n+*.egg-info\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n-/bin\n-/develop-eggs\n-/parts\n-*.bak\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 642e0d7..4ca2970 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,10 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "68486a87"\n-\n-[dependencies]\n-mappings = [\n-    "Zope = [\'Products.PageTemplates\', \'ZPublisher\', ]",\n-    ]\n+commit-id = "cfffba8c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nnew file mode 100644\nindex 0000000..7de9fd7\n--- /dev/null\n+++ b/.pre-commit-config.yaml\n@@ -0,0 +1,84 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+ci:\n+    autofix_prs: false\n+    autoupdate_schedule: monthly\n+\n+repos:\n+-   repo: https://github.com/asottile/pyupgrade\n+    rev: v3.4.0\n+    hooks:\n+    -   id: pyupgrade\n+        args: [--py38-plus]\n+-   repo: https://github.com/pycqa/isort\n+    rev: 5.12.0\n+    hooks:\n+    -   id: isort\n+-   repo: https://github.com/psf/black\n+    rev: 23.3.0\n+    hooks:\n+    -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.1.0a2\n+    hooks:\n+    -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+-   repo: https://github.com/PyCQA/flake8\n+    rev: 6.0.0\n+    hooks:\n+    -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+-   repo: https://github.com/codespell-project/codespell\n+    rev: v2.2.4\n+    hooks:\n+    -   id: codespell\n+        additional_dependencies:\n+          - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+-   repo: https://github.com/mgedmin/check-manifest\n+    rev: "0.49"\n+    hooks:\n+    -   id: check-manifest\n+-   repo: https://github.com/regebro/pyroma\n+    rev: "4.2"\n+    hooks:\n+    -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/borg/localrole/setuphandlers.py b/borg/localrole/setuphandlers.py\nindex f30b14d..d6a9737 100644\n--- a/borg/localrole/setuphandlers.py\n+++ b/borg/localrole/setuphandlers.py\n@@ -2,7 +2,6 @@\n \n \n def importVarious(context):\n-\n     if context.readDataFile("borg.localrole_various.txt") is None:\n         return\n \ndiff --git a/borg/localrole/tests.py b/borg/localrole/tests.py\nindex efaf773..853abb7 100644\n--- a/borg/localrole/tests.py\n+++ b/borg/localrole/tests.py\n@@ -7,7 +7,6 @@\n \n import borg.localrole\n import doctest\n-import re\n import unittest\n \n \ndiff --git a/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt b/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\nindex d6609f5..854e95c 100644\n--- a/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\n+++ b/borg/localrole/zmi/WorkspaceLocalRoleManagerForm.pt\n@@ -1,28 +1,46 @@\n <h1 tal:replace="structure here/manage_page_header">Header</h1>\n \n-<h2 tal:define="form_title string:Add Workspace Local Role Manager"\n-      tal:replace="structure here/manage_form_title">Form Title</h2>\n+<h2 tal:define="\n+      form_title string:Add Workspace Local Role Manager;\n+    "\n+    tal:replace="structure here/manage_form_title"\n+>Form Title</h2>\n \n-  <p class="form-help">\n+<p class="form-help"\n+   i18n:ignore="true"\n+>\n   Install a Workspace local role manager. This plugin will enable\n   workspaces to provide the correct local rules for users assigned\n   to that workspace.\n-  </p>\n+</p>\n \n-<form action="manage_addWorkspaceLocalRoleManager" method="POST">\n+<form action="manage_addWorkspaceLocalRoleManager"\n+      method="POST"\n+>\n   <table>\n     <tr>\n-      <td class="form-label">Id</td>\n-      <td><input type="text" name="id"/></td>\n+      <td class="form-label"\n+          i18n:ignore="true"\n+      >Id</td>\n+      <td><input name="id"\n+               type="text"\n+        /></td>\n     </tr>\n     <tr>\n-      <td class="form-label">Title</td>\n-      <td><input type="text" name="Title"/></td>\n+      <td class="form-label"\n+          i18n:ignore="true"\n+      >Title</td>\n+      <td><input name="Title"\n+               type="text"\n+        /></td>\n     </tr>\n     <tr>\n       <td colspan="2">\n         <div class="form-element">\n-          <input type="submit" value="Add local role manager"/>\n+          <input type="submit"\n+                 value="Add local role manager"\n+                 i18n:ignore-attributes="value"\n+          />\n         </div>\n       </td>\n     </tr>\n@@ -30,4 +48,3 @@\n </form>\n \n <h1 tal:replace="structure here/manage_page_footer">Footer</h1>\n-\ndiff --git a/lint-requirements.txt b/lint-requirements.txt\ndeleted file mode 100644\nindex 2a91911..0000000\n--- a/lint-requirements.txt\n+++ /dev/null\n@@ -1,12 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-black==22.12.0\n-check-manifest==0.49\n-codespell==2.2.2\n-flake8==6.0.0\n-isort==5.11.4\n-pipdeptree==2.3.3\n-pyroma==4.1\n-pyupgrade==3.3.1\n-z3c.dependencychecker==2.10\n-zpretty==2.4.1\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 7ff4077..e442bd0 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,11 +37,121 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n-Zope = [\'Products.PageTemplates\', \'ZPublisher\', ]\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n+  # Zope dependencies\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n+]\n+\'plone.base\' = [\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n+]\n+python-dateutil = [\'dateutil\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.py b/setup.py\nindex d11973a..0cbf370 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,3 +1,4 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n@@ -5,15 +6,17 @@\n name = "borg.localrole"\n version = "3.1.11.dev0"\n \n-readme = open("README.rst").read()\n-history = open("CHANGES.rst").read()\n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n \n setup(\n     name=name,\n     version=version,\n     description="A PAS plugin which can manage local roles via an "\n     "adapter lookup on the current context",\n-    long_description=readme + "\\n" + history,\n+    long_description=long_description,\n+    long_description_content_type="text/x-rst",\n     keywords="Plone PAS local roles",\n     author="Borg Collective",\n     author_email="borg@plone.org",\n@@ -46,6 +49,8 @@\n         "Acquisition",\n         "Zope",\n     ],\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n@@ -59,9 +64,6 @@\n         "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)",  # noqa\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 2.7",\n-        "Programming Language :: Python :: 3.6",\n-        "Programming Language :: Python :: 3.7",\n         "Programming Language :: Python :: 3.8",\n         "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\ndiff --git a/tox.ini b/tox.ini\nindex 5a29bed..a4303c0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,75 +1,189 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n envlist =\n-    format\n     lint\n+    test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n-py_files = git ls-files "*.py"\n-text_files = git ls-files "*.rst" "*.md"\n-xml_files = git ls-files "*.xml"\n-zcml_files = git ls-files "*.zcml"\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n-description = automatically reformat python code\n+description = automatically reformat code\n skip_install = true\n deps =\n-    pyupgrade\n-    isort\n-    black\n-    zpretty\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs pyupgrade --py38-plus\'\n-    sh -c \'{[testenv]py_files} | xargs isort\'\n-    sh -c \'{[testenv]py_files} | xargs black\'\n-    sh -c \'{[testenv]xml_files} | xargs zpretty -x -i || true\'\n-    sh -c \'{[testenv]zcml_files} | xargs zpretty -z -i || true\'\n+    pre-commit run -a pyupgrade\n+    pre-commit run -a isort\n+    pre-commit run -a black\n+    pre-commit run -a zpretty\n \n [testenv:lint]\n description = run linters that will help improve the code style\n skip_install = true\n deps =\n-    flake8\n-    codespell\n-    tomli  # needed for codespell to read pyproject.toml\n-    check-manifest\n-    pyroma\n-    -c lint-requirements.txt\n+    pre-commit\n commands =\n-    sh -c \'{[testenv]py_files} | xargs flake8\'\n-    sh -c \'{[testenv]py_files} | xargs codespell\'\n-    sh -c \'{[testenv]text_files} | xargs codespell\'\n-    check-manifest\n-    pyroma -n 10 .\n+    pre-commit run -a\n \n [testenv:dependencies]\n description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n-    z3c.dependencychecker\n-    -c lint-requirements.txt\n+    build\n+    z3c.dependencychecker==2.11\n commands =\n+    python -m build --sdist --no-isolation\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph with the distribution dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n deps =\n-    pipdeptree\n+    pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n-    -c lint-requirements.txt\n commands =\n-    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-description = run the distribution\'s tests\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s borg.localrole {posargs}\n+extras =\n+    test\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n-    borg.localrole[test]\n-    pytest\n-    gocept.pytestlayer\n+    coverage\n+    zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    pip install -e .\n-    pytest\n+    coverage run --branch --source borg.localrole {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s borg.localrole {posargs}\n+    coverage report -m --format markdown\n+    coverage xml\n+extras =\n+    test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

