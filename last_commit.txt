Repository: plone.protect


Branch: refs/heads/master
Date: 2023-04-11T13:37:51+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.protect/commit/115c110d700bcf4e77fd4e30bc54fb584d0de05a

do not depend here on plone.portlets

Files changed:
A news/99.bugfix
M plone/protect/auto.py

b"diff --git a/news/99.bugfix b/news/99.bugfix\nnew file mode 100644\nindex 0000000..1f23cbb\n--- /dev/null\n+++ b/news/99.bugfix\n@@ -0,0 +1,3 @@\n+Do not hard-depend on `plone.portlets`.\n+Prepare for Plone with portlets optional.\n+@jensens\n\\ No newline at end of file\ndiff --git a/plone/protect/auto.py b/plone/protect/auto.py\nindex d1c43e7..1602e65 100644\n--- a/plone/protect/auto.py\n+++ b/plone/protect/auto.py\n@@ -5,7 +5,6 @@\n from lxml import etree\n from lxml import html\n from plone.keyring.interfaces import IKeyManager\n-from plone.portlets.interfaces import IPortletAssignment\n from plone.protect.authenticator import check\n from plone.protect.authenticator import createToken\n from plone.protect.authenticator import isAnonymousUser\n@@ -55,6 +54,12 @@\n except ImportError:\n     ScalesDict = None\n \n+# do not hard depend here on plone.portlets (for Plone 7)\n+try:\n+    from plone.portlets.interfaces import IPortletAssignment\n+except ImportError:\n+    IPortletAssignment = None\n+\n \n logger = logging.getLogger('plone.protect')\n \n@@ -259,7 +264,7 @@ def _check(self):\n                     safe_oids = self.request.environ[SAFE_WRITE_KEY]\n                 safe = True\n                 for obj in registered:\n-                    if IPortletAssignment.providedBy(obj):\n+                    if IPortletAssignment is not None and IPortletAssignment.providedBy(obj):\n                         continue\n                     if getattr(obj, '_p_oid', False) in safe_oids:\n                         continue\n"

Repository: plone.protect


Branch: refs/heads/master
Date: 2023-04-11T16:36:22+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.protect/commit/beb045cf6a2c8e1dec3e6c996378eb5c23bc0c81

Merge pull request #99 from plone/no-dep-portlets

do not depend here on plone.portlets

Files changed:
A news/99.bugfix
M plone/protect/auto.py

b"diff --git a/news/99.bugfix b/news/99.bugfix\nnew file mode 100644\nindex 0000000..1f23cbb\n--- /dev/null\n+++ b/news/99.bugfix\n@@ -0,0 +1,3 @@\n+Do not hard-depend on `plone.portlets`.\n+Prepare for Plone with portlets optional.\n+@jensens\n\\ No newline at end of file\ndiff --git a/plone/protect/auto.py b/plone/protect/auto.py\nindex d1c43e7..1602e65 100644\n--- a/plone/protect/auto.py\n+++ b/plone/protect/auto.py\n@@ -5,7 +5,6 @@\n from lxml import etree\n from lxml import html\n from plone.keyring.interfaces import IKeyManager\n-from plone.portlets.interfaces import IPortletAssignment\n from plone.protect.authenticator import check\n from plone.protect.authenticator import createToken\n from plone.protect.authenticator import isAnonymousUser\n@@ -55,6 +54,12 @@\n except ImportError:\n     ScalesDict = None\n \n+# do not hard depend here on plone.portlets (for Plone 7)\n+try:\n+    from plone.portlets.interfaces import IPortletAssignment\n+except ImportError:\n+    IPortletAssignment = None\n+\n \n logger = logging.getLogger('plone.protect')\n \n@@ -259,7 +264,7 @@ def _check(self):\n                     safe_oids = self.request.environ[SAFE_WRITE_KEY]\n                 safe = True\n                 for obj in registered:\n-                    if IPortletAssignment.providedBy(obj):\n+                    if IPortletAssignment is not None and IPortletAssignment.providedBy(obj):\n                         continue\n                     if getattr(obj, '_p_oid', False) in safe_oids:\n                         continue\n"

