Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2024-02-12T16:37:19+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/312e3bd76ef4ffcf9bb25818f535f626534366f7

make sure diff renders when relations are broken

Files changed:
M Products/CMFDiffTool/ListDiff.py
M Products/CMFDiffTool/tests/test_dexteritydiff.py

b'diff --git a/Products/CMFDiffTool/ListDiff.py b/Products/CMFDiffTool/ListDiff.py\nindex f041ebf..c36549f 100644\n--- a/Products/CMFDiffTool/ListDiff.py\n+++ b/Products/CMFDiffTool/ListDiff.py\n@@ -79,11 +79,11 @@ def _parseField(self, value, filename=None):\n         if filename is None:\n             # Since we only want to compare a single field, make a\n             # one-item list out of it\n-            return ["/".join(val.getPhysicalPath()) for val in value]\n+            return ["/".join(val.getPhysicalPath()) for val in value if val]\n         else:\n             return [\n                 self.filenameTitle(filename),\n-                ["/".join(val.getPhysicalPath()) for val in value],\n+                ["/".join(val.getPhysicalPath()) for val in value if val],\n             ]\n \n     def inline_diff(self):\ndiff --git a/Products/CMFDiffTool/tests/test_dexteritydiff.py b/Products/CMFDiffTool/tests/test_dexteritydiff.py\nindex 48b6ae6..8d86f77 100644\n--- a/Products/CMFDiffTool/tests/test_dexteritydiff.py\n+++ b/Products/CMFDiffTool/tests/test_dexteritydiff.py\n@@ -154,3 +154,50 @@ def test_should_provide_diff_for_related_fields(self):\n                 i_add = n_diff.index("+")\n                 i_obj2 = n_diff.index("obj2")\n                 self.assertTrue(i_rem < i_obj1 < i_add < i_obj2)\n+\n+    def test_dont_break_on_broken_relations(self):\n+        """Diff should still render when a relation is broken"""\n+        intids = getUtility(IIntIds)\n+\n+        self.portal.invokeFactory(\n+            testing.TEST_CONTENT_TYPE_ID,\n+            "obj1",\n+            title="Object 1",\n+            description="Desc 1",\n+            text="Text 1",\n+        )\n+        obj1 = self.portal["obj1"]\n+\n+        intid = intids.register(obj1)\n+        self.portal.invokeFactory(\n+            testing.TEST_CONTENT_TYPE_ID,\n+            "obj2",\n+            title="Object 2",\n+            relatedItems=[RelationValue(intid)],\n+        )\n+        obj2 = self.portal["obj2"]\n+\n+        intid = intids.register(obj2)\n+        self.portal.invokeFactory(\n+            testing.TEST_CONTENT_TYPE_ID,\n+            "obj3",\n+            title="Object 3",\n+            relatedItems=[RelationValue(intid)],\n+        )\n+        obj3 = self.portal["obj3"]\n+\n+        obj2.relatedItems[0].broken("broken")\n+        self.assertTrue(obj2.relatedItems[0].isBroken())\n+\n+        diffs = DexterityCompoundDiff(obj2, obj3, "any")\n+        for d in diffs:\n+            if d.field == "relatedItems":\n+                inline_diff = d.inline_diff()\n+                self.assertTrue(inline_diff)\n+                i_diff_sub = inline_diff.index(\'<div class="diff_add">\')\n+                i_obj1 = inline_diff.index("Object 2")\n+\n+                n_diff = d.ndiff()\n+                self.assertTrue(n_diff)\n+                i_add = n_diff.index("+")\n+                i_obj2 = n_diff.index("obj2")\n'

Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2024-02-12T17:22:27+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/887dcdc8274a67b5741e75ee29af30b5e098c9fa

fix test

Files changed:
M Products/CMFDiffTool/tests/test_dexteritydiff.py

b'diff --git a/Products/CMFDiffTool/tests/test_dexteritydiff.py b/Products/CMFDiffTool/tests/test_dexteritydiff.py\nindex 8d86f77..9492ac4 100644\n--- a/Products/CMFDiffTool/tests/test_dexteritydiff.py\n+++ b/Products/CMFDiffTool/tests/test_dexteritydiff.py\n@@ -194,10 +194,10 @@ def test_dont_break_on_broken_relations(self):\n             if d.field == "relatedItems":\n                 inline_diff = d.inline_diff()\n                 self.assertTrue(inline_diff)\n-                i_diff_sub = inline_diff.index(\'<div class="diff_add">\')\n-                i_obj1 = inline_diff.index("Object 2")\n+                self.assertIn(\'<div class="diff_add">\', inline_diff)\n+                self.assertIn("Object 2", inline_diff)\n \n                 n_diff = d.ndiff()\n                 self.assertTrue(n_diff)\n-                i_add = n_diff.index("+")\n-                i_obj2 = n_diff.index("obj2")\n+                self.assertIn("+", n_diff)\n+                self.assertIn("obj2", n_diff)\n'

Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2024-02-12T17:27:01+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/0e4f5443c5f5a057e3839ff89358f3b5d7e95ec0

add changenote

Files changed:
A news/54.bugfix

b'diff --git a/news/54.bugfix b/news/54.bugfix\nnew file mode 100644\nindex 0000000..d50edd6\n--- /dev/null\n+++ b/news/54.bugfix\n@@ -0,0 +1,2 @@\n+Make sure diff still renders when a relationlist has broken relations\n+[pbauer]\n'

Repository: Products.CMFDiffTool


Branch: refs/heads/master
Date: 2024-02-19T10:31:59+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFDiffTool/commit/778d5504a25d89fb72d5ef772d58716ee869fb5a

Merge pull request #54 from plone/support_broken_relations

make sure diff renders when relations are broken

Files changed:
A news/54.bugfix
M Products/CMFDiffTool/ListDiff.py
M Products/CMFDiffTool/tests/test_dexteritydiff.py

b'diff --git a/Products/CMFDiffTool/ListDiff.py b/Products/CMFDiffTool/ListDiff.py\nindex f041ebf..c36549f 100644\n--- a/Products/CMFDiffTool/ListDiff.py\n+++ b/Products/CMFDiffTool/ListDiff.py\n@@ -79,11 +79,11 @@ def _parseField(self, value, filename=None):\n         if filename is None:\n             # Since we only want to compare a single field, make a\n             # one-item list out of it\n-            return ["/".join(val.getPhysicalPath()) for val in value]\n+            return ["/".join(val.getPhysicalPath()) for val in value if val]\n         else:\n             return [\n                 self.filenameTitle(filename),\n-                ["/".join(val.getPhysicalPath()) for val in value],\n+                ["/".join(val.getPhysicalPath()) for val in value if val],\n             ]\n \n     def inline_diff(self):\ndiff --git a/Products/CMFDiffTool/tests/test_dexteritydiff.py b/Products/CMFDiffTool/tests/test_dexteritydiff.py\nindex 48b6ae6..9492ac4 100644\n--- a/Products/CMFDiffTool/tests/test_dexteritydiff.py\n+++ b/Products/CMFDiffTool/tests/test_dexteritydiff.py\n@@ -154,3 +154,50 @@ def test_should_provide_diff_for_related_fields(self):\n                 i_add = n_diff.index("+")\n                 i_obj2 = n_diff.index("obj2")\n                 self.assertTrue(i_rem < i_obj1 < i_add < i_obj2)\n+\n+    def test_dont_break_on_broken_relations(self):\n+        """Diff should still render when a relation is broken"""\n+        intids = getUtility(IIntIds)\n+\n+        self.portal.invokeFactory(\n+            testing.TEST_CONTENT_TYPE_ID,\n+            "obj1",\n+            title="Object 1",\n+            description="Desc 1",\n+            text="Text 1",\n+        )\n+        obj1 = self.portal["obj1"]\n+\n+        intid = intids.register(obj1)\n+        self.portal.invokeFactory(\n+            testing.TEST_CONTENT_TYPE_ID,\n+            "obj2",\n+            title="Object 2",\n+            relatedItems=[RelationValue(intid)],\n+        )\n+        obj2 = self.portal["obj2"]\n+\n+        intid = intids.register(obj2)\n+        self.portal.invokeFactory(\n+            testing.TEST_CONTENT_TYPE_ID,\n+            "obj3",\n+            title="Object 3",\n+            relatedItems=[RelationValue(intid)],\n+        )\n+        obj3 = self.portal["obj3"]\n+\n+        obj2.relatedItems[0].broken("broken")\n+        self.assertTrue(obj2.relatedItems[0].isBroken())\n+\n+        diffs = DexterityCompoundDiff(obj2, obj3, "any")\n+        for d in diffs:\n+            if d.field == "relatedItems":\n+                inline_diff = d.inline_diff()\n+                self.assertTrue(inline_diff)\n+                self.assertIn(\'<div class="diff_add">\', inline_diff)\n+                self.assertIn("Object 2", inline_diff)\n+\n+                n_diff = d.ndiff()\n+                self.assertTrue(n_diff)\n+                self.assertIn("+", n_diff)\n+                self.assertIn("obj2", n_diff)\ndiff --git a/news/54.bugfix b/news/54.bugfix\nnew file mode 100644\nindex 0000000..d50edd6\n--- /dev/null\n+++ b/news/54.bugfix\n@@ -0,0 +1,2 @@\n+Make sure diff still renders when a relationlist has broken relations\n+[pbauer]\n'

