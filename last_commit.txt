Repository: plone.api


Branch: refs/heads/master
Date: 2020-09-18T14:22:51+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.api/commit/0039a5b4f28a97fbf01566702305740ad4979035

Fixed test failures on Python 3 with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M docs/portal.rst
M src/plone/api/tests/test_portal.py

b"diff --git a/docs/portal.rst b/docs/portal.rst\nindex 5645a3d..cdc2d80 100644\n--- a/docs/portal.rst\n+++ b/docs/portal.rst\n@@ -218,8 +218,13 @@ To send an e-mail use :meth:`api.portal.send_email`:\n \n     self.assertEqual(len(mailhost.messages), 1)\n \n-    from email import message_from_string\n-    msg = message_from_string(mailhost.messages[0])\n+    try:\n+        # Python 3\n+        from email import message_from_bytes\n+    except ImportError:\n+        # Python 2\n+        from email import message_from_string as message_from_bytes\n+    msg = message_from_bytes(mailhost.messages[0])\n     self.assertEqual(msg['To'], 'bob@plone.org')\n     self.assertEqual(msg['From'], 'noreply@plone.org')\n     self.assertEqual(msg['Subject'], '=?utf-8?q?Trappist?=')\n@@ -256,7 +261,7 @@ Python's standard `email module <https://docs.python.org/2.7/library/email.messa\n \n     self.assertEqual(len(mailhost.messages), 2)\n \n-    msg = message_from_string(mailhost.messages[1])\n+    msg = message_from_bytes(mailhost.messages[1])\n     payloads = msg.get_payload()\n     self.assertEqual(len(payloads), 2)\n     self.assertEqual(msg['Reply-To'], 'community@plone.org')\ndiff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 0000000..e9fcedc\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fixed test failures on Python 3 with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 71b028f..2cde6f4 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -3,7 +3,6 @@\n \n from datetime import date\n from datetime import datetime\n-from email import message_from_string\n from pkg_resources import parse_version\n from plone.api import content\n from plone.api import env\n@@ -26,6 +25,13 @@\n import mock\n import unittest\n \n+try:\n+    # Python 3\n+    from email import message_from_bytes\n+except ImportError:\n+    # Python 2\n+    from email import message_from_string as message_from_bytes\n+\n \n HAS_PLONE5 = parse_version(env.plone_version()) >= parse_version('5.0b2')\n \n@@ -228,7 +234,7 @@ def test_send_email(self):\n         )\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['To'], 'bob@plone.org')\n         self.assertEqual(msg['From'], 'noreply@plone.org')\n         self.assertEqual(msg['Subject'], '=?utf-8?q?Trappist?=')\n@@ -243,7 +249,7 @@ def test_send_email(self):\n         )\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['From'], 'Portal Owner <sender@example.org>')\n \n     def test_send_email_without_configured_mailhost(self):\n@@ -302,7 +308,7 @@ def test_send_email_with_config_in_portal_properties(self):\n             body=u'One for you Bob!',\n         )\n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['From'], 'Properties <prop@example.org>')\n \n     @unittest.skipUnless(\n@@ -328,7 +334,7 @@ def test_send_email_with_config_in_registry(self):\n             body=u'One for you Bob!',\n         )\n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['From'], 'Registry <reg@example.org>')\n \n     def test_send_email_with_printingmailhost(self):\n"

Repository: plone.api


Branch: refs/heads/master
Date: 2020-09-18T15:16:08+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.api/commit/9574002b4d6ecd46863f027bb9c8f3efb7908ee6

Fixed isort

Files changed:
M src/plone/api/tests/test_portal.py

b'diff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 2cde6f4..3ea3cb8 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -25,6 +25,7 @@\n import mock\n import unittest\n \n+\n try:\n     # Python 3\n     from email import message_from_bytes\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2020-09-25T16:41:10+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.api/commit/3beb22ab1440b28a516948df053eefa15615b162

Merge pull request #443 from plone/mailhost-410

Fixed test failures on Python 3 with Products.MailHost 4.10.

Files changed:
A news/3178.bugfix
M docs/portal.rst
M src/plone/api/tests/test_portal.py

b"diff --git a/docs/portal.rst b/docs/portal.rst\nindex 5645a3d..cdc2d80 100644\n--- a/docs/portal.rst\n+++ b/docs/portal.rst\n@@ -218,8 +218,13 @@ To send an e-mail use :meth:`api.portal.send_email`:\n \n     self.assertEqual(len(mailhost.messages), 1)\n \n-    from email import message_from_string\n-    msg = message_from_string(mailhost.messages[0])\n+    try:\n+        # Python 3\n+        from email import message_from_bytes\n+    except ImportError:\n+        # Python 2\n+        from email import message_from_string as message_from_bytes\n+    msg = message_from_bytes(mailhost.messages[0])\n     self.assertEqual(msg['To'], 'bob@plone.org')\n     self.assertEqual(msg['From'], 'noreply@plone.org')\n     self.assertEqual(msg['Subject'], '=?utf-8?q?Trappist?=')\n@@ -256,7 +261,7 @@ Python's standard `email module <https://docs.python.org/2.7/library/email.messa\n \n     self.assertEqual(len(mailhost.messages), 2)\n \n-    msg = message_from_string(mailhost.messages[1])\n+    msg = message_from_bytes(mailhost.messages[1])\n     payloads = msg.get_payload()\n     self.assertEqual(len(payloads), 2)\n     self.assertEqual(msg['Reply-To'], 'community@plone.org')\ndiff --git a/news/3178.bugfix b/news/3178.bugfix\nnew file mode 100644\nindex 0000000..e9fcedc\n--- /dev/null\n+++ b/news/3178.bugfix\n@@ -0,0 +1,2 @@\n+Fixed test failures on Python 3 with Products.MailHost 4.10.\n+[maurits]\ndiff --git a/src/plone/api/tests/test_portal.py b/src/plone/api/tests/test_portal.py\nindex 71b028f..3ea3cb8 100644\n--- a/src/plone/api/tests/test_portal.py\n+++ b/src/plone/api/tests/test_portal.py\n@@ -3,7 +3,6 @@\n \n from datetime import date\n from datetime import datetime\n-from email import message_from_string\n from pkg_resources import parse_version\n from plone.api import content\n from plone.api import env\n@@ -27,6 +26,14 @@\n import unittest\n \n \n+try:\n+    # Python 3\n+    from email import message_from_bytes\n+except ImportError:\n+    # Python 2\n+    from email import message_from_string as message_from_bytes\n+\n+\n HAS_PLONE5 = parse_version(env.plone_version()) >= parse_version('5.0b2')\n \n \n@@ -228,7 +235,7 @@ def test_send_email(self):\n         )\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['To'], 'bob@plone.org')\n         self.assertEqual(msg['From'], 'noreply@plone.org')\n         self.assertEqual(msg['Subject'], '=?utf-8?q?Trappist?=')\n@@ -243,7 +250,7 @@ def test_send_email(self):\n         )\n \n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['From'], 'Portal Owner <sender@example.org>')\n \n     def test_send_email_without_configured_mailhost(self):\n@@ -302,7 +309,7 @@ def test_send_email_with_config_in_portal_properties(self):\n             body=u'One for you Bob!',\n         )\n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['From'], 'Properties <prop@example.org>')\n \n     @unittest.skipUnless(\n@@ -328,7 +335,7 @@ def test_send_email_with_config_in_registry(self):\n             body=u'One for you Bob!',\n         )\n         self.assertEqual(len(self.mailhost.messages), 1)\n-        msg = message_from_string(self.mailhost.messages[0])\n+        msg = message_from_bytes(self.mailhost.messages[0])\n         self.assertEqual(msg['From'], 'Registry <reg@example.org>')\n \n     def test_send_email_with_printingmailhost(self):\n"

