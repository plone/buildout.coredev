Repository: plone.api


Branch: refs/heads/master
Date: 2023-05-18T16:26:37+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/e967c538c8acee01a37a275d02842a718d0ba7c2

Create relation only if there is no existing one with same …

source, target, relationname.
But mark source as modified.

Files changed:
M src/plone/api/relation.py

b'diff --git a/src/plone/api/relation.py b/src/plone/api/relation.py\nindex 6879cca6..fe1103fa 100644\n--- a/src/plone/api/relation.py\n+++ b/src/plone/api/relation.py\n@@ -170,8 +170,9 @@ def create(source=None, target=None, relationship=None):\n         "from_id": from_id,\n         "to_id": to_id,\n     }\n+    has_relation = False\n     for rel in relation_catalog.findRelations(query):\n-        relation_catalog.unindex(rel)\n+        has_relation = True\n \n     if from_attribute == referencedRelationship:\n         # Don\'t mess with linkintegrity-relations!\n@@ -212,9 +213,10 @@ def create(source=None, target=None, relationship=None):\n             source.absolute_url(),\n             target.absolute_url(),\n         )\n-        existing_relations = getattr(source, from_attribute, [])\n-        existing_relations.append(RelationValue(to_id))\n-        setattr(source, from_attribute, existing_relations)\n+        if not has_relation:\n+            existing_relations = getattr(source, from_attribute, [])\n+            existing_relations.append(RelationValue(to_id))\n+            setattr(source, from_attribute, existing_relations)\n         modified(source)\n         return\n \n@@ -225,7 +227,8 @@ def create(source=None, target=None, relationship=None):\n             source.absolute_url(),\n             target.absolute_url(),\n         )\n-        setattr(source, from_attribute, RelationValue(to_id))\n+        if not has_relation:\n+            setattr(source, from_attribute, RelationValue(to_id))\n         modified(source)\n         return\n \n'

Repository: plone.api


Branch: refs/heads/master
Date: 2023-05-18T16:37:54+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/028cc3c2f4da68ad0169f1a947e153cd85cd405b

Create 507.bugfix

Files changed:
A news/507.bugfix

b'diff --git a/news/507.bugfix b/news/507.bugfix\nnew file mode 100644\nindex 00000000..11f258e4\n--- /dev/null\n+++ b/news/507.bugfix\n@@ -0,0 +1,2 @@\n+Create relation only if there is no existing one with same source, target, relationname.\n+But mark source as modified. @ksuess\n\\ No newline at end of file\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2023-05-18T16:58:47+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/89f68acc6a4e7620239fccf9870c738a3906c60e

Check for existing relations of same attributes

Files changed:
M src/plone/api/relation.py

b'diff --git a/src/plone/api/relation.py b/src/plone/api/relation.py\nindex fe1103fa..67ff0d7b 100644\n--- a/src/plone/api/relation.py\n+++ b/src/plone/api/relation.py\n@@ -170,9 +170,8 @@ def create(source=None, target=None, relationship=None):\n         "from_id": from_id,\n         "to_id": to_id,\n     }\n-    has_relation = False\n-    for rel in relation_catalog.findRelations(query):\n-        has_relation = True\n+    has_relation = False if (\n+        len([el for el in relation_catalog.findRelations(query)]) == 0) else True\n \n     if from_attribute == referencedRelationship:\n         # Don\'t mess with linkintegrity-relations!\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2023-05-18T17:03:10+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/13da2f3c7262ae2f75f2ea0a71df3f85b787fa17

Update relation.py

Files changed:
M src/plone/api/relation.py

b'diff --git a/src/plone/api/relation.py b/src/plone/api/relation.py\nindex 67ff0d7b..4af287cb 100644\n--- a/src/plone/api/relation.py\n+++ b/src/plone/api/relation.py\n@@ -170,8 +170,11 @@ def create(source=None, target=None, relationship=None):\n         "from_id": from_id,\n         "to_id": to_id,\n     }\n-    has_relation = False if (\n-        len([el for el in relation_catalog.findRelations(query)]) == 0) else True\n+    has_relation = (\n+        False\n+        if (len([el for el in relation_catalog.findRelations(query)]) == 0)\n+        else True\n+    )\n \n     if from_attribute == referencedRelationship:\n         # Don\'t mess with linkintegrity-relations!\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2023-05-20T10:07:10+02:00
Author: Katja Süss (ksuess) <k.suess@rohberg.ch>
Commit: https://github.com/plone/plone.api/commit/d9bf91d36f66ac8315b89077077744d810d5b582

Mark source as modified only if relation is created…

do not mark as modified if relation already exists

Files changed:
M src/plone/api/relation.py

b'diff --git a/src/plone/api/relation.py b/src/plone/api/relation.py\nindex 4af287cb..60df78ef 100644\n--- a/src/plone/api/relation.py\n+++ b/src/plone/api/relation.py\n@@ -219,7 +219,7 @@ def create(source=None, target=None, relationship=None):\n             existing_relations = getattr(source, from_attribute, [])\n             existing_relations.append(RelationValue(to_id))\n             setattr(source, from_attribute, existing_relations)\n-        modified(source)\n+            modified(source)\n         return\n \n     elif isinstance(field, (Relation, RelationChoice)):\n@@ -231,7 +231,7 @@ def create(source=None, target=None, relationship=None):\n         )\n         if not has_relation:\n             setattr(source, from_attribute, RelationValue(to_id))\n-        modified(source)\n+            modified(source)\n         return\n \n     # If we end up here, someone is making a relationship that\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2023-05-20T14:10:12+02:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.api/commit/634bc95e3af9364c723927b88b0e5626ae9793ba

Merge pull request #507 from plone/create-relation

Files changed:
A news/507.bugfix
M src/plone/api/relation.py

b'diff --git a/news/507.bugfix b/news/507.bugfix\nnew file mode 100644\nindex 00000000..11f258e4\n--- /dev/null\n+++ b/news/507.bugfix\n@@ -0,0 +1,2 @@\n+Create relation only if there is no existing one with same source, target, relationname.\n+But mark source as modified. @ksuess\n\\ No newline at end of file\ndiff --git a/src/plone/api/relation.py b/src/plone/api/relation.py\nindex 6879cca6..60df78ef 100644\n--- a/src/plone/api/relation.py\n+++ b/src/plone/api/relation.py\n@@ -170,8 +170,11 @@ def create(source=None, target=None, relationship=None):\n         "from_id": from_id,\n         "to_id": to_id,\n     }\n-    for rel in relation_catalog.findRelations(query):\n-        relation_catalog.unindex(rel)\n+    has_relation = (\n+        False\n+        if (len([el for el in relation_catalog.findRelations(query)]) == 0)\n+        else True\n+    )\n \n     if from_attribute == referencedRelationship:\n         # Don\'t mess with linkintegrity-relations!\n@@ -212,10 +215,11 @@ def create(source=None, target=None, relationship=None):\n             source.absolute_url(),\n             target.absolute_url(),\n         )\n-        existing_relations = getattr(source, from_attribute, [])\n-        existing_relations.append(RelationValue(to_id))\n-        setattr(source, from_attribute, existing_relations)\n-        modified(source)\n+        if not has_relation:\n+            existing_relations = getattr(source, from_attribute, [])\n+            existing_relations.append(RelationValue(to_id))\n+            setattr(source, from_attribute, existing_relations)\n+            modified(source)\n         return\n \n     elif isinstance(field, (Relation, RelationChoice)):\n@@ -225,8 +229,9 @@ def create(source=None, target=None, relationship=None):\n             source.absolute_url(),\n             target.absolute_url(),\n         )\n-        setattr(source, from_attribute, RelationValue(to_id))\n-        modified(source)\n+        if not has_relation:\n+            setattr(source, from_attribute, RelationValue(to_id))\n+            modified(source)\n         return\n \n     # If we end up here, someone is making a relationship that\n'

