Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T16:02:04+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/0cf2931e0caf17ef1342f8f928dc7d0f0d52d4ef

Remove unicode control characters from TextareaWidget value

Files changed:
M plone/app/z3cform/utils.py
M plone/app/z3cform/widgets/patterns.py

b'diff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex ecc7a4f..9bfe136 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -181,3 +181,13 @@ def get_context_url(context):\n     else:\n         url = get_portal_url(context)\n     return url\n+\n+\n+def remove_invalid_xml_characters(txt):\n+    # remove occurrences of the unicode "control characters"\n+    # as they are invalid XML characters\n+    # see https://en.wikipedia.org/wiki/Valid_characters_in_XML and\n+    # https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n+    #\n+    invalid_keys = dict.fromkeys(range(32))\n+    return txt.translate(invalid_keys)\ndiff --git a/plone/app/z3cform/widgets/patterns.py b/plone/app/z3cform/widgets/patterns.py\nindex 7bcf8dd..38bb8e6 100644\n--- a/plone/app/z3cform/widgets/patterns.py\n+++ b/plone/app/z3cform/widgets/patterns.py\n@@ -1,4 +1,5 @@\n from lxml import etree\n+from plone.app.z3cform.utils import remove_invalid_xml_characters\n \n import collections\n import json\n@@ -329,7 +330,7 @@ def _set_value(self, value):\n         :param value: Set value of element.\n         :type value: string\n         """\n-        self.el.text = value\n+        self.el.text = remove_invalid_xml_characters(value)\n \n     def _del_value(self):\n         """Set empty string as value of element."""\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T16:29:54+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/c1e767e7146c059237e1eed07cb3c064b6cb9c3e

add tests

better readable test

Files changed:
M plone/app/z3cform/tests/test_utils.py
M plone/app/z3cform/tests/test_widgets.py

b'diff --git a/plone/app/z3cform/tests/test_utils.py b/plone/app/z3cform/tests/test_utils.py\nindex 70420a6..3f6212d 100644\n--- a/plone/app/z3cform/tests/test_utils.py\n+++ b/plone/app/z3cform/tests/test_utils.py\n@@ -151,3 +151,11 @@ def test_is_same_domain(self):\n                 "http://plone.org",\n             )\n         )\n+\n+    def test_unicode_control_character_removal(self):\n+        from plone.app.z3cform.utils import remove_invalid_xml_characters\n+        for x in range(32):\n+            if x in (9, 10, 13):\n+                self.assertTrue(remove_invalid_xml_characters(chr(x)) == chr(x))\n+            else:\n+                self.assertTrue(remove_invalid_xml_characters(chr(x)) == "")\ndiff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex 9980de7..ea69647 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -1700,6 +1700,24 @@ def test_widget_values(self):\n         base_args = widget._base_args()\n         self.assertEqual(base_args["value"], "Lorem ipsum \\u2026")\n \n+    def test_unicode_control_characters_value(self):\n+        # lxml doesn\'t allow unicode control characters.\n+        # see\n+        from plone.app.textfield.value import RichTextValue\n+        from plone.app.z3cform.widgets.richtext import RichTextWidget\n+\n+        widget = FieldWidget(self.field, RichTextWidget(self.request))\n+        # set the context so we can get tinymce settings\n+        widget.context = self.portal\n+        widget.value = RichTextValue(\n+            "Lorem \\u0000 ip\\u001Fsum \\n\\u0002 dolorem \\uF600"\n+        )\n+        widget.mode = "input"\n+        self.assertIn(\n+            ">Lorem  ipsum  dolorem \\uF600</textarea>",\n+            widget.render(),\n+        )\n+\n     def _set_mimetypes(self, default="text/html", allowed=("text/html")):\n         """Set portal\'s mimetype settings."""\n         if IMarkupSchema:\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T16:30:17+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/3bd9e9d244f3c2c6536298d76261ec67b3455c19

exception for allowed control chars

Files changed:
M plone/app/z3cform/tests/test_utils.py
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/utils.py

b'diff --git a/plone/app/z3cform/tests/test_utils.py b/plone/app/z3cform/tests/test_utils.py\nindex 3f6212d..d4879cf 100644\n--- a/plone/app/z3cform/tests/test_utils.py\n+++ b/plone/app/z3cform/tests/test_utils.py\n@@ -154,6 +154,7 @@ def test_is_same_domain(self):\n \n     def test_unicode_control_character_removal(self):\n         from plone.app.z3cform.utils import remove_invalid_xml_characters\n+\n         for x in range(32):\n             if x in (9, 10, 13):\n                 self.assertTrue(remove_invalid_xml_characters(chr(x)) == chr(x))\ndiff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex ea69647..d487bea 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -1709,12 +1709,10 @@ def test_unicode_control_characters_value(self):\n         widget = FieldWidget(self.field, RichTextWidget(self.request))\n         # set the context so we can get tinymce settings\n         widget.context = self.portal\n-        widget.value = RichTextValue(\n-            "Lorem \\u0000 ip\\u001Fsum \\n\\u0002 dolorem \\uF600"\n-        )\n+        widget.value = RichTextValue("Lorem \\u0000 ip\\u001Fsum\\n\\u0002 dolorem\\r\\t")\n         widget.mode = "input"\n         self.assertIn(\n-            ">Lorem  ipsum  dolorem \\uF600</textarea>",\n+            ">Lorem  ipsum\\n dolorem&#13;\\t</textarea>",\n             widget.render(),\n         )\n \ndiff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex 9bfe136..f2174c1 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -188,6 +188,10 @@ def remove_invalid_xml_characters(txt):\n     # as they are invalid XML characters\n     # see https://en.wikipedia.org/wiki/Valid_characters_in_XML and\n     # https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n-    #\n-    invalid_keys = dict.fromkeys(range(32))\n+    # NOTE: these control characters are allowed:\n+    # chr(9) = "\\t"\n+    # chr(10) = "\\n"\n+    # chr(13) = "\\r"\n+\n+    invalid_keys = dict.fromkeys([x for x in range(32) if x not in (9, 10, 13)])\n     return txt.translate(invalid_keys)\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T16:30:17+02:00
Author: Peter Mathis (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/3f3e0227c76a408eccea4b57bc6443cdc7c8246c

changenote

Files changed:
A news/167.bugfix

b'diff --git a/news/167.bugfix b/news/167.bugfix\nnew file mode 100644\nindex 0000000..d8b89c8\n--- /dev/null\n+++ b/news/167.bugfix\n@@ -0,0 +1,2 @@\n+Remove invalid unicode control characters for `TextareaWidget`\n+[petschki]\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T21:30:38+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/8791e10da1614ba9c2344731544760042ec209be

optimize charmap calculation

Files changed:
M plone/app/z3cform/utils.py

b'diff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex f2174c1..4c89a3d 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -182,16 +182,18 @@ def get_context_url(context):\n         url = get_portal_url(context)\n     return url\n \n+# Invalid XML unicode control characters\n+# NOTE: these control characters are allowed:\n+# chr(9) = "\\t"\n+# chr(10) = "\\n"\n+# chr(13) = "\\r"\n+\n+unicode_ctl_chr_map = dict.fromkeys([x for x in range(32) if x not in (9, 10, 13)])\n+\n \n def remove_invalid_xml_characters(txt):\n     # remove occurrences of the unicode "control characters"\n     # as they are invalid XML characters\n     # see https://en.wikipedia.org/wiki/Valid_characters_in_XML and\n     # https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n-    # NOTE: these control characters are allowed:\n-    # chr(9) = "\\t"\n-    # chr(10) = "\\n"\n-    # chr(13) = "\\r"\n-\n-    invalid_keys = dict.fromkeys([x for x in range(32) if x not in (9, 10, 13)])\n-    return txt.translate(invalid_keys)\n+    return txt.translate(unicode_ctl_chr_map)\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T21:43:17+02:00
Author: petschki (petschki) <peter.mathis@kombinat.at>
Commit: https://github.com/plone/plone.app.z3cform/commit/3731491bc3ae93cf401c6d42b001b25976efc516

black

Files changed:
M plone/app/z3cform/utils.py

b'diff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex 4c89a3d..e1b6305 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -182,6 +182,7 @@ def get_context_url(context):\n         url = get_portal_url(context)\n     return url\n \n+\n # Invalid XML unicode control characters\n # NOTE: these control characters are allowed:\n # chr(9) = "\\t"\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T21:48:24+02:00
Author: Peter Mathis (petschki) <petschki@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/32a4d768da7ef143f6852e29aca3b474c9b42b69

private const

Files changed:
M plone/app/z3cform/utils.py

b'diff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex e1b6305..886ce9b 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -189,7 +189,7 @@ def get_context_url(context):\n # chr(10) = "\\n"\n # chr(13) = "\\r"\n \n-unicode_ctl_chr_map = dict.fromkeys([x for x in range(32) if x not in (9, 10, 13)])\n+_unicode_ctl_chr_map = dict.fromkeys([x for x in range(32) if x not in (9, 10, 13)])\n \n \n def remove_invalid_xml_characters(txt):\n@@ -197,4 +197,4 @@ def remove_invalid_xml_characters(txt):\n     # as they are invalid XML characters\n     # see https://en.wikipedia.org/wiki/Valid_characters_in_XML and\n     # https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n-    return txt.translate(unicode_ctl_chr_map)\n+    return txt.translate(_unicode_ctl_chr_map)\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2023-05-22T23:05:10+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.z3cform/commit/2dd99f729a3c64c8d0393b8faae76d0e72c7f51e

Merge pull request #167 from plone/petschki-unicode-control-character

Remove invalid "unicode control characters" for `TextareaWidget` value

Files changed:
A news/167.bugfix
M plone/app/z3cform/tests/test_utils.py
M plone/app/z3cform/tests/test_widgets.py
M plone/app/z3cform/utils.py
M plone/app/z3cform/widgets/patterns.py

b'diff --git a/news/167.bugfix b/news/167.bugfix\nnew file mode 100644\nindex 0000000..d8b89c8\n--- /dev/null\n+++ b/news/167.bugfix\n@@ -0,0 +1,2 @@\n+Remove invalid unicode control characters for `TextareaWidget`\n+[petschki]\ndiff --git a/plone/app/z3cform/tests/test_utils.py b/plone/app/z3cform/tests/test_utils.py\nindex 70420a6..d4879cf 100644\n--- a/plone/app/z3cform/tests/test_utils.py\n+++ b/plone/app/z3cform/tests/test_utils.py\n@@ -151,3 +151,12 @@ def test_is_same_domain(self):\n                 "http://plone.org",\n             )\n         )\n+\n+    def test_unicode_control_character_removal(self):\n+        from plone.app.z3cform.utils import remove_invalid_xml_characters\n+\n+        for x in range(32):\n+            if x in (9, 10, 13):\n+                self.assertTrue(remove_invalid_xml_characters(chr(x)) == chr(x))\n+            else:\n+                self.assertTrue(remove_invalid_xml_characters(chr(x)) == "")\ndiff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex 9980de7..d487bea 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -1700,6 +1700,22 @@ def test_widget_values(self):\n         base_args = widget._base_args()\n         self.assertEqual(base_args["value"], "Lorem ipsum \\u2026")\n \n+    def test_unicode_control_characters_value(self):\n+        # lxml doesn\'t allow unicode control characters.\n+        # see\n+        from plone.app.textfield.value import RichTextValue\n+        from plone.app.z3cform.widgets.richtext import RichTextWidget\n+\n+        widget = FieldWidget(self.field, RichTextWidget(self.request))\n+        # set the context so we can get tinymce settings\n+        widget.context = self.portal\n+        widget.value = RichTextValue("Lorem \\u0000 ip\\u001Fsum\\n\\u0002 dolorem\\r\\t")\n+        widget.mode = "input"\n+        self.assertIn(\n+            ">Lorem  ipsum\\n dolorem&#13;\\t</textarea>",\n+            widget.render(),\n+        )\n+\n     def _set_mimetypes(self, default="text/html", allowed=("text/html")):\n         """Set portal\'s mimetype settings."""\n         if IMarkupSchema:\ndiff --git a/plone/app/z3cform/utils.py b/plone/app/z3cform/utils.py\nindex ecc7a4f..886ce9b 100644\n--- a/plone/app/z3cform/utils.py\n+++ b/plone/app/z3cform/utils.py\n@@ -181,3 +181,20 @@ def get_context_url(context):\n     else:\n         url = get_portal_url(context)\n     return url\n+\n+\n+# Invalid XML unicode control characters\n+# NOTE: these control characters are allowed:\n+# chr(9) = "\\t"\n+# chr(10) = "\\n"\n+# chr(13) = "\\r"\n+\n+_unicode_ctl_chr_map = dict.fromkeys([x for x in range(32) if x not in (9, 10, 13)])\n+\n+\n+def remove_invalid_xml_characters(txt):\n+    # remove occurrences of the unicode "control characters"\n+    # as they are invalid XML characters\n+    # see https://en.wikipedia.org/wiki/Valid_characters_in_XML and\n+    # https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n+    return txt.translate(_unicode_ctl_chr_map)\ndiff --git a/plone/app/z3cform/widgets/patterns.py b/plone/app/z3cform/widgets/patterns.py\nindex 7bcf8dd..38bb8e6 100644\n--- a/plone/app/z3cform/widgets/patterns.py\n+++ b/plone/app/z3cform/widgets/patterns.py\n@@ -1,4 +1,5 @@\n from lxml import etree\n+from plone.app.z3cform.utils import remove_invalid_xml_characters\n \n import collections\n import json\n@@ -329,7 +330,7 @@ def _set_value(self, value):\n         :param value: Set value of element.\n         :type value: string\n         """\n-        self.el.text = value\n+        self.el.text = remove_invalid_xml_characters(value)\n \n     def _del_value(self):\n         """Set empty string as value of element."""\n'

