Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-04-30T06:13:59+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/42ab6bc96f17f263244de329acac969e08e08b0c

Preparing release 7.3.4

Files changed:
M CHANGES.rst
M setup.py
D news/1113.bugfix

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex 9dc1facc6..a3d610db2 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,16 @@ Changelog\n \n .. towncrier release notes start\n \n+7.3.4 (2021-04-30)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- Fix ``@history`` when full history is empty.\n+  [deiferni] (#1113)\n+\n+\n 7.3.3 (2021-04-29)\n ------------------\n \ndiff --git a/news/1113.bugfix b/news/1113.bugfix\ndeleted file mode 100644\nindex 9e0342db8..000000000\n--- a/news/1113.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix ``@history`` when full history is empty.\n-[deiferni]\ndiff --git a/setup.py b/setup.py\nindex 42330d070..4e8eedc9f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,6 +1,6 @@\n from setuptools import setup, find_packages\n \n-version = "7.3.4.dev0"\n+version = "7.3.4"\n \n \n def read(filename):\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-05-03T21:37:38+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/09d90689de33babee01fe442f5f0078bffef5b30

Merge branch 'master' of github.com:plone/plone.restapi

Files changed:
A news/999.bugfix
A src/plone/restapi/profiles/testing-workflows/workflows.xml
A src/plone/restapi/profiles/testing-workflows/workflows/restriction_workflow/definition.xml
A src/plone/restapi/services/workflow/utils.py
M src/plone/restapi/configure.zcml
M src/plone/restapi/services/workflow/transition.py
M src/plone/restapi/setuphandlers.py
M src/plone/restapi/testing.py
M src/plone/restapi/tests/test_workflow.py
D src/plone/restapi/profiles/testing/workflows.xml

b'diff --git a/news/999.bugfix b/news/999.bugfix\nnew file mode 100644\nindex 000000000..fa9210157\n--- /dev/null\n+++ b/news/999.bugfix\n@@ -0,0 +1,2 @@\n+Fix ``@workflow`` when executing user has no permissions to access ``review_history`` in target state.\n+[deiferni]\ndiff --git a/src/plone/restapi/configure.zcml b/src/plone/restapi/configure.zcml\nindex ae4a931da..5bf67e96a 100644\n--- a/src/plone/restapi/configure.zcml\n+++ b/src/plone/restapi/configure.zcml\n@@ -38,6 +38,15 @@\n       for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n       />\n \n+  <genericsetup:registerProfile\n+      name="testing-workflows"\n+      title="plone.restapi testing-workflows"\n+      directory="profiles/testing-workflows"\n+      description="Adds sample workflows for testing"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="Products.CMFPlone.interfaces.ITestCasePloneSiteRoot"\n+      />\n+\n   <genericsetup:registerProfile\n       name="performance"\n       title="plone.restapi performance testing"\ndiff --git a/src/plone/restapi/profiles/testing/workflows.xml b/src/plone/restapi/profiles/testing-workflows/workflows.xml\nsimilarity index 88%\nrename from src/plone/restapi/profiles/testing/workflows.xml\nrename to src/plone/restapi/profiles/testing-workflows/workflows.xml\nindex c96956112..1b117824a 100644\n--- a/src/plone/restapi/profiles/testing/workflows.xml\n+++ b/src/plone/restapi/profiles/testing-workflows/workflows.xml\n@@ -1,5 +1,6 @@\n <?xml version="1.0"?>\n <object name="portal_workflow" meta_type="Plone Workflow Tool">\n+ <object name="restriction_workflow" meta_type="Workflow"/>\n  <bindings>\n    <type type_id="DXTestDocument">\n      <bound-workflow workflow_id="simple_publication_workflow" />\ndiff --git a/src/plone/restapi/profiles/testing-workflows/workflows/restriction_workflow/definition.xml b/src/plone/restapi/profiles/testing-workflows/workflows/restriction_workflow/definition.xml\nnew file mode 100644\nindex 000000000..14b7db7ae\n--- /dev/null\n+++ b/src/plone/restapi/profiles/testing-workflows/workflows/restriction_workflow/definition.xml\n@@ -0,0 +1,108 @@\n+<?xml version="1.0" encoding="UTF-8"?>\n+<dc-workflow workflow_id="restriction_workflow" title="Workflow for testing" description=" - Workflow that cover some special cases for testing. - Has two states: Visible and Restricted." state_variable="review_state" initial_state="unrestricted" manager_bypass="False">\n+ <permission>Access contents information</permission>\n+ <permission>Modify portal content</permission>\n+ <permission>View</permission>\n+ <state state_id="restricted" title="Restricted">\n+  <description>Restricted for Admins.</description>\n+  <exit-transition transition_id="show"/>\n+  <permission-map name="Access contents information" acquired="False">\n+   <permission-role>Manager</permission-role>\n+   <permission-role>Site Administrator</permission-role>\n+  </permission-map>\n+  <permission-map name="Modify portal content" acquired="False">\n+   <permission-role>Manager</permission-role>\n+   <permission-role>Site Administrator</permission-role>\n+  </permission-map>\n+  <permission-map name="View" acquired="False">\n+   <permission-role>Manager</permission-role>\n+   <permission-role>Site Administrator</permission-role>\n+  </permission-map>\n+ </state>\n+ <state state_id="unrestricted" title="Unrestricted">\n+  <description>Unrestricted visibility.</description>\n+  <exit-transition transition_id="restrict"/>\n+  <permission-map name="Access contents information" acquired="False">\n+   <permission-role>Manager</permission-role>\n+   <permission-role>Owner</permission-role>\n+   <permission-role>Editor</permission-role>\n+   <permission-role>Reader</permission-role>\n+   <permission-role>Contributor</permission-role>\n+   <permission-role>Member</permission-role>\n+   <permission-role>Site Administrator</permission-role>\n+  </permission-map>\n+  <permission-map name="Modify portal content" acquired="False">\n+   <permission-role>Manager</permission-role>\n+   <permission-role>Owner</permission-role>\n+   <permission-role>Editor</permission-role>\n+   <permission-role>Site Administrator</permission-role>\n+  </permission-map>\n+  <permission-map name="View" acquired="False">\n+   <permission-role>Manager</permission-role>\n+   <permission-role>Owner</permission-role>\n+   <permission-role>Editor</permission-role>\n+   <permission-role>Reader</permission-role>\n+   <permission-role>Contributor</permission-role>\n+   <permission-role>Member</permission-role>\n+   <permission-role>Site Administrator</permission-role>\n+  </permission-map>\n+ </state>\n+ <transition transition_id="restrict" title="Restrict visibility" new_state="restricted" trigger="USER" before_script="" after_script="">\n+  <action url="%(content_url)s/content_status_modify?workflow_action=restrict" category="workflow" icon="">Restrict</action>\n+  <guard>\n+   <guard-permission>Modify portal content</guard-permission>\n+  </guard>\n+ </transition>\n+ <transition transition_id="show" title="Show content" new_state="unrestricted" trigger="USER" before_script="" after_script="">\n+  <action url="%(content_url)s/content_status_modify?workflow_action=show" category="workflow" icon="">Show</action>\n+  <guard>\n+   <guard-permission>Modify portal content</guard-permission>\n+  </guard>\n+ </transition>\n+ <variable variable_id="action" for_catalog="False" for_status="True" update_always="True">\n+  <description>Previous transition</description>\n+  <default>\n+\n+   <expression>transition/getId|nothing</expression>\n+  </default>\n+  <guard>\n+  </guard>\n+ </variable>\n+ <variable variable_id="actor" for_catalog="False" for_status="True" update_always="True">\n+  <description>The ID of the user who performed the last transition</description>\n+  <default>\n+\n+   <expression>user/getId</expression>\n+  </default>\n+  <guard>\n+  </guard>\n+ </variable>\n+ <variable variable_id="comments" for_catalog="False" for_status="True" update_always="True">\n+  <description>Comment about the last transition</description>\n+  <default>\n+\n+   <expression>python:state_change.kwargs.get(\'comment\', \'\')</expression>\n+  </default>\n+  <guard>\n+  </guard>\n+ </variable>\n+ <variable variable_id="review_history" for_catalog="False" for_status="False" update_always="False">\n+  <description>Provides access to workflow history</description>\n+  <default>\n+\n+   <expression>state_change/getHistory</expression>\n+  </default>\n+  <guard>\n+   <guard-permission>View</guard-permission>\n+  </guard>\n+ </variable>\n+ <variable variable_id="time" for_catalog="False" for_status="True" update_always="True">\n+  <description>When the previous transition was performed</description>\n+  <default>\n+\n+   <expression>state_change/getDateTime</expression>\n+  </default>\n+  <guard>\n+  </guard>\n+ </variable>\n+</dc-workflow>\ndiff --git a/src/plone/restapi/services/workflow/transition.py b/src/plone/restapi/services/workflow/transition.py\nindex a830a63d6..99d576e57 100644\n--- a/src/plone/restapi/services/workflow/transition.py\n+++ b/src/plone/restapi/services/workflow/transition.py\n@@ -5,6 +5,7 @@\n from plone.restapi.interfaces import IDeserializeFromJson\n from plone.restapi.serializer.converters import json_compatible\n from plone.restapi.services import Service\n+from plone.restapi.services.workflow.utils import elevated_privileges\n from Products.CMFCore.interfaces import IFolderish\n from Products.CMFCore.utils import getToolByName\n from Products.CMFCore.WorkflowCore import WorkflowException\n@@ -77,20 +78,30 @@ def reply(self):\n             self.request.response.setStatus(400)\n             return dict(error=dict(type="Bad Request", message=str(e)))\n \n-        history = self.wftool.getInfoFor(self.context, "review_history")\n-        action = history[-1]\n-        if six.PY2:\n-            action["title"] = self.context.translate(\n-                self.wftool.getTitleForStateOnType(\n-                    action["review_state"], self.context.portal_type\n-                ).decode("utf8")\n-            )\n-        else:\n-            action["title"] = self.context.translate(\n-                self.wftool.getTitleForStateOnType(\n-                    action["review_state"], self.context.portal_type\n+        with elevated_privileges(self.context):\n+            try:\n+                history = self.wftool.getInfoFor(self.context, "review_history")\n+                action = history[-1]\n+                if six.PY2:\n+                    action["title"] = self.context.translate(\n+                        self.wftool.getTitleForStateOnType(\n+                            action["review_state"], self.context.portal_type\n+                        ).decode("utf8")\n+                    )\n+                else:\n+                    action["title"] = self.context.translate(\n+                        self.wftool.getTitleForStateOnType(\n+                            action["review_state"], self.context.portal_type\n+                        )\n+                    )\n+            except WorkflowException as e:\n+                self.request.response.setStatus(400)\n+                action = dict(\n+                    error=dict(\n+                        type="WorkflowException",\n+                        message=translate(str(e), context=self.request),\n+                    )\n                 )\n-            )\n \n         return json_compatible(action)\n \ndiff --git a/src/plone/restapi/services/workflow/utils.py b/src/plone/restapi/services/workflow/utils.py\nnew file mode 100644\nindex 000000000..b9bebcbab\n--- /dev/null\n+++ b/src/plone/restapi/services/workflow/utils.py\n@@ -0,0 +1,38 @@\n+# -*- coding: utf-8 -*-\n+\n+from AccessControl.SecurityManagement import getSecurityManager\n+from AccessControl.SecurityManagement import newSecurityManager\n+from AccessControl.SecurityManagement import setSecurityManager\n+from AccessControl.User import UnrestrictedUser as BaseUnrestrictedUser\n+from contextlib import contextmanager\n+from zope.component import getMultiAdapter\n+\n+\n+class UnrestrictedUser(BaseUnrestrictedUser):\n+    """Unrestricted user that still has an id."""\n+\n+    def getId(self):\n+        """Return the ID of the user."""\n+        return self.getUserName()\n+\n+\n+@contextmanager\n+def elevated_privileges(context):\n+    """Temporarily elevate current user\'s privileges.\n+\n+    See http://docs.plone.org/develop/plone/security/permissions.html\n+    for more documentation on this code.\n+\n+    """\n+    sm = getSecurityManager()\n+    try:\n+        portal = getMultiAdapter(\n+            (context, context.REQUEST), name="plone_portal_state"\n+        ).portal()\n+        tmp_user = UnrestrictedUser(sm.getUser().getId(), "", ("manage", "Manager"), "")\n+        tmp_user = tmp_user.__of__(portal.acl_users)\n+        newSecurityManager(None, tmp_user)\n+\n+        yield\n+    finally:\n+        setSecurityManager(sm)\ndiff --git a/src/plone/restapi/setuphandlers.py b/src/plone/restapi/setuphandlers.py\nindex d25b3669d..03e8316c8 100644\n--- a/src/plone/restapi/setuphandlers.py\n+++ b/src/plone/restapi/setuphandlers.py\n@@ -15,9 +15,10 @@ class HiddenProfiles(object):\n     def getNonInstallableProfiles(self):  # pragma: no cover\n         """Do not show on Plone\'s list of installable profiles."""\n         return [\n+            u"plone.restapi:blocks",\n             u"plone.restapi:performance",\n             u"plone.restapi:testing",\n-            u"plone.restapi:blocks",\n+            u"plone.restapi:testing-workflows",\n             u"plone.restapi:uninstall",\n         ]\n \ndiff --git a/src/plone/restapi/testing.py b/src/plone/restapi/testing.py\nindex 82e71fade..9e35799b8 100644\n--- a/src/plone/restapi/testing.py\n+++ b/src/plone/restapi/testing.py\n@@ -200,6 +200,21 @@ def setUpPloneSite(self, portal):\n )\n \n \n+class PloneRestApiTestWorkflowsLayer(PloneSandboxLayer):\n+\n+    defaultBases = (PLONE_RESTAPI_DX_FIXTURE,)\n+\n+    def setUpPloneSite(self, portal):\n+        applyProfile(portal, "plone.restapi:testing-workflows")\n+\n+\n+PLONE_RESTAPI_WORKFLOWS_FIXTURE = PloneRestApiTestWorkflowsLayer()\n+PLONE_RESTAPI_WORKFLOWS_INTEGRATION_TESTING = IntegrationTesting(\n+    bases=(PLONE_RESTAPI_WORKFLOWS_FIXTURE,),\n+    name="PloneRestApiTestWorkflowsLayer:Integration",\n+)\n+\n+\n class PloneRestApiDXPAMLayer(PloneSandboxLayer):\n \n     defaultBases = (DATE_TIME_FIXTURE, PLONE_APP_CONTENTTYPES_FIXTURE)\ndiff --git a/src/plone/restapi/tests/test_workflow.py b/src/plone/restapi/tests/test_workflow.py\nindex 1e3c79e56..aa40b9629 100644\n--- a/src/plone/restapi/tests/test_workflow.py\n+++ b/src/plone/restapi/tests/test_workflow.py\n@@ -7,8 +7,9 @@\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.restapi.interfaces import ISerializeToJson\n-from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+from plone.restapi.testing import PLONE_RESTAPI_WORKFLOWS_INTEGRATION_TESTING\n from Products.CMFCore.utils import getToolByName\n from unittest import TestCase\n from zExceptions import NotFound\n@@ -19,7 +20,7 @@\n \n class TestWorkflowInfo(TestCase):\n \n-    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+    layer = PLONE_RESTAPI_WORKFLOWS_INTEGRATION_TESTING\n \n     def setUp(self):\n         self.portal = self.layer["portal"]\n@@ -99,7 +100,7 @@ def test_workflow_info_empty_on_siteroot(self):\n \n class TestWorkflowTransition(TestCase):\n \n-    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+    layer = PLONE_RESTAPI_WORKFLOWS_INTEGRATION_TESTING\n \n     def setUp(self):\n         self.portal = self.layer["portal"]\n@@ -108,13 +109,16 @@ def setUp(self):\n         login(self.portal, SITE_OWNER_NAME)\n         self.portal.invokeFactory("Document", id="doc1")\n \n-    def traverse(self, path="/plone", accept="application/json", method="POST"):\n+    def traverse(\n+        self, path="/plone", accept="application/json", method="POST", auth=None\n+    ):\n         request = self.layer["request"]\n         request.environ["PATH_INFO"] = path\n         request.environ["PATH_TRANSLATED"] = path\n         request.environ["HTTP_ACCEPT"] = accept\n         request.environ["REQUEST_METHOD"] = method\n-        auth = "%s:%s" % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n+        if auth is None:\n+            auth = "%s:%s" % (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n         request._auth = "Basic %s" % b64encode(auth.encode("utf8")).decode("utf8")\n         notify(PubStart(request))\n         return request.traverse(path)\n@@ -192,3 +196,18 @@ def test_invalid_effective_date_results_in_400(self):\n         res = service.reply()\n         self.assertEqual(400, self.request.response.getStatus())\n         self.assertEqual("Bad Request", res["error"]["type"])\n+\n+    def test_transition_with_no_access_to_review_history_in_target_state(self):\n+        self.wftool.setChainForPortalTypes(["Folder"], "restriction_workflow")\n+        self.portal[self.portal.invokeFactory("Folder", id="folder", title="Test")]\n+        setRoles(\n+            self.portal, TEST_USER_ID, ["Contributor", "Editor", "Member", "Reviewer"]\n+        )\n+        login(self.portal, TEST_USER_NAME)\n+\n+        auth = "%s:%s" % (TEST_USER_NAME, TEST_USER_PASSWORD)\n+        service = self.traverse("/plone/folder/@workflow/restrict", auth=auth)\n+        res = service.reply()\n+\n+        self.assertEqual(200, self.request.response.getStatus(), res)\n+        self.assertEqual(u"restricted", res[u"review_state"], res)\n'

