Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-17T21:53:46+02:00
Author: Tiberiu Ichim (tiberiuichim) <tiberiuichim@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/c11b56777cf19015d083fb00bdcf88b94ca46c45

Fix test for IBlocks behavior (#914)

* Improve test for blocks behavior

* Create 914.bugfix

Files changed:
A news/914.bugfix
M src/plone/restapi/tests/test_behaviors.py

b'diff --git a/news/914.bugfix b/news/914.bugfix\nnew file mode 100644\nindex 00000000..4b48cbab\n--- /dev/null\n+++ b/news/914.bugfix\n@@ -0,0 +1,2 @@\n+Small fix in IBlocks test, addedd a missing assert call\n+[tiberiuichim]\ndiff --git a/src/plone/restapi/tests/test_behaviors.py b/src/plone/restapi/tests/test_behaviors.py\nindex c412162f..b28836e4 100644\n--- a/src/plone/restapi/tests/test_behaviors.py\n+++ b/src/plone/restapi/tests/test_behaviors.py\n@@ -6,7 +6,6 @@\n from plone.dexterity.fti import DexterityFTI\n from plone.restapi.behaviors import IBlocks\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n-from zope.interface import alsoProvides\n \n import unittest\n \n@@ -24,8 +23,6 @@ def setUp(self):\n         self.portal.portal_types._setObject("blocksfolder", fti)\n         fti.klass = "plone.dexterity.content.Container"\n         fti.behaviors = ("volto.blocks",)\n-        self.fti = fti\n-        alsoProvides(self.request, IBlocks)\n \n     def test_basic_fields(self):\n         self.portal.invokeFactory(\n@@ -47,4 +44,4 @@ def test_behavior_provides(self):\n             "blocksfolder", id="blocksfolder", title=u"Folder with blocks"\n         )\n \n-        IBlocks.providedBy(self.portal["blocksfolder"])\n+        assert IBlocks.providedBy(self.portal["blocksfolder"])\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-17T21:53:58+02:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/bbb0f5d199cd5bd2b984438575fb57ab66820388

Fix richtext encoding in deserializer (#913)

* use unescape to avoid encoding errors on save

* add tests

* add changelog

Files changed:
A news/913.bugfix
M src/plone/restapi/deserializer/dxfields.py
M src/plone/restapi/tests/test_content_patch.py
M src/plone/restapi/tests/test_content_post.py
M src/plone/restapi/tests/test_dxfield_deserializer.py

b'diff --git a/news/913.bugfix b/news/913.bugfix\nnew file mode 100644\nindex 00000000..36341d99\n--- /dev/null\n+++ b/news/913.bugfix\n@@ -0,0 +1,2 @@\n+call unescape method on received html for richtext before save it in Plone.\n+[cekk]\ndiff --git a/src/plone/restapi/deserializer/dxfields.py b/src/plone/restapi/deserializer/dxfields.py\nindex 9b0e58b4..ac89d554 100644\n--- a/src/plone/restapi/deserializer/dxfields.py\n+++ b/src/plone/restapi/deserializer/dxfields.py\n@@ -29,6 +29,12 @@\n import dateutil\n import six\n \n+if six.PY2:\n+    import HTMLParser\n+    html_parser = HTMLParser.HTMLParser()\n+else:\n+    import html as html_parser\n+\n \n @implementer(IFieldDeserializer)\n @adapter(IField, IDexterityContent, IBrowserRequest)\n@@ -274,9 +280,8 @@ def __call__(self, value):\n                 data = f.read().decode("utf8")\n         else:\n             data = value\n-\n         value = RichTextValue(\n-            raw=data,\n+            raw=html_parser.unescape(data),\n             mimeType=content_type,\n             outputMimeType=self.field.output_mime_type,\n             encoding=encoding,\ndiff --git a/src/plone/restapi/tests/test_content_patch.py b/src/plone/restapi/tests/test_content_patch.py\nindex 370725da..85668414 100644\n--- a/src/plone/restapi/tests/test_content_patch.py\n+++ b/src/plone/restapi/tests/test_content_patch.py\n@@ -17,6 +17,7 @@\n from zope.lifecycleevent.interfaces import IObjectCreatedEvent\n from zope.lifecycleevent.interfaces import IObjectModifiedEvent\n \n+import json\n import requests\n import transaction\n import unittest\n@@ -182,6 +183,24 @@ def record_event(event):\n         sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n         sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n \n+    def test_patch_document_with_apostrophe_dont_return_500(self):\n+        data = {\n+            "text": {\n+                "content-type": "text/html",\n+                "encoding": "utf8",\n+                "data": "<p>example with &#x27;</p>"\n+            }\n+        }\n+        response = requests.patch(\n+            self.portal.doc1.absolute_url(),\n+            headers={"Accept": "application/json"},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            data=json.dumps(data),\n+        )\n+        self.assertEqual(204, response.status_code)\n+        transaction.begin()\n+        self.assertEqual("<p>example with \'</p>", self.portal.doc1.text.raw)\n+\n \n class TestATContentPatch(unittest.TestCase):\n \ndiff --git a/src/plone/restapi/tests/test_content_post.py b/src/plone/restapi/tests/test_content_post.py\nindex d26f99aa..9c25bf9b 100644\n--- a/src/plone/restapi/tests/test_content_post.py\n+++ b/src/plone/restapi/tests/test_content_post.py\n@@ -182,6 +182,27 @@ def record_event(event):\n         sm.unregisterHandler(record_event, (IObjectAddedEvent,))\n         sm.unregisterHandler(record_event, (IObjectModifiedEvent,))\n \n+    def test_post_to_folder_with_apostrophe_dont_return_500(self):\n+        response = requests.post(\n+            self.portal.folder1.absolute_url(),\n+            headers={"Accept": "application/json"},\n+            auth=(SITE_OWNER_NAME, SITE_OWNER_PASSWORD),\n+            json={\n+                "@type": "Document",\n+                "id": "mydocument2",\n+                "title": "My Document 2",\n+                "text": {\n+                    "content-type": "text/html",\n+                    "encoding": "utf8",\n+                    "data": "<p>example with &#x27;</p>"\n+                }\n+            },\n+        )\n+        self.assertEqual(201, response.status_code)\n+        transaction.begin()\n+        self.assertEqual("<p>example with \'</p>", self.portal.folder1.mydocument2.text.raw)\n+        self.assertEqual("<p>example with \'</p>", response.json()[\'text\'][\'data\'])\n+\n \n class TestATFolderCreate(unittest.TestCase):\n \ndiff --git a/src/plone/restapi/tests/test_dxfield_deserializer.py b/src/plone/restapi/tests/test_dxfield_deserializer.py\nindex 5c46f8b6..a6794905 100644\n--- a/src/plone/restapi/tests/test_dxfield_deserializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_deserializer.py\n@@ -301,6 +301,10 @@ def test_richtext_deserialization_sets_encoding(self):\n         )\n         self.assertEqual("latin1", value.encoding)\n \n+    def test_richtext_deserialization_fix_apostrophe(self):\n+        value = self.deserialize("test_richtext_field", u"<p>char with &#x27;</p>")\n+        self.assertEqual("<p>char with \'</p>", value.raw)\n+\n     def test_namedfield_deserialization_decodes_value(self):\n         value = self.deserialize(\n             "test_namedfile_field",\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-17T21:59:52+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/0326c3d93242e173a5657adc1febe8b1f020e9ca

Preparing release 6.6.1

Files changed:
M CHANGES.rst
M setup.py
D news/913.bugfix
D news/914.bugfix

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0ca53078..1ba90250 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,18 @@ Changelog\n \n .. towncrier release notes start\n \n+6.6.1 (2020-04-17)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- call unescape method on received html for richtext before save it in Plone.\n+  [cekk] (#913)\n+- Small fix in IBlocks test, addedd a missing assert call\n+  [tiberiuichim] (#914)\n+\n+\n 6.6.0 (2020-04-07)\n ------------------\n \ndiff --git a/news/913.bugfix b/news/913.bugfix\ndeleted file mode 100644\nindex 36341d99..00000000\n--- a/news/913.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-call unescape method on received html for richtext before save it in Plone.\n-[cekk]\ndiff --git a/news/914.bugfix b/news/914.bugfix\ndeleted file mode 100644\nindex 4b48cbab..00000000\n--- a/news/914.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Small fix in IBlocks test, addedd a missing assert call\n-[tiberiuichim]\ndiff --git a/setup.py b/setup.py\nindex d7671582..a545c275 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.6.1.dev0'\n+version = '6.6.1'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-17T22:00:19+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/3e6277877782e0d50bf67149c90c2bb66b355bbc

Back to development: 6.6.2

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex a545c275..ca18ecc6 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.6.1'\n+version = '6.6.2.dev0'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T20:56:56+02:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/a848abdd1e53a877aaa4520b46aa175a486b26d3

Make the querystring-search endpoint context aware (#916)

* Make the querystring-search endpoint context aware

* Changelog

* Do not add the not UID query if ZCatalog is not &gt;=5.1

* Add comment and changed condition as suggested

* Products.ZCatalog = 5.1

Co-authored-by: Timo Stollenwerk &lt;stollenwerk@kitconcept.com&gt;

Files changed:
A news/911.feature
M Makefile
M plone-5.2.x.cfg
M src/plone/restapi/services/querystringsearch/configure.zcml
M src/plone/restapi/services/querystringsearch/get.py
M src/plone/restapi/tests/test_services_querystringsearch.py

b'diff --git a/Makefile b/Makefile\nindex 1aacdf22..1ff20854 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -3,7 +3,7 @@\n SHELL := /bin/bash\n CURRENT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))\n \n-version = 3.7\n+version = 3\n \n # We like colors\n # From: https://coderwall.com/p/izxssa/colored-makefile-for-golang-projects\ndiff --git a/news/911.feature b/news/911.feature\nnew file mode 100644\nindex 00000000..93ce4612\n--- /dev/null\n+++ b/news/911.feature\n@@ -0,0 +1,2 @@\n+- Make ``@querystring-search`` endpoint context aware\n+[sneridagh]\ndiff --git a/plone-5.2.x.cfg b/plone-5.2.x.cfg\nindex f551d422..65e6a1b9 100644\n--- a/plone-5.2.x.cfg\n+++ b/plone-5.2.x.cfg\n@@ -12,3 +12,7 @@ urllib3 = 1.21.1\n idna = 2.5\n lxml = 4.4.2\n \n+# Add support for not queries in the UUIDIndex\n+# This is needed to exclude self from the context-aware\n+# querystring-search which is used by the Volto Listing Block\n+Products.ZCatalog = 5.1\ndiff --git a/src/plone/restapi/services/querystringsearch/configure.zcml b/src/plone/restapi/services/querystringsearch/configure.zcml\nindex ab195655..4abeedb3 100644\n--- a/src/plone/restapi/services/querystringsearch/configure.zcml\n+++ b/src/plone/restapi/services/querystringsearch/configure.zcml\n@@ -10,4 +10,11 @@\n     permission="zope2.View"\n     />\n \n+  <plone:service\n+    method="POST"\n+    for="Products.CMFCore.interfaces.IContentish"\n+    factory=".get.QuerystringSearchPost"\n+    name="@querystring-search"\n+    permission="zope2.View"\n+    />\n </configure>\ndiff --git a/src/plone/restapi/services/querystringsearch/get.py b/src/plone/restapi/services/querystringsearch/get.py\nindex 4625351a..e687b7b1 100644\n--- a/src/plone/restapi/services/querystringsearch/get.py\n+++ b/src/plone/restapi/services/querystringsearch/get.py\n@@ -1,9 +1,18 @@\n # -*- coding: utf-8 -*-\n+from pkg_resources import get_distribution\n+from pkg_resources import parse_version\n from plone.restapi.deserializer import json_body\n from plone.restapi.interfaces import ISerializeToJson\n from plone.restapi.services import Service\n+from Products.CMFPlone.interfaces import IPloneSiteRoot\n from zope.component import getMultiAdapter\n \n+zcatalog_version = get_distribution("Products.ZCatalog").version\n+if parse_version(zcatalog_version) >= parse_version("5.1"):\n+    SUPPORT_NOT_UUID_QUERIES = True\n+else:\n+    SUPPORT_NOT_UUID_QUERIES = False\n+\n \n class QuerystringSearchPost(Service):\n     """Returns the querystring search results given a p.a.querystring data.\n@@ -28,7 +37,8 @@ def reply(self):\n         querybuilder = getMultiAdapter(\n             (self.context, self.request), name="querybuilderresults"\n         )\n-        results = querybuilder(\n+\n+        querybuilder_parameters = dict(\n             query=query,\n             brains=True,\n             b_start=b_start,\n@@ -38,6 +48,15 @@ def reply(self):\n             limit=limit,\n         )\n \n+        # Exclude "self" content item from the results when ZCatalog supports NOT UUID\n+        # queries and it is called on a content object.\n+        if not IPloneSiteRoot.providedBy(self.context) and SUPPORT_NOT_UUID_QUERIES:\n+            querybuilder_parameters.update(\n+                dict(custom_query={"UID": {"not": self.context.UID()}})\n+            )\n+\n+        results = querybuilder(**querybuilder_parameters)\n+\n         results = getMultiAdapter((results, self.request), ISerializeToJson)(\n             fullobjects=fullobjects\n         )\ndiff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nindex 0346b0a4..bd7f634d 100644\n--- a/src/plone/restapi/tests/test_services_querystringsearch.py\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -1,4 +1,6 @@\n # -*- coding: utf-8 -*-\n+from pkg_resources import get_distribution\n+from pkg_resources import parse_version\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n@@ -9,6 +11,12 @@\n import transaction\n import unittest\n \n+zcatalog_version = get_distribution("Products.ZCatalog").version\n+if parse_version(zcatalog_version) >= parse_version("5.1"):\n+    SUPPORT_NOT_UUID_QUERIES = True\n+else:\n+    SUPPORT_NOT_UUID_QUERIES = False\n+\n \n class TestQuerystringSearchEndpoint(unittest.TestCase):\n \n@@ -127,5 +135,34 @@ def test_querystringsearch_complex(self):\n         self.assertIn("items_total", response.json())\n         self.assertEquals(response.json()["items_total"], 10)\n         self.assertEquals(len(response.json()["items"]), 5)\n-        self.assertNotIn("effective", response.json()["items"][0])\n-        self.assertEquals(response.json()["items"][4]["title"], u"Test Document 9")\n+        self.assertNotIn("effective", response.json()["items"][0])        self.assertEqual(response.json()["items"][4]["title"], u"Test Document 9")\n+\n+    @unittest.skipIf(\n+        not SUPPORT_NOT_UUID_QUERIES,\n+        "Skipping because ZCatalog allows not queries on UUIDIndex from >=5.1",\n+    )\n+    def test_querystringsearch_do_not_return_context(self):\n+        self.portal.invokeFactory("Document", "testdocument2", title="Test Document 2")\n+        self.doc = self.portal.testdocument\n+\n+        transaction.commit()\n+\n+        response = self.api_session.post(\n+            "/testdocument/@querystring-search",\n+            json={\n+                "query": [\n+                    {\n+                        "i": "portal_type",\n+                        "o": "plone.app.querystring.operation.selection.is",\n+                        "v": ["Document"],\n+                    }\n+                ],\n+            },\n+        )\n+\n+        self.assertEqual(response.status_code, 200)\n+        self.assertEqual(response.json()["items_total"], 1)\n+        self.assertEqual(\n+            response.json()["items"][0]["@id"],\n+            "http://localhost:55001/plone/testdocument2",\n+        )\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T20:59:06+02:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.restapi/commit/35e8602a6a2e3fc89ff607a08f25ed2017259734

 Refs #905 - Fix sphinxbuilder with Python 3.8 (#906)

* Refs #905 - Fix sphinxbuilder with Python 3.8

* CHANGELOG

Files changed:
A news/905.bugfix
M plone-5.2.x.cfg

b'diff --git a/news/905.bugfix b/news/905.bugfix\nnew file mode 100644\nindex 00000000..65bddbc5\n--- /dev/null\n+++ b/news/905.bugfix\n@@ -0,0 +1,2 @@\n+Fix sphinxbuilder with Python 3.8\n+[avoinea]\ndiff --git a/plone-5.2.x.cfg b/plone-5.2.x.cfg\nindex 65e6a1b9..1a38a55c 100644\n--- a/plone-5.2.x.cfg\n+++ b/plone-5.2.x.cfg\n@@ -11,6 +11,7 @@ plone.restapi =\n urllib3 = 1.21.1\n idna = 2.5\n lxml = 4.4.2\n+astunparse = 1.6.2\n \n # Add support for not queries in the UUIDIndex\n # This is needed to exclude self from the context-aware\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:13:44+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/fa07403306cab5927b0e19f8b4a9043f11993387

Fix #911 changelog

Files changed:
M news/911.feature

b'diff --git a/news/911.feature b/news/911.feature\nindex 93ce4612..2785725f 100644\n--- a/news/911.feature\n+++ b/news/911.feature\n@@ -1,2 +1,2 @@\n-- Make ``@querystring-search`` endpoint context aware\n+Make ``@querystring-search`` endpoint context aware\n [sneridagh]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:15:26+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/e85b9fcc2988b931912e0720496f0789f76ee5b2

Fix merge problem

Files changed:
M src/plone/restapi/tests/test_services_querystringsearch.py

b'diff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nindex bd7f634d..f855aa44 100644\n--- a/src/plone/restapi/tests/test_services_querystringsearch.py\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -135,7 +135,8 @@ def test_querystringsearch_complex(self):\n         self.assertIn("items_total", response.json())\n         self.assertEquals(response.json()["items_total"], 10)\n         self.assertEquals(len(response.json()["items"]), 5)\n-        self.assertNotIn("effective", response.json()["items"][0])        self.assertEqual(response.json()["items"][4]["title"], u"Test Document 9")\n+        self.assertNotIn("effective", response.json()["items"][0])\n+        self.assertEqual(response.json()["items"][4]["title"], u"Test Document 9")\n \n     @unittest.skipIf(\n         not SUPPORT_NOT_UUID_QUERIES,\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:19:20+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/912c8c558ba3f3a1f4b343bb37d8c5915168a886

Exclude docs/make.bat from MANIFEST.in

Files changed:
M MANIFEST.in
D Data.fs

b'diff --git a/Data.fs b/Data.fs\ndeleted file mode 100644\nindex 53634c7c..00000000\nBinary files a/Data.fs and /dev/null differ\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 4ac199f4..c0a66a40 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -13,6 +13,7 @@ exclude Dockerfile\n exclude Makefile\n exclude bootstrap-buildout.py\n exclude CODEOWNERS\n+exclude docs/make.bat\n recursive-exclude docs/doctrees *\n recursive-exclude docs/html *\n recursive-exclude performance *\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:22:27+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/624a98d13dd320c9932515c069f0bf60ee3038b7

Attempt to fix changelog

Files changed:
M news/911.feature

b'diff --git a/news/911.feature b/news/911.feature\nindex 2785725f..fc9b959f 100644\n--- a/news/911.feature\n+++ b/news/911.feature\n@@ -1,2 +1,2 @@\n-Make ``@querystring-search`` endpoint context aware\n+Make @querystring-search endpoint context aware\n [sneridagh]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:44:42+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/62bb2334831f1e822749b18f201b6960c7e3f19f

Fix 4.3 and 5.1 on Travis

Files changed:
M plone-4.3.x.cfg
M plone-5.1.x.cfg

b"diff --git a/plone-4.3.x.cfg b/plone-4.3.x.cfg\nindex f0a28357..3246c834 100644\n--- a/plone-4.3.x.cfg\n+++ b/plone-4.3.x.cfg\n@@ -1,7 +1,7 @@\n [buildout]\n extends =\n     base.cfg\n-    http://dist.plone.org/release/4.3.18/versions.cfg\n+    http://dist.plone.org/release/4.3.19/versions.cfg\n     versions.cfg\n \n [versions]\n@@ -11,29 +11,9 @@ zope.interface = 4.1.0\n # Pillow = 5.4.1\n future = 0.17.1\n six = 1.11.0\n-\n-# Required for Python 2.7 compatibility\n-more-itertools = <6.0.0\n-zipp = >=0.5, <2a\n-\n-# plone.restapi specific\n-plone.schema = 1.2.0\n-\n-# zest.releaser\n-zest.releaser = 6.20.1\n-twine = 1.11.0\n-requests = 2.18.4\n-towncrier = 19.2.0\n-zestreleaser.towncrier = 1.1.0\n-# docutils = 0.13.1\n-\n-# Sphinx\n-Sphinx = 1.6.5\n-docutils = 0.14\n-Pygments = 2.5.1\n-sphinxcontrib-httpexample = 0.7.0\n-sphinxcontrib-httpdomain = 1.5.0\n-sphinx-rtd-theme = 0.2.4\n-Jinja2 = 2.10\n-Babel = 2.5.1\n-astunparse = 1.6.2\n\\ No newline at end of file\n+# fixes: SyntaxError: invalid syntax (more.py, line 340)\n+zipp = 0.5.2\n+# more-itertools >= 6.0.0 dropped python2.7 support\n+more-itertools = 5.0.0\n+# Error: The requirement ('Pygments>=2.5.1') is not allowed by your [versions] constraint (2.2.0)\n+Pygments = 2.5.2\n\\ No newline at end of file\ndiff --git a/plone-5.1.x.cfg b/plone-5.1.x.cfg\nindex 2fa89a63..b38dbeb2 100644\n--- a/plone-5.1.x.cfg\n+++ b/plone-5.1.x.cfg\n@@ -5,6 +5,8 @@ extends =\n     versions.cfg\n \n [versions]\n+coverage = 5.1\n+\n # fixes: SyntaxError: invalid syntax (more.py, line 340)\n zipp = 0.5.2\n \n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:52:15+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/52b7433037c797f15764e25d4115bebb13d829f0

Update requirements.txt

Files changed:
M requirements.txt

b'diff --git a/requirements.txt b/requirements.txt\nindex a6b4a76f..db6f5fc4 100644\n--- a/requirements.txt\n+++ b/requirements.txt\n@@ -1,3 +1,3 @@\n # Keep this file in sync with: https://github.com/kitconcept/buildout/edit/master/requirements.txt\n-setuptools==41.2.0\n-zc.buildout==2.13.2\n+setuptools==42.0.2\n+zc.buildout==2.13.2\n\\ No newline at end of file\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T21:57:29+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/862de6fb3120ece3a12f08d327970b944de7d359

Use versions.cfg from master

Files changed:
M versions.cfg

b'diff --git a/versions.cfg b/versions.cfg\nindex 361e6b8d..3d71625b 100644\n--- a/versions.cfg\n+++ b/versions.cfg\n@@ -2,15 +2,33 @@\n # Buildout\n setuptools =\n zc.buildout =\n-# zc.recipe.egg = 2.0.3\n+zc.recipe.egg = 2.0.3\n \n # plone.recipe.varnish\n-# plone.recipe.varnish = 1.3\n+plone.recipe.varnish = 1.3\n \n # Code-analysis\n-# plone.recipe.codeanalysis = 3.0.1\n-# coverage = 3.7.1\n-# pep8 = 1.7.1\n-# flake8 = 3.7.9\n-# flake8-coding = 1.3.2\n-# pycodestyle = 2.5.0\n+plone.recipe.codeanalysis = 3.0.1\n+coverage = 5.1\n+pep8 = 1.7.1\n+flake8 = 3.5.0\n+flake8-coding = 1.3.2\n+pycodestyle = 2.3.1\n+\n+# Release\n+zest.releaser = 6.17.0\n+twine = 1.11.0\n+requests = 2.18.4\n+towncrier = 19.2.0\n+zestreleaser.towncrier = 1.1.0\n+docutils = 0.13.1\n+\n+# Sphinx\n+Sphinx = 1.6.5\n+docutils = 0.14\n+Pygments = 2.2.0\n+sphinxcontrib-httpexample = 0.7.0\n+sphinxcontrib-httpdomain = 1.5.0\n+sphinx-rtd-theme = 0.2.4\n+Jinja2 = 2.10\n+Babel = 2.5.1\n\\ No newline at end of file\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T22:42:33+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/43fc09ce7d9ba18e6911e9ac461c9dcee48272f6

make update (#919)

Files changed:
M Makefile
M plone-4.3.x.cfg
M plone-5.1.x.cfg
M plone-5.2.x.cfg
M requirements.txt
M versions.cfg

b'diff --git a/Makefile b/Makefile\nindex 1ff20854..0f64a30d 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -3,7 +3,7 @@\n SHELL := /bin/bash\n CURRENT_DIR:=$(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))\n \n-version = 3\n+version = 3.7\n \n # We like colors\n # From: https://coderwall.com/p/izxssa/colored-makefile-for-golang-projects\n@@ -88,6 +88,12 @@ test-performance:\n .PHONY: Code Analysis\n code-analysis:  ## Code Analysis\n \tbin/code-analysis\n+\tif [ -f "bin/black" ]; then bin/black src/ --check ; fi\n+\n+.PHONY: Black\n+black:  ## Black\n+\tbin/code-analysis\n+\tif [ -f "bin/black" ]; then bin/black src/ ; fi\n \n .PHONY: Build Docs\n docs:  ## Build Docs\ndiff --git a/plone-4.3.x.cfg b/plone-4.3.x.cfg\nindex 3246c834..b3a6f51e 100644\n--- a/plone-4.3.x.cfg\n+++ b/plone-4.3.x.cfg\n@@ -16,4 +16,4 @@ zipp = 0.5.2\n # more-itertools >= 6.0.0 dropped python2.7 support\n more-itertools = 5.0.0\n # Error: The requirement (\'Pygments>=2.5.1\') is not allowed by your [versions] constraint (2.2.0)\n-Pygments = 2.5.2\n\\ No newline at end of file\n+Pygments = 2.5.2\ndiff --git a/plone-5.1.x.cfg b/plone-5.1.x.cfg\nindex b38dbeb2..d8188b7c 100644\n--- a/plone-5.1.x.cfg\n+++ b/plone-5.1.x.cfg\n@@ -5,8 +5,6 @@ extends =\n     versions.cfg\n \n [versions]\n-coverage = 5.1\n-\n # fixes: SyntaxError: invalid syntax (more.py, line 340)\n zipp = 0.5.2\n \n@@ -30,4 +28,4 @@ sphinxcontrib-httpdomain = 1.5.0\n sphinx-rtd-theme = 0.2.4\n Jinja2 = 2.10\n Babel = 2.5.1\n-astunparse = 1.6.2\n\\ No newline at end of file\n+astunparse = 1.6.2\ndiff --git a/plone-5.2.x.cfg b/plone-5.2.x.cfg\nindex 1a38a55c..46149643 100644\n--- a/plone-5.2.x.cfg\n+++ b/plone-5.2.x.cfg\n@@ -2,18 +2,5 @@\n extends =\n     base.cfg\n     http://dist.plone.org/release/5.2.1/versions.cfg\n-    versions.cfg\n find-links += http://dist.plone.org/thirdparty/\n versions=versions\n-\n-[versions]\n-plone.restapi =\n-urllib3 = 1.21.1\n-idna = 2.5\n-lxml = 4.4.2\n-astunparse = 1.6.2\n-\n-# Add support for not queries in the UUIDIndex\n-# This is needed to exclude self from the context-aware\n-# querystring-search which is used by the Volto Listing Block\n-Products.ZCatalog = 5.1\ndiff --git a/requirements.txt b/requirements.txt\nindex db6f5fc4..f6ac0d7e 100644\n--- a/requirements.txt\n+++ b/requirements.txt\n@@ -1,3 +1,3 @@\n # Keep this file in sync with: https://github.com/kitconcept/buildout/edit/master/requirements.txt\n setuptools==42.0.2\n-zc.buildout==2.13.2\n\\ No newline at end of file\n+zc.buildout==2.13.2\ndiff --git a/versions.cfg b/versions.cfg\nindex 3d71625b..bd4e3f75 100644\n--- a/versions.cfg\n+++ b/versions.cfg\n@@ -4,12 +4,18 @@ setuptools =\n zc.buildout =\n zc.recipe.egg = 2.0.3\n \n+# fixes Getting distribution for \'configparser\'. assert newdist is not None  # newloc above is missing our dist?!\n+configparser = 3.5.3\n+\n+# fixes Error: The requirement (\'Pygments>=2.5.1\') is not allowed by your [versions] constraint (2.2.0)\n+Pygments = 2.5.1\n+\n # plone.recipe.varnish\n plone.recipe.varnish = 1.3\n \n # Code-analysis\n plone.recipe.codeanalysis = 3.0.1\n-coverage = 5.1\n+coverage = 3.7.1\n pep8 = 1.7.1\n flake8 = 3.5.0\n flake8-coding = 1.3.2\n@@ -31,4 +37,4 @@ sphinxcontrib-httpexample = 0.7.0\n sphinxcontrib-httpdomain = 1.5.0\n sphinx-rtd-theme = 0.2.4\n Jinja2 = 2.10\n-Babel = 2.5.1\n\\ No newline at end of file\n+Babel = 2.5.1\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T23:02:28+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/28aaf80e79caf0af31801ec231984e604f6cf5d0

Preparing release 6.7.0

Files changed:
M CHANGES.rst
M setup.py
D news/905.bugfix
D news/911.feature

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 1ba90250..0d1fb29f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,23 @@ Changelog\n \n .. towncrier release notes start\n \n+6.7.0 (2020-04-21)\n+------------------\n+\n+New features:\n+\n+\n+- Make @querystring-search endpoint context aware\n+  [sneridagh] (#911)\n+\n+\n+Bug fixes:\n+\n+\n+- Fix sphinxbuilder with Python 3.8\n+  [avoinea] (#905)\n+\n+\n 6.6.1 (2020-04-17)\n ------------------\n \ndiff --git a/news/905.bugfix b/news/905.bugfix\ndeleted file mode 100644\nindex 65bddbc5..00000000\n--- a/news/905.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix sphinxbuilder with Python 3.8\n-[avoinea]\ndiff --git a/news/911.feature b/news/911.feature\ndeleted file mode 100644\nindex fc9b959f..00000000\n--- a/news/911.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Make @querystring-search endpoint context aware\n-[sneridagh]\ndiff --git a/setup.py b/setup.py\nindex ca18ecc6..cd7f680a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.6.2.dev0'\n+version = '6.7.0'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T23:02:59+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/68c829130ceef534155a212e3dd91b8cbb7cda94

Back to development: 6.7.1

Files changed:
M setup.py

b"diff --git a/setup.py b/setup.py\nindex cd7f680a..78eb7908 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.7.0'\n+version = '6.7.1.dev0'\n \n \n def read(filename):\n"

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T23:07:17+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/ada7c6b864aeaaa80b0748c2feaf4d5eff05311e

Remove changelog entries for #905 and #911 since we released them with 6.7.0

Files changed:
D news/905.bugfix
D news/911.feature

b'diff --git a/news/905.bugfix b/news/905.bugfix\ndeleted file mode 100644\nindex 65bddbc5..00000000\n--- a/news/905.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Fix sphinxbuilder with Python 3.8\n-[avoinea]\ndiff --git a/news/911.feature b/news/911.feature\ndeleted file mode 100644\nindex 93ce4612..00000000\n--- a/news/911.feature\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-- Make ``@querystring-search`` endpoint context aware\n-[sneridagh]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-21T23:07:33+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/50ceb4477ce022ed79a060d28f1b5b10161aaa05

Merge branch '6.x.x'

Files changed:
M CHANGES.rst
M MANIFEST.in
M setup.py
D Data.fs

b"diff --git a/CHANGES.rst b/CHANGES.rst\nindex 0ca53078..0d1fb29f 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -8,6 +8,35 @@ Changelog\n \n .. towncrier release notes start\n \n+6.7.0 (2020-04-21)\n+------------------\n+\n+New features:\n+\n+\n+- Make @querystring-search endpoint context aware\n+  [sneridagh] (#911)\n+\n+\n+Bug fixes:\n+\n+\n+- Fix sphinxbuilder with Python 3.8\n+  [avoinea] (#905)\n+\n+\n+6.6.1 (2020-04-17)\n+------------------\n+\n+Bug fixes:\n+\n+\n+- call unescape method on received html for richtext before save it in Plone.\n+  [cekk] (#913)\n+- Small fix in IBlocks test, addedd a missing assert call\n+  [tiberiuichim] (#914)\n+\n+\n 6.6.0 (2020-04-07)\n ------------------\n \ndiff --git a/Data.fs b/Data.fs\ndeleted file mode 100644\nindex 53634c7c..00000000\nBinary files a/Data.fs and /dev/null differ\ndiff --git a/MANIFEST.in b/MANIFEST.in\nindex 4ac199f4..c0a66a40 100644\n--- a/MANIFEST.in\n+++ b/MANIFEST.in\n@@ -13,6 +13,7 @@ exclude Dockerfile\n exclude Makefile\n exclude bootstrap-buildout.py\n exclude CODEOWNERS\n+exclude docs/make.bat\n recursive-exclude docs/doctrees *\n recursive-exclude docs/html *\n recursive-exclude performance *\ndiff --git a/setup.py b/setup.py\nindex e46e4099..ff5cd3c1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -2,7 +2,7 @@\n \n import sys\n \n-version = '6.6.1.dev0'\n+version = '6.7.1.dev0'\n \n \n def read(filename):\n"

