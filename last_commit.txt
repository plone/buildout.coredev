Repository: Products.isurlinportal


Branch: refs/heads/master
Date: 2021-07-28T13:28:22+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.isurlinportal/commit/7cbf4a438f1ab6510fdfa4bae84f71ecaa3130fc

Treat urls like https:example.org without slashes as outside the portal.

Some browsers would redirect to example.org, some would redirect to a non-existing local page.
We never want this, because this is likely a hack attempt.

Files changed:
A news/1.feature
M Products/isurlinportal/__init__.py
M Products/isurlinportal/tests.py

b'diff --git a/Products/isurlinportal/__init__.py b/Products/isurlinportal/__init__.py\nindex 477f3f4..29533cc 100644\n--- a/Products/isurlinportal/__init__.py\n+++ b/Products/isurlinportal/__init__.py\n@@ -131,6 +131,12 @@ def isURLInPortal(self, url, context=None):\n         # and redirecting to \'mailto:\' or \'ftp:\' is silly.\n         return False\n \n+    if schema and not u_host:\n+        # Example: https:example.org\n+        # When we redirect to this, some browsers fail, others happily go to example.org.\n+        # In any case, this is not in the portal.\n+        return False\n+\n     # Someone may be doing tricks with escaped html code.\n     unescaped_url = unescape(url)\n     if unescaped_url != url:\ndiff --git a/Products/isurlinportal/tests.py b/Products/isurlinportal/tests.py\nindex 6df514b..fa02dde 100644\n--- a/Products/isurlinportal/tests.py\n+++ b/Products/isurlinportal/tests.py\n@@ -167,6 +167,11 @@ def test_data_not_in_portal(self):\n             iURLiP("data:text/html%3bbase64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K")\n         )\n \n+    def test_ftp_not_in_portal(self):\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP("ftp://ftp.example.org"))\n+\n     def test_double_slash(self):\n         # I wondered if this might be a problem after reading\n         # https://bugs.python.org/issue23505\n@@ -204,3 +209,10 @@ def test_whitespace(self):\n         self.assertFalse(iURLiP("foo\\t"))\n         self.assertFalse(iURLiP(" foo"))\n         self.assertFalse(iURLiP("foo "))\n+\n+    def test_without_slashes(self):\n+        # This does not work in all browsers.\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP("http:example.org"))\n+        self.assertFalse(iURLiP("https:example.org"))\ndiff --git a/news/1.feature b/news/1.feature\nnew file mode 100644\nindex 0000000..b3ed176\n--- /dev/null\n+++ b/news/1.feature\n@@ -0,0 +1,6 @@\n+Treat urls like ``https:example.org`` without slashes as outside the portal.\n+Some browsers would redirect to example.org, some would redirect to a non-existing local page.\n+We never want this, because this is likely a hack attempt.\n+This vulnerability was discovered and reported by Yuji Tounai of Mitsui Bussan Secure Directions, Inc.\n+See `security advisory 1 <https://github.com/plone/Products.isurlinportal/security/advisories/GHSA-q3m9-9fj2-mfwr>`_.\n+[maurits]\n'

Repository: Products.isurlinportal


Branch: refs/heads/master
Date: 2021-07-31T14:33:49+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.isurlinportal/commit/d4fd34990d18adf05a10dc5e2bb4b066798280ba

Merge pull request from GHSA-q3m9-9fj2-mfwr

Treat urls like https:example.org without slashes as outside the portal.

Files changed:
A news/1.feature
M Products/isurlinportal/__init__.py
M Products/isurlinportal/tests.py

b'diff --git a/Products/isurlinportal/__init__.py b/Products/isurlinportal/__init__.py\nindex 477f3f4..29533cc 100644\n--- a/Products/isurlinportal/__init__.py\n+++ b/Products/isurlinportal/__init__.py\n@@ -131,6 +131,12 @@ def isURLInPortal(self, url, context=None):\n         # and redirecting to \'mailto:\' or \'ftp:\' is silly.\n         return False\n \n+    if schema and not u_host:\n+        # Example: https:example.org\n+        # When we redirect to this, some browsers fail, others happily go to example.org.\n+        # In any case, this is not in the portal.\n+        return False\n+\n     # Someone may be doing tricks with escaped html code.\n     unescaped_url = unescape(url)\n     if unescaped_url != url:\ndiff --git a/Products/isurlinportal/tests.py b/Products/isurlinportal/tests.py\nindex 6df514b..fa02dde 100644\n--- a/Products/isurlinportal/tests.py\n+++ b/Products/isurlinportal/tests.py\n@@ -167,6 +167,11 @@ def test_data_not_in_portal(self):\n             iURLiP("data:text/html%3bbase64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K")\n         )\n \n+    def test_ftp_not_in_portal(self):\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP("ftp://ftp.example.org"))\n+\n     def test_double_slash(self):\n         # I wondered if this might be a problem after reading\n         # https://bugs.python.org/issue23505\n@@ -204,3 +209,10 @@ def test_whitespace(self):\n         self.assertFalse(iURLiP("foo\\t"))\n         self.assertFalse(iURLiP(" foo"))\n         self.assertFalse(iURLiP("foo "))\n+\n+    def test_without_slashes(self):\n+        # This does not work in all browsers.\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP("http:example.org"))\n+        self.assertFalse(iURLiP("https:example.org"))\ndiff --git a/news/1.feature b/news/1.feature\nnew file mode 100644\nindex 0000000..b3ed176\n--- /dev/null\n+++ b/news/1.feature\n@@ -0,0 +1,6 @@\n+Treat urls like ``https:example.org`` without slashes as outside the portal.\n+Some browsers would redirect to example.org, some would redirect to a non-existing local page.\n+We never want this, because this is likely a hack attempt.\n+This vulnerability was discovered and reported by Yuji Tounai of Mitsui Bussan Secure Directions, Inc.\n+See `security advisory 1 <https://github.com/plone/Products.isurlinportal/security/advisories/GHSA-q3m9-9fj2-mfwr>`_.\n+[maurits]\n'

