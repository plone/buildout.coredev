Repository: plonetheme.barceloneta


Branch: refs/heads/master
Date: 2023-06-26T17:51:35+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plonetheme.barceloneta/commit/47968f9531a80bcb8f310dc0616f977d36e8be9c

Configuring with plone/meta

Files changed:
A news/cfffba8c.internal
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex bb09dd73..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -33,6 +33,10 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\ndiff --git a/.flake8 b/.flake8\nindex c1568033..7ef4f64d 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -12,3 +12,11 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f4..a7f25e02 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -15,14 +15,14 @@ on:\n \n jobs:\n   qa:\n-    uses: plone/meta/.github/workflows/qa.yml@master\n+    uses: plone/meta/.github/workflows/qa.yml@main\n   test:\n-    uses: plone/meta/.github/workflows/test.yml@master\n+    uses: plone/meta/.github/workflows/test.yml@main\n   coverage:\n-    uses: plone/meta/.github/workflows/coverage.yml@master\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n-    uses: plone/meta/.github/workflows/dependencies.yml@master\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n   release-ready:\n-    uses: plone/meta/.github/workflows/release_ready.yml@master\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex caf1054a..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -12,11 +12,10 @@ build/\n coverage.xml\n dist/\n docs/_build\n-node_modules/\n __pycache__/\n .tox\n .vscode/\n-forest.*\n+node_modules/\n \n # venv / buildout related\n bin/\n@@ -25,6 +24,7 @@ eggs/\n .eggs/\n etc/\n .installed.cfg\n+include/\n lib/\n lib64\n .mr.developer.cfg\n@@ -44,7 +44,7 @@ var/\n \n ##\n # Add extra configuration options in .meta.toml:\n-#  [pre_commit]\n+#  [gitignore]\n #  extra_lines = """\n #  _your own configuration lines_\n #  """\ndiff --git a/.meta.toml b/.meta.toml\nindex 6a2a63cd..ba0b0d71 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,7 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "53dc5b4c"\n+commit-id = "cfffba8c"\n \n [pyproject]\n codespell_skip = "*.css.map,package-lock.json"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 7f17aed8..7de9fd70 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -23,10 +23,26 @@ repos:\n     rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 50e135e7..0f0e7c97 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -39,12 +39,36 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.codespell]\n ignore-words-list = "discreet,"\n skip = "*.po,*.css.map,package-lock.json"\ndiff --git a/tox.ini b/tox.ini\nindex 713b1efd..3a407e44 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -21,6 +21,17 @@ envlist =\n #  """\n ##\n \n+[testenv]\n+skip_install = true\n+allowlist_externals =\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -51,7 +62,8 @@ commands =\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph out of the package\'s dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -63,31 +75,67 @@ commands =\n [testenv:test]\n description = run the distribution tests\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plonetheme.barceloneta {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plonetheme.barceloneta {posargs}\n+    coverage run --branch --source plonetheme.barceloneta {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plonetheme.barceloneta {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n \n+\n [testenv:release-check]\n description = ensure that the distribution is ready to release\n skip_install = true\n@@ -106,7 +154,17 @@ commands =\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-usedevelop = true\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n allowlist_externals =\n     sh\n deps =\n@@ -119,13 +177,13 @@ commands =\n     # Generate a DOT graph with the circular dependencies, if any\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n-    pipforester -i forest.json --check-cycles\n+    pipforester -i forest.json --check-cycles -o /dev/null\n \n \n ##\n # Add extra configuration options in .meta.toml:\n #  [tox]\n #  extra_lines = """\n-#      my_other_environment\n+#  _your own configuration lines_\n #  """\n ##\n'

Repository: plonetheme.barceloneta


Branch: refs/heads/master
Date: 2023-06-26T17:51:48+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plonetheme.barceloneta/commit/90caf02796689e11d4934a50169b06fe16e71c6a

cleanup: remove unused file

Files changed:
D setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8fb..00000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n'

Repository: plonetheme.barceloneta


Branch: refs/heads/master
Date: 2023-06-26T17:53:44+03:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plonetheme.barceloneta/commit/58130f97c94b90611c0e637fb9186685164e223e

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 276b4684..6d165015 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,16 +1,11 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n-import os\n-\n-\n-def read(*rnames):\n-    return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n-\n \n version = "3.1.4.dev0"\n \n-long_description = read("README.md") + "\\n" + read("CHANGES.md") + "\\n"\n+long_description = f"{Path(\'README.md\').read_text()}\\n{Path(\'CHANGES.md\').read_text()}"\n \n setup(\n     name="plonetheme.barceloneta",\n@@ -18,6 +13,8 @@ def read(*rnames):\n     description="The default theme for Plone 6.",\n     long_description=long_description,\n     long_description_content_type="text/markdown",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n'

Repository: plonetheme.barceloneta


Branch: refs/heads/master
Date: 2023-06-27T00:42:42+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plonetheme.barceloneta/commit/d4759fa54a087d8b5a0653bb5dbac3e5bce48a76

Merge pull request #337 from plone/config-with-default-template-1455dcdc

Config with default template

Files changed:
A news/cfffba8c.internal
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.py
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex bb09dd73..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -33,6 +33,10 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\ndiff --git a/.flake8 b/.flake8\nindex c1568033..7ef4f64d 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -12,3 +12,11 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f4..a7f25e02 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -15,14 +15,14 @@ on:\n \n jobs:\n   qa:\n-    uses: plone/meta/.github/workflows/qa.yml@master\n+    uses: plone/meta/.github/workflows/qa.yml@main\n   test:\n-    uses: plone/meta/.github/workflows/test.yml@master\n+    uses: plone/meta/.github/workflows/test.yml@main\n   coverage:\n-    uses: plone/meta/.github/workflows/coverage.yml@master\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n-    uses: plone/meta/.github/workflows/dependencies.yml@master\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n   release-ready:\n-    uses: plone/meta/.github/workflows/release_ready.yml@master\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex caf1054a..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -12,11 +12,10 @@ build/\n coverage.xml\n dist/\n docs/_build\n-node_modules/\n __pycache__/\n .tox\n .vscode/\n-forest.*\n+node_modules/\n \n # venv / buildout related\n bin/\n@@ -25,6 +24,7 @@ eggs/\n .eggs/\n etc/\n .installed.cfg\n+include/\n lib/\n lib64\n .mr.developer.cfg\n@@ -44,7 +44,7 @@ var/\n \n ##\n # Add extra configuration options in .meta.toml:\n-#  [pre_commit]\n+#  [gitignore]\n #  extra_lines = """\n #  _your own configuration lines_\n #  """\ndiff --git a/.meta.toml b/.meta.toml\nindex 6a2a63cd..ba0b0d71 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,7 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "53dc5b4c"\n+commit-id = "cfffba8c"\n \n [pyproject]\n codespell_skip = "*.css.map,package-lock.json"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 7f17aed8..7de9fd70 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -23,10 +23,26 @@ repos:\n     rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 50e135e7..0f0e7c97 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -39,12 +39,36 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.codespell]\n ignore-words-list = "discreet,"\n skip = "*.po,*.css.map,package-lock.json"\ndiff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8fb..00000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\ndiff --git a/setup.py b/setup.py\nindex 276b4684..6d165015 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,16 +1,11 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n-import os\n-\n-\n-def read(*rnames):\n-    return open(os.path.join(os.path.dirname(__file__), *rnames)).read()\n-\n \n version = "3.1.4.dev0"\n \n-long_description = read("README.md") + "\\n" + read("CHANGES.md") + "\\n"\n+long_description = f"{Path(\'README.md\').read_text()}\\n{Path(\'CHANGES.md\').read_text()}"\n \n setup(\n     name="plonetheme.barceloneta",\n@@ -18,6 +13,8 @@ def read(*rnames):\n     description="The default theme for Plone 6.",\n     long_description=long_description,\n     long_description_content_type="text/markdown",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\ndiff --git a/tox.ini b/tox.ini\nindex 713b1efd..3a407e44 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -21,6 +21,17 @@ envlist =\n #  """\n ##\n \n+[testenv]\n+skip_install = true\n+allowlist_externals =\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -51,7 +62,8 @@ commands =\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph out of the package\'s dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -63,31 +75,67 @@ commands =\n [testenv:test]\n description = run the distribution tests\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plonetheme.barceloneta {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plonetheme.barceloneta {posargs}\n+    coverage run --branch --source plonetheme.barceloneta {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plonetheme.barceloneta {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n \n+\n [testenv:release-check]\n description = ensure that the distribution is ready to release\n skip_install = true\n@@ -106,7 +154,17 @@ commands =\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-usedevelop = true\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n allowlist_externals =\n     sh\n deps =\n@@ -119,13 +177,13 @@ commands =\n     # Generate a DOT graph with the circular dependencies, if any\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n-    pipforester -i forest.json --check-cycles\n+    pipforester -i forest.json --check-cycles -o /dev/null\n \n \n ##\n # Add extra configuration options in .meta.toml:\n #  [tox]\n #  extra_lines = """\n-#      my_other_environment\n+#  _your own configuration lines_\n #  """\n ##\n'

