Repository: plone.z3cform


Branch: refs/heads/master
Date: 2023-11-10T23:28:42+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.z3cform/commit/de5fe65c57cb1da51b20a2225ff2f0c3414c959c

Replace deprecated cgi.FieldStorage class with a simple one.

The ``cgi`` module is deprecated and will be removed in Python 3.13.
Instead we now use a simple class that implements only what is needed for the converter.
It is only used for converting a ``ZPublisher`` ``FileUpload`` to a ``zope.publisher`` one.

Files changed:
A news/1.bugfix
M src/plone/z3cform/converter.py

b'diff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..06945d6\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,3 @@\n+Replace deprecated ``cgi.FieldStorage`` class with a simple one.\n+This is only used for converting a ``ZPublisher`` ``FileUpload`` to a ``zope.publisher`` one.\n+[maurits]\ndiff --git a/src/plone/z3cform/converter.py b/src/plone/z3cform/converter.py\nindex e9b353d..60154eb 100644\n--- a/src/plone/z3cform/converter.py\n+++ b/src/plone/z3cform/converter.py\n@@ -1,10 +1,22 @@\n-import cgi\n import z3c.form.converter\n import z3c.form.interfaces\n import zope.publisher.browser\n import ZPublisher.HTTPRequest\n \n \n+class _SimpleFieldStorage:\n+    """Replacement for cgi.FieldStorage.\n+\n+    The cgi module is deprecated and will be removed in Python 3.13.\n+    This simple class implements only what is needed for the converter below.\n+    """\n+\n+    def __init__(self, value):\n+        self.file = value\n+        self.headers = value.headers\n+        self.filename = value.filename\n+\n+\n class FileUploadDataConverter(z3c.form.converter.FileUploadDataConverter):\n     """Although ZPublisher\'s and zope.publisher\'s FileUpload\n     implementations are almost identical, ``FileUploadDataConverter``\n@@ -18,10 +30,7 @@ class FileUploadDataConverter(z3c.form.converter.FileUploadDataConverter):\n     def toFieldValue(self, value):\n         """See interfaces.IDataConverter"""\n         if isinstance(value, ZPublisher.HTTPRequest.FileUpload):\n-            fieldstorage = cgi.FieldStorage()\n-            fieldstorage.file = value\n-            fieldstorage.headers = value.headers\n-            fieldstorage.filename = value.filename\n+            fieldstorage = _SimpleFieldStorage(value)\n             value = zope.publisher.browser.FileUpload(fieldstorage)\n \n         return super().toFieldValue(value)\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2023-11-10T23:32:51+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.z3cform/commit/9f57faf41b907cb882f215420586c974f59e14d8

dependencychecker: ignore five.pt.

We only include its zcml conditionally.

Files changed:
M .meta.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex cf12c85..ff53d60 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -10,3 +10,4 @@ check_manifest_ignores = """\n      "*.cfg",\n """\n codespell_ignores = "fo,"\n+dependencies_ignores = "[\'five.pt\']"\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2023-11-10T23:32:58+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.z3cform/commit/529e512f456e9de401f5ac0a9d5cdccc5ae470fe

Configuring with plone/meta

Files changed:
M .editorconfig
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex 919b411..8ae05aa 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -36,6 +36,7 @@ indent_size = 2\n [*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n # 2 space indentation\n indent_size = 2\n+max_line_length = 80\n \n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex a7f25e0..39a164d 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -13,6 +13,16 @@ on:\n       - main\n   workflow_dispatch:\n \n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n jobs:\n   qa:\n     uses: plone/meta/.github/workflows/qa.yml@main\n@@ -22,7 +32,37 @@ jobs:\n     uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n     uses: plone/meta/.github/workflows/dependencies.yml@main\n-  release-ready:\n+  release_ready:\n     uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n     uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 81594fd..503e47c 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -6,9 +6,13 @@\n *.pyc\n *.pyo\n \n+# translation related\n+*.mo\n+\n # tools related\n build/\n .coverage\n+.*project\n coverage.xml\n dist/\n docs/_build\ndiff --git a/.meta.toml b/.meta.toml\nindex ff53d60..011c2c7 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,7 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "cfffba8c"\n+commit-id = "8c30aa23"\n \n [pyproject]\n check_manifest_ignores = """\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 7de9fd7..f13d059 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.4.0\n+    rev: v3.15.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -16,11 +16,11 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 23.3.0\n+    rev: 23.10.1\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.1.0a2\n+    rev: 3.1.0\n     hooks:\n     -   id: zpretty\n \n@@ -32,7 +32,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 6.0.0\n+    rev: 6.1.0\n     hooks:\n     -   id: flake8\n \n@@ -44,7 +44,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.4\n+    rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n@@ -66,15 +66,25 @@ repos:\n     hooks:\n     -   id: pyroma\n -   repo: https://github.com/mgedmin/check-python-versions\n-    rev: "0.21.2"\n+    rev: "0.22.0"\n     hooks:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n -   repo: https://github.com/collective/i18ndude\n-    rev: "6.0.0"\n+    rev: "6.1.0"\n     hooks:\n     -   id: i18ndude\n \n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pre_commit]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex eb8b561..3574669 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,6 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n # See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n directory = "news/"\n filename = "CHANGES.rst"\n@@ -116,6 +119,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'five.pt\']\n \n ##\n # Add extra configuration options in .meta.toml:\n@@ -125,7 +129,6 @@ python-dateutil = [\'dateutil\']\n #    "gitpython = [\'git\']",\n #    "pygithub = [\'github\']",\n #  ]\n-#  """\n ##\n \n [tool.check-manifest]\ndiff --git a/tox.ini b/tox.ini\nindex 85aeefd..8fa4d62 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -32,6 +32,21 @@ commands =\n     echo "Unrecognized environment name {envname}"\n     false\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -58,7 +73,7 @@ deps =\n     build\n     z3c.dependencychecker==2.11\n commands =\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     dependencychecker\n \n [testenv:dependencies-graph]\n@@ -86,11 +101,20 @@ set_env =\n #  test_environment_variables = """\n #      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n #  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n ##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n ##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n # Specify a custom constraints file in .meta.toml:\n #  [tox]\n #  constraints_file = "https://my-server.com/constraints.txt"\n@@ -128,6 +152,7 @@ deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n     coverage run --branch --source plone.z3cform {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.z3cform {posargs}\n     coverage report -m --format markdown\n@@ -144,12 +169,13 @@ deps =\n     build\n     towncrier\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n     # fake version to not have to install the package\n     # we build the change log as news entries might break\n     # the README that is displayed on PyPI\n     towncrier build --version=100.0.0 --yes\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     twine check dist/*\n \n [testenv:circular]\n@@ -171,6 +197,7 @@ deps =\n     pipdeptree\n     pipforester\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n     # Generate the full dependency tree\n     sh -c \'pipdeptree -j > forest.json\'\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2023-11-10T23:34:36+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.z3cform/commit/4cb94be46ae49bc72812231d3804c38956f75072

codespell: re-use -&gt; reuse

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex 17a029c..beca017 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -125,7 +125,7 @@ There are a few other reasons why you may want to use the wrapper view, even\n in later versions of Zope:\n \n * To support both an earlier version of Zope and Zope 2.12+\n-* To re-use the same form in multiple views or viewlets\n+* To reuse the same form in multiple views or viewlets\n * To use the ``IPageTemplate`` adapter lookup semantics from z3c.form to\n   provide a different default or override template for the overall page\n   layout, while retaining (or indeed customising independently) the default\n'

Repository: plone.z3cform


Branch: refs/heads/master
Date: 2023-12-08T00:26:03+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.z3cform/commit/683649ec500f7da8ad5c8b67833e5181118c5b18

Merge pull request #27 from plone/maurits-replace-cgi-fieldstorage

Replace deprecated cgi.FieldStorage class with a simple one.

Files changed:
A news/1.bugfix
M .editorconfig
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M README.rst
M pyproject.toml
M src/plone/z3cform/converter.py
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex 919b411..8ae05aa 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -36,6 +36,7 @@ indent_size = 2\n [*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n # 2 space indentation\n indent_size = 2\n+max_line_length = 80\n \n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex a7f25e0..39a164d 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -13,6 +13,16 @@ on:\n       - main\n   workflow_dispatch:\n \n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n jobs:\n   qa:\n     uses: plone/meta/.github/workflows/qa.yml@main\n@@ -22,7 +32,37 @@ jobs:\n     uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n     uses: plone/meta/.github/workflows/dependencies.yml@main\n-  release-ready:\n+  release_ready:\n     uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n     uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 81594fd..503e47c 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -6,9 +6,13 @@\n *.pyc\n *.pyo\n \n+# translation related\n+*.mo\n+\n # tools related\n build/\n .coverage\n+.*project\n coverage.xml\n dist/\n docs/_build\ndiff --git a/.meta.toml b/.meta.toml\nindex cf12c85..011c2c7 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,10 +3,11 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "cfffba8c"\n+commit-id = "8c30aa23"\n \n [pyproject]\n check_manifest_ignores = """\n      "*.cfg",\n """\n codespell_ignores = "fo,"\n+dependencies_ignores = "[\'five.pt\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 7de9fd7..f13d059 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.4.0\n+    rev: v3.15.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -16,11 +16,11 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 23.3.0\n+    rev: 23.10.1\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.1.0a2\n+    rev: 3.1.0\n     hooks:\n     -   id: zpretty\n \n@@ -32,7 +32,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 6.0.0\n+    rev: 6.1.0\n     hooks:\n     -   id: flake8\n \n@@ -44,7 +44,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.4\n+    rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n@@ -66,15 +66,25 @@ repos:\n     hooks:\n     -   id: pyroma\n -   repo: https://github.com/mgedmin/check-python-versions\n-    rev: "0.21.2"\n+    rev: "0.22.0"\n     hooks:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n -   repo: https://github.com/collective/i18ndude\n-    rev: "6.0.0"\n+    rev: "6.1.0"\n     hooks:\n     -   id: i18ndude\n \n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pre_commit]\ndiff --git a/README.rst b/README.rst\nindex 17a029c..beca017 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -125,7 +125,7 @@ There are a few other reasons why you may want to use the wrapper view, even\n in later versions of Zope:\n \n * To support both an earlier version of Zope and Zope 2.12+\n-* To re-use the same form in multiple views or viewlets\n+* To reuse the same form in multiple views or viewlets\n * To use the ``IPageTemplate`` adapter lookup semantics from z3c.form to\n   provide a different default or override template for the overall page\n   layout, while retaining (or indeed customising independently) the default\ndiff --git a/news/1.bugfix b/news/1.bugfix\nnew file mode 100644\nindex 0000000..06945d6\n--- /dev/null\n+++ b/news/1.bugfix\n@@ -0,0 +1,3 @@\n+Replace deprecated ``cgi.FieldStorage`` class with a simple one.\n+This is only used for converting a ``ZPublisher`` ``FileUpload`` to a ``zope.publisher`` one.\n+[maurits]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex eb8b561..3574669 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,6 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n # See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n directory = "news/"\n filename = "CHANGES.rst"\n@@ -116,6 +119,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'five.pt\']\n \n ##\n # Add extra configuration options in .meta.toml:\n@@ -125,7 +129,6 @@ python-dateutil = [\'dateutil\']\n #    "gitpython = [\'git\']",\n #    "pygithub = [\'github\']",\n #  ]\n-#  """\n ##\n \n [tool.check-manifest]\ndiff --git a/src/plone/z3cform/converter.py b/src/plone/z3cform/converter.py\nindex e9b353d..60154eb 100644\n--- a/src/plone/z3cform/converter.py\n+++ b/src/plone/z3cform/converter.py\n@@ -1,10 +1,22 @@\n-import cgi\n import z3c.form.converter\n import z3c.form.interfaces\n import zope.publisher.browser\n import ZPublisher.HTTPRequest\n \n \n+class _SimpleFieldStorage:\n+    """Replacement for cgi.FieldStorage.\n+\n+    The cgi module is deprecated and will be removed in Python 3.13.\n+    This simple class implements only what is needed for the converter below.\n+    """\n+\n+    def __init__(self, value):\n+        self.file = value\n+        self.headers = value.headers\n+        self.filename = value.filename\n+\n+\n class FileUploadDataConverter(z3c.form.converter.FileUploadDataConverter):\n     """Although ZPublisher\'s and zope.publisher\'s FileUpload\n     implementations are almost identical, ``FileUploadDataConverter``\n@@ -18,10 +30,7 @@ class FileUploadDataConverter(z3c.form.converter.FileUploadDataConverter):\n     def toFieldValue(self, value):\n         """See interfaces.IDataConverter"""\n         if isinstance(value, ZPublisher.HTTPRequest.FileUpload):\n-            fieldstorage = cgi.FieldStorage()\n-            fieldstorage.file = value\n-            fieldstorage.headers = value.headers\n-            fieldstorage.filename = value.filename\n+            fieldstorage = _SimpleFieldStorage(value)\n             value = zope.publisher.browser.FileUpload(fieldstorage)\n \n         return super().toFieldValue(value)\ndiff --git a/tox.ini b/tox.ini\nindex 85aeefd..8fa4d62 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -32,6 +32,21 @@ commands =\n     echo "Unrecognized environment name {envname}"\n     false\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -58,7 +73,7 @@ deps =\n     build\n     z3c.dependencychecker==2.11\n commands =\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     dependencychecker\n \n [testenv:dependencies-graph]\n@@ -86,11 +101,20 @@ set_env =\n #  test_environment_variables = """\n #      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n #  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n ##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n ##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n # Specify a custom constraints file in .meta.toml:\n #  [tox]\n #  constraints_file = "https://my-server.com/constraints.txt"\n@@ -128,6 +152,7 @@ deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n     coverage run --branch --source plone.z3cform {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.z3cform {posargs}\n     coverage report -m --format markdown\n@@ -144,12 +169,13 @@ deps =\n     build\n     towncrier\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n     # fake version to not have to install the package\n     # we build the change log as news entries might break\n     # the README that is displayed on PyPI\n     towncrier build --version=100.0.0 --yes\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     twine check dist/*\n \n [testenv:circular]\n@@ -171,6 +197,7 @@ deps =\n     pipdeptree\n     pipforester\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    \n commands =\n     # Generate the full dependency tree\n     sh -c \'pipdeptree -j > forest.json\'\n'

