Repository: plone.app.caching


Branch: refs/heads/2.x
Date: 2023-01-09T21:58:03+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/9accdb1bde127a0244dd51bd40010d13123eceeb

Revert changes to tests to work with the Zope security fix.

We must have an empty byte, not text, otherwise it is an indication that we get a possibly wrong Content-Type in a 304 status.
See https://github.com/zopefoundation/Zope/issues/1089.

This reverts commit 52885bf0f81ccb655196a65226e424ae74b9b253.

Files changed:
A news/1089.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/1089.bugfix b/news/1089.bugfix\nnew file mode 100644\nindex 0000000..250e4b4\n--- /dev/null\n+++ b/news/1089.bugfix\n@@ -0,0 +1,4 @@\n+Revert changes to tests to work with the Zope security fix.\n+We must have an empty byte, not text, otherwise it is an indication that we get a possibly wrong Content-Type in a 304 status.\n+See `Zope issue 1089 <https://github.com/zopefoundation/Zope/issues/1089>`_.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex a8dab3c..6645268 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -69,11 +69,6 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n-    def assertBrowserEmpty(self, browser):\n-        # assert that browser.contents is an empty bytes/string/unicode.\n-        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n-        self.assertFalse(browser.contents)\n-\n     def test_composite_viewsxx(self):\n         # This is a clone of the same test for \'without-caching-proxy\'\n         # Can we just call that test from this context?\n@@ -198,7 +193,11 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -266,7 +265,8 @@ def test_composite_viewsxx(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -359,7 +359,8 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -489,7 +490,8 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request an image scale\n         now = stable_now()\n@@ -540,7 +542,8 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex de07d9d..de9ae20 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -57,11 +57,6 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n-    def assertBrowserEmpty(self, browser):\n-        # assert that browser.contents is an empty bytes/string/unicode.\n-        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n-        self.assertFalse(browser.contents)\n-\n     def test_composite_views(self):\n \n         catalog = self.portal[\'portal_catalog\']\n@@ -193,7 +188,11 @@ def test_composite_views(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -260,7 +259,8 @@ def test_composite_views(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -346,7 +346,8 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -432,7 +433,8 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request an image scale\n         now = stable_now()\n@@ -481,7 +483,8 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers[\'Content-Type\'])\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

Repository: plone.app.caching


Branch: refs/heads/2.x
Date: 2023-01-09T22:48:22+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/e357e9b83a1c2308fa16bbf6428588c237278a52

Fixed header tests on Python 2.

Files changed:
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex 6645268..7ba7833 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -197,7 +197,7 @@ def test_composite_viewsxx(self):\n         # get a possibly wrong Content-Type in a 304 status.\n         # See https://github.com/zopefoundation/Zope/issues/1089.\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -266,7 +266,7 @@ def test_composite_viewsxx(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -360,7 +360,7 @@ def test_content_feeds(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -491,7 +491,7 @@ def test_content_files(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request an image scale\n         now = stable_now()\n@@ -543,7 +543,7 @@ def test_resources(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex de9ae20..260baca 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -192,7 +192,7 @@ def test_composite_views(self):\n         # get a possibly wrong Content-Type in a 304 status.\n         # See https://github.com/zopefoundation/Zope/issues/1089.\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -260,7 +260,7 @@ def test_composite_views(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -347,7 +347,7 @@ def test_content_feeds(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -434,7 +434,7 @@ def test_content_files(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request an image scale\n         now = stable_now()\n@@ -484,7 +484,7 @@ def test_resources(self):\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n         self.assertEqual(b\'\', browser.contents)\n-        self.assertFalse(browser.headers[\'Content-Type\'])\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

Repository: plone.app.caching


Branch: refs/heads/2.x
Date: 2023-01-10T14:31:04+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/b40e63edafc8bce7a25664d56ffb8e350e85d4f4

Merge pull request #110 from plone/maurits-fix-tests-again-2x

Revert changes to tests to work with the Zope security fix.

Files changed:
A news/1089.bugfix
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/news/1089.bugfix b/news/1089.bugfix\nnew file mode 100644\nindex 0000000..250e4b4\n--- /dev/null\n+++ b/news/1089.bugfix\n@@ -0,0 +1,4 @@\n+Revert changes to tests to work with the Zope security fix.\n+We must have an empty byte, not text, otherwise it is an indication that we get a possibly wrong Content-Type in a 304 status.\n+See `Zope issue 1089 <https://github.com/zopefoundation/Zope/issues/1089>`_.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex a8dab3c..7ba7833 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -69,11 +69,6 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n-    def assertBrowserEmpty(self, browser):\n-        # assert that browser.contents is an empty bytes/string/unicode.\n-        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n-        self.assertFalse(browser.contents)\n-\n     def test_composite_viewsxx(self):\n         # This is a clone of the same test for \'without-caching-proxy\'\n         # Can we just call that test from this context?\n@@ -198,7 +193,11 @@ def test_composite_viewsxx(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -266,7 +265,8 @@ def test_composite_viewsxx(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -359,7 +359,8 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -489,7 +490,8 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request an image scale\n         now = stable_now()\n@@ -540,7 +542,8 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex de07d9d..260baca 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -57,11 +57,6 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n-    def assertBrowserEmpty(self, browser):\n-        # assert that browser.contents is an empty bytes/string/unicode.\n-        self.assertIsInstance(browser.contents, (six.binary_type, six.text_type))\n-        self.assertFalse(browser.contents)\n-\n     def test_composite_views(self):\n \n         catalog = self.portal[\'portal_catalog\']\n@@ -193,7 +188,11 @@ def test_composite_views(self):\n         browser.open(self.portal[\'f1\'][\'d1\'].absolute_url())\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        # We MUST have an empty byte, not text, otherwise it is an indication that we\n+        # get a possibly wrong Content-Type in a 304 status.\n+        # See https://github.com/zopefoundation/Zope/issues/1089.\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the anonymous folder\n         now = stable_now()\n@@ -260,7 +259,8 @@ def test_composite_views(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Edit the page to update the etag\n         testText2 = \'Testing... body two\'\n@@ -346,7 +346,8 @@ def test_content_feeds(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request the authenticated rss feed\n         now = stable_now()\n@@ -432,7 +433,8 @@ def test_content_files(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request an image scale\n         now = stable_now()\n@@ -481,7 +483,8 @@ def test_resources(self):\n                          browser.headers[\'X-Cache-Operation\'])\n         # This should be a 304 response\n         self.assertEqual(\'304 Not Modified\', browser.headers[\'Status\'])\n-        self.assertBrowserEmpty(browser)\n+        self.assertEqual(b\'\', browser.contents)\n+        self.assertFalse(browser.headers.get(\'Content-Type\'))\n \n         # Request a large datafile (over 64K) to test files that use\n         # the "response.write()" function to initiate a streamed response.\n'

