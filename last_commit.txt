Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-05-30T14:56:20+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/c55c689f5f053fc65f91066e7b0d5930fe29e480

Remove old dependencies mappings from .meta.toml.

Files changed:
M .meta.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex ad7470f..4dbf6d6 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -5,10 +5,6 @@ template = "default"\n commit-id = "13d8d6c0"\n \n [dependencies]\n-mappings = [\n-    "Zope = [\'OFS\', \'Products.Five\', \'Products.PageTemplates\', \'ZPublisher\']",\n-    "python-dateutil = [\'dateutil\']",\n-    ]\n ignores = "[\'zope.dublincore\']"\n \n [check-manifest]\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-05-30T14:56:29+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/4364fb66cd940fef80506f436b3d8ab07976e66b

Configuring with plone/meta

Files changed:
A .github/workflows/meta.yml
A news/changelog_template.jinja
A news/fb4615d7.internal
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.cfg
M tox.ini

b'diff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..ce835e8\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,27 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.meta.toml b/.meta.toml\nindex 4dbf6d6..05b7d96 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -2,7 +2,7 @@\n # https://github.com/plone/meta/tree/master/config/default\n [meta]\n template = "default"\n-commit-id = "13d8d6c0"\n+commit-id = "fb4615d7"\n \n [dependencies]\n ignores = "[\'zope.dublincore\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5c..18bcaad 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -32,6 +32,7 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +41,8 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\ndiff --git a/news/changelog_template.jinja b/news/changelog_template.jinja\nnew file mode 100644\nindex 0000000..b35bff3\n--- /dev/null\n+++ b/news/changelog_template.jinja\n@@ -0,0 +1,15 @@\n+{% if sections[""] %}\n+{% for category, val in definitions.items() if category in sections[""] %}\n+\n+### {{ definitions[category][\'name\'] }}\n+\n+{% for text, values in sections[""][category].items() %}\n+- {{ text }} {{ values|join(\', \') }}\n+{% endfor %}\n+\n+{% endfor %}\n+{% else %}\n+No significant changes.\n+\n+\n+{% endif %}\n\\ No newline at end of file\ndiff --git a/news/fb4615d7.internal b/news/fb4615d7.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/fb4615d7.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex ea13c1f..7a414dd 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,11 +1,11 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n [tool.towncrier]\n-filename = "CHANGES.md"\n directory = "news/"\n+filename = "CHANGES.md"\n start_string = "<!-- towncrier release notes start -->\\n"\n title_format = "## {version} ({project_date})"\n-template = "docs/changelog_template.jinja"\n+template = "news/changelog_template.jinja"\n underlines = ["", "", ""]\n \n [[tool.towncrier.type]]\n@@ -45,9 +45,46 @@ profile = "plone"\n target-version = ["py38"]\n \n [tool.codespell]\n-ignore-words-list = "discreet,ordner"\n+ignore-words-list = "discreet,discreet,ordner"\n+skip = "*.po,"\n \n [tool.dependencychecker]\n-ignore-packages = [\'zope.dublincore\']\n-Zope = [\'OFS\', \'Products.Five\', \'Products.PageTemplates\', \'ZPublisher\']\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n+  # Zope dependencies\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n+]\n+\'plone.base\' = [\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n+]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'zope.dublincore\']\ndiff --git a/setup.cfg b/setup.cfg\nindex edba85f..1bcc572 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -1,8 +1,5 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n [flake8]\n doctests = 1\n ignore =\n@@ -21,10 +18,3 @@ ignore =\n     .meta.toml\n     .pre-commit-config.yaml\n     tox.ini\n-    lint-requirements.txt\n-    .tox\n-    constraints-mxdev.txt\n-    instance.yaml\n-    Makefile\n-    mx.ini\n-    requirements-mxdev.txt\ndiff --git a/tox.ini b/tox.ini\nindex 02d93a9..356fefc 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,14 +1,14 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n [tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n \n-[testenv]\n-allowlist_externals =\n-    sh\n \n [testenv:format]\n description = automatically reformat code\n@@ -30,22 +30,83 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the package\'s dependencies\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    zope-testrunner --all --test-path={toxinidir} -s plone.app.caching {posargs}\n+extras =\n+    test\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n deps =\n+    coverage\n     zope.testrunner\n-    plone.restapi\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    zope-testrunner --test-path={toxinidir} -s plone.app.caching\n+    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.caching {posargs}\n+    coverage report -m --format markdown\n extras =\n     test\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+usedevelop = true\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-05-30T14:57:03+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/ee29f9da56ddbc437d0907febe68cf2c1a4f9afb

Removed docs/changelog_template.jinja.  This is in news/ now.

Files changed:
D docs/changelog_template.jinja

b'diff --git a/docs/changelog_template.jinja b/docs/changelog_template.jinja\ndeleted file mode 100644\nindex b35bff3..0000000\n--- a/docs/changelog_template.jinja\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-{% if sections[""] %}\n-{% for category, val in definitions.items() if category in sections[""] %}\n-\n-### {{ definitions[category][\'name\'] }}\n-\n-{% for text, values in sections[""][category].items() %}\n-- {{ text }} {{ values|join(\', \') }}\n-{% endfor %}\n-\n-{% endfor %}\n-{% else %}\n-No significant changes.\n-\n-\n-{% endif %}\n\\ No newline at end of file\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-05-30T14:58:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/357989620c223c35e70de3c459c84f55a1735740

'discreet' is a default codespell ignore now.

Files changed:
M .meta.toml
M pyproject.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex 05b7d96..b727976 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -18,4 +18,4 @@ additional-ignores = [\n     ]\n \n [codespell]\n-additional-ignores = "discreet,ordner"\n+additional-ignores = "ordner"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 7a414dd..c78ed3e 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -45,7 +45,7 @@ profile = "plone"\n target-version = ["py38"]\n \n [tool.codespell]\n-ignore-words-list = "discreet,discreet,ordner"\n+ignore-words-list = "discreet,ordner"\n skip = "*.po,"\n \n [tool.dependencychecker]\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-05-30T15:09:50+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/01b31f0aa23f7acbc8d7af50913e5530ad6f6ae4

Fix extra check-manifest ignores.

Files changed:
M .meta.toml
M setup.cfg

b'diff --git a/.meta.toml b/.meta.toml\nindex b727976..ee99d2f 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,15 +7,15 @@ commit-id = "fb4615d7"\n [dependencies]\n ignores = "[\'zope.dublincore\']"\n \n-[check-manifest]\n-additional-ignores = [\n-    ".tox",\n-    "constraints-mxdev.txt",\n-    "instance.yaml",\n-    "Makefile",\n-    "mx.ini",\n-    "requirements-mxdev.txt",\n-    ]\n+[setup]\n+check_manifest_ignore = """\n+    .tox\n+    constraints-mxdev.txt\n+    instance.yaml\n+    Makefile\n+    mx.ini\n+    requirements-mxdev.txt\n+"""\n \n [codespell]\n additional-ignores = "ordner"\ndiff --git a/setup.cfg b/setup.cfg\nindex 1bcc572..fc77874 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -18,3 +18,9 @@ ignore =\n     .meta.toml\n     .pre-commit-config.yaml\n     tox.ini\n+    .tox\n+    constraints-mxdev.txt\n+    instance.yaml\n+    Makefile\n+    mx.ini\n+    requirements-mxdev.txt\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-06-02T11:29:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/c67548ec7a74d770b219d0091772d40d8b3fa9e9

Fix purge test when restapi is not available.

With `plone.restapi` we have an extra `@comments` purge path.

Files changed:
M plone/app/caching/tests/test_purge.py

b'diff --git a/plone/app/caching/tests/test_purge.py b/plone/app/caching/tests/test_purge.py\nindex a37acc6..b101758 100644\n--- a/plone/app/caching/tests/test_purge.py\n+++ b/plone/app/caching/tests/test_purge.py\n@@ -209,18 +209,22 @@ def test_parent_not_default_view(self):\n         self.assertEqual([], list(purger.getAbsolutePaths()))\n \n     def test_parent_default_view(self):\n+        from plone.app.caching.purge import HAS_RESTAPI\n+\n         context = FauxContent("default-view").__of__(FauxContent("bar"))\n         purger = ContentPurgePaths(context)\n+        expected = [\n+            "/bar/default-view/",\n+            "/bar/default-view/view",\n+            "/bar/default-view/default-view",\n+            "/bar",\n+            "/bar/",\n+            "/bar/view",\n+        ]\n+        if HAS_RESTAPI:\n+            expected.append("/bar/@comments")\n         self.assertEqual(\n-            [\n-                "/bar/default-view/",\n-                "/bar/default-view/view",\n-                "/bar/default-view/default-view",\n-                "/bar",\n-                "/bar/",\n-                "/bar/view",\n-                "/bar/@comments",\n-            ],\n+            expected,\n             list(purger.getRelativePaths()),\n         )\n         self.assertEqual([], list(purger.getAbsolutePaths()))\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-06-02T11:37:08+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/c34f42e0d2791c4b37803e42d420e64c8770c423

chore: plone.testing.z2 -&gt; zope

Files changed:
M plone/app/caching/tests/test_integration.py
M plone/app/caching/tests/test_operation_default.py
M plone/app/caching/tests/test_operation_parameters.py
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py

b'diff --git a/plone/app/caching/tests/test_integration.py b/plone/app/caching/tests/test_integration.py\nindex 7e00036..a6fd622 100644\n--- a/plone/app/caching/tests/test_integration.py\n+++ b/plone/app/caching/tests/test_integration.py\n@@ -14,7 +14,7 @@\n from plone.caching.interfaces import ICacheSettings\n from plone.namedfile.file import NamedImage\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n \ndiff --git a/plone/app/caching/tests/test_operation_default.py b/plone/app/caching/tests/test_operation_default.py\nindex 0b75a0b..7e81dbc 100644\n--- a/plone/app/caching/tests/test_operation_default.py\n+++ b/plone/app/caching/tests/test_operation_default.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n \ndiff --git a/plone/app/caching/tests/test_operation_parameters.py b/plone/app/caching/tests/test_operation_parameters.py\nindex 0f5923a..ff6be35 100644\n--- a/plone/app/caching/tests/test_operation_parameters.py\n+++ b/plone/app/caching/tests/test_operation_parameters.py\n@@ -6,7 +6,7 @@\n from plone.app.textfield.value import RichTextValue\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n \ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex cdb62c9..1e927a0 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -16,7 +16,7 @@\n from plone.cachepurging.interfaces import IPurger\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from Products.CMFCore.FSFile import FSFile\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 3d9076a..49f2bf4 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -12,7 +12,7 @@\n from plone.cachepurging.interfaces import ICachePurgingSettings\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-06-02T11:47:15+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/fe921163a8fc4a3e9e2146292494388b94c1faec

Removed 'xx' from end of test method.

Files changed:
M plone/app/caching/tests/test_profile_with_caching_proxy.py

b"diff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex 1e927a0..e99fa42 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -68,7 +68,7 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n-    def test_composite_viewsxx(self):\n+    def test_composite_views(self):\n         # This is a clone of the same test for 'without-caching-proxy'\n         # Can we just call that test from this context?\n \n"

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-06-02T12:07:20+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/53836bd8d8af470b0e02c7e8849584b3ddf775f3

Fixed tests that compared a stable time with a ten year old Expires handler.

Fixes https://github.com/plone/plone.app.caching/issues/127

Files changed:
A news/127.tests
M plone/app/caching/tests/test_utils.py

b'diff --git a/news/127.tests b/news/127.tests\nnew file mode 100644\nindex 0000000..11982de\n--- /dev/null\n+++ b/news/127.tests\n@@ -0,0 +1,2 @@\n+Fixed tests that compared a stable time with a ten year old Expires handler.\n+[maurits]\ndiff --git a/plone/app/caching/tests/test_utils.py b/plone/app/caching/tests/test_utils.py\nindex 287c9c6..03ebb69 100644\n--- a/plone/app/caching/tests/test_utils.py\n+++ b/plone/app/caching/tests/test_utils.py\n@@ -1,6 +1,7 @@\n from Acquisition import Explicit\n from datetime import date\n from datetime import datetime\n+from datetime import timedelta\n from plone.app.caching.interfaces import IPloneCacheSettings\n from plone.app.caching.utils import getObjectDefaultView\n from plone.app.caching.utils import isPurged\n@@ -25,9 +26,14 @@\n \n \n def stable_now():\n-    """Patch localized_now to allow stable results in tests."""\n+    """Patch localized_now to allow stable results in tests.\n+\n+    Note that a fixed date is not good enough:\n+    several tests compare this date with an Expires header,\n+    and this header may be set to ten years ago.\n+    """\n     tzinfo = pytz.timezone(TEST_TIMEZONE)\n-    now = datetime(2013, 6, 5, 10, 0, 0).replace(microsecond=0)\n+    now = datetime.now() - timedelta(days=1000)\n     now = tzinfo.localize(now)  # set tzinfo with correct DST offset\n     return now\n \n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-06-02T12:18:25+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.caching/commit/14e2d3600cc5980db78232f1e6f23868dc460963

Configuring with plone/meta, remove setup.cfg

Files changed:
A .flake8
A news/e08b1234.internal
M .editorconfig
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..bb09dd7 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -37,3 +38,12 @@ indent_size = 2\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 62%\nrename from setup.cfg\nrename to .flake8\nindex fc77874..c156803 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -11,16 +12,3 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-    .tox\n-    constraints-mxdev.txt\n-    instance.yaml\n-    Makefile\n-    mx.ini\n-    requirements-mxdev.txt\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex ce835e8..4748f0f 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n name: Meta\n on:\n   push:\ndiff --git a/.gitignore b/.gitignore\nindex e1a30dc..f89f86b 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,19 +1,49 @@\n-*~\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n *.pyc\n-.installed.cfg\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+\n+# venv / buildout related\n bin/\n develop-eggs/\n-downloads/\n eggs/\n-include/\n-instance/\n+.eggs/\n+etc/\n+.installed.cfg\n lib/\n+lib64\n+.mr.developer.cfg\n parts/\n+pyvenv.cfg\n var/\n-# Tox\n-.tox\n+\n # mxdev\n-constraints-mxdev.txt\n-requirements-mxdev.txt\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex ee99d2f..8a1eca0 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,21 +1,17 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "fb4615d7"\n+commit-id = "e08b1234"\n \n-[dependencies]\n-ignores = "[\'zope.dublincore\']"\n-\n-[setup]\n-check_manifest_ignore = """\n-    .tox\n-    constraints-mxdev.txt\n-    instance.yaml\n-    Makefile\n-    mx.ini\n-    requirements-mxdev.txt\n+[pyproject]\n+check_manifest_ignores = """\n+    ".tox",\n+    "constraints-mxdev.txt",\n+    "instance.yaml",\n+    "Makefile",\n+    "requirements-mxdev.txt",\n """\n-\n-[codespell]\n-additional-ignores = "ordner"\n+codespell_ignores = "ordner"\n+dependencies_ignores = "[\'zope.dublincore\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 18bcaad..46b7aec 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -33,6 +34,13 @@ repos:\n         additional_dependencies:\n           - tomli\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -46,3 +54,15 @@ repos:\n     hooks:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/e08b1234.internal b/news/e08b1234.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/e08b1234.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex c78ed3e..796eff5 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n directory = "news/"\n filename = "CHANGES.md"\n@@ -47,6 +48,12 @@ target-version = ["py38"]\n [tool.codespell]\n ignore-words-list = "discreet,ordner"\n skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n \n [tool.dependencychecker]\n Zope = [\n@@ -88,3 +95,47 @@ Zope = [\n ]\n python-dateutil = [\'dateutil\']\n ignore-packages = [\'zope.dublincore\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+    ".tox",\n+    "constraints-mxdev.txt",\n+    "instance.yaml",\n+    "Makefile",\n+    "requirements-mxdev.txt",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 356fefc..fae7636 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n@@ -9,6 +10,27 @@ envlist =\n     dependencies\n \n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n+\n+[testenv]\n+skip_install = true\n+allowlist_externals =\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -40,7 +62,8 @@ commands =\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph out of the package\'s dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -52,6 +75,7 @@ commands =\n [testenv:test]\n description = run the distribution tests\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -65,6 +89,7 @@ extras =\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -72,7 +97,7 @@ deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.caching {posargs}\n+    coverage run --source plone.app.caching {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.caching {posargs}\n     coverage report -m --format markdown\n extras =\n     test\n@@ -93,10 +118,10 @@ commands =\n     python -m build --sdist --no-isolation\n     twine check dist/*\n \n-\n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-usedevelop = true\n+use_develop = true\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -110,3 +135,12 @@ commands =\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n     pipforester -i forest.json --check-cycles\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2023-06-02T21:02:28+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.caching/commit/3401ed6c731b3bb4ab52cee9d402aed3a96c40db

Merge pull request #130 from plone/config-with-default-template-33092427

Config with default template 33092427

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/127.tests
A news/changelog_template.jinja
A news/e08b1234.internal
A news/fb4615d7.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M plone/app/caching/tests/test_integration.py
M plone/app/caching/tests/test_operation_default.py
M plone/app/caching/tests/test_operation_parameters.py
M plone/app/caching/tests/test_profile_with_caching_proxy.py
M plone/app/caching/tests/test_profile_without_caching_proxy.py
M plone/app/caching/tests/test_purge.py
M plone/app/caching/tests/test_utils.py
M pyproject.toml
M tox.ini
D docs/changelog_template.jinja
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..bb09dd7 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -37,3 +38,12 @@ indent_size = 2\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 56%\nrename from setup.cfg\nrename to .flake8\nindex edba85f..c156803 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -14,17 +12,3 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-    lint-requirements.txt\n-    .tox\n-    constraints-mxdev.txt\n-    instance.yaml\n-    Makefile\n-    mx.ini\n-    requirements-mxdev.txt\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..4748f0f\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex e1a30dc..f89f86b 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,19 +1,49 @@\n-*~\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n *.pyc\n-.installed.cfg\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+\n+# venv / buildout related\n bin/\n develop-eggs/\n-downloads/\n eggs/\n-include/\n-instance/\n+.eggs/\n+etc/\n+.installed.cfg\n lib/\n+lib64\n+.mr.developer.cfg\n parts/\n+pyvenv.cfg\n var/\n-# Tox\n-.tox\n+\n # mxdev\n-constraints-mxdev.txt\n-requirements-mxdev.txt\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex ad7470f..8a1eca0 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,25 +1,17 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "13d8d6c0"\n+commit-id = "e08b1234"\n \n-[dependencies]\n-mappings = [\n-    "Zope = [\'OFS\', \'Products.Five\', \'Products.PageTemplates\', \'ZPublisher\']",\n-    "python-dateutil = [\'dateutil\']",\n-    ]\n-ignores = "[\'zope.dublincore\']"\n-\n-[check-manifest]\n-additional-ignores = [\n+[pyproject]\n+check_manifest_ignores = """\n     ".tox",\n     "constraints-mxdev.txt",\n     "instance.yaml",\n     "Makefile",\n-    "mx.ini",\n     "requirements-mxdev.txt",\n-    ]\n-\n-[codespell]\n-additional-ignores = "discreet,ordner"\n+"""\n+codespell_ignores = "ordner"\n+dependencies_ignores = "[\'zope.dublincore\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5c..46b7aec 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -32,6 +33,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +49,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/127.tests b/news/127.tests\nnew file mode 100644\nindex 0000000..11982de\n--- /dev/null\n+++ b/news/127.tests\n@@ -0,0 +1,2 @@\n+Fixed tests that compared a stable time with a ten year old Expires handler.\n+[maurits]\ndiff --git a/docs/changelog_template.jinja b/news/changelog_template.jinja\nsimilarity index 100%\nrename from docs/changelog_template.jinja\nrename to news/changelog_template.jinja\ndiff --git a/news/e08b1234.internal b/news/e08b1234.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/e08b1234.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/news/fb4615d7.internal b/news/fb4615d7.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/fb4615d7.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/caching/tests/test_integration.py b/plone/app/caching/tests/test_integration.py\nindex 7e00036..a6fd622 100644\n--- a/plone/app/caching/tests/test_integration.py\n+++ b/plone/app/caching/tests/test_integration.py\n@@ -14,7 +14,7 @@\n from plone.caching.interfaces import ICacheSettings\n from plone.namedfile.file import NamedImage\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n \ndiff --git a/plone/app/caching/tests/test_operation_default.py b/plone/app/caching/tests/test_operation_default.py\nindex 0b75a0b..7e81dbc 100644\n--- a/plone/app/caching/tests/test_operation_default.py\n+++ b/plone/app/caching/tests/test_operation_default.py\n@@ -6,7 +6,7 @@\n from plone.app.testing import TEST_USER_PASSWORD\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n \ndiff --git a/plone/app/caching/tests/test_operation_parameters.py b/plone/app/caching/tests/test_operation_parameters.py\nindex 0f5923a..ff6be35 100644\n--- a/plone/app/caching/tests/test_operation_parameters.py\n+++ b/plone/app/caching/tests/test_operation_parameters.py\n@@ -6,7 +6,7 @@\n from plone.app.textfield.value import RichTextValue\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from zope.component import getUtility\n from zope.globalrequest import setRequest\n \ndiff --git a/plone/app/caching/tests/test_profile_with_caching_proxy.py b/plone/app/caching/tests/test_profile_with_caching_proxy.py\nindex cdb62c9..e99fa42 100644\n--- a/plone/app/caching/tests/test_profile_with_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_with_caching_proxy.py\n@@ -16,7 +16,7 @@\n from plone.cachepurging.interfaces import IPurger\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from Products.CMFCore.FSFile import FSFile\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n@@ -68,7 +68,7 @@ def setUp(self):\n     def tearDown(self):\n         setRequest(None)\n \n-    def test_composite_viewsxx(self):\n+    def test_composite_views(self):\n         # This is a clone of the same test for \'without-caching-proxy\'\n         # Can we just call that test from this context?\n \ndiff --git a/plone/app/caching/tests/test_profile_without_caching_proxy.py b/plone/app/caching/tests/test_profile_without_caching_proxy.py\nindex 3d9076a..49f2bf4 100644\n--- a/plone/app/caching/tests/test_profile_without_caching_proxy.py\n+++ b/plone/app/caching/tests/test_profile_without_caching_proxy.py\n@@ -12,7 +12,7 @@\n from plone.cachepurging.interfaces import ICachePurgingSettings\n from plone.caching.interfaces import ICacheSettings\n from plone.registry.interfaces import IRegistry\n-from plone.testing.z2 import Browser\n+from plone.testing.zope import Browser\n from Products.CMFCore.utils import getToolByName\n from zope.component import getUtility\n from zope.globalrequest import setRequest\ndiff --git a/plone/app/caching/tests/test_purge.py b/plone/app/caching/tests/test_purge.py\nindex a37acc6..b101758 100644\n--- a/plone/app/caching/tests/test_purge.py\n+++ b/plone/app/caching/tests/test_purge.py\n@@ -209,18 +209,22 @@ def test_parent_not_default_view(self):\n         self.assertEqual([], list(purger.getAbsolutePaths()))\n \n     def test_parent_default_view(self):\n+        from plone.app.caching.purge import HAS_RESTAPI\n+\n         context = FauxContent("default-view").__of__(FauxContent("bar"))\n         purger = ContentPurgePaths(context)\n+        expected = [\n+            "/bar/default-view/",\n+            "/bar/default-view/view",\n+            "/bar/default-view/default-view",\n+            "/bar",\n+            "/bar/",\n+            "/bar/view",\n+        ]\n+        if HAS_RESTAPI:\n+            expected.append("/bar/@comments")\n         self.assertEqual(\n-            [\n-                "/bar/default-view/",\n-                "/bar/default-view/view",\n-                "/bar/default-view/default-view",\n-                "/bar",\n-                "/bar/",\n-                "/bar/view",\n-                "/bar/@comments",\n-            ],\n+            expected,\n             list(purger.getRelativePaths()),\n         )\n         self.assertEqual([], list(purger.getAbsolutePaths()))\ndiff --git a/plone/app/caching/tests/test_utils.py b/plone/app/caching/tests/test_utils.py\nindex 287c9c6..03ebb69 100644\n--- a/plone/app/caching/tests/test_utils.py\n+++ b/plone/app/caching/tests/test_utils.py\n@@ -1,6 +1,7 @@\n from Acquisition import Explicit\n from datetime import date\n from datetime import datetime\n+from datetime import timedelta\n from plone.app.caching.interfaces import IPloneCacheSettings\n from plone.app.caching.utils import getObjectDefaultView\n from plone.app.caching.utils import isPurged\n@@ -25,9 +26,14 @@\n \n \n def stable_now():\n-    """Patch localized_now to allow stable results in tests."""\n+    """Patch localized_now to allow stable results in tests.\n+\n+    Note that a fixed date is not good enough:\n+    several tests compare this date with an Expires header,\n+    and this header may be set to ten years ago.\n+    """\n     tzinfo = pytz.timezone(TEST_TIMEZONE)\n-    now = datetime(2013, 6, 5, 10, 0, 0).replace(microsecond=0)\n+    now = datetime.now() - timedelta(days=1000)\n     now = tzinfo.localize(now)  # set tzinfo with correct DST offset\n     return now\n \ndiff --git a/pyproject.toml b/pyproject.toml\nindex ea13c1f..796eff5 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,11 +1,12 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.md"\n directory = "news/"\n+filename = "CHANGES.md"\n start_string = "<!-- towncrier release notes start -->\\n"\n title_format = "## {version} ({project_date})"\n-template = "docs/changelog_template.jinja"\n+template = "news/changelog_template.jinja"\n underlines = ["", "", ""]\n \n [[tool.towncrier.type]]\n@@ -46,8 +47,95 @@ target-version = ["py38"]\n \n [tool.codespell]\n ignore-words-list = "discreet,ordner"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n \n [tool.dependencychecker]\n-ignore-packages = [\'zope.dublincore\']\n-Zope = [\'OFS\', \'Products.Five\', \'Products.PageTemplates\', \'ZPublisher\']\n+Zope = [\n+  # Zope own provided namespaces\n+  \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n+  \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n+  \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n+  # Zope dependencies\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n+]\n+\'plone.base\' = [\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n+]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'zope.dublincore\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+    ".tox",\n+    "constraints-mxdev.txt",\n+    "instance.yaml",\n+    "Makefile",\n+    "requirements-mxdev.txt",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 02d93a9..fae7636 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,14 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n+# We need 4.4.0 for constrain_package_deps.\n+min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -30,22 +52,95 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,pipdeptree,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n deps =\n     zope.testrunner\n-    plone.restapi\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    zope-testrunner --test-path={toxinidir} -s plone.app.caching\n+    zope-testrunner --all --test-path={toxinidir} -s plone.app.caching {posargs}\n extras =\n     test\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run --source plone.app.caching {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.caching {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

