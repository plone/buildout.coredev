Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-23T16:48:17+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/68b7ebf7918193af7a0ee03476a3d46f14ea1496

jmeter: enable all threads again

Files changed:
M performance.jmx

b'diff --git a/performance.jmx b/performance.jmx\nindex 43e6b100..528aade1 100644\n--- a/performance.jmx\n+++ b/performance.jmx\n@@ -450,7 +450,7 @@\n         </ResultCollector>\n         <hashTree/>\n       </hashTree>\n-      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Authenticated Users (Read)" enabled="false">\n+      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Authenticated Users (Read)" enabled="true">\n         <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>\n         <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">\n           <boolProp name="LoopController.continue_forever">false</boolProp>\n@@ -891,7 +891,7 @@\n         </ResultCollector>\n         <hashTree/>\n       </hashTree>\n-      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anonymous Users (Read)" enabled="false">\n+      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anonymous Users (Read)" enabled="true">\n         <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>\n         <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">\n           <boolProp name="LoopController.continue_forever">false</boolProp>\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-24T15:27:36+02:00
Author: Timo Stollenwerk (tisto) <stollenwerk@kitconcept.com>
Commit: https://github.com/plone/plone.restapi/commit/4dcb87e307909539e57bc88601c7d7e8ae273d87

Merge branch 'master' of github.com:plone/plone.restapi

Files changed:
A performance/images.py
A src/plone/restapi/tests/images/image-10mb.jpg
A src/plone/restapi/tests/images/image-1mb.jpg
A src/plone/restapi/tests/images/image-2mb.jpg
A src/plone/restapi/tests/images/image-3mb.jpg
M Jenkinsfile
M Makefile
M plone-5.2.x.cfg
M src/plone/restapi/tests/performance.py

b'diff --git a/Jenkinsfile b/Jenkinsfile\nindex 8b225286..bde970df 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -29,8 +29,11 @@ pipeline {\n         sh "bin/buildout -c plone-5.2.x-performance.cfg"\n         sh "bin/instance start"\n         sh "sleep 20"\n-        sh "jmeter -n -t performance.jmx -l jmeter.csv"\n-        // sh "cat jmeter.csv"\n+\n+        // sh "jmeter -n -t performance.jmx -l jmeter.csv"\n+        sh "bin/pip install locust"\n+        sh "bin/locust -f performance/images.py --no-web -c 100 -r 10 --run-time 1m --host http://localhost:12345/Plone"\n+\n         sh "bin/instance stop"\n       }\n       post {\ndiff --git a/Makefile b/Makefile\nindex 18e989cc..5f715f56 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -85,6 +85,9 @@ test:  ## Test\n test-performance:\n \tjmeter -n -t performance.jmx -l jmeter.jtl\n \n+start-locust:\n+\tbin/locust -f performance/images.py --no-web -c 1000 -r 100 --run-time 1m --host http://localhost:12345/Plone\n+\n .PHONY: Code Analysis\n code-analysis:  ## Code Analysis\n \tbin/code-analysis\ndiff --git a/performance/images.py b/performance/images.py\nnew file mode 100644\nindex 00000000..da1c59a7\n--- /dev/null\n+++ b/performance/images.py\n@@ -0,0 +1,159 @@\n+from locust import HttpLocust, TaskSet, between\n+\n+\n+def image_01mb_get(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-1mb/@@images/image.jpeg",\n+        headers=headers,\n+        name="Image 01 MB GET",\n+    )\n+\n+\n+def image_01mb_get_scale_large(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-1mb/@@images/image/large",\n+        headers=headers,\n+        name="Image 01 MB GET (Scale Large)",\n+    )\n+\n+\n+def image_01mb_get_scale_preview(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-1mb/@@images/image/preview",\n+        headers=headers,\n+        name="Image 01 MB GET (Scale Preview)",\n+    )\n+\n+\n+def image_01mb_get_scale_tile(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-1mb/@@images/image/tile",\n+        headers=headers,\n+        name="Image 01 MB GET (Scale Tile)",\n+    )\n+\n+\n+def image_02mb_get(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-2mb/@@images/image.jpeg",\n+        headers=headers,\n+        name="Image 02 MB GET",\n+    )\n+\n+\n+def image_03mb_get(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-3mb/@@images/image.jpeg",\n+        headers=headers,\n+        name="Image 03 MB GET",\n+    )\n+\n+\n+def image_10mb_get(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-10mb/@@images/image.jpeg",\n+        headers=headers,\n+        name="Image 10 MB GET",\n+    )\n+\n+\n+def image_10mb_get_scale_large(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-10mb/@@images/image/large",\n+        headers=headers,\n+        name="Image 10 MB GET (Scale Large)",\n+    )\n+\n+\n+def image_10mb_get_scale_preview(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-10mb/@@images/image/preview",\n+        headers=headers,\n+        name="Image 10 MB GET (Scale Preview)",\n+    )\n+\n+\n+def image_10mb_get_scale_tile(self):\n+    headers = {\n+        "Accept": "application/json",\n+        "Authorization": "Basic YWRtaW46YWRtaW4=",\n+        "Content-Type": "application/json",\n+    }\n+    self.client.get(\n+        "/testfolder-read/image-10mb/@@images/image/tile",\n+        headers=headers,\n+        name="Image 10 MB GET (Scale Tile)",\n+    )\n+\n+\n+class UserBehavior(TaskSet):\n+    tasks = {\n+        image_01mb_get: 1,\n+        image_01mb_get_scale_large: 1,\n+        image_01mb_get_scale_preview: 1,\n+        image_01mb_get_scale_tile: 1,\n+        image_02mb_get: 1,\n+        image_03mb_get: 1,\n+        image_10mb_get: 1,\n+        image_10mb_get_scale_large: 1,\n+        image_10mb_get_scale_preview: 1,\n+        image_10mb_get_scale_tile: 1,\n+    }\n+\n+    def on_start(self):\n+        # login(self)\n+        pass\n+\n+    def on_stop(self):\n+        # logout(self)\n+        pass\n+\n+\n+class WebsiteUser(HttpLocust):\n+    task_set = UserBehavior\n+    wait_time = between(5.0, 9.0)\ndiff --git a/plone-5.2.x.cfg b/plone-5.2.x.cfg\nindex 46149643..3c0e6edd 100644\n--- a/plone-5.2.x.cfg\n+++ b/plone-5.2.x.cfg\n@@ -4,3 +4,6 @@ extends =\n     http://dist.plone.org/release/5.2.1/versions.cfg\n find-links += http://dist.plone.org/thirdparty/\n versions=versions\n+\n+[versions]\n+plone.namedfile = 5.3.0\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/images/image-10mb.jpg b/src/plone/restapi/tests/images/image-10mb.jpg\nnew file mode 100644\nindex 00000000..b1be1000\nBinary files /dev/null and b/src/plone/restapi/tests/images/image-10mb.jpg differ\ndiff --git a/src/plone/restapi/tests/images/image-1mb.jpg b/src/plone/restapi/tests/images/image-1mb.jpg\nnew file mode 100644\nindex 00000000..abb01938\nBinary files /dev/null and b/src/plone/restapi/tests/images/image-1mb.jpg differ\ndiff --git a/src/plone/restapi/tests/images/image-2mb.jpg b/src/plone/restapi/tests/images/image-2mb.jpg\nnew file mode 100644\nindex 00000000..9c11eb9a\nBinary files /dev/null and b/src/plone/restapi/tests/images/image-2mb.jpg differ\ndiff --git a/src/plone/restapi/tests/images/image-3mb.jpg b/src/plone/restapi/tests/images/image-3mb.jpg\nnew file mode 100644\nindex 00000000..7c5da75a\nBinary files /dev/null and b/src/plone/restapi/tests/images/image-3mb.jpg differ\ndiff --git a/src/plone/restapi/tests/performance.py b/src/plone/restapi/tests/performance.py\nindex cc9513f7..81ae1225 100644\n--- a/src/plone/restapi/tests/performance.py\n+++ b/src/plone/restapi/tests/performance.py\n@@ -2,6 +2,7 @@\n from datetime import datetime\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.interfaces import IDexterityContent\n+from plone.namedfile.file import NamedBlobImage\n from Products.CMFCore.utils import getToolByName\n from six.moves import range\n from zope.component.hooks import getSite\n@@ -36,8 +37,7 @@ def set_image(obj):\n         from plone.namedfile.file import NamedBlobImage\n \n         filename = os.path.join(os.path.dirname(__file__), u"image.png")\n-        obj.image = NamedBlobImage(\n-            data=open(filename, "rb").read(), filename=filename)\n+        obj.image = NamedBlobImage(data=open(filename, "rb").read(), filename=filename)\n     else:\n         filename = os.path.join(os.path.dirname(__file__), u"image.png")\n         obj.setImage(open(filename, "rb").read())\n@@ -74,13 +74,11 @@ def step_setup_content(context):\n     portal = getSite()\n \n     # Testfolder WRITE\n-    portal.invokeFactory("Folder", id="testfolder-write",\n-                         title="Testfolder Write")\n+    portal.invokeFactory("Folder", id="testfolder-write", title="Testfolder Write")\n     publish(portal["testfolder-write"])\n \n     # Testfolder READ\n-    portal.invokeFactory("Folder", id="testfolder-read",\n-                         title="Testfolder Read")\n+    portal.invokeFactory("Folder", id="testfolder-read", title="Testfolder Read")\n     publish(portal["testfolder-read"])\n     portal = portal["testfolder-read"]\n \n@@ -105,8 +103,7 @@ def step_setup_content(context):\n     publish(portal.folder)\n \n     # Folder with 10 Items\n-    portal.invokeFactory(\n-        "Folder", id="folder-with-10-items", title="Folder 10")\n+    portal.invokeFactory("Folder", id="folder-with-10-items", title="Folder 10")\n     folder10 = portal["folder-with-10-items"]\n     set_description(folder10)\n     publish(folder10)\n@@ -117,8 +114,7 @@ def step_setup_content(context):\n         publish(folder10["doc{}".format(i)])\n \n     # Folder with 100 Items\n-    portal.invokeFactory(\n-        "Folder", id="folder-with-100-items", title="Folder 100")\n+    portal.invokeFactory("Folder", id="folder-with-100-items", title="Folder 100")\n     folder100 = portal["folder-with-100-items"]\n     set_description(folder100)\n     publish(folder100)\n@@ -129,8 +125,7 @@ def step_setup_content(context):\n         publish(folder100["doc{}".format(i)])\n \n     # Folder with 1000 Items\n-    portal.invokeFactory(\n-        "Folder", id="folder-with-1000-items", title="Folder 1000")\n+    portal.invokeFactory("Folder", id="folder-with-1000-items", title="Folder 1000")\n     folder1000 = portal["folder-with-1000-items"]\n     set_description(folder1000)\n     publish(folder1000)\n@@ -141,8 +136,11 @@ def step_setup_content(context):\n         publish(folder1000["doc{}".format(i)])\n \n     # Folder with 10 Items and next/previous enabled\n-    portal.invokeFactory("Folder", id="folder-with-10-items-next-prev-enabled",\n-                         title="Folder 10 (next/prev enabled)")\n+    portal.invokeFactory(\n+        "Folder",\n+        id="folder-with-10-items-next-prev-enabled",\n+        title="Folder 10 (next/prev enabled)",\n+    )\n     folder10np = portal["folder-with-10-items-next-prev-enabled"]\n     folder10np.nextPreviousEnabled = True\n     set_description(folder10np)\n@@ -202,3 +200,31 @@ def step_setup_content(context):\n     portal.invokeFactory("File", id="file", title="File")\n     set_description(portal.file)\n     set_file(portal.file)\n+\n+    # Image 1 MB\n+    portal.invokeFactory("Image", id="image-1mb", title="Image 1 MB")\n+    filename = os.path.join(os.path.dirname(__file__), "images", u"image-1mb.jpg")\n+    portal.get("image-1mb").image = NamedBlobImage(\n+        data=open(filename, "rb").read(), filename=filename\n+    )\n+\n+    # Image 2 MB\n+    portal.invokeFactory("Image", id="image-2mb", title="Image 2 MB")\n+    filename = os.path.join(os.path.dirname(__file__), "images", u"image-2mb.jpg")\n+    portal.get("image-2mb").image = NamedBlobImage(\n+        data=open(filename, "rb").read(), filename=filename\n+    )\n+\n+    # Image 3 MB\n+    portal.invokeFactory("Image", id="image-3mb", title="Image 3 MB")\n+    filename = os.path.join(os.path.dirname(__file__), "images", u"image-3mb.jpg")\n+    portal.get("image-3mb").image = NamedBlobImage(\n+        data=open(filename, "rb").read(), filename=filename\n+    )\n+\n+    # Image 10 MB\n+    portal.invokeFactory("Image", id="image-10mb", title="Image 10 MB")\n+    filename = os.path.join(os.path.dirname(__file__), "images", u"image-10mb.jpg")\n+    portal.get("image-10mb").image = NamedBlobImage(\n+        data=open(filename, "rb").read(), filename=filename\n+    )\n'

