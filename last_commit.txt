Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-11-24T19:09:54+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.upgrade/commit/877509ea34dc06b562898af651e3cc32c6940f15

Improved upgrade step for site_logo from ASCII to Bytes.

The previous upgrade was incomplete and could remove the logo when called twice.
See [comment on issue 3172](https://github.com/plone/Products.CMFPlone/issues/3172#issuecomment-733085519).

Now we explicitly call the improved upgrade step again.  This fixes further fixes any logos that were half fixed in the previous upgrade.

Files changed:
A news/3172.bugfix
M plone/app/upgrade/v52/configure.zcml
M plone/app/upgrade/v52/final.py
M plone/app/upgrade/v52/tests.py

b'diff --git a/news/3172.bugfix b/news/3172.bugfix\nnew file mode 100644\nindex 00000000..25665e32\n--- /dev/null\n+++ b/news/3172.bugfix\n@@ -0,0 +1,4 @@\n+Improved upgrade step for site_logo from ASCII to Bytes.\n+The previous upgrade was incomplete and could remove the logo when called twice.\n+See `comment on issue 3172 <https://github.com/plone/Products.CMFPlone/issues/3172#issuecomment-733085519>`_.\n+[maurits]\ndiff --git a/plone/app/upgrade/v52/configure.zcml b/plone/app/upgrade/v52/configure.zcml\nindex f65e89e0..d5b7f798 100644\n--- a/plone/app/upgrade/v52/configure.zcml\n+++ b/plone/app/upgrade/v52/configure.zcml\n@@ -175,9 +175,8 @@\n         profile="Products.CMFPlone:plone">\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            description=""\n-            handler="..utils.null_upgrade_step"\n+            title="Migrate site logo from native string to bytes again"\n+            handler=".final.migrate_site_logo_from_ascii_to_bytes"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v52/final.py b/plone/app/upgrade/v52/final.py\nindex c9da7075..0b99fa8b 100644\n--- a/plone/app/upgrade/v52/final.py\n+++ b/plone/app/upgrade/v52/final.py\n@@ -191,15 +191,19 @@ def migrate_record_from_ascii_to_bytes(field_name, iface, prefix=None):\n         # Unexpected.  Registering the interface fixes this.\n         registry.registerInterface(iface, prefix=prefix)\n         return\n-    if not isinstance(record.field, field.ASCII):\n+    # Keep the original value so we can restore it.\n+    original_value = record.value\n+    if not isinstance(record.field, field.ASCII) and (\n+        original_value is None or isinstance(original_value, bytes)\n+    ):\n         # All is well.\n         # Actually, we might as well register the interface again for good measure.\n         # For ISiteSchema I have seen a missing site_title field.\n         registry.registerInterface(iface, prefix=prefix)\n         return\n-    # Keep the original value so we can restore it.\n-    original_value = record.value\n     # Delete the bad record.\n+    # Calling registry.registerInterface would clean this up too,\n+    # but being explicit seems good here.\n     del registry.records[field_name]\n     # Make sure the interface is fully registered again.\n     # This should recreate the field correctly.\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex c88623ee..7fb0b87c 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -114,6 +114,7 @@ def test_current_site_logo(self):\n         migrate_site_logo_from_ascii_to_bytes(self.portal)\n         record = self.registry.records[\'plone.site_logo\']\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"ABC")\n \n     def test_missing_site_logo_record(self):\n@@ -149,6 +150,23 @@ def test_site_logo_text(self):\n         migrate_site_logo_from_ascii_to_bytes(self.portal)\n         record = self.registry.records[\'plone.site_logo\']\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n+        self.assertEqual(record.value, b"native string")\n+\n+    @unittest.skipIf(six.PY3, \'Only test on Python 2\')\n+    def test_site_logo_field_bytes_value_text(self):\n+        from plone.app.upgrade.v52.final import migrate_site_logo_from_ascii_to_bytes\n+\n+        del self.registry.records[\'plone.site_logo\']\n+        record_51 = Record(field.Bytes())\n+        # This would give a WrongType error on Python 3:\n+        record_51.value = "native string"\n+        self.registry.records[\'plone.site_logo\'] = record_51\n+        # Migrate.\n+        migrate_site_logo_from_ascii_to_bytes(self.portal)\n+        record = self.registry.records[\'plone.site_logo\']\n+        self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"native string")\n \n     def test_migrate_record_from_ascii_to_bytes_with_prefix(self):\n@@ -177,6 +195,7 @@ class ITest(Interface):\n         # migrate_record_from_ascii_to_bytes("testfield", ITest, prefix="testing")\n         record = self.registry.records["testing.testfield"]\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"native string")\n \n     def test_migrate_record_from_ascii_to_bytes_without_prefix(self):\n@@ -208,6 +227,7 @@ class ITest(Interface):\n         # migrate_record_from_ascii_to_bytes(record_name, ITest, prefix=ITest.__identifier__)\n         record = self.registry.records[record_name]\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"native string")\n \n \n'

Repository: plone.app.upgrade


Branch: refs/heads/master
Date: 2020-11-25T08:16:11+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.upgrade/commit/657596397f1c2db03d51014b271af2550b664af1

Merge pull request #250 from plone/maurits/issue-3172-site-logo-ascii-bytes-part-2

Improved upgrade step for site_logo from ASCII to Bytes.

Files changed:
A news/3172.bugfix
M plone/app/upgrade/v52/configure.zcml
M plone/app/upgrade/v52/final.py
M plone/app/upgrade/v52/tests.py

b'diff --git a/news/3172.bugfix b/news/3172.bugfix\nnew file mode 100644\nindex 00000000..25665e32\n--- /dev/null\n+++ b/news/3172.bugfix\n@@ -0,0 +1,4 @@\n+Improved upgrade step for site_logo from ASCII to Bytes.\n+The previous upgrade was incomplete and could remove the logo when called twice.\n+See `comment on issue 3172 <https://github.com/plone/Products.CMFPlone/issues/3172#issuecomment-733085519>`_.\n+[maurits]\ndiff --git a/plone/app/upgrade/v52/configure.zcml b/plone/app/upgrade/v52/configure.zcml\nindex f65e89e0..d5b7f798 100644\n--- a/plone/app/upgrade/v52/configure.zcml\n+++ b/plone/app/upgrade/v52/configure.zcml\n@@ -175,9 +175,8 @@\n         profile="Products.CMFPlone:plone">\n \n         <gs:upgradeStep\n-            title="Miscellaneous"\n-            description=""\n-            handler="..utils.null_upgrade_step"\n+            title="Migrate site logo from native string to bytes again"\n+            handler=".final.migrate_site_logo_from_ascii_to_bytes"\n             />\n \n     </gs:upgradeSteps>\ndiff --git a/plone/app/upgrade/v52/final.py b/plone/app/upgrade/v52/final.py\nindex c9da7075..0b99fa8b 100644\n--- a/plone/app/upgrade/v52/final.py\n+++ b/plone/app/upgrade/v52/final.py\n@@ -191,15 +191,19 @@ def migrate_record_from_ascii_to_bytes(field_name, iface, prefix=None):\n         # Unexpected.  Registering the interface fixes this.\n         registry.registerInterface(iface, prefix=prefix)\n         return\n-    if not isinstance(record.field, field.ASCII):\n+    # Keep the original value so we can restore it.\n+    original_value = record.value\n+    if not isinstance(record.field, field.ASCII) and (\n+        original_value is None or isinstance(original_value, bytes)\n+    ):\n         # All is well.\n         # Actually, we might as well register the interface again for good measure.\n         # For ISiteSchema I have seen a missing site_title field.\n         registry.registerInterface(iface, prefix=prefix)\n         return\n-    # Keep the original value so we can restore it.\n-    original_value = record.value\n     # Delete the bad record.\n+    # Calling registry.registerInterface would clean this up too,\n+    # but being explicit seems good here.\n     del registry.records[field_name]\n     # Make sure the interface is fully registered again.\n     # This should recreate the field correctly.\ndiff --git a/plone/app/upgrade/v52/tests.py b/plone/app/upgrade/v52/tests.py\nindex c88623ee..7fb0b87c 100644\n--- a/plone/app/upgrade/v52/tests.py\n+++ b/plone/app/upgrade/v52/tests.py\n@@ -114,6 +114,7 @@ def test_current_site_logo(self):\n         migrate_site_logo_from_ascii_to_bytes(self.portal)\n         record = self.registry.records[\'plone.site_logo\']\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"ABC")\n \n     def test_missing_site_logo_record(self):\n@@ -149,6 +150,23 @@ def test_site_logo_text(self):\n         migrate_site_logo_from_ascii_to_bytes(self.portal)\n         record = self.registry.records[\'plone.site_logo\']\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n+        self.assertEqual(record.value, b"native string")\n+\n+    @unittest.skipIf(six.PY3, \'Only test on Python 2\')\n+    def test_site_logo_field_bytes_value_text(self):\n+        from plone.app.upgrade.v52.final import migrate_site_logo_from_ascii_to_bytes\n+\n+        del self.registry.records[\'plone.site_logo\']\n+        record_51 = Record(field.Bytes())\n+        # This would give a WrongType error on Python 3:\n+        record_51.value = "native string"\n+        self.registry.records[\'plone.site_logo\'] = record_51\n+        # Migrate.\n+        migrate_site_logo_from_ascii_to_bytes(self.portal)\n+        record = self.registry.records[\'plone.site_logo\']\n+        self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"native string")\n \n     def test_migrate_record_from_ascii_to_bytes_with_prefix(self):\n@@ -177,6 +195,7 @@ class ITest(Interface):\n         # migrate_record_from_ascii_to_bytes("testfield", ITest, prefix="testing")\n         record = self.registry.records["testing.testfield"]\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"native string")\n \n     def test_migrate_record_from_ascii_to_bytes_without_prefix(self):\n@@ -208,6 +227,7 @@ class ITest(Interface):\n         # migrate_record_from_ascii_to_bytes(record_name, ITest, prefix=ITest.__identifier__)\n         record = self.registry.records[record_name]\n         self.assertIsInstance(record.field, field.Bytes)\n+        self.assertIsInstance(record.value, bytes)\n         self.assertEqual(record.value, b"native string")\n \n \n'

