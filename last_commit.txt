Repository: Products.isurlinportal


Branch: refs/heads/master
Date: 2021-08-09T12:05:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.isurlinportal/commit/3830bbe0feb4c72972dc8875e387a0896507a555

Return False when a url is not like a string, for example None.

This fixes a traceback when the url is None.
Note: this is not a security fix.
Fixes https://github.com/plone/Products.isurlinportal/issues/8

Files changed:
A news/8.bugfix
M Products/isurlinportal/__init__.py
M Products/isurlinportal/tests.py

b'diff --git a/Products/isurlinportal/__init__.py b/Products/isurlinportal/__init__.py\nindex 29533cc..a7c4cd7 100644\n--- a/Products/isurlinportal/__init__.py\n+++ b/Products/isurlinportal/__init__.py\n@@ -103,9 +103,22 @@ def isURLInPortal(self, url, context=None):\n     # site_properties are also considered within the portal to allow for\n     # single sign on.\n \n-    if len(url.splitlines()) > 1:\n+    try:\n+        lines = url.splitlines()\n+    except AttributeError:\n+        # I have seen None getting passed, and this should not give a traceback.\n+        # Only string-like values should be considered.\n+        # We could check \'isinstance(url, str)\', but then you need to think about\n+        # py2/3: bytes/str/unicode/text/basestring, and I don\'t want that.\n+        return False\n+    if len(lines) > 1:\n         # very fishy\n         return False\n+    if not url:\n+        # Redirecting to nothing would probably mean we end up on the same page.\n+        # So an empty url should be fine.  This was always the case,\n+        # but now we return early.\n+        return True\n     if url != url.strip():\n         # somewhat fishy\n         return False\ndiff --git a/Products/isurlinportal/tests.py b/Products/isurlinportal/tests.py\nindex fa02dde..b7409a1 100644\n--- a/Products/isurlinportal/tests.py\n+++ b/Products/isurlinportal/tests.py\n@@ -216,3 +216,16 @@ def test_without_slashes(self):\n         iURLiP = url_tool.isURLInPortal\n         self.assertFalse(iURLiP("http:example.org"))\n         self.assertFalse(iURLiP("https:example.org"))\n+\n+    def test_bad_type(self):\n+        # I have seen None getting passed, giving a traceback.\n+        # Only string-like values should be considered.\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP(None))\n+        self.assertFalse(iURLiP(True))\n+        self.assertFalse(iURLiP(False))\n+        self.assertFalse(iURLiP([self.site.absolute_url()]))\n+        self.assertFalse(iURLiP((self.site.absolute_url(),)))\n+        self.assertFalse(iURLiP(object()))\n+        self.assertFalse(iURLiP(1))\ndiff --git a/news/8.bugfix b/news/8.bugfix\nnew file mode 100644\nindex 0000000..be4ffd2\n--- /dev/null\n+++ b/news/8.bugfix\n@@ -0,0 +1,3 @@\n+Return False when a url is not like a string, for example None.\n+Note: this is not a security fix.\n+[maurits]\n'

Repository: Products.isurlinportal


Branch: refs/heads/master
Date: 2021-08-10T11:54:12+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.isurlinportal/commit/f93126f5d4795315ebfc15df98f77b2b18da686c

Merge pull request #9 from plone/maurits/fix-nonetype-splitlines

Return False when a url is not like a string, for example None.

Files changed:
A news/8.bugfix
M Products/isurlinportal/__init__.py
M Products/isurlinportal/tests.py

b'diff --git a/Products/isurlinportal/__init__.py b/Products/isurlinportal/__init__.py\nindex 29533cc..a7c4cd7 100644\n--- a/Products/isurlinportal/__init__.py\n+++ b/Products/isurlinportal/__init__.py\n@@ -103,9 +103,22 @@ def isURLInPortal(self, url, context=None):\n     # site_properties are also considered within the portal to allow for\n     # single sign on.\n \n-    if len(url.splitlines()) > 1:\n+    try:\n+        lines = url.splitlines()\n+    except AttributeError:\n+        # I have seen None getting passed, and this should not give a traceback.\n+        # Only string-like values should be considered.\n+        # We could check \'isinstance(url, str)\', but then you need to think about\n+        # py2/3: bytes/str/unicode/text/basestring, and I don\'t want that.\n+        return False\n+    if len(lines) > 1:\n         # very fishy\n         return False\n+    if not url:\n+        # Redirecting to nothing would probably mean we end up on the same page.\n+        # So an empty url should be fine.  This was always the case,\n+        # but now we return early.\n+        return True\n     if url != url.strip():\n         # somewhat fishy\n         return False\ndiff --git a/Products/isurlinportal/tests.py b/Products/isurlinportal/tests.py\nindex fa02dde..b7409a1 100644\n--- a/Products/isurlinportal/tests.py\n+++ b/Products/isurlinportal/tests.py\n@@ -216,3 +216,16 @@ def test_without_slashes(self):\n         iURLiP = url_tool.isURLInPortal\n         self.assertFalse(iURLiP("http:example.org"))\n         self.assertFalse(iURLiP("https:example.org"))\n+\n+    def test_bad_type(self):\n+        # I have seen None getting passed, giving a traceback.\n+        # Only string-like values should be considered.\n+        url_tool = self._makeOne()\n+        iURLiP = url_tool.isURLInPortal\n+        self.assertFalse(iURLiP(None))\n+        self.assertFalse(iURLiP(True))\n+        self.assertFalse(iURLiP(False))\n+        self.assertFalse(iURLiP([self.site.absolute_url()]))\n+        self.assertFalse(iURLiP((self.site.absolute_url(),)))\n+        self.assertFalse(iURLiP(object()))\n+        self.assertFalse(iURLiP(1))\ndiff --git a/news/8.bugfix b/news/8.bugfix\nnew file mode 100644\nindex 0000000..be4ffd2\n--- /dev/null\n+++ b/news/8.bugfix\n@@ -0,0 +1,3 @@\n+Return False when a url is not like a string, for example None.\n+Note: this is not a security fix.\n+[maurits]\n'

