Repository: Products.isurlinportal


Branch: refs/heads/master
Date: 2024-08-14T17:36:23+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.isurlinportal/commit/eb5b551137148aa1a5bfc7671901f29967093ec8

No longer patch Products.CMFPlone.  Version 6.1.0a5 will use us directly.

This solves cyclic dependencies, and is incompatible with Plone 6.0.

Depend on `Zope&gt;=5.10` as we use the new `ZPublisher.zpublish` to explicitly say the `isURLInPortal` should not be published, so should not be available on a URL.
Now we can use a docstring again, which feels a bit nicer.

Files changed:
A news/12.breaking
M .meta.toml
M Products/isurlinportal/__init__.py
M pyproject.toml
M setup.py
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex b0dec1c..b9fddb1 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,4 +7,6 @@ commit-id = "7a017355"\n \n [pyproject]\n codespell_ignores = "noo"\n-dependencies_ignores = "[\'Products.CMFPlone\']"\n+\n+[tox]\n+constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\ndiff --git a/Products/isurlinportal/__init__.py b/Products/isurlinportal/__init__.py\nindex 8c935ee..2fa35e6 100644\n--- a/Products/isurlinportal/__init__.py\n+++ b/Products/isurlinportal/__init__.py\n@@ -2,12 +2,10 @@\n from plone.base.interfaces import ILoginSchema\n from plone.registry.interfaces import IRegistry\n from posixpath import normpath\n-\n-# This is the class we will patch:\n-from Products.CMFPlone.URLTool import URLTool\n from urllib.parse import urljoin\n from urllib.parse import urlparse\n from zope.component import getUtility\n+from ZPublisher import zpublish\n \n import re\n import string\n@@ -96,21 +94,20 @@ def get_external_sites(context=None):\n     return settings.allow_external_login_sites\n \n \n+@zpublish(False)\n def isURLInPortal(self, url, context=None):\n-    # Note: no docstring, because the method is publicly available\n-    # but does not need to be callable on site-url/portal_url/isURLInPortal.\n-\n-    # Check if a given url is on the same host and contains the portal\n-    # path.  Used to ensure that login forms can determine relevant\n-    # referrers (i.e. in portal).  Also return true for some relative\n-    # urls if context is passed in to allow for url parsing. When context\n-    # is not provided, assume that relative urls are in the portal. It is\n-    # assumed that http://portal is the same portal as https://portal.\n-\n-    # External sites listed in \'allow_external_login_sites\' of\n-    # site_properties are also considered within the portal to allow for\n-    # single sign on.\n-\n+    """Check if a given url is on the same host and contains the portal path.\n+\n+    This is used to ensure that login forms can determine relevant\n+    referrers (i.e. in portal).  Also return true for some relative\n+    urls if context is passed in to allow for url parsing. When context\n+    is not provided, assume that relative urls are in the portal. It is\n+    assumed that http://portal is the same portal as https://portal.\n+\n+    External sites listed in \'allow_external_login_sites\' of\n+    site_properties are also considered within the portal to allow for\n+    single sign on.\n+    """\n     try:\n         lines = url.splitlines()\n     except AttributeError:\n@@ -199,7 +196,3 @@ def isURLInPortal(self, url, context=None):\n         if host == u_host and u_path.startswith(path):\n             return True\n     return False\n-\n-\n-# Add our method to the URLTool.\n-URLTool.isURLInPortal = isURLInPortal\ndiff --git a/news/12.breaking b/news/12.breaking\nnew file mode 100644\nindex 0000000..6eccee6\n--- /dev/null\n+++ b/news/12.breaking\n@@ -0,0 +1,3 @@\n+No longer patch Products.CMFPlone.  Version 6.1.0a5 will use us directly.\n+This solves cyclic dependencies, and is incompatible with Plone 6.0.\n+[maurits]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex f788bfb..e4b4f0e 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -119,7 +119,6 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.CMFPlone\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex 8359503..70213e9 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -11,20 +11,19 @@\n \n setup(\n     name="Products.isurlinportal",\n-    version="2.0.4.dev0",\n-    description="Replacement for isURLInPortal method in Plone",\n+    version="3.0.0.dev0",\n+    description="Implementation of isURLInPortal method in Plone",\n     long_description=long_description,\n     # Get more strings from https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 6.0",\n+        "Framework :: Plone :: 6.1",\n         "License :: OSI Approved :: GNU General Public License (GPL)",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 3.8",\n-        "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\n         "Programming Language :: Python :: 3.11",\n+        "Programming Language :: Python :: 3.12",\n     ],\n     keywords="plone security hotfix patch",\n     author="Plone Security Team",\n@@ -35,15 +34,14 @@\n     namespace_packages=["Products"],\n     include_package_data=True,\n     zip_safe=False,\n-    python_requires=">=3.8",\n+    python_requires=">=3.10",\n     install_requires=[\n         "setuptools",\n         "plone.base",\n-        "zope.component",\n+        "Zope>=5.10",\n     ],\n     extras_require={\n         "test": [\n-            "Acquisition",\n             "Products.CMFPlone",\n         ]\n     },\ndiff --git a/tox.ini b/tox.ini\nindex 4b3ae9d..85f5cd0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -108,7 +108,7 @@ set_env =\n ##\n deps =\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n ##\n # Specify additional deps in .meta.toml:\n@@ -151,7 +151,7 @@ set_env =\n deps =\n     coverage\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     coverage run --branch --source Products.isurlinportal {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s Products.isurlinportal {posargs}\n@@ -169,7 +169,7 @@ deps =\n     twine\n     build\n     towncrier\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # fake version to not have to install the package\n@@ -200,7 +200,7 @@ allowlist_externals =\n deps =\n     pipdeptree\n     pipforester\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # Generate the full dependency tree\n'

Repository: Products.isurlinportal


Branch: refs/heads/master
Date: 2024-08-17T01:45:48+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.isurlinportal/commit/c37c354606b4ace622d47036de212ff1b538fae4

Merge pull request #30 from plone/maurits-do-not-patch-cmfplone

No longer patch Products.CMFPlone.

Files changed:
A news/12.breaking
M .meta.toml
M Products/isurlinportal/__init__.py
M pyproject.toml
M setup.py
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex b0dec1c..b9fddb1 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,4 +7,6 @@ commit-id = "7a017355"\n \n [pyproject]\n codespell_ignores = "noo"\n-dependencies_ignores = "[\'Products.CMFPlone\']"\n+\n+[tox]\n+constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\ndiff --git a/Products/isurlinportal/__init__.py b/Products/isurlinportal/__init__.py\nindex 8c935ee..2fa35e6 100644\n--- a/Products/isurlinportal/__init__.py\n+++ b/Products/isurlinportal/__init__.py\n@@ -2,12 +2,10 @@\n from plone.base.interfaces import ILoginSchema\n from plone.registry.interfaces import IRegistry\n from posixpath import normpath\n-\n-# This is the class we will patch:\n-from Products.CMFPlone.URLTool import URLTool\n from urllib.parse import urljoin\n from urllib.parse import urlparse\n from zope.component import getUtility\n+from ZPublisher import zpublish\n \n import re\n import string\n@@ -96,21 +94,20 @@ def get_external_sites(context=None):\n     return settings.allow_external_login_sites\n \n \n+@zpublish(False)\n def isURLInPortal(self, url, context=None):\n-    # Note: no docstring, because the method is publicly available\n-    # but does not need to be callable on site-url/portal_url/isURLInPortal.\n-\n-    # Check if a given url is on the same host and contains the portal\n-    # path.  Used to ensure that login forms can determine relevant\n-    # referrers (i.e. in portal).  Also return true for some relative\n-    # urls if context is passed in to allow for url parsing. When context\n-    # is not provided, assume that relative urls are in the portal. It is\n-    # assumed that http://portal is the same portal as https://portal.\n-\n-    # External sites listed in \'allow_external_login_sites\' of\n-    # site_properties are also considered within the portal to allow for\n-    # single sign on.\n-\n+    """Check if a given url is on the same host and contains the portal path.\n+\n+    This is used to ensure that login forms can determine relevant\n+    referrers (i.e. in portal).  Also return true for some relative\n+    urls if context is passed in to allow for url parsing. When context\n+    is not provided, assume that relative urls are in the portal. It is\n+    assumed that http://portal is the same portal as https://portal.\n+\n+    External sites listed in \'allow_external_login_sites\' of\n+    site_properties are also considered within the portal to allow for\n+    single sign on.\n+    """\n     try:\n         lines = url.splitlines()\n     except AttributeError:\n@@ -199,7 +196,3 @@ def isURLInPortal(self, url, context=None):\n         if host == u_host and u_path.startswith(path):\n             return True\n     return False\n-\n-\n-# Add our method to the URLTool.\n-URLTool.isURLInPortal = isURLInPortal\ndiff --git a/news/12.breaking b/news/12.breaking\nnew file mode 100644\nindex 0000000..6eccee6\n--- /dev/null\n+++ b/news/12.breaking\n@@ -0,0 +1,3 @@\n+No longer patch Products.CMFPlone.  Version 6.1.0a5 will use us directly.\n+This solves cyclic dependencies, and is incompatible with Plone 6.0.\n+[maurits]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex f788bfb..e4b4f0e 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -119,7 +119,6 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.CMFPlone\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex 8359503..70213e9 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -11,20 +11,19 @@\n \n setup(\n     name="Products.isurlinportal",\n-    version="2.0.4.dev0",\n-    description="Replacement for isURLInPortal method in Plone",\n+    version="3.0.0.dev0",\n+    description="Implementation of isURLInPortal method in Plone",\n     long_description=long_description,\n     # Get more strings from https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 6.0",\n+        "Framework :: Plone :: 6.1",\n         "License :: OSI Approved :: GNU General Public License (GPL)",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 3.8",\n-        "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\n         "Programming Language :: Python :: 3.11",\n+        "Programming Language :: Python :: 3.12",\n     ],\n     keywords="plone security hotfix patch",\n     author="Plone Security Team",\n@@ -35,15 +34,14 @@\n     namespace_packages=["Products"],\n     include_package_data=True,\n     zip_safe=False,\n-    python_requires=">=3.8",\n+    python_requires=">=3.10",\n     install_requires=[\n         "setuptools",\n         "plone.base",\n-        "zope.component",\n+        "Zope>=5.10",\n     ],\n     extras_require={\n         "test": [\n-            "Acquisition",\n             "Products.CMFPlone",\n         ]\n     },\ndiff --git a/tox.ini b/tox.ini\nindex 4b3ae9d..85f5cd0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -108,7 +108,7 @@ set_env =\n ##\n deps =\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n ##\n # Specify additional deps in .meta.toml:\n@@ -151,7 +151,7 @@ set_env =\n deps =\n     coverage\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     coverage run --branch --source Products.isurlinportal {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s Products.isurlinportal {posargs}\n@@ -169,7 +169,7 @@ deps =\n     twine\n     build\n     towncrier\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # fake version to not have to install the package\n@@ -200,7 +200,7 @@ allowlist_externals =\n deps =\n     pipdeptree\n     pipforester\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # Generate the full dependency tree\n'

