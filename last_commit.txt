Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-05-21T17:15:09+03:00
Author: Petri Savolainen (petri) <petri@koodaamo.fi>
Commit: https://github.com/plone/plone.app.theming/commit/39dcb15feba2e70c8233c8d230efdd3eee286315

add utility to find context by path

Files changed:
M src/plone/app/theming/utils.py

b'diff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex f10fe4c..dfbe572 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -200,6 +200,27 @@ def findContext(request):\n     return request.PARENTS[0]\n \n \n+def findPathContext(path):\n+    """Find context given by physical path\n+    """\n+    portal = getPortal()\n+\n+    if path in (None, \'\', \'/\'):\n+        return portal\n+\n+    seq = path.strip(\'/\').split(\'/\')\n+    while seq:\n+        try:\n+            obj = portal.restrictedTraverse(\'/\'.join(seq))\n+        except:\n+            seq.pop()\n+        else:\n+            if IContentish.providedBy(obj):\n+                return obj\n+            else:\n+                seq.pop()\n+\n+\n def expandAbsolutePrefix(prefix):\n     """Prepend the Plone site URL to the prefix if it starts with /\n     """\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-05-21T17:17:55+03:00
Author: Petri Savolainen (petri) <petri@koodaamo.fi>
Commit: https://github.com/plone/plone.app.theming/commit/6e04883621852d4512376e8824ced53f289882f5

get context by path using the new utility, fixing #173

Files changed:
M src/plone/app/theming/browser/mapper.py

b'diff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex 776f8f9..64c1c97 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -5,7 +5,7 @@\n from plone.app.theming.interfaces import THEME_EXTENSIONS\n from plone.app.theming.interfaces import THEME_RESOURCE_NAME\n from plone.app.theming.utils import compileThemeTransform\n-from plone.app.theming.utils import findContext\n+from plone.app.theming.utils import findPathContext\n from plone.app.theming.utils import getPortal\n from plone.app.theming.utils import getThemeFromResourceDirectory\n from plone.app.theming.utils import prepareThemeParameters\n@@ -259,11 +259,7 @@ def getFrame(self):\n             policy = theming_policy(self.request)\n             settings = policy.getSettings()\n \n-            context = self.context\n-            try:\n-                context = findContext(portal.restrictedTraverse(path))\n-            except (KeyError, NotFound,):\n-                pass\n+            context = findPathContext(path) or portal\n \n             serializer = getHTMLSerializer([result], pretty_print=False)\n \n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-05-21T17:22:19+03:00
Author: Petri Savolainen (petri) <petri@koodaamo.fi>
Commit: https://github.com/plone/plone.app.theming/commit/21bde3e2be375ff24eebab58716059210cab9f83

output bytes; serializer already does

Files changed:
M src/plone/app/theming/browser/mapper.py

b"diff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex 64c1c97..d2b1086 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -285,7 +285,7 @@ def getFrame(self):\n                     serializer.doctype += '\\n'\n \n             serializer.tree = transform(serializer.tree, **params)\n-            result = ''.join(serializer)\n+            result = b''.join(serializer)\n \n         if title or links or forms:\n             tree = lxml.html.fromstring(result)\n"

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-05-21T17:24:52+03:00
Author: Petri Savolainen (petri) <petri@koodaamo.fi>
Commit: https://github.com/plone/plone.app.theming/commit/aab0c88d08460b161532758cc9098c035dffc1ae

home page URLs may not have a path; default to root instead of returning empty so preview works on home page links too

Files changed:
M src/plone/app/theming/browser/mapper.py

b'diff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex d2b1086..af5c2fe 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -216,15 +216,12 @@ def getFrame(self):\n         - a query string parameter ``title`` can be set to give a new page\n           title\n         """\n-        path = self.request.form.get(\'path\', None)\n+        path = self.request.form.get(\'path\', \'/\')\n         theme = self.request.form.get(\'theme\', \'off\')\n         links = self.request.form.get(\'links\', None)\n         forms = self.request.form.get(\'forms\', None)\n         title = self.request.form.get(\'title\', None)\n \n-        if not path:\n-            return "<html><head></head><body></body></html>"\n-\n         portal = getPortal()\n         portal_url = portal.absolute_url()\n         response = subrequest(path, root=portal)\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-05-21T17:39:29+03:00
Author: Petri Savolainen (petri) <petri@koodaamo.fi>
Commit: https://github.com/plone/plone.app.theming/commit/917bc9d1593f06c9cf59856554032629d898e2b0

document the fix

Files changed:
A news/173.bugfix

b'diff --git a/news/173.bugfix b/news/173.bugfix\nnew file mode 100644\nindex 0000000..d10ff54\n--- /dev/null\n+++ b/news/173.bugfix\n@@ -0,0 +1,2 @@\n+Make it possible to preview themes TTW again.\n+[petri]\n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-05-25T17:53:54+02:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.theming/commit/79f1df031cf958b93a17501a3fb5656e4e21682c

Merge pull request #181 from plone/fix-173

Fix #173

Files changed:
A news/173.bugfix
M src/plone/app/theming/browser/mapper.py
M src/plone/app/theming/utils.py

b'diff --git a/news/173.bugfix b/news/173.bugfix\nnew file mode 100644\nindex 0000000..d10ff54\n--- /dev/null\n+++ b/news/173.bugfix\n@@ -0,0 +1,2 @@\n+Make it possible to preview themes TTW again.\n+[petri]\ndiff --git a/src/plone/app/theming/browser/mapper.py b/src/plone/app/theming/browser/mapper.py\nindex 776f8f9..af5c2fe 100644\n--- a/src/plone/app/theming/browser/mapper.py\n+++ b/src/plone/app/theming/browser/mapper.py\n@@ -5,7 +5,7 @@\n from plone.app.theming.interfaces import THEME_EXTENSIONS\n from plone.app.theming.interfaces import THEME_RESOURCE_NAME\n from plone.app.theming.utils import compileThemeTransform\n-from plone.app.theming.utils import findContext\n+from plone.app.theming.utils import findPathContext\n from plone.app.theming.utils import getPortal\n from plone.app.theming.utils import getThemeFromResourceDirectory\n from plone.app.theming.utils import prepareThemeParameters\n@@ -216,15 +216,12 @@ def getFrame(self):\n         - a query string parameter ``title`` can be set to give a new page\n           title\n         """\n-        path = self.request.form.get(\'path\', None)\n+        path = self.request.form.get(\'path\', \'/\')\n         theme = self.request.form.get(\'theme\', \'off\')\n         links = self.request.form.get(\'links\', None)\n         forms = self.request.form.get(\'forms\', None)\n         title = self.request.form.get(\'title\', None)\n \n-        if not path:\n-            return "<html><head></head><body></body></html>"\n-\n         portal = getPortal()\n         portal_url = portal.absolute_url()\n         response = subrequest(path, root=portal)\n@@ -259,11 +256,7 @@ def getFrame(self):\n             policy = theming_policy(self.request)\n             settings = policy.getSettings()\n \n-            context = self.context\n-            try:\n-                context = findContext(portal.restrictedTraverse(path))\n-            except (KeyError, NotFound,):\n-                pass\n+            context = findPathContext(path) or portal\n \n             serializer = getHTMLSerializer([result], pretty_print=False)\n \n@@ -289,7 +282,7 @@ def getFrame(self):\n                     serializer.doctype += \'\\n\'\n \n             serializer.tree = transform(serializer.tree, **params)\n-            result = \'\'.join(serializer)\n+            result = b\'\'.join(serializer)\n \n         if title or links or forms:\n             tree = lxml.html.fromstring(result)\ndiff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex f10fe4c..dfbe572 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -200,6 +200,27 @@ def findContext(request):\n     return request.PARENTS[0]\n \n \n+def findPathContext(path):\n+    """Find context given by physical path\n+    """\n+    portal = getPortal()\n+\n+    if path in (None, \'\', \'/\'):\n+        return portal\n+\n+    seq = path.strip(\'/\').split(\'/\')\n+    while seq:\n+        try:\n+            obj = portal.restrictedTraverse(\'/\'.join(seq))\n+        except:\n+            seq.pop()\n+        else:\n+            if IContentish.providedBy(obj):\n+                return obj\n+            else:\n+                seq.pop()\n+\n+\n def expandAbsolutePrefix(prefix):\n     """Prepend the Plone site URL to the prefix if it starts with /\n     """\n'

