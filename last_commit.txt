Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-04-08T19:41:42+02:00
Author: Thomas Massmann (thomasmassmann) <thomas.massmann@it-spir.it>
Commit: https://github.com/plone/Products.CMFPlone/commit/c3db29d7d1d2ef1b54f7a49d431fee66224610a0

Add markdown extension settings to markup control panel.

Files changed:
A news/3076.feature
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\nindex ded537d227..f719b700e6 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n@@ -72,3 +72,32 @@ def test_allowed_types(self):\n         settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n         self.assertEqual(settings.allowed_types,\n                          (\'text/html\', \'text/x-web-textile\'))\n+\n+    def test_markdown_extensions(self):\n+        self.browser.open(\n+            "%s/@@markup-controlpanel" % self.portal_url)\n+        self.assertEqual(\n+            self.browser.getControl(\n+                name=\'form.widgets.markdown_extensions\'\n+            ).value,\n+            \'markdown.extensions.fenced_code\\nmarkdown.extensions.nl2br\')\n+\n+        self.browser.getControl(\n+            name=\'form.widgets.markdown_extensions\'\n+        ).value = \'\\n\'.join([\n+            \'markdown.extensions.fenced_code\',\n+            \'markdown.extensions.nl2br\',\n+            \'markdown.extensions.extra\',\n+        ])\n+        self.browser.getControl(\'Save\').click()\n+\n+        registry = getUtility(IRegistry)\n+        settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n+        self.assertEqual(\n+            settings.markdown_extensions,\n+            [\n+                \'markdown.extensions.fenced_code\',\n+                \'markdown.extensions.nl2br\',\n+                \'markdown.extensions.extra\',\n+            ]\n+        )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\nindex 6cec635c9e..aec1268b65 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n@@ -37,3 +37,6 @@ def test_default_type_exists(self):\n \n     def test_allowed_types_exists(self):\n         self.assertTrue(hasattr(self.settings, \'allowed_types\'))\n+\n+    def test_markdown_extensions_exists(self):\n+        self.assertTrue(hasattr(self.settings, \'markdown_extensions\'))\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex bb5009404f..88a5496a6b 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1381,6 +1381,21 @@ class IMarkupSchema(Interface):\n         )\n     )\n \n+    markdown_extensions = schema.List(\n+        default=[\n+            \'markdown.extensions.fenced_code\',\n+            \'markdown.extensions.nl2br\',\n+        ],\n+        description=_(\n+            u\'Look for available extensions at \'\n+            u\'https://python-markdown.github.io/extensions/ or write your own.\'\n+        ),\n+        missing_value=(),\n+        required=False,\n+        title=_(u\'Enabled markdown extensions\'),\n+        value_type=schema.TextLine()\n+    )\n+\n \n class IUserGroupsSettingsSchema(Interface):\n \ndiff --git a/news/3076.feature b/news/3076.feature\nnew file mode 100644\nindex 0000000000..e42a700a3b\n--- /dev/null\n+++ b/news/3076.feature\n@@ -0,0 +1,2 @@\n+Add markdown extension settings to markup control panel.\n+[thomasmassmann]\n\\ No newline at end of file\n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-04-09T13:15:26+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/13315391ea725d2806c954c1bbe8936ba881b510

Merge pull request #3077 from plone/3076-markdown-settings

Add markdown extension settings to markup control panel.

Files changed:
A news/3076.feature
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py
M Products/CMFPlone/interfaces/controlpanel.py

b'diff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\nindex ded537d227..f719b700e6 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_markup.py\n@@ -72,3 +72,32 @@ def test_allowed_types(self):\n         settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n         self.assertEqual(settings.allowed_types,\n                          (\'text/html\', \'text/x-web-textile\'))\n+\n+    def test_markdown_extensions(self):\n+        self.browser.open(\n+            "%s/@@markup-controlpanel" % self.portal_url)\n+        self.assertEqual(\n+            self.browser.getControl(\n+                name=\'form.widgets.markdown_extensions\'\n+            ).value,\n+            \'markdown.extensions.fenced_code\\nmarkdown.extensions.nl2br\')\n+\n+        self.browser.getControl(\n+            name=\'form.widgets.markdown_extensions\'\n+        ).value = \'\\n\'.join([\n+            \'markdown.extensions.fenced_code\',\n+            \'markdown.extensions.nl2br\',\n+            \'markdown.extensions.extra\',\n+        ])\n+        self.browser.getControl(\'Save\').click()\n+\n+        registry = getUtility(IRegistry)\n+        settings = registry.forInterface(IMarkupSchema, prefix=\'plone\')\n+        self.assertEqual(\n+            settings.markdown_extensions,\n+            [\n+                \'markdown.extensions.fenced_code\',\n+                \'markdown.extensions.nl2br\',\n+                \'markdown.extensions.extra\',\n+            ]\n+        )\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\nindex 6cec635c9e..aec1268b65 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_markup.py\n@@ -37,3 +37,6 @@ def test_default_type_exists(self):\n \n     def test_allowed_types_exists(self):\n         self.assertTrue(hasattr(self.settings, \'allowed_types\'))\n+\n+    def test_markdown_extensions_exists(self):\n+        self.assertTrue(hasattr(self.settings, \'markdown_extensions\'))\ndiff --git a/Products/CMFPlone/interfaces/controlpanel.py b/Products/CMFPlone/interfaces/controlpanel.py\nindex bb5009404f..88a5496a6b 100644\n--- a/Products/CMFPlone/interfaces/controlpanel.py\n+++ b/Products/CMFPlone/interfaces/controlpanel.py\n@@ -1381,6 +1381,21 @@ class IMarkupSchema(Interface):\n         )\n     )\n \n+    markdown_extensions = schema.List(\n+        default=[\n+            \'markdown.extensions.fenced_code\',\n+            \'markdown.extensions.nl2br\',\n+        ],\n+        description=_(\n+            u\'Look for available extensions at \'\n+            u\'https://python-markdown.github.io/extensions/ or write your own.\'\n+        ),\n+        missing_value=(),\n+        required=False,\n+        title=_(u\'Enabled markdown extensions\'),\n+        value_type=schema.TextLine()\n+    )\n+\n \n class IUserGroupsSettingsSchema(Interface):\n \ndiff --git a/news/3076.feature b/news/3076.feature\nnew file mode 100644\nindex 0000000000..e42a700a3b\n--- /dev/null\n+++ b/news/3076.feature\n@@ -0,0 +1,2 @@\n+Add markdown extension settings to markup control panel.\n+[thomasmassmann]\n\\ No newline at end of file\n'

