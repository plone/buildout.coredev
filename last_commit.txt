Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-09T19:13:40+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/67ad12e018e81945f38bc6e58b5ccad859e2d58d

Fixed invalid escape sequences in regular expressions.

Files changed:
A news/3130.bugfix.1
A news/3130.bugfix.2
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/UnicodeSplitter/config.py
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
D news/3130.bugfix

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 0ac59665a4..9ff9ce4f20 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -183,7 +183,7 @@ def object_provides(obj):\n def zero_fill(matchobj):\n     return matchobj.group().zfill(4)\n \n-num_sort_regex = re.compile(\'\\d+\')\n+num_sort_regex = re.compile(r\'\\d+\')\n \n \n @indexer(Interface)\ndiff --git a/Products/CMFPlone/UnicodeSplitter/config.py b/Products/CMFPlone/UnicodeSplitter/config.py\nindex 760195ba93..5370547e94 100644\n--- a/Products/CMFPlone/UnicodeSplitter/config.py\n+++ b/Products/CMFPlone/UnicodeSplitter/config.py\n@@ -36,11 +36,11 @@\n \n # Splitting core.\n ps = rangetable.values()\n-allp = u"".join(ps)\n-glob_true = u"[^%s]([^%s]|[\\*\\?])*|" \\\n-    % (allp, allp) + u"|".join([u"[%s]+" % (x, ) for x in ps])\n+allp = "".join(ps)\n+glob_true = r"[^%s]([^%s]|[\\*\\?])*|" % (allp, allp) + \\\n+    "|".join(["[%s]+" % (x, ) for x in ps])\n \n-glob_false = u"[^%s]+|" % allp + u"|".join(u"[%s]+" % x for x in ps)\n+glob_false = r"[^%s]+|" % allp + "|".join("[%s]+" % x for x in ps)\n \n rx_all = re.compile(r"[%s]" % allp, re.UNICODE)\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 8b070c2919..387b0e6160 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -22,7 +22,8 @@\n import re\n import six\n \n-CSS_URL_REGEX = re.compile(\'url\\(([^)]+)\\)\')\n+\n+CSS_URL_REGEX = re.compile(r\'url\\(([^)]+)\\)\')\n \n \n class JSONEncoder(json.JSONEncoder):\ndiff --git a/news/3130.bugfix b/news/3130.bugfix.1\nsimilarity index 100%\nrename from news/3130.bugfix\nrename to news/3130.bugfix.1\ndiff --git a/news/3130.bugfix.2 b/news/3130.bugfix.2\nnew file mode 100644\nindex 0000000000..eaf1dfb681\n--- /dev/null\n+++ b/news/3130.bugfix.2\n@@ -0,0 +1,2 @@\n+Fixed invalid escape sequences in regular expressions.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-09-09T20:03:55+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/091699b0c292f28b6bc57374cc218b4f017c181e

Merge pull request #3171 from plone/maurits/invalid-regexps

Fixed invalid escape sequences in regular expressions.

Files changed:
A news/3130.bugfix.1
A news/3130.bugfix.2
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/UnicodeSplitter/config.py
M Products/CMFPlone/controlpanel/browser/resourceregistry.py
D news/3130.bugfix

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex 0ac59665a4..9ff9ce4f20 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -183,7 +183,7 @@ def object_provides(obj):\n def zero_fill(matchobj):\n     return matchobj.group().zfill(4)\n \n-num_sort_regex = re.compile(\'\\d+\')\n+num_sort_regex = re.compile(r\'\\d+\')\n \n \n @indexer(Interface)\ndiff --git a/Products/CMFPlone/UnicodeSplitter/config.py b/Products/CMFPlone/UnicodeSplitter/config.py\nindex 760195ba93..5370547e94 100644\n--- a/Products/CMFPlone/UnicodeSplitter/config.py\n+++ b/Products/CMFPlone/UnicodeSplitter/config.py\n@@ -36,11 +36,11 @@\n \n # Splitting core.\n ps = rangetable.values()\n-allp = u"".join(ps)\n-glob_true = u"[^%s]([^%s]|[\\*\\?])*|" \\\n-    % (allp, allp) + u"|".join([u"[%s]+" % (x, ) for x in ps])\n+allp = "".join(ps)\n+glob_true = r"[^%s]([^%s]|[\\*\\?])*|" % (allp, allp) + \\\n+    "|".join(["[%s]+" % (x, ) for x in ps])\n \n-glob_false = u"[^%s]+|" % allp + u"|".join(u"[%s]+" % x for x in ps)\n+glob_false = r"[^%s]+|" % allp + "|".join("[%s]+" % x for x in ps)\n \n rx_all = re.compile(r"[%s]" % allp, re.UNICODE)\n \ndiff --git a/Products/CMFPlone/controlpanel/browser/resourceregistry.py b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\nindex 8b070c2919..387b0e6160 100644\n--- a/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n+++ b/Products/CMFPlone/controlpanel/browser/resourceregistry.py\n@@ -22,7 +22,8 @@\n import re\n import six\n \n-CSS_URL_REGEX = re.compile(\'url\\(([^)]+)\\)\')\n+\n+CSS_URL_REGEX = re.compile(r\'url\\(([^)]+)\\)\')\n \n \n class JSONEncoder(json.JSONEncoder):\ndiff --git a/news/3130.bugfix b/news/3130.bugfix.1\nsimilarity index 100%\nrename from news/3130.bugfix\nrename to news/3130.bugfix.1\ndiff --git a/news/3130.bugfix.2 b/news/3130.bugfix.2\nnew file mode 100644\nindex 0000000000..eaf1dfb681\n--- /dev/null\n+++ b/news/3130.bugfix.2\n@@ -0,0 +1,2 @@\n+Fixed invalid escape sequences in regular expressions.\n+[maurits]\n'

