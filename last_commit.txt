Repository: plone.api


Branch: refs/heads/master
Date: 2024-01-29T23:26:21+05:30
Author: Samriddhi Singh (samriddhi99) <samriddhisingh6079@gmail.com>
Commit: https://github.com/plone/plone.api/commit/4b3ef606eef691497160a7df7966f99749baf058

Edited api.content.get_view for increased efficiency to get views

Files changed:
A news/479.internal
M src/plone/api/content.py

b'diff --git a/news/479.internal b/news/479.internal\nnew file mode 100644\nindex 00000000..e5dc5d52\n--- /dev/null\n+++ b/news/479.internal\n@@ -0,0 +1 @@\n+Improved efficiency of view retrieval by deferring availability checks to error handling. @samriddhi99\n\\ No newline at end of file\ndiff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex f85790ee..b0b7784d 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -532,16 +532,21 @@ def get_view(name=None, context=None, request=None):\n     # and get their names.\n     available_view_names = [view[0] for view in available_views]\n \n-    # Raise an error if the requested view is not available.\n-    if name not in available_view_names:\n-        raise InvalidParameterError(\n-            "Cannot find a view with name \'{name}\'.\\n"\n-            "Available views are:\\n"\n-            "{views}".format(\n-                name=name,\n-                views="\\n".join(sorted(available_view_names)),\n-            ),\n-        )\n+\n+    try:\n+        return getMultiAdapter((context, request), name=name)\n+    except Exception:  \n+    # Check if the requested view is available.\n+        if name not in available_view_names:\n+            # Raise an error if the requested view is not available.\n+            raise InvalidParameterError(\n+                "Cannot find a view with name \'{name}\'.\\n"\n+                "Available views are:\\n"\n+                "{views}".format(\n+                    name=name,\n+                    views="\\n".join(sorted(available_view_names)),\n+                ),\n+            )\n     return getMultiAdapter((context, request), name=name)\n \n \n'

Repository: plone.api


Branch: refs/heads/master
Date: 2024-02-01T18:41:52+05:30
Author: Samriddhi Singh (samriddhi99) <samriddhisingh6079@gmail.com>
Commit: https://github.com/plone/plone.api/commit/f89a207f53fab2981a91182394bcae188865e19d

Changes as per https://github.com/plone/plone.api/pull/528#discussion_r1473611142 have been made

Files changed:
M src/plone/api/content.py

b'diff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex b0b7784d..48117f48 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -523,20 +523,19 @@ def get_view(name=None, context=None, request=None):\n     # available, because the __init__ of said view will contain\n     # errors in client code.\n \n-    # Get all available views...\n-    sm = getSiteManager()\n-    available_views = sm.adapters.lookupAll(\n-        required=(providedBy(context), providedBy(request)),\n-        provided=Interface,\n-    )\n-    # and get their names.\n-    available_view_names = [view[0] for view in available_views]\n-\n-\n     try:\n-        return getMultiAdapter((context, request), name=name)\n-    except Exception:  \n-    # Check if the requested view is available.\n+        adapter = getMultiAdapter((context, request), name=name)\n+    except Exception: \n+\n+        #Getting all available views\n+        sm = getSiteManager()\n+        available_views = sm.adapters.lookupAll(\n+            required=(providedBy(context), providedBy(request)),\n+            provided=Interface,\n+        )\n+        \n+        # Check if the requested view is available by getting the names of all available views\n+        available_view_names = [view[0] for view in available_views]\n         if name not in available_view_names:\n             # Raise an error if the requested view is not available.\n             raise InvalidParameterError(\n@@ -547,8 +546,7 @@ def get_view(name=None, context=None, request=None):\n                     views="\\n".join(sorted(available_view_names)),\n                 ),\n             )\n-    return getMultiAdapter((context, request), name=name)\n-\n+    return adapter\n \n @required_parameters("obj")\n def get_uuid(obj=None):\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2024-02-05T16:56:47+05:30
Author: Samriddhi Singh (samriddhi99) <samriddhisingh6079@gmail.com>
Commit: https://github.com/plone/plone.api/commit/d2715ada9710e76431f35a0ffd99383772797b1d

Error handling if component not found in function get_view

Files changed:
M src/plone/api/content.py

b'diff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex 48117f48..98c33ab9 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -13,11 +13,13 @@\n from Products.CMFCore.WorkflowCore import WorkflowException\n from zope.component import getMultiAdapter\n from zope.component import getSiteManager\n+from zope.component import ComponentLookupError\n from zope.container.interfaces import INameChooser\n from zope.globalrequest import getRequest\n from zope.interface import Interface\n from zope.interface import providedBy\n \n+\n import random\n import transaction\n \n@@ -525,8 +527,7 @@ def get_view(name=None, context=None, request=None):\n \n     try:\n         adapter = getMultiAdapter((context, request), name=name)\n-    except Exception: \n-\n+    except ComponentLookupError: \n         #Getting all available views\n         sm = getSiteManager()\n         available_views = sm.adapters.lookupAll(\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2024-02-05T17:10:06+05:30
Author: Samriddhi Singh (samriddhi99) <samriddhisingh6079@gmail.com>
Commit: https://github.com/plone/plone.api/commit/913b2cd07b1ce095772198d2b1864d203ed713bf

Minor changes to get_view

Files changed:
M src/plone/api/content.py

b'diff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex 98c33ab9..f6ed2cdd 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -526,7 +526,7 @@ def get_view(name=None, context=None, request=None):\n     # errors in client code.\n \n     try:\n-        adapter = getMultiAdapter((context, request), name=name)\n+        return getMultiAdapter((context, request), name=name)\n     except ComponentLookupError: \n         #Getting all available views\n         sm = getSiteManager()\n@@ -547,7 +547,6 @@ def get_view(name=None, context=None, request=None):\n                     views="\\n".join(sorted(available_view_names)),\n                 ),\n             )\n-    return adapter\n \n @required_parameters("obj")\n def get_uuid(obj=None):\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2024-02-07T21:17:07-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.api/commit/2e8015520b908e3a54d566edb20b55bec40610e1

Update src/plone/api/content.py

Co-authored-by: Alessandro Pisa &lt;alessandro.pisa@gmail.com&gt;

Files changed:
M src/plone/api/content.py

b'diff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex f6ed2cdd..bd5d03d1 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -535,7 +535,8 @@ def get_view(name=None, context=None, request=None):\n             provided=Interface,\n         )\n         \n-        # Check if the requested view is available by getting the names of all available views\n+        # Check if the requested view is available\n+        # by getting the names of all available views\n         available_view_names = [view[0] for view in available_views]\n         if name not in available_view_names:\n             # Raise an error if the requested view is not available.\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2024-02-07T21:21:08-08:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.api/commit/3565a0b3fe1d327949e56ccaa7a64390531b9162

Merge pull request #528 from samriddhi99/Issue-479-optimizing-api.content.get_view

Issue 479: Edited api.content.get_view for increased efficiency to get views

Files changed:
A news/479.internal
M src/plone/api/content.py

b'diff --git a/news/479.internal b/news/479.internal\nnew file mode 100644\nindex 00000000..e5dc5d52\n--- /dev/null\n+++ b/news/479.internal\n@@ -0,0 +1 @@\n+Improved efficiency of view retrieval by deferring availability checks to error handling. @samriddhi99\n\\ No newline at end of file\ndiff --git a/src/plone/api/content.py b/src/plone/api/content.py\nindex f85790ee..bd5d03d1 100644\n--- a/src/plone/api/content.py\n+++ b/src/plone/api/content.py\n@@ -13,11 +13,13 @@\n from Products.CMFCore.WorkflowCore import WorkflowException\n from zope.component import getMultiAdapter\n from zope.component import getSiteManager\n+from zope.component import ComponentLookupError\n from zope.container.interfaces import INameChooser\n from zope.globalrequest import getRequest\n from zope.interface import Interface\n from zope.interface import providedBy\n \n+\n import random\n import transaction\n \n@@ -523,27 +525,29 @@ def get_view(name=None, context=None, request=None):\n     # available, because the __init__ of said view will contain\n     # errors in client code.\n \n-    # Get all available views...\n-    sm = getSiteManager()\n-    available_views = sm.adapters.lookupAll(\n-        required=(providedBy(context), providedBy(request)),\n-        provided=Interface,\n-    )\n-    # and get their names.\n-    available_view_names = [view[0] for view in available_views]\n-\n-    # Raise an error if the requested view is not available.\n-    if name not in available_view_names:\n-        raise InvalidParameterError(\n-            "Cannot find a view with name \'{name}\'.\\n"\n-            "Available views are:\\n"\n-            "{views}".format(\n-                name=name,\n-                views="\\n".join(sorted(available_view_names)),\n-            ),\n+    try:\n+        return getMultiAdapter((context, request), name=name)\n+    except ComponentLookupError: \n+        #Getting all available views\n+        sm = getSiteManager()\n+        available_views = sm.adapters.lookupAll(\n+            required=(providedBy(context), providedBy(request)),\n+            provided=Interface,\n         )\n-    return getMultiAdapter((context, request), name=name)\n-\n+        \n+        # Check if the requested view is available\n+        # by getting the names of all available views\n+        available_view_names = [view[0] for view in available_views]\n+        if name not in available_view_names:\n+            # Raise an error if the requested view is not available.\n+            raise InvalidParameterError(\n+                "Cannot find a view with name \'{name}\'.\\n"\n+                "Available views are:\\n"\n+                "{views}".format(\n+                    name=name,\n+                    views="\\n".join(sorted(available_view_names)),\n+                ),\n+            )\n \n @required_parameters("obj")\n def get_uuid(obj=None):\n'

