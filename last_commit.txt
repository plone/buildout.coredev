Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-06-01T20:33:20+02:00
Author: David Glick (davisagli) <david@glicksoftware.com>
Commit: https://github.com/plone/plone.restapi/commit/053a266be8dfc4a436913942c179d0db9ac4bc01

Skip next/previous info for old versions if it can't be obtained (#1651)

* Skip next/previous info for old versions if it can't be obtained

* changelog

* make it fully backwards compatible

Files changed:
A news/1651.bugfix
M src/plone/restapi/serializer/dxcontent.py
M src/plone/restapi/tests/test_services_history.py

b'diff --git a/news/1651.bugfix b/news/1651.bugfix\nnew file mode 100644\nindex 000000000..d64b315b5\n--- /dev/null\n+++ b/news/1651.bugfix\n@@ -0,0 +1 @@\n+Fix content serializer with an old version of an item that was renamed. @davisagli\ndiff --git a/src/plone/restapi/serializer/dxcontent.py b/src/plone/restapi/serializer/dxcontent.py\nindex fbadaf066..f3967e145 100644\n--- a/src/plone/restapi/serializer/dxcontent.py\n+++ b/src/plone/restapi/serializer/dxcontent.py\n@@ -81,10 +81,15 @@ def __call__(self, version=None, include_items=True):\n         }\n \n         # Insert next/prev information\n-        nextprevious = NextPrevious(obj)\n-        result.update(\n-            {"previous_item": nextprevious.previous, "next_item": nextprevious.next}\n-        )\n+        try:\n+            nextprevious = NextPrevious(obj)\n+            result.update(\n+                {"previous_item": nextprevious.previous, "next_item": nextprevious.next}\n+            )\n+        except ValueError:\n+            # If we\'re serializing an old version that was renamed or moved,\n+            # then its id might not be found inside the current object\'s container.\n+            result.update({"previous_item": {}, "next_item": {}})\n \n         # Insert working copy information\n         if WorkingCopyInfo is not None:\ndiff --git a/src/plone/restapi/tests/test_services_history.py b/src/plone/restapi/tests/test_services_history.py\nindex a75eb1c58..2ad04803d 100644\n--- a/src/plone/restapi/tests/test_services_history.py\n+++ b/src/plone/restapi/tests/test_services_history.py\n@@ -119,6 +119,15 @@ def test_previous_version(self):\n         response = self.api_session.get(url)\n         self.assertEqual(response.json()["title"], "My Document")\n \n+    def test_previous_version_of_renamed_item(self):\n+        api.content.move(source=self.doc, id="renamed-doc")\n+        transaction.commit()\n+\n+        url = self.doc.absolute_url() + "/@history/0"\n+        response = self.api_session.get(url)\n+        self.assertEqual(response.status_code, 200)\n+        self.assertEqual(response.json()["id"], "doc_with_history")\n+\n     def test_no_sharing(self):\n         url = self.doc.absolute_url() + "/@history/0"\n         response = self.api_session.get(url)\n'

