Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-12-15T22:20:59+01:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/c35a91232553b871067984004b5e9f595fc59851

Add gh action (#1034)

* Add gh action

* fix checkout

* Fix pip install

* Fix plone version chooser

* Fix buildout

* Disable fail-fast. add more stuff

* Add full build matrix

* Install wheel

* chardet = 3.0.2

Files changed:
A .github/workflows/ci.yml

b'diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nnew file mode 100644\nindex 000000000..dfa298581\n--- /dev/null\n+++ b/.github/workflows/ci.yml\n@@ -0,0 +1,86 @@\n+name: Plone RESTAPI CI\n+on: [push]\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        python-version: [3.8, 3.7, 3.6, 2.7]\n+        plone-version: [5.2, 5.1, 4.3]\n+        exclude:\n+          - python-version: 3.6\n+            plone-version: 4.3\n+          - python-version: 3.6\n+            plone-version: 5.0\n+          - python-version: 3.6\n+            plone-version: 5.1\n+          - python-version: 3.7\n+            plone-version: 4.3\n+          - python-version: 3.7\n+            plone-version: 5.0\n+          - python-version: 3.7\n+            plone-version: 5.1\n+          - python-version: 3.8\n+            plone-version: 4.3\n+          - python-version: 3.8\n+            plone-version: 5.0\n+          - python-version: 3.8\n+            plone-version: 5.1\n+\n+    steps:\n+\n+      # git checkout\n+      - uses: actions/checkout@v2\n+\n+      # python setup\n+      - name: Set up Python ${{ matrix.python-version }}\n+        uses: actions/setup-python@v1\n+        with:\n+          python-version: ${{ matrix.python-version }}\n+\n+      # python cache\n+      - uses: actions/cache@v1\n+        with:\n+          path: ~/.cache/pip\n+          key: ${{ runner.os }}-pip-${{ hashFiles(\'**/requirements.txt\') }}\n+          restore-keys: |\n+            ${{ runner.os }}-pip-\n+\n+      # python install\n+      - run: pip install virtualenv\n+      - run: pip install wheel\n+      - name: pip install\n+        run: pip install -r requirements.txt\n+      - name: choose Plone version\n+        run: sed -ie "s#plone-x.x.x.cfg#plone-${{ matrix.plone-version }}.x.cfg#" travis.cfg\n+\n+      # buildout\n+      - name: buildout\n+        run: buildout -t 10 -c travis.cfg\n+        env:\n+          CI: true\n+\n+      # black\n+      - name: black\n+        run: if [ "${{ matrix.plone-version }}" == "5.2" ] && [ ${{ matrix.python-version }} == \'3.7\' ]; then pip install black && black src/ --check; fi\n+\n+      # code analysis\n+      - name: black\n+        run: bin/code-analysis\n+\n+      # build sphinx\n+      - name: sphinx\n+        run: if [ "${{ matrix.plone-version }}" == "5.2" ] && [ ${{ matrix.python-version }} == \'3.7\' ]; then bin/sphinxbuilder; fi\n+\n+      # test\n+      - name: test\n+        run: bin/test\n+\n+      # test no uncommited changes\n+      - name: test no uncommited changes\n+        run: bin/test-no-uncommitted-doc-changes\n+\n+      # test sphinx warnings\n+      - name: sphinx\n+        run: if [ "${{ matrix.plone-version }}" == "5.2" ] && [ ${{ matrix.python-version }} == \'3.7\' ]; then bin/test-no-sphinx-warnings; fi\n'

