Repository: plone.app.layout


Branch: refs/heads/3.x
Date: 2022-01-07T10:38:39-05:00
Author: Thomas Massmann (thomasmassmann) <thomas.massmann@it-spir.it>
Commit: https://github.com/plone/plone.app.layout/commit/dda0f0472d0e4b104c89c0b3fa8d23231c5832e2

test(280): :test_tube: add test for #280, will fail now

Files changed:
M plone/app/layout/viewlets/tests/test_common.py

b'diff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex 0d001080..c92ebfa8 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -602,6 +602,26 @@ class CustomGlobalSectionsViewlet(GlobalSectionsViewlet):\n             navtree["/plone"][1]["url"], "http://nohost/plone/folder1/view"\n         )\n \n+    def test_escaping_twice_does_not_double_escape_items(self):\n+        """Test for https://github.com/plone/plone.app.layout/issues/280."""\n+\n+        self.portal.invokeFactory(\n+            "Document", "test-doc-1", title=u"Document 1 & 2",\n+        )\n+\n+        request = self.layer["request"]\n+        gsv = GlobalSectionsViewlet(self.portal, request, None)\n+        gsv.update()\n+        html = gsv.render()\n+        self.assertIn("Document 1 &amp; 2", html)\n+\n+        # Render again, as this is what happens when an error view is rendered\n+        # Before the fix this test will fail, as it produces a title with\n+        # \'Document 1 &amp;amp; 2\'.\n+        html = gsv.render()\n+        self.assertNotIn("Document 1 &amp;amp; 2", html)\n+        self.assertIn("Document 1 &amp; 2", html)\n+\n \n class TestTitleEscape(ViewletsFunctionalTestCase):\n     """Test that the title in the global sections viewlet is escaped.\n'

Repository: plone.app.layout


Branch: refs/heads/3.x
Date: 2022-01-07T10:51:37-05:00
Author: Thomas Massmann (thomasmassmann) <thomas.massmann@it-spir.it>
Commit: https://github.com/plone/plone.app.layout/commit/ed9731e9a8a2f74ca1caf44ec3dd6221f7dd6457

fix(280): :bug: ensure navigation titles are escaped only once

Files changed:
M plone/app/layout/viewlets/common.py

b'diff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 136a621d..814cbb9d 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -302,7 +302,9 @@ def navtree(self):\n                     entry["title"], domain="plone", context=self.request\n                 )\n \n-            entry["title"] = safe_unicode(entry["title"])\n+            entry["title"] = escape(safe_unicode(entry["title"]))\n+            if "name" in entry and entry["name"]:\n+                entry["name"] = escape(safe_unicode(entry["name"]))\n             self.customize_tab(entry, tab)\n             ret[navtree_path].append(entry)\n \n@@ -355,7 +357,7 @@ def navtree(self):\n                 "path": brain_path,\n                 "uid": brain.UID,\n                 "url": url,\n-                "title": safe_unicode(brain.Title),\n+                "title": escape(safe_unicode(brain.Title)),\n                 "review_state": brain.review_state,\n             }\n             self.customize_entry(entry, brain)\n@@ -390,10 +392,6 @@ def render_item(self, item, path):\n             item.update(\n                 {"sub": sub, "opener": "", "aria_haspopup": "", "has_sub_class": "",}\n             )\n-        if "title" in item and item["title"]:\n-            item["title"] = escape(item["title"])\n-        if "name" in item and item["name"]:\n-            item["name"] = escape(item["name"])\n         return self._item_markup_template.format(**item)\n \n     def build_tree(self, path, first_run=True):\n'

Repository: plone.app.layout


Branch: refs/heads/3.x
Date: 2022-01-07T10:56:47-05:00
Author: Thomas Massmann (thomasmassmann) <thomas.massmann@it-spir.it>
Commit: https://github.com/plone/plone.app.layout/commit/6cd3468f3785f9828f7d8cd32eb53c482ee344b1

docs(280): :memo: add changelog entry

Files changed:
A news/280.fix

b'diff --git a/news/280.fix b/news/280.fix\nnew file mode 100644\nindex 00000000..57c49ce2\n--- /dev/null\n+++ b/news/280.fix\n@@ -0,0 +1,2 @@\n+Escape navigation titles only once.\n+[thomasmassmann]\n\\ No newline at end of file\n'

Repository: plone.app.layout


Branch: refs/heads/3.x
Date: 2022-01-09T00:09:22+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.layout/commit/b82c41da6035dadc5386770e2b87ffcf8df8081e

Merge pull request #283 from plone/issues/280

Escape navigation titles only once (3.x)

Files changed:
A news/280.fix
M plone/app/layout/viewlets/common.py
M plone/app/layout/viewlets/tests/test_common.py

b'diff --git a/news/280.fix b/news/280.fix\nnew file mode 100644\nindex 00000000..57c49ce2\n--- /dev/null\n+++ b/news/280.fix\n@@ -0,0 +1,2 @@\n+Escape navigation titles only once.\n+[thomasmassmann]\n\\ No newline at end of file\ndiff --git a/plone/app/layout/viewlets/common.py b/plone/app/layout/viewlets/common.py\nindex 136a621d..814cbb9d 100644\n--- a/plone/app/layout/viewlets/common.py\n+++ b/plone/app/layout/viewlets/common.py\n@@ -302,7 +302,9 @@ def navtree(self):\n                     entry["title"], domain="plone", context=self.request\n                 )\n \n-            entry["title"] = safe_unicode(entry["title"])\n+            entry["title"] = escape(safe_unicode(entry["title"]))\n+            if "name" in entry and entry["name"]:\n+                entry["name"] = escape(safe_unicode(entry["name"]))\n             self.customize_tab(entry, tab)\n             ret[navtree_path].append(entry)\n \n@@ -355,7 +357,7 @@ def navtree(self):\n                 "path": brain_path,\n                 "uid": brain.UID,\n                 "url": url,\n-                "title": safe_unicode(brain.Title),\n+                "title": escape(safe_unicode(brain.Title)),\n                 "review_state": brain.review_state,\n             }\n             self.customize_entry(entry, brain)\n@@ -390,10 +392,6 @@ def render_item(self, item, path):\n             item.update(\n                 {"sub": sub, "opener": "", "aria_haspopup": "", "has_sub_class": "",}\n             )\n-        if "title" in item and item["title"]:\n-            item["title"] = escape(item["title"])\n-        if "name" in item and item["name"]:\n-            item["name"] = escape(item["name"])\n         return self._item_markup_template.format(**item)\n \n     def build_tree(self, path, first_run=True):\ndiff --git a/plone/app/layout/viewlets/tests/test_common.py b/plone/app/layout/viewlets/tests/test_common.py\nindex 0d001080..c92ebfa8 100644\n--- a/plone/app/layout/viewlets/tests/test_common.py\n+++ b/plone/app/layout/viewlets/tests/test_common.py\n@@ -602,6 +602,26 @@ class CustomGlobalSectionsViewlet(GlobalSectionsViewlet):\n             navtree["/plone"][1]["url"], "http://nohost/plone/folder1/view"\n         )\n \n+    def test_escaping_twice_does_not_double_escape_items(self):\n+        """Test for https://github.com/plone/plone.app.layout/issues/280."""\n+\n+        self.portal.invokeFactory(\n+            "Document", "test-doc-1", title=u"Document 1 & 2",\n+        )\n+\n+        request = self.layer["request"]\n+        gsv = GlobalSectionsViewlet(self.portal, request, None)\n+        gsv.update()\n+        html = gsv.render()\n+        self.assertIn("Document 1 &amp; 2", html)\n+\n+        # Render again, as this is what happens when an error view is rendered\n+        # Before the fix this test will fail, as it produces a title with\n+        # \'Document 1 &amp;amp; 2\'.\n+        html = gsv.render()\n+        self.assertNotIn("Document 1 &amp;amp; 2", html)\n+        self.assertIn("Document 1 &amp; 2", html)\n+\n \n class TestTitleEscape(ViewletsFunctionalTestCase):\n     """Test that the title in the global sections viewlet is escaped.\n'

