Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-07-24T01:38:49+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/c933abf47e120ba865afcfc4f98ae1517c7fecad

Redirection view: factor our navigation root editing to a method.

This makes it possible to override this method to not do anything.

With the original Products.RedirectionTool in Plone 4.3, nothing was done with the navigation root.
So when you are in /nav-root/page and add an alternative url /fnord, it was stored as /fnord.
In current Plone 5.2, it is stored as /nav-root/fnord.
Makes sense to me, but some want the old behavior back.
Now they can, by overriding the new `edit_for_navigation_root` method to simply return the redirection unchanged.

Files changed:
A news/3153.bugfix
M Products/CMFPlone/controlpanel/browser/redirects.py

b"diff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex b17bc680f8..13707d32e8 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -107,6 +107,22 @@ def redirects(self):\n             path = redirect[len(portal_path) :]\n             yield {'redirect': redirect, 'path': path}\n \n+    def edit_for_navigation_root(self, redirection):\n+        # Check navigation root\n+        pps = getMultiAdapter(\n+            (self.context, self.request), name='plone_portal_state'\n+        )\n+        nav_url = pps.navigation_root_url()\n+        portal_url = pps.portal_url()\n+        if nav_url != portal_url:\n+            # We are in a navigation root different from the portal root.\n+            # Update the path accordingly, unless the user already did this.\n+            extra = nav_url[len(portal_url) :]\n+            if not redirection.startswith(extra):\n+                redirection = '{0}{1}'.format(extra, redirection)\n+        # Finally, return the (possibly edited) redirection\n+        return redirection\n+\n     def __call__(self):\n         storage = getUtility(IRedirectionStorage)\n         request = self.request\n@@ -118,17 +134,7 @@ def __call__(self):\n             redirection = form.get('redirection')\n             if redirection and redirection.startswith('/'):\n                 # Check navigation root\n-                pps = getMultiAdapter(\n-                    (self.context, self.request), name='plone_portal_state'\n-                )\n-                nav_url = pps.navigation_root_url()\n-                portal_url = pps.portal_url()\n-                if nav_url != portal_url:\n-                    # We are in a navigation root different from the portal root.\n-                    # Update the path accordingly, unless the user already did this.\n-                    extra = nav_url[len(portal_url) :]\n-                    if not redirection.startswith(extra):\n-                        redirection = '{0}{1}'.format(extra, redirection)\n+                redirection = self.edit_for_navigation_root(redirection)\n \n             redirection, err = absolutize_path(redirection, is_source=True)\n             if err:\ndiff --git a/news/3153.bugfix b/news/3153.bugfix\nnew file mode 100644\nindex 0000000000..ecee4949d0\n--- /dev/null\n+++ b/news/3153.bugfix\n@@ -0,0 +1,3 @@\n+Redirection view: factor our navigation root editing to a method `edit_for_navigation_root`.\n+This makes it possible to override this method to simply return the redirection unchanged, if you want to support redirects in the site root.\n+[maurits]\n"

Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2020-07-24T16:36:34+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.CMFPlone/commit/0fa773c1c87a435374e01e386750e90c98be19a4

Merge pull request #3153 from plone/maurits/redirection-view-edit-for-navigation-root

Redirection view: factor our navigation root editing to a method. [5.2]

Files changed:
A news/3153.bugfix
M Products/CMFPlone/controlpanel/browser/redirects.py

b"diff --git a/Products/CMFPlone/controlpanel/browser/redirects.py b/Products/CMFPlone/controlpanel/browser/redirects.py\nindex b17bc680f8..13707d32e8 100644\n--- a/Products/CMFPlone/controlpanel/browser/redirects.py\n+++ b/Products/CMFPlone/controlpanel/browser/redirects.py\n@@ -107,6 +107,22 @@ def redirects(self):\n             path = redirect[len(portal_path) :]\n             yield {'redirect': redirect, 'path': path}\n \n+    def edit_for_navigation_root(self, redirection):\n+        # Check navigation root\n+        pps = getMultiAdapter(\n+            (self.context, self.request), name='plone_portal_state'\n+        )\n+        nav_url = pps.navigation_root_url()\n+        portal_url = pps.portal_url()\n+        if nav_url != portal_url:\n+            # We are in a navigation root different from the portal root.\n+            # Update the path accordingly, unless the user already did this.\n+            extra = nav_url[len(portal_url) :]\n+            if not redirection.startswith(extra):\n+                redirection = '{0}{1}'.format(extra, redirection)\n+        # Finally, return the (possibly edited) redirection\n+        return redirection\n+\n     def __call__(self):\n         storage = getUtility(IRedirectionStorage)\n         request = self.request\n@@ -118,17 +134,7 @@ def __call__(self):\n             redirection = form.get('redirection')\n             if redirection and redirection.startswith('/'):\n                 # Check navigation root\n-                pps = getMultiAdapter(\n-                    (self.context, self.request), name='plone_portal_state'\n-                )\n-                nav_url = pps.navigation_root_url()\n-                portal_url = pps.portal_url()\n-                if nav_url != portal_url:\n-                    # We are in a navigation root different from the portal root.\n-                    # Update the path accordingly, unless the user already did this.\n-                    extra = nav_url[len(portal_url) :]\n-                    if not redirection.startswith(extra):\n-                        redirection = '{0}{1}'.format(extra, redirection)\n+                redirection = self.edit_for_navigation_root(redirection)\n \n             redirection, err = absolutize_path(redirection, is_source=True)\n             if err:\ndiff --git a/news/3153.bugfix b/news/3153.bugfix\nnew file mode 100644\nindex 0000000000..ecee4949d0\n--- /dev/null\n+++ b/news/3153.bugfix\n@@ -0,0 +1,3 @@\n+Redirection view: factor our navigation root editing to a method `edit_for_navigation_root`.\n+This makes it possible to override this method to simply return the redirection unchanged, if you want to support redirects in the site root.\n+[maurits]\n"

