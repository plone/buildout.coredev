Repository: plone.app.users


Branch: refs/heads/master
Date: 2024-06-06T17:26:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/eb3f5d384a823268115902d6cd26c9fdf1f4f478

Configuring with plone/meta

Files changed:
M .github/workflows/meta.yml
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml

b'diff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex b8edec0..c9848bc 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -57,6 +57,13 @@ jobs:\n # os_dependencies = "git libxml2 libxslt"\n ##\n \n+##\n+# To test against a specific matrix of python versions\n+# when running tests jobs, add in .meta.toml:\n+# [github]\n+# py_versions = "[\'3.12\', \'3.11\']"\n+##\n+\n \n ##\n # Specify additional jobs in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex 3b50967..77440e5 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,8 +3,11 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "123ebc0a"\n+commit-id = "a89af8f2"\n \n [pyproject]\n codespell_ignores = "complet,exemple"\n dependencies_ignores = "[\'Products.CMFPlone\']"\n+dependencies_mappings = [\n+    "Pillow = [\'PIL\']",\n+    ]\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f857b48..da56023 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.15.0\n+    rev: v3.15.2\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -16,7 +16,7 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 24.1.1\n+    rev: 24.4.2\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n@@ -44,7 +44,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.6\n+    rev: v2.3.0\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n@@ -71,7 +71,7 @@ repos:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n -   repo: https://github.com/collective/i18ndude\n-    rev: "6.1.0"\n+    rev: "6.2.0"\n     hooks:\n     -   id: i18ndude\n \ndiff --git a/pyproject.toml b/pyproject.toml\nindex ff638be..d3a3ec7 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -71,7 +71,7 @@ target-version = ["py38"]\n ##\n \n [tool.codespell]\n-ignore-words-list = "discreet,complet,exemple"\n+ignore-words-list = "discreet,assertin,complet,exemple"\n skip = "*.po,"\n ##\n # Add extra configuration options in .meta.toml:\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2024-06-06T17:26:17+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/b22b36432bb22a586995a8bb002a95514d98dcc3

Remove unused and broken member-registration control panel.

This still tried to use the ``portal_properties`` tool.
Since Plone 5.0 the ``member-fields`` control panel is used instead.

Files changed:
A news/127.bugfix
M plone/app/users/browser/configure.zcml
D plone/app/users/browser/registersettingspanel.py

b'diff --git a/news/127.bugfix b/news/127.bugfix\nnew file mode 100644\nindex 00000000..4d34b45d\n--- /dev/null\n+++ b/news/127.bugfix\n@@ -0,0 +1,4 @@\n+Remove unused and broken member-registration control panel.\n+This still tried to use the ``portal_properties`` tool.\n+Since Plone 5.0 the ``member-fields`` control panel is used instead.\n+[maurits]\ndiff --git a/plone/app/users/browser/configure.zcml b/plone/app/users/browser/configure.zcml\nindex c02cf3fa..3aa12036 100644\n--- a/plone/app/users/browser/configure.zcml\n+++ b/plone/app/users/browser/configure.zcml\n@@ -11,13 +11,6 @@\n       file="permissions.zcml"\n       />\n \n-  <browser:page\n-      name="member-registration"\n-      for="plone.base.interfaces.IPloneSiteRoot"\n-      class=".registersettingspanel.RegistrationControlPanel"\n-      permission="plone.app.controlpanel.UsersAndGroups"\n-      />\n-\n   <browser:page\n       name="register"\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\ndiff --git a/plone/app/users/browser/registersettingspanel.py b/plone/app/users/browser/registersettingspanel.py\ndeleted file mode 100644\nindex 6aac69a7..00000000\n--- a/plone/app/users/browser/registersettingspanel.py\n+++ /dev/null\n@@ -1,81 +0,0 @@\n-from plone.app.users.schema import IRegistrationSettingsSchema\n-from plone.base import PloneMessageFactory as _\n-from plone.protect import CheckAuthenticator\n-from Products.CMFCore.utils import getToolByName\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.statusmessages.interfaces import IStatusMessage\n-from z3c.form import button\n-from z3c.form import field\n-from z3c.form import form\n-from z3c.form.browser.orderedselect import OrderedSelectFieldWidget\n-\n-\n-class RegistrationControlPanel(form.Form):\n-    label = _("Users and Groups")\n-    description = _("Registration settings for this site.")\n-    form_name = _("Registration settings")\n-    enableCSRFProtection = True\n-\n-    formErrorsMessage = _("There were errors.")\n-    template = ViewPageTemplateFile("memberregistration.pt")\n-\n-    fields = field.Fields(IRegistrationSettingsSchema)\n-    fields["user_registration_fields"].widgetFactory = OrderedSelectFieldWidget\n-\n-    def getContent(self):\n-        props = self.props()\n-        return {\n-            "user_registration_fields": props.getProperty(\n-                "user_registration_fields", []\n-            )\n-        }\n-\n-    @button.buttonAndHandler(\n-        _("label_apply_changes", default="Apply changes"), name="save"\n-    )\n-    def action_save(self, action):\n-        # CSRF protection\n-        CheckAuthenticator(self.request)\n-\n-        data, errors = self.extractData()\n-        if errors:\n-            IStatusMessage(self.request).addStatusMessage(\n-                self.formErrorsMessage, type="error"\n-            )\n-            return\n-\n-        # save property\n-        if (\n-            data["user_registration_fields"]\n-            != self.getContent()["user_registration_fields"]\n-        ):\n-            props = self.props()\n-            props._updateProperty(\n-                "user_registration_fields", data["user_registration_fields"]\n-            )\n-            msg = _("Changes saved.")\n-        else:\n-            msg = _("No changes made.")\n-        IStatusMessage(self.request).addStatusMessage(msg, type="info")\n-\n-    # @button.buttonAndHandler(\n-    #     _(u\'label_cancel\', default=u\'Cancel\'), name=\'cancel\'\n-    # )\n-    # def action_cancel(self, action):\n-    #     IStatusMessage(self.request).addStatusMessage(\n-    #         _("Changes canceled."), type="info"\n-    #     )\n-    #     url = getMultiAdapter(\n-    #         (self.context, self.request),\n-    #         name=\'absolute_url\'\n-    #     )()\n-    #     self.request.response.redirect(url + \'/@@overview-controlpanel\')\n-\n-    def updateActions(self):\n-        super().updateActions()\n-        if self.actions and "save" in self.actions:\n-            self.actions["save"].addclass("btn btn-primary")\n-\n-    def props(self):\n-        pprop = getToolByName(self.context, "portal_properties")\n-        return pprop.site_properties\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2024-06-07T10:07:04-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.users/commit/82bd3d35f1c46ad19e20fb4a8d251d11265ca329

Merge pull request #128 from plone/remove-portal-properties-tool

Remove unused and broken member-registration control panel

Files changed:
A news/127.bugfix
M .github/workflows/meta.yml
M .meta.toml
M .pre-commit-config.yaml
M plone/app/users/browser/configure.zcml
M pyproject.toml
D plone/app/users/browser/registersettingspanel.py

b'diff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex b8edec0..c9848bc 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -57,6 +57,13 @@ jobs:\n # os_dependencies = "git libxml2 libxslt"\n ##\n \n+##\n+# To test against a specific matrix of python versions\n+# when running tests jobs, add in .meta.toml:\n+# [github]\n+# py_versions = "[\'3.12\', \'3.11\']"\n+##\n+\n \n ##\n # Specify additional jobs in .meta.toml:\ndiff --git a/.meta.toml b/.meta.toml\nindex 3b50967..77440e5 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,8 +3,11 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "123ebc0a"\n+commit-id = "a89af8f2"\n \n [pyproject]\n codespell_ignores = "complet,exemple"\n dependencies_ignores = "[\'Products.CMFPlone\']"\n+dependencies_mappings = [\n+    "Pillow = [\'PIL\']",\n+    ]\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f857b48..da56023 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.15.0\n+    rev: v3.15.2\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -16,7 +16,7 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 24.1.1\n+    rev: 24.4.2\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n@@ -44,7 +44,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.6\n+    rev: v2.3.0\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n@@ -71,7 +71,7 @@ repos:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n -   repo: https://github.com/collective/i18ndude\n-    rev: "6.1.0"\n+    rev: "6.2.0"\n     hooks:\n     -   id: i18ndude\n \ndiff --git a/news/127.bugfix b/news/127.bugfix\nnew file mode 100644\nindex 0000000..4d34b45\n--- /dev/null\n+++ b/news/127.bugfix\n@@ -0,0 +1,4 @@\n+Remove unused and broken member-registration control panel.\n+This still tried to use the ``portal_properties`` tool.\n+Since Plone 5.0 the ``member-fields`` control panel is used instead.\n+[maurits]\ndiff --git a/plone/app/users/browser/configure.zcml b/plone/app/users/browser/configure.zcml\nindex c02cf3f..3aa1203 100644\n--- a/plone/app/users/browser/configure.zcml\n+++ b/plone/app/users/browser/configure.zcml\n@@ -11,13 +11,6 @@\n       file="permissions.zcml"\n       />\n \n-  <browser:page\n-      name="member-registration"\n-      for="plone.base.interfaces.IPloneSiteRoot"\n-      class=".registersettingspanel.RegistrationControlPanel"\n-      permission="plone.app.controlpanel.UsersAndGroups"\n-      />\n-\n   <browser:page\n       name="register"\n       for="plone.app.layout.navigation.interfaces.INavigationRoot"\ndiff --git a/plone/app/users/browser/registersettingspanel.py b/plone/app/users/browser/registersettingspanel.py\ndeleted file mode 100644\nindex 6aac69a..0000000\n--- a/plone/app/users/browser/registersettingspanel.py\n+++ /dev/null\n@@ -1,81 +0,0 @@\n-from plone.app.users.schema import IRegistrationSettingsSchema\n-from plone.base import PloneMessageFactory as _\n-from plone.protect import CheckAuthenticator\n-from Products.CMFCore.utils import getToolByName\n-from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n-from Products.statusmessages.interfaces import IStatusMessage\n-from z3c.form import button\n-from z3c.form import field\n-from z3c.form import form\n-from z3c.form.browser.orderedselect import OrderedSelectFieldWidget\n-\n-\n-class RegistrationControlPanel(form.Form):\n-    label = _("Users and Groups")\n-    description = _("Registration settings for this site.")\n-    form_name = _("Registration settings")\n-    enableCSRFProtection = True\n-\n-    formErrorsMessage = _("There were errors.")\n-    template = ViewPageTemplateFile("memberregistration.pt")\n-\n-    fields = field.Fields(IRegistrationSettingsSchema)\n-    fields["user_registration_fields"].widgetFactory = OrderedSelectFieldWidget\n-\n-    def getContent(self):\n-        props = self.props()\n-        return {\n-            "user_registration_fields": props.getProperty(\n-                "user_registration_fields", []\n-            )\n-        }\n-\n-    @button.buttonAndHandler(\n-        _("label_apply_changes", default="Apply changes"), name="save"\n-    )\n-    def action_save(self, action):\n-        # CSRF protection\n-        CheckAuthenticator(self.request)\n-\n-        data, errors = self.extractData()\n-        if errors:\n-            IStatusMessage(self.request).addStatusMessage(\n-                self.formErrorsMessage, type="error"\n-            )\n-            return\n-\n-        # save property\n-        if (\n-            data["user_registration_fields"]\n-            != self.getContent()["user_registration_fields"]\n-        ):\n-            props = self.props()\n-            props._updateProperty(\n-                "user_registration_fields", data["user_registration_fields"]\n-            )\n-            msg = _("Changes saved.")\n-        else:\n-            msg = _("No changes made.")\n-        IStatusMessage(self.request).addStatusMessage(msg, type="info")\n-\n-    # @button.buttonAndHandler(\n-    #     _(u\'label_cancel\', default=u\'Cancel\'), name=\'cancel\'\n-    # )\n-    # def action_cancel(self, action):\n-    #     IStatusMessage(self.request).addStatusMessage(\n-    #         _("Changes canceled."), type="info"\n-    #     )\n-    #     url = getMultiAdapter(\n-    #         (self.context, self.request),\n-    #         name=\'absolute_url\'\n-    #     )()\n-    #     self.request.response.redirect(url + \'/@@overview-controlpanel\')\n-\n-    def updateActions(self):\n-        super().updateActions()\n-        if self.actions and "save" in self.actions:\n-            self.actions["save"].addclass("btn btn-primary")\n-\n-    def props(self):\n-        pprop = getToolByName(self.context, "portal_properties")\n-        return pprop.site_properties\ndiff --git a/pyproject.toml b/pyproject.toml\nindex ff638be..d3a3ec7 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -71,7 +71,7 @@ target-version = ["py38"]\n ##\n \n [tool.codespell]\n-ignore-words-list = "discreet,complet,exemple"\n+ignore-words-list = "discreet,assertin,complet,exemple"\n skip = "*.po,"\n ##\n # Add extra configuration options in .meta.toml:\n'

