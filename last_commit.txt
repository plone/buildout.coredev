Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-17T16:39:44+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/1da1ca939a2f23b299b74fff91e0477aaeb5f961

Implemented pyICU for sorting of ReallyUserFriendlyTypes

Files changed:
A news/3985.chore
M plone/app/vocabularies/types.py

b'diff --git a/news/3985.chore b/news/3985.chore\nnew file mode 100644\nindex 0000000..fda49c1\n--- /dev/null\n+++ b/news/3985.chore\n@@ -0,0 +1,2 @@\n+Implemented pyICU for sorting of ReallyUserFriendlyTypes\n+[rohnsha0]\n\\ No newline at end of file\ndiff --git a/plone/app/vocabularies/types.py b/plone/app/vocabularies/types.py\nindex 73f2d8e..cac9cea 100644\n--- a/plone/app/vocabularies/types.py\n+++ b/plone/app/vocabularies/types.py\n@@ -8,6 +8,8 @@\n from zope.schema.interfaces import IVocabularyFactory\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n+from icu import Collator, Locale\n+\n \n \n def getAllowedContentTypes(context):\n@@ -290,15 +292,25 @@ def __call__(self, context):\n         site = getSite()\n         ttool = getToolByName(site, "portal_types", None)\n         if ttool is None:\n-            return SimpleVocabulary([])\n+            return PermissiveVocabulary([])\n \n         request = aq_get(ttool, "REQUEST", None)\n+        \n+        # Get the current language from the request\n+        language = request.get(\'LANGUAGE\', \'en\')\n+        \n+        # Create an ICU Collator for the current language\n+        collator = Collator.createInstance(Locale(language))\n+\n         items = [\n             (translate(ttool[t].Title(), context=request), t)\n             for t in ttool.listContentTypes()\n             if t not in BAD_TYPES\n         ]\n-        items.sort()\n+        \n+        # Sort items using the ICU Collator\n+        items.sort(key=lambda x: collator.getSortKey(x[0]))\n+        \n         items = [SimpleTerm(i[1], i[1], i[0]) for i in items]\n         return PermissiveVocabulary(items)\n \n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T20:33:38+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/d3f4fce04e4e9c01c8b371f0d6cb160a87ec536f

Sort ReallyUserFriendlyTypesVocabulary by translated title using unidecode

Files changed:
M plone/app/vocabularies/types.py

b'diff --git a/plone/app/vocabularies/types.py b/plone/app/vocabularies/types.py\nindex cac9cea..81bf1f8 100644\n--- a/plone/app/vocabularies/types.py\n+++ b/plone/app/vocabularies/types.py\n@@ -8,8 +8,7 @@\n from zope.schema.interfaces import IVocabularyFactory\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n-from icu import Collator, Locale\n-\n+from unidecode import unidecode\n \n \n def getAllowedContentTypes(context):\n@@ -292,27 +291,21 @@ def __call__(self, context):\n         site = getSite()\n         ttool = getToolByName(site, "portal_types", None)\n         if ttool is None:\n-            return PermissiveVocabulary([])\n+            return SimpleVocabulary([])\n \n         request = aq_get(ttool, "REQUEST", None)\n-        \n-        # Get the current language from the request\n-        language = request.get(\'LANGUAGE\', \'en\')\n-        \n-        # Create an ICU Collator for the current language\n-        collator = Collator.createInstance(Locale(language))\n-\n         items = [\n             (translate(ttool[t].Title(), context=request), t)\n             for t in ttool.listContentTypes()\n             if t not in BAD_TYPES\n         ]\n         \n-        # Sort items using the ICU Collator\n-        items.sort(key=lambda x: collator.getSortKey(x[0]))\n+        print(items)\n+        # Sort items based on the translated title using unidecode\n+        items.sort(key=lambda x: unidecode(x[0]).lower())\n         \n-        items = [SimpleTerm(i[1], i[1], i[0]) for i in items]\n-        return PermissiveVocabulary(items)\n+        terms = [SimpleTerm(i[1], i[1], i[0]) for i in items]\n+        return PermissiveVocabulary(terms)\n \n \n-ReallyUserFriendlyTypesVocabularyFactory = ReallyUserFriendlyTypesVocabulary()\n+ReallyUserFriendlyTypesVocabularyFactory = ReallyUserFriendlyTypesVocabulary()\n\\ No newline at end of file\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T20:51:39+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/d65f0f2b10bda3475e1c3aca82be970f1a793798

removed print statement

Files changed:
M plone/app/vocabularies/types.py

b'diff --git a/plone/app/vocabularies/types.py b/plone/app/vocabularies/types.py\nindex 81bf1f8..e294ddf 100644\n--- a/plone/app/vocabularies/types.py\n+++ b/plone/app/vocabularies/types.py\n@@ -299,8 +299,7 @@ def __call__(self, context):\n             for t in ttool.listContentTypes()\n             if t not in BAD_TYPES\n         ]\n-        \n-        print(items)\n+    \n         # Sort items based on the translated title using unidecode\n         items.sort(key=lambda x: unidecode(x[0]).lower())\n         \n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T21:00:52+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/430dae4506e43f11eaf1e6d9f73a1f7f71e61e6d

add "unidecode" dependency to setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 613c086..105c88a 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -47,6 +47,7 @@\n         # by many many other packages in plone.app.* namespace\n         # it is very easy to add transitive circular dependencies\n         "BTrees",\n+        "unidecode",\n         "Products.ZCatalog",\n         "plone.base",\n         "plone.memoize",\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T21:06:06+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/771b2937da3880d6c4dbc5479128c4f246fa6b49

Update setup.py with "unidecode" dependency

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 105c88a..b479aee 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -47,7 +47,6 @@\n         # by many many other packages in plone.app.* namespace\n         # it is very easy to add transitive circular dependencies\n         "BTrees",\n-        "unidecode",\n         "Products.ZCatalog",\n         "plone.base",\n         "plone.memoize",\n@@ -56,6 +55,7 @@\n         "plone.uuid",\n         "pytz",\n         "setuptools",\n+        "unidecode",\n         "z3c.formwidget.query",\n         "zope.browser",\n         "zope.globalrequest",\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T15:42:20Z
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/4087ba8564d2147615264e4427016c7f9221ddb9

[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci

Files changed:
M plone/app/vocabularies/types.py

b'diff --git a/plone/app/vocabularies/types.py b/plone/app/vocabularies/types.py\nindex e294ddf..a921e9c 100644\n--- a/plone/app/vocabularies/types.py\n+++ b/plone/app/vocabularies/types.py\n@@ -1,6 +1,7 @@\n from Acquisition import aq_get\n from plone.app.vocabularies import PermissiveVocabulary\n from Products.CMFCore.utils import getToolByName\n+from unidecode import unidecode\n from zope.component.hooks import getSite\n from zope.deprecation import deprecate\n from zope.i18n import translate\n@@ -8,7 +9,6 @@\n from zope.schema.interfaces import IVocabularyFactory\n from zope.schema.vocabulary import SimpleTerm\n from zope.schema.vocabulary import SimpleVocabulary\n-from unidecode import unidecode\n \n \n def getAllowedContentTypes(context):\n@@ -299,12 +299,12 @@ def __call__(self, context):\n             for t in ttool.listContentTypes()\n             if t not in BAD_TYPES\n         ]\n-    \n+\n         # Sort items based on the translated title using unidecode\n         items.sort(key=lambda x: unidecode(x[0]).lower())\n-        \n+\n         terms = [SimpleTerm(i[1], i[1], i[0]) for i in items]\n         return PermissiveVocabulary(terms)\n \n \n-ReallyUserFriendlyTypesVocabularyFactory = ReallyUserFriendlyTypesVocabulary()\n\\ No newline at end of file\n+ReallyUserFriendlyTypesVocabularyFactory = ReallyUserFriendlyTypesVocabulary()\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T21:27:25+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/a82224d18a91a0c3c5ec4a01a5ffac0b2efca505

updates news comment

Files changed:
M news/3985.chore

b'diff --git a/news/3985.chore b/news/3985.chore\nindex fda49c1..f846ca0 100644\n--- a/news/3985.chore\n+++ b/news/3985.chore\n@@ -1,2 +1,2 @@\n-Implemented pyICU for sorting of ReallyUserFriendlyTypes\n+Implemented sorting of ReallyUserFriendlyTypes using `unidecode`\n [rohnsha0]\n\\ No newline at end of file\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-23T21:42:54+05:30
Author: Rohan Shaw (rohnsha0) <rohnsha0@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/82bb290e95935de5b1b4434acf539a79bf9f21b4

added period in news

Files changed:
M news/3985.chore

b'diff --git a/news/3985.chore b/news/3985.chore\nindex f846ca0..84968a3 100644\n--- a/news/3985.chore\n+++ b/news/3985.chore\n@@ -1,2 +1,2 @@\n-Implemented sorting of ReallyUserFriendlyTypes using `unidecode`\n+Implemented sorting of ReallyUserFriendlyTypes using `unidecode`.\n [rohnsha0]\n\\ No newline at end of file\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2024-07-24T07:17:03+05:30
Author: Rohan Shaw (rohnsha0) <86848116+rohnsha0@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/1da12d2633c261f946c46e1d0a1d380b4bedcc60

Merge pull request #93 from plone/sorting-ReallyUserFriendlyTypes-using-pyicu

Implemented sorting of ReallyUserFriendlyTypes using `unidecode`

Files changed:
A news/3985.chore
M plone/app/vocabularies/types.py
M setup.py

b'diff --git a/news/3985.chore b/news/3985.chore\nnew file mode 100644\nindex 0000000..84968a3\n--- /dev/null\n+++ b/news/3985.chore\n@@ -0,0 +1,2 @@\n+Implemented sorting of ReallyUserFriendlyTypes using `unidecode`.\n+[rohnsha0]\n\\ No newline at end of file\ndiff --git a/plone/app/vocabularies/types.py b/plone/app/vocabularies/types.py\nindex 73f2d8e..a921e9c 100644\n--- a/plone/app/vocabularies/types.py\n+++ b/plone/app/vocabularies/types.py\n@@ -1,6 +1,7 @@\n from Acquisition import aq_get\n from plone.app.vocabularies import PermissiveVocabulary\n from Products.CMFCore.utils import getToolByName\n+from unidecode import unidecode\n from zope.component.hooks import getSite\n from zope.deprecation import deprecate\n from zope.i18n import translate\n@@ -298,9 +299,12 @@ def __call__(self, context):\n             for t in ttool.listContentTypes()\n             if t not in BAD_TYPES\n         ]\n-        items.sort()\n-        items = [SimpleTerm(i[1], i[1], i[0]) for i in items]\n-        return PermissiveVocabulary(items)\n+\n+        # Sort items based on the translated title using unidecode\n+        items.sort(key=lambda x: unidecode(x[0]).lower())\n+\n+        terms = [SimpleTerm(i[1], i[1], i[0]) for i in items]\n+        return PermissiveVocabulary(terms)\n \n \n ReallyUserFriendlyTypesVocabularyFactory = ReallyUserFriendlyTypesVocabulary()\ndiff --git a/setup.py b/setup.py\nindex 613c086..b479aee 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -55,6 +55,7 @@\n         "plone.uuid",\n         "pytz",\n         "setuptools",\n+        "unidecode",\n         "z3c.formwidget.query",\n         "zope.browser",\n         "zope.globalrequest",\n'

