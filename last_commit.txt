Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T16:38:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/a9a4472e0618260041efd066027a1545dd967d77

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 00000000..7ef4f64d\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..a7f25e02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 3d0c75a3..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,30 +1,51 @@\n-*~\n-/develop-eggs\n-/eggs\n-/fake-eggs\n-/bin\n-/parts\n-/downloads\n-/var\n-/build\n-/dist\n-/local.cfg\n-.coverage\n-/*.egg-info\n-/*.egg\n-/.installed.cfg\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n+*.egg-info\n *.pyc\n-/.Python\n-/include\n-/lib\n-/local\n-/.project\n-/.pydevproject\n-/.mr.developer.cfg\n-/src/plone*\n-/src/collective*\n-*.mo\n-docs/Makefile\n-docs/make.bat\n-docs/doctrees\n-docs/html\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 07dde259..aae3f94b 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "47959565"\n+commit-id = "cfffba8c"\n+\n+[pyproject]\n+dependencies_ignores = "[\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 4d030412..14deb064 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -18,16 +19,44 @@ repos:\n     rev: 23.3.0\n     hooks:\n     -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.1.0a2\n+    hooks:\n+    -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.5\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -36,3 +65,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex faf50fb2..cc0a3f98 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +37,122 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = ["Products.LinguaPlone.interfaces.ITranslatable", "collective.akismet", "collective.z3cform.norobots", "plone.formwidget.captcha", "plone.formwidget.recaptcha", "plone.contentrules", "plone.app.contentrules", "plone.stringinterp", "plone.app.collection"]\n+ignore-packages = [\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex fe28c83f..06ce1354 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,22 +52,138 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n-    zope-testrunner --test-path={toxinidir} -s plone.app.discussion\n+    zope-testrunner --all --test-path={toxinidir} -s plone.app.discussion {posargs}\n extras =\n     test\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run --branch --source plone.app.discussion {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.discussion {posargs}\n+    coverage report -m --format markdown\n+    coverage xml\n+extras =\n+    test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T16:38:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/5bf1f4f6ca75bffb4f083c59be9bfaa0f8f926de

cleanup: remove unused file

Files changed:
D setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8fb..00000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T16:38:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/688b04dcc0dd03a0ffdf2b762c302f10d3957702

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 93efe89c..92c17280 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,9 +1,14 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n version = "4.0.2.dev0"\n \n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n+\n install_requires = [\n     "BTrees",\n     "Products.GenericSetup",\n@@ -31,7 +36,10 @@\n     name="plone.app.discussion",\n     version=version,\n     description="Enhanced discussion support for Plone",\n-    long_description=open("README.rst").read() + "\\n" + open("CHANGES.rst").read(),\n+    long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T16:38:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/c55b947fcec644ad0eac8f5d31c82d9a42490354

chore: run zpretty

Files changed:
M plone/app/discussion/browser/comments.pt

b'diff --git a/plone/app/discussion/browser/comments.pt b/plone/app/discussion/browser/comments.pt\nindex ab5c9e2c..7cdc0c33 100644\n--- a/plone/app/discussion/browser/comments.pt\n+++ b/plone/app/discussion/browser/comments.pt\n@@ -1,241 +1,303 @@\n-<tal:block tal:define="userHasReplyPermission view/can_reply;\n-                       isDiscussionAllowed view/is_discussion_allowed;\n-                       isAnonymousDiscussionAllowed view/anonymous_discussion_allowed;\n-                       isEditCommentAllowed view/edit_comment_allowed;\n-                       isDeleteOwnCommentAllowed view/delete_own_comment_allowed;\n-                       isAnon view/is_anonymous;\n-                       canReview view/can_review;\n-                       replies python:view.get_replies(canReview);\n-                       has_replies python:view.has_replies(canReview);\n-                       showCommenterImage view/show_commenter_image;\n-                       errors options/state/getErrors|nothing;\n-                       wtool context/@@plone_tools/workflow;\n-                       auth_token context/@@authenticator/token|nothing"\n-    tal:condition="python:isDiscussionAllowed or has_replies"\n-    i18n:domain="plone">\n-    <div class="pat-discussion">\n-        <div class="reply"\n-            tal:condition="python:isAnon and not isAnonymousDiscussionAllowed">\n-            <form tal:attributes="action view/login_action">\n-                <button class="btn btn-primary mb-3"\n-                    type="submit"\n-                    value="Log in to add comments"\n-                    i18n:attributes="value label_login_to_add_comments;"\n-                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n-            </form>\n-        </div>\n+<tal:block tal:define="\n+             userHasReplyPermission view/can_reply;\n+             isDiscussionAllowed view/is_discussion_allowed;\n+             isAnonymousDiscussionAllowed view/anonymous_discussion_allowed;\n+             isEditCommentAllowed view/edit_comment_allowed;\n+             isDeleteOwnCommentAllowed view/delete_own_comment_allowed;\n+             isAnon view/is_anonymous;\n+             canReview view/can_review;\n+             replies python:view.get_replies(canReview);\n+             has_replies python:view.has_replies(canReview);\n+             showCommenterImage view/show_commenter_image;\n+             errors options/state/getErrors|nothing;\n+             wtool context/@@plone_tools/workflow;\n+             auth_token context/@@authenticator/token|nothing;\n+           "\n+           tal:condition="python:isDiscussionAllowed or has_replies"\n+           i18n:domain="plone"\n+>\n+  <div class="pat-discussion">\n+    <div class="reply"\n+         tal:condition="python:isAnon and not isAnonymousDiscussionAllowed"\n+    >\n+      <form tal:attributes="\n+              action view/login_action;\n+            ">\n+        <button class="btn btn-primary mb-3"\n+                type="submit"\n+                value="Log in to add comments"\n+                i18n:attributes="value label_login_to_add_comments;"\n+                i18n:translate="label_login_to_add_comments"\n+        >Log in to add comments</button>\n+      </form>\n+    </div>\n+\n+    <div class="discussion"\n+         tal:condition="has_replies"\n+    >\n+      <tal:getreplies repeat="reply_dict replies">\n+\n+        <div class="comment"\n+             tal:define="\n+               reply reply_dict/comment;\n+               comment_id reply/getId;\n+               depth reply_dict/depth|python:0;\n+               depth python: depth > 10 and \'10\' or depth;\n+               author_home_url python:view.get_commenter_home_url(username=reply.author_username);\n+               has_author_link python:author_home_url and not isAnon;\n+               portrait_url python:view.get_commenter_portrait(reply.author_username);\n+               review_state python:wtool.getInfoFor(reply, \'review_state\', \'none\');\n+               canEdit python:view.can_edit(reply);\n+               canDelete python:view.can_delete(reply);\n+               colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n+             "\n+             tal:condition="python:canReview or review_state == \'published\'"\n+             tal:attributes="\n+               class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n+               id comment_id;\n+             "\n+        >\n+\n+          <div class="d-flex flex-row align-items-center mb-3">\n+\n+            <!-- commenter image -->\n+            <div class="comment-image me-3"\n+                 tal:condition="showCommenterImage"\n+            >\n+              <a href=""\n+                 tal:condition="has_author_link"\n+                 tal:attributes="\n+                   href author_home_url;\n+                 "\n+              >\n+                <img alt=""\n+                     src="defaultUser.png"\n+                     tal:attributes="\n+                       src portrait_url;\n+                       alt reply/author_name;\n+                     "\n+                />\n+              </a>\n+              <img alt=""\n+                   src="defaultUser.png"\n+                   tal:condition="not: has_author_link"\n+                   tal:attributes="\n+                     src portrait_url;\n+                     alt reply/author_name;\n+                   "\n+              />\n+            </div>\n+\n+            <!-- commenter name and date -->\n+            <div class="comment-author">\n+\n+              <a href=""\n+                 tal:condition="has_author_link"\n+                 tal:attributes="\n+                   href author_home_url;\n+                 "\n+              >${reply/author_name}</a>\n \n-        <div class="discussion"\n-            tal:condition="has_replies">\n-            <tal:getreplies repeat="reply_dict replies">\n-\n-                <div class="comment"\n-                    tal:define="reply reply_dict/comment;\n-                             comment_id reply/getId;\n-                             depth reply_dict/depth|python:0;\n-                             depth python: depth > 10 and \'10\' or depth;\n-                             author_home_url python:view.get_commenter_home_url(username=reply.author_username);\n-                             has_author_link python:author_home_url and not isAnon;\n-                             portrait_url python:view.get_commenter_portrait(reply.author_username);\n-                             review_state python:wtool.getInfoFor(reply, \'review_state\', \'none\');\n-                             canEdit python:view.can_edit(reply);\n-                             canDelete python:view.can_delete(reply);\n-                             colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);"\n-                    tal:attributes="class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n-                                 id comment_id"\n-                    tal:condition="python:canReview or review_state == \'published\'">\n-\n-                    <div class="d-flex flex-row align-items-center mb-3">\n-\n-                        <!-- commenter image -->\n-                        <div class="comment-image me-3"\n-                            tal:condition="showCommenterImage">\n-                            <a href=""\n-                                tal:condition="has_author_link"\n-                                tal:attributes="href author_home_url">\n-                                <img src="defaultUser.png"\n-                                    alt=""\n-                                    tal:attributes="src portrait_url; alt reply/author_name" />\n-                            </a>\n-                            <img src="defaultUser.png"\n-                                alt=""\n-                                tal:condition="not: has_author_link"\n-                                tal:attributes="src portrait_url; alt reply/author_name" />\n-                        </div>\n-\n-                        <!-- commenter name and date -->\n-                        <div class="comment-author">\n-\n-                            <a href=""\n-                                tal:condition="has_author_link"\n-                                tal:attributes="href author_home_url">${reply/author_name}</a>\n-\n-                            <span tal:condition="not: has_author_link">${reply/author_name}</span>\n-\n-                            <span tal:condition="not: reply/author_name"\n-                                i18n:translate="label_anonymous">Anonymous</span>\n-\n-                            <br />\n-\n-                            <small class="text-muted"\n-                                tal:content="python:view.format_time(reply.modification_date)">\n+              <span tal:condition="not: has_author_link">${reply/author_name}</span>\n+\n+              <span tal:condition="not: reply/author_name"\n+                    i18n:translate="label_anonymous"\n+              >Anonymous</span>\n+\n+              <br />\n+\n+              <small class="text-muted"\n+                     tal:content="python:view.format_time(reply.modification_date)"\n+              >\n                       8/23/2001 12:40:44 PM\n-                            </small>\n-\n-                        </div>\n-                    </div>\n-\n-\n-\n-                    <!-- comment body -->\n-                    <div class="comment-body">\n-\n-                        <span tal:replace="structure reply/getText" />\n-\n-                        <!-- comment actions -->\n-                        <div class="d-flex flex-row justify-content-end mb-3">\n-\n-                            <div class="comment-actions actions-edit"\n-                                tal:condition="python:isEditCommentAllowed and canEdit">\n-\n-                                <!-- edit -->\n-                                <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n-                                    tal:condition="auth_token"\n-                                    tal:attributes="href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token}"\n-                                    i18n:translate="Edit">Edit</a>\n-\n-                                <form name="edit"\n-                                    action=""\n-                                    method="get"\n-                                    class="comment-action action-edit"\n-                                    tal:condition="not: auth_token"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@edit-comment;\n-                                                id string:edit-${comment_id}">\n-\n-                                    <button name="form.button.EditComment"\n-                                        class="context btn btn-primary btn-sm"\n-                                        type="submit"\n-                                        value="Edit"\n-                                        i18n:attributes="value label_edit;"\n-                                        i18n:translate="label_edit">Edit</button>\n-\n-                                </form>\n-\n-                            </div>\n-\n-                            <div class="comment-actions actions-delete"\n-                                tal:condition="python:canDelete">\n-\n-                                <!-- delete own comment -->\n-                                <form name="delete"\n-                                    action=""\n-                                    method="post"\n-                                    class="comment-action action-delete"\n-                                    tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@delete-own-comment;\n-                                                style python:view.can_delete_own(reply) and \'display: inline\' or \'display: none\';\n-                                                id string:delete-${comment_id}">\n-                                    <button name="form.button.DeleteComment"\n-                                        class="destructive btn btn-danger btn-sm"\n-                                        type="submit"\n-                                        value="Delete"\n-                                        i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete">Delete</button>\n-                                </form>\n-\n-                                <!-- delete -->\n-                                <form name="delete"\n-                                    action=""\n-                                    method="post"\n-                                    class="comment-action action-delete"\n-                                    tal:condition="python:canDelete"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@moderate-delete-comment;\n-                                                id string:delete-${comment_id}">\n-                                    <button name="form.button.DeleteComment"\n-                                        class="destructive btn btn-danger btn-sm"\n-                                        type="submit"\n-                                        value="Delete"\n-                                        i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete">Delete</button>\n-                                </form>\n-\n-                            </div>\n-\n-                            <div class="comment-actions actions-workflow d-flex flex-row"\n-                                tal:condition="reply_dict/actions|nothing">\n-\n-                                <form name=""\n-                                    action=""\n-                                    method="get"\n-                                    class="comment-action action-${action/id}"\n-                                    tal:condition="canReview"\n-                                    tal:repeat="action reply_dict/actions|nothing"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@transmit-comment;\n-                                                name action/id;\n-                                                id string:${action/id}-${comment_id};\n-                                                ">\n-                                    <input type="hidden"\n-                                        name="workflow_action"\n-                                        tal:attributes="value action/id" />\n-                                    <button name="form.button.TransmitComment"\n-                                        class="context btn btn-primary btn-sm"\n-                                        type="submit"\n-                                        i18n:translate="">${action/title}</button>\n-                                </form>\n-\n-                            </div>\n-\n-                        </div>\n-                        <!-- end comment actions -->\n-\n-\n-                    </div>\n-                    <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n-                        tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n-                        i18n:translate="label_reply">\n+              </small>\n+\n+            </div>\n+          </div>\n+\n+\n+\n+          <!-- comment body -->\n+          <div class="comment-body">\n+\n+            <span tal:replace="structure reply/getText"></span>\n+\n+            <!-- comment actions -->\n+            <div class="d-flex flex-row justify-content-end mb-3">\n+\n+              <div class="comment-actions actions-edit"\n+                   tal:condition="python:isEditCommentAllowed and canEdit"\n+              >\n+\n+                <!-- edit -->\n+                <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n+                   tal:condition="auth_token"\n+                   tal:attributes="\n+                     href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token};\n+                   "\n+                   i18n:translate="Edit"\n+                >Edit</a>\n+\n+                <form class="comment-action action-edit"\n+                      action=""\n+                      method="get"\n+                      name="edit"\n+                      tal:condition="not: auth_token"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@edit-comment;\n+                        id string:edit-${comment_id};\n+                      "\n+                >\n+\n+                  <button class="context btn btn-primary btn-sm"\n+                          name="form.button.EditComment"\n+                          type="submit"\n+                          value="Edit"\n+                          i18n:attributes="value label_edit;"\n+                          i18n:translate="label_edit"\n+                  >Edit</button>\n+\n+                </form>\n+\n+              </div>\n+\n+              <div class="comment-actions actions-delete"\n+                   tal:condition="python:canDelete"\n+              >\n+\n+                <!-- delete own comment -->\n+                <form class="comment-action action-delete"\n+                      action=""\n+                      method="post"\n+                      name="delete"\n+                      tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@delete-own-comment;\n+                        style python:view.can_delete_own(reply) and \'display: inline\' or \'display: none\';\n+                        id string:delete-${comment_id};\n+                      "\n+                >\n+                  <button class="destructive btn btn-danger btn-sm"\n+                          name="form.button.DeleteComment"\n+                          type="submit"\n+                          value="Delete"\n+                          i18n:attributes="value label_delete;"\n+                          i18n:translate="label_delete"\n+                  >Delete</button>\n+                </form>\n+\n+                <!-- delete -->\n+                <form class="comment-action action-delete"\n+                      action=""\n+                      method="post"\n+                      name="delete"\n+                      tal:condition="python:canDelete"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@moderate-delete-comment;\n+                        id string:delete-${comment_id};\n+                      "\n+                >\n+                  <button class="destructive btn btn-danger btn-sm"\n+                          name="form.button.DeleteComment"\n+                          type="submit"\n+                          value="Delete"\n+                          i18n:attributes="value label_delete;"\n+                          i18n:translate="label_delete"\n+                  >Delete</button>\n+                </form>\n+\n+              </div>\n+\n+              <div class="comment-actions actions-workflow d-flex flex-row"\n+                   tal:condition="reply_dict/actions|nothing"\n+              >\n+\n+                <form class="comment-action action-${action/id}"\n+                      action=""\n+                      method="get"\n+                      name=""\n+                      tal:condition="canReview"\n+                      tal:repeat="action reply_dict/actions|nothing"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@transmit-comment;\n+                        name action/id;\n+                        id string:${action/id}-${comment_id};\n+                      "\n+                >\n+                  <input name="workflow_action"\n+                         type="hidden"\n+                         tal:attributes="\n+                           value action/id;\n+                         "\n+                  />\n+                  <button class="context btn btn-primary btn-sm"\n+                          name="form.button.TransmitComment"\n+                          type="submit"\n+                          i18n:translate=""\n+                  >${action/title}</button>\n+                </form>\n+\n+              </div>\n+\n+            </div>\n+            <!-- end comment actions -->\n+\n+\n+          </div>\n+          <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n+                  tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n+                  i18n:translate="label_reply"\n+          >\n                     Reply\n-                    </button>\n+          </button>\n \n-                </div>\n+        </div>\n \n-            </tal:getreplies>\n+      </tal:getreplies>\n \n-            <div tal:condition="python: has_replies and not isDiscussionAllowed"\n-                class="discreet"\n-                i18n:translate="label_commenting_disabled">\n+      <div class="discreet"\n+           tal:condition="python: has_replies and not isDiscussionAllowed"\n+           i18n:translate="label_commenting_disabled"\n+      >\n             Commenting has been disabled.\n-            </div>\n+      </div>\n \n-        </div>\n+    </div>\n \n-        <div class="reply"\n-            tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)">\n-            <form tal:attributes="action view/login_action"\n-                class="mb-3">\n-                <button class="standalone loginbutton btn btn-primary"\n-                    type="submit"\n-                    value="Log in to add comments"\n-                    i18n:attributes="value label_login_to_add_comments;"\n-                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n-            </form>\n-        </div>\n+    <div class="reply"\n+         tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)"\n+    >\n+      <form class="mb-3"\n+            tal:attributes="\n+              action view/login_action;\n+            "\n+      >\n+        <button class="standalone loginbutton btn btn-primary"\n+                type="submit"\n+                value="Log in to add comments"\n+                i18n:attributes="value label_login_to_add_comments;"\n+                i18n:translate="label_login_to_add_comments"\n+        >Log in to add comments</button>\n+      </form>\n+    </div>\n \n-        <div id="commenting"\n-            class="reply border p-3"\n-            tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)">\n+    <div class="reply border p-3"\n+         id="commenting"\n+         tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n+    >\n \n-            <fieldset>\n+      <fieldset>\n \n-                <legend i18n:translate="label_add_comment">Add comment</legend>\n+        <legend i18n:translate="label_add_comment">Add comment</legend>\n \n-                <p tal:content="view/comment_transform_message">\n+        <p tal:content="view/comment_transform_message">\n                 You can add a comment by filling out the form below. Plain text\n                 formatting.\n-                </p>\n+        </p>\n \n-                <div tal:replace="structure view/form/render" />\n+        <div tal:replace="structure view/form/render"></div>\n \n-            </fieldset>\n-        </div>\n+      </fieldset>\n     </div>\n+  </div>\n </tal:block>\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T16:38:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/1210f81f8b79f1bb479962b8e924a195783c6d3c

fix: mark string for translation

Files changed:
M plone/app/discussion/browser/moderation.pt

b'diff --git a/plone/app/discussion/browser/moderation.pt b/plone/app/discussion/browser/moderation.pt\nindex 4c6162d6..6e669881 100644\n--- a/plone/app/discussion/browser/moderation.pt\n+++ b/plone/app/discussion/browser/moderation.pt\n@@ -44,7 +44,7 @@\n              role="status"\n              tal:condition="python: not moderation_enabled"\n         >\n-          <strong>Info</strong>\n+          <strong i18n:translate="">Info</strong>\n           <div i18n:translate="message_moderation_disabled">Moderation workflow is disabled. You have to\n             <a href=""\n                tal:attributes="\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T16:38:37+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/21f531f6edc5c0160473da63926f546d6d2c4cd2

fix: adjust dependencies

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 92c17280..693b571e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -17,7 +17,6 @@\n     "persistent",\n     "plone.api",\n     "plone.app.event",\n-    "plone.dexterity",\n     "plone.registry",\n     "plone.resource",\n     "plone.uuid",\n@@ -79,6 +78,7 @@\n             "plone.protect",\n             "Products.MailHost",\n             "robotsuite",\n+            "plone.dexterity",\n             "python-dateutil",\n         ],\n     },\n'

Repository: plone.app.discussion


Branch: refs/heads/master
Date: 2023-07-09T18:11:04+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/a503082a0a56e84fecdc5cd7dc1cf0e99bcfd032

Merge pull request #213 from plone/config-with-default-template-561582a9

Config with default template

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/cfffba8c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M plone/app/discussion/browser/comments.pt
M plone/app/discussion/browser/moderation.pt
M pyproject.toml
M setup.py
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..919b4116 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 62%\nrename from setup.cfg\nrename to .flake8\nindex 0da8f8fb..7ef4f64d 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -15,9 +13,10 @@ ignore =\n     # black takes care of spaces after commas\n     E231,\n \n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..a7f25e02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 3d0c75a3..81594fde 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,30 +1,51 @@\n-*~\n-/develop-eggs\n-/eggs\n-/fake-eggs\n-/bin\n-/parts\n-/downloads\n-/var\n-/build\n-/dist\n-/local.cfg\n-.coverage\n-/*.egg-info\n-/*.egg\n-/.installed.cfg\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n+*.egg-info\n *.pyc\n-/.Python\n-/include\n-/lib\n-/local\n-/.project\n-/.pydevproject\n-/.mr.developer.cfg\n-/src/plone*\n-/src/collective*\n-*.mo\n-docs/Makefile\n-docs/make.bat\n-docs/doctrees\n-docs/html\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 07dde259..aae3f94b 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "47959565"\n+commit-id = "cfffba8c"\n+\n+[pyproject]\n+dependencies_ignores = "[\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 4d030412..14deb064 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -18,16 +19,44 @@ repos:\n     rev: 23.3.0\n     hooks:\n     -   id: black\n+-   repo: https://github.com/collective/zpretty\n+    rev: 3.1.0a2\n+    hooks:\n+    -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.5\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -36,3 +65,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/discussion/browser/comments.pt b/plone/app/discussion/browser/comments.pt\nindex ab5c9e2c..7cdc0c33 100644\n--- a/plone/app/discussion/browser/comments.pt\n+++ b/plone/app/discussion/browser/comments.pt\n@@ -1,241 +1,303 @@\n-<tal:block tal:define="userHasReplyPermission view/can_reply;\n-                       isDiscussionAllowed view/is_discussion_allowed;\n-                       isAnonymousDiscussionAllowed view/anonymous_discussion_allowed;\n-                       isEditCommentAllowed view/edit_comment_allowed;\n-                       isDeleteOwnCommentAllowed view/delete_own_comment_allowed;\n-                       isAnon view/is_anonymous;\n-                       canReview view/can_review;\n-                       replies python:view.get_replies(canReview);\n-                       has_replies python:view.has_replies(canReview);\n-                       showCommenterImage view/show_commenter_image;\n-                       errors options/state/getErrors|nothing;\n-                       wtool context/@@plone_tools/workflow;\n-                       auth_token context/@@authenticator/token|nothing"\n-    tal:condition="python:isDiscussionAllowed or has_replies"\n-    i18n:domain="plone">\n-    <div class="pat-discussion">\n-        <div class="reply"\n-            tal:condition="python:isAnon and not isAnonymousDiscussionAllowed">\n-            <form tal:attributes="action view/login_action">\n-                <button class="btn btn-primary mb-3"\n-                    type="submit"\n-                    value="Log in to add comments"\n-                    i18n:attributes="value label_login_to_add_comments;"\n-                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n-            </form>\n-        </div>\n+<tal:block tal:define="\n+             userHasReplyPermission view/can_reply;\n+             isDiscussionAllowed view/is_discussion_allowed;\n+             isAnonymousDiscussionAllowed view/anonymous_discussion_allowed;\n+             isEditCommentAllowed view/edit_comment_allowed;\n+             isDeleteOwnCommentAllowed view/delete_own_comment_allowed;\n+             isAnon view/is_anonymous;\n+             canReview view/can_review;\n+             replies python:view.get_replies(canReview);\n+             has_replies python:view.has_replies(canReview);\n+             showCommenterImage view/show_commenter_image;\n+             errors options/state/getErrors|nothing;\n+             wtool context/@@plone_tools/workflow;\n+             auth_token context/@@authenticator/token|nothing;\n+           "\n+           tal:condition="python:isDiscussionAllowed or has_replies"\n+           i18n:domain="plone"\n+>\n+  <div class="pat-discussion">\n+    <div class="reply"\n+         tal:condition="python:isAnon and not isAnonymousDiscussionAllowed"\n+    >\n+      <form tal:attributes="\n+              action view/login_action;\n+            ">\n+        <button class="btn btn-primary mb-3"\n+                type="submit"\n+                value="Log in to add comments"\n+                i18n:attributes="value label_login_to_add_comments;"\n+                i18n:translate="label_login_to_add_comments"\n+        >Log in to add comments</button>\n+      </form>\n+    </div>\n+\n+    <div class="discussion"\n+         tal:condition="has_replies"\n+    >\n+      <tal:getreplies repeat="reply_dict replies">\n+\n+        <div class="comment"\n+             tal:define="\n+               reply reply_dict/comment;\n+               comment_id reply/getId;\n+               depth reply_dict/depth|python:0;\n+               depth python: depth > 10 and \'10\' or depth;\n+               author_home_url python:view.get_commenter_home_url(username=reply.author_username);\n+               has_author_link python:author_home_url and not isAnon;\n+               portrait_url python:view.get_commenter_portrait(reply.author_username);\n+               review_state python:wtool.getInfoFor(reply, \'review_state\', \'none\');\n+               canEdit python:view.can_edit(reply);\n+               canDelete python:view.can_delete(reply);\n+               colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);\n+             "\n+             tal:condition="python:canReview or review_state == \'published\'"\n+             tal:attributes="\n+               class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n+               id comment_id;\n+             "\n+        >\n+\n+          <div class="d-flex flex-row align-items-center mb-3">\n+\n+            <!-- commenter image -->\n+            <div class="comment-image me-3"\n+                 tal:condition="showCommenterImage"\n+            >\n+              <a href=""\n+                 tal:condition="has_author_link"\n+                 tal:attributes="\n+                   href author_home_url;\n+                 "\n+              >\n+                <img alt=""\n+                     src="defaultUser.png"\n+                     tal:attributes="\n+                       src portrait_url;\n+                       alt reply/author_name;\n+                     "\n+                />\n+              </a>\n+              <img alt=""\n+                   src="defaultUser.png"\n+                   tal:condition="not: has_author_link"\n+                   tal:attributes="\n+                     src portrait_url;\n+                     alt reply/author_name;\n+                   "\n+              />\n+            </div>\n+\n+            <!-- commenter name and date -->\n+            <div class="comment-author">\n+\n+              <a href=""\n+                 tal:condition="has_author_link"\n+                 tal:attributes="\n+                   href author_home_url;\n+                 "\n+              >${reply/author_name}</a>\n \n-        <div class="discussion"\n-            tal:condition="has_replies">\n-            <tal:getreplies repeat="reply_dict replies">\n-\n-                <div class="comment"\n-                    tal:define="reply reply_dict/comment;\n-                             comment_id reply/getId;\n-                             depth reply_dict/depth|python:0;\n-                             depth python: depth > 10 and \'10\' or depth;\n-                             author_home_url python:view.get_commenter_home_url(username=reply.author_username);\n-                             has_author_link python:author_home_url and not isAnon;\n-                             portrait_url python:view.get_commenter_portrait(reply.author_username);\n-                             review_state python:wtool.getInfoFor(reply, \'review_state\', \'none\');\n-                             canEdit python:view.can_edit(reply);\n-                             canDelete python:view.can_delete(reply);\n-                             colorclass python:lambda x: \'state-private\' if x==\'rejected\' else (\'state-internal\' if x==\'spam\' else \'state-\'+x);"\n-                    tal:attributes="class python:\'comment level-{depth} {state}\'.format(depth= depth, state=colorclass(review_state));\n-                                 id comment_id"\n-                    tal:condition="python:canReview or review_state == \'published\'">\n-\n-                    <div class="d-flex flex-row align-items-center mb-3">\n-\n-                        <!-- commenter image -->\n-                        <div class="comment-image me-3"\n-                            tal:condition="showCommenterImage">\n-                            <a href=""\n-                                tal:condition="has_author_link"\n-                                tal:attributes="href author_home_url">\n-                                <img src="defaultUser.png"\n-                                    alt=""\n-                                    tal:attributes="src portrait_url; alt reply/author_name" />\n-                            </a>\n-                            <img src="defaultUser.png"\n-                                alt=""\n-                                tal:condition="not: has_author_link"\n-                                tal:attributes="src portrait_url; alt reply/author_name" />\n-                        </div>\n-\n-                        <!-- commenter name and date -->\n-                        <div class="comment-author">\n-\n-                            <a href=""\n-                                tal:condition="has_author_link"\n-                                tal:attributes="href author_home_url">${reply/author_name}</a>\n-\n-                            <span tal:condition="not: has_author_link">${reply/author_name}</span>\n-\n-                            <span tal:condition="not: reply/author_name"\n-                                i18n:translate="label_anonymous">Anonymous</span>\n-\n-                            <br />\n-\n-                            <small class="text-muted"\n-                                tal:content="python:view.format_time(reply.modification_date)">\n+              <span tal:condition="not: has_author_link">${reply/author_name}</span>\n+\n+              <span tal:condition="not: reply/author_name"\n+                    i18n:translate="label_anonymous"\n+              >Anonymous</span>\n+\n+              <br />\n+\n+              <small class="text-muted"\n+                     tal:content="python:view.format_time(reply.modification_date)"\n+              >\n                       8/23/2001 12:40:44 PM\n-                            </small>\n-\n-                        </div>\n-                    </div>\n-\n-\n-\n-                    <!-- comment body -->\n-                    <div class="comment-body">\n-\n-                        <span tal:replace="structure reply/getText" />\n-\n-                        <!-- comment actions -->\n-                        <div class="d-flex flex-row justify-content-end mb-3">\n-\n-                            <div class="comment-actions actions-edit"\n-                                tal:condition="python:isEditCommentAllowed and canEdit">\n-\n-                                <!-- edit -->\n-                                <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n-                                    tal:condition="auth_token"\n-                                    tal:attributes="href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token}"\n-                                    i18n:translate="Edit">Edit</a>\n-\n-                                <form name="edit"\n-                                    action=""\n-                                    method="get"\n-                                    class="comment-action action-edit"\n-                                    tal:condition="not: auth_token"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@edit-comment;\n-                                                id string:edit-${comment_id}">\n-\n-                                    <button name="form.button.EditComment"\n-                                        class="context btn btn-primary btn-sm"\n-                                        type="submit"\n-                                        value="Edit"\n-                                        i18n:attributes="value label_edit;"\n-                                        i18n:translate="label_edit">Edit</button>\n-\n-                                </form>\n-\n-                            </div>\n-\n-                            <div class="comment-actions actions-delete"\n-                                tal:condition="python:canDelete">\n-\n-                                <!-- delete own comment -->\n-                                <form name="delete"\n-                                    action=""\n-                                    method="post"\n-                                    class="comment-action action-delete"\n-                                    tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@delete-own-comment;\n-                                                style python:view.can_delete_own(reply) and \'display: inline\' or \'display: none\';\n-                                                id string:delete-${comment_id}">\n-                                    <button name="form.button.DeleteComment"\n-                                        class="destructive btn btn-danger btn-sm"\n-                                        type="submit"\n-                                        value="Delete"\n-                                        i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete">Delete</button>\n-                                </form>\n-\n-                                <!-- delete -->\n-                                <form name="delete"\n-                                    action=""\n-                                    method="post"\n-                                    class="comment-action action-delete"\n-                                    tal:condition="python:canDelete"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@moderate-delete-comment;\n-                                                id string:delete-${comment_id}">\n-                                    <button name="form.button.DeleteComment"\n-                                        class="destructive btn btn-danger btn-sm"\n-                                        type="submit"\n-                                        value="Delete"\n-                                        i18n:attributes="value label_delete;"\n-                                        i18n:translate="label_delete">Delete</button>\n-                                </form>\n-\n-                            </div>\n-\n-                            <div class="comment-actions actions-workflow d-flex flex-row"\n-                                tal:condition="reply_dict/actions|nothing">\n-\n-                                <form name=""\n-                                    action=""\n-                                    method="get"\n-                                    class="comment-action action-${action/id}"\n-                                    tal:condition="canReview"\n-                                    tal:repeat="action reply_dict/actions|nothing"\n-                                    tal:attributes="action string:${reply/absolute_url}/@@transmit-comment;\n-                                                name action/id;\n-                                                id string:${action/id}-${comment_id};\n-                                                ">\n-                                    <input type="hidden"\n-                                        name="workflow_action"\n-                                        tal:attributes="value action/id" />\n-                                    <button name="form.button.TransmitComment"\n-                                        class="context btn btn-primary btn-sm"\n-                                        type="submit"\n-                                        i18n:translate="">${action/title}</button>\n-                                </form>\n-\n-                            </div>\n-\n-                        </div>\n-                        <!-- end comment actions -->\n-\n-\n-                    </div>\n-                    <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n-                        tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n-                        i18n:translate="label_reply">\n+              </small>\n+\n+            </div>\n+          </div>\n+\n+\n+\n+          <!-- comment body -->\n+          <div class="comment-body">\n+\n+            <span tal:replace="structure reply/getText"></span>\n+\n+            <!-- comment actions -->\n+            <div class="d-flex flex-row justify-content-end mb-3">\n+\n+              <div class="comment-actions actions-edit"\n+                   tal:condition="python:isEditCommentAllowed and canEdit"\n+              >\n+\n+                <!-- edit -->\n+                <a class="pat-plone-modal context comment-action action-edit btn btn-primary btn-sm"\n+                   tal:condition="auth_token"\n+                   tal:attributes="\n+                     href string:${reply/absolute_url}/@@edit-comment?_authenticator=${auth_token};\n+                   "\n+                   i18n:translate="Edit"\n+                >Edit</a>\n+\n+                <form class="comment-action action-edit"\n+                      action=""\n+                      method="get"\n+                      name="edit"\n+                      tal:condition="not: auth_token"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@edit-comment;\n+                        id string:edit-${comment_id};\n+                      "\n+                >\n+\n+                  <button class="context btn btn-primary btn-sm"\n+                          name="form.button.EditComment"\n+                          type="submit"\n+                          value="Edit"\n+                          i18n:attributes="value label_edit;"\n+                          i18n:translate="label_edit"\n+                  >Edit</button>\n+\n+                </form>\n+\n+              </div>\n+\n+              <div class="comment-actions actions-delete"\n+                   tal:condition="python:canDelete"\n+              >\n+\n+                <!-- delete own comment -->\n+                <form class="comment-action action-delete"\n+                      action=""\n+                      method="post"\n+                      name="delete"\n+                      tal:condition="python:not canDelete and isDeleteOwnCommentAllowed and view.could_delete_own(reply)"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@delete-own-comment;\n+                        style python:view.can_delete_own(reply) and \'display: inline\' or \'display: none\';\n+                        id string:delete-${comment_id};\n+                      "\n+                >\n+                  <button class="destructive btn btn-danger btn-sm"\n+                          name="form.button.DeleteComment"\n+                          type="submit"\n+                          value="Delete"\n+                          i18n:attributes="value label_delete;"\n+                          i18n:translate="label_delete"\n+                  >Delete</button>\n+                </form>\n+\n+                <!-- delete -->\n+                <form class="comment-action action-delete"\n+                      action=""\n+                      method="post"\n+                      name="delete"\n+                      tal:condition="python:canDelete"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@moderate-delete-comment;\n+                        id string:delete-${comment_id};\n+                      "\n+                >\n+                  <button class="destructive btn btn-danger btn-sm"\n+                          name="form.button.DeleteComment"\n+                          type="submit"\n+                          value="Delete"\n+                          i18n:attributes="value label_delete;"\n+                          i18n:translate="label_delete"\n+                  >Delete</button>\n+                </form>\n+\n+              </div>\n+\n+              <div class="comment-actions actions-workflow d-flex flex-row"\n+                   tal:condition="reply_dict/actions|nothing"\n+              >\n+\n+                <form class="comment-action action-${action/id}"\n+                      action=""\n+                      method="get"\n+                      name=""\n+                      tal:condition="canReview"\n+                      tal:repeat="action reply_dict/actions|nothing"\n+                      tal:attributes="\n+                        action string:${reply/absolute_url}/@@transmit-comment;\n+                        name action/id;\n+                        id string:${action/id}-${comment_id};\n+                      "\n+                >\n+                  <input name="workflow_action"\n+                         type="hidden"\n+                         tal:attributes="\n+                           value action/id;\n+                         "\n+                  />\n+                  <button class="context btn btn-primary btn-sm"\n+                          name="form.button.TransmitComment"\n+                          type="submit"\n+                          i18n:translate=""\n+                  >${action/title}</button>\n+                </form>\n+\n+              </div>\n+\n+            </div>\n+            <!-- end comment actions -->\n+\n+\n+          </div>\n+          <button class="context reply-to-comment-button hide allowMultiSubmit btn btn-primary btn-sm"\n+                  tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n+                  i18n:translate="label_reply"\n+          >\n                     Reply\n-                    </button>\n+          </button>\n \n-                </div>\n+        </div>\n \n-            </tal:getreplies>\n+      </tal:getreplies>\n \n-            <div tal:condition="python: has_replies and not isDiscussionAllowed"\n-                class="discreet"\n-                i18n:translate="label_commenting_disabled">\n+      <div class="discreet"\n+           tal:condition="python: has_replies and not isDiscussionAllowed"\n+           i18n:translate="label_commenting_disabled"\n+      >\n             Commenting has been disabled.\n-            </div>\n+      </div>\n \n-        </div>\n+    </div>\n \n-        <div class="reply"\n-            tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)">\n-            <form tal:attributes="action view/login_action"\n-                class="mb-3">\n-                <button class="standalone loginbutton btn btn-primary"\n-                    type="submit"\n-                    value="Log in to add comments"\n-                    i18n:attributes="value label_login_to_add_comments;"\n-                    i18n:translate="label_login_to_add_comments">Log in to add comments</button>\n-            </form>\n-        </div>\n+    <div class="reply"\n+         tal:condition="python:has_replies and (isAnon and not isAnonymousDiscussionAllowed)"\n+    >\n+      <form class="mb-3"\n+            tal:attributes="\n+              action view/login_action;\n+            "\n+      >\n+        <button class="standalone loginbutton btn btn-primary"\n+                type="submit"\n+                value="Log in to add comments"\n+                i18n:attributes="value label_login_to_add_comments;"\n+                i18n:translate="label_login_to_add_comments"\n+        >Log in to add comments</button>\n+      </form>\n+    </div>\n \n-        <div id="commenting"\n-            class="reply border p-3"\n-            tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)">\n+    <div class="reply border p-3"\n+         id="commenting"\n+         tal:condition="python:isDiscussionAllowed and (isAnon and isAnonymousDiscussionAllowed or userHasReplyPermission)"\n+    >\n \n-            <fieldset>\n+      <fieldset>\n \n-                <legend i18n:translate="label_add_comment">Add comment</legend>\n+        <legend i18n:translate="label_add_comment">Add comment</legend>\n \n-                <p tal:content="view/comment_transform_message">\n+        <p tal:content="view/comment_transform_message">\n                 You can add a comment by filling out the form below. Plain text\n                 formatting.\n-                </p>\n+        </p>\n \n-                <div tal:replace="structure view/form/render" />\n+        <div tal:replace="structure view/form/render"></div>\n \n-            </fieldset>\n-        </div>\n+      </fieldset>\n     </div>\n+  </div>\n </tal:block>\ndiff --git a/plone/app/discussion/browser/moderation.pt b/plone/app/discussion/browser/moderation.pt\nindex 4c6162d6..6e669881 100644\n--- a/plone/app/discussion/browser/moderation.pt\n+++ b/plone/app/discussion/browser/moderation.pt\n@@ -44,7 +44,7 @@\n              role="status"\n              tal:condition="python: not moderation_enabled"\n         >\n-          <strong>Info</strong>\n+          <strong i18n:translate="">Info</strong>\n           <div i18n:translate="message_moderation_disabled">Moderation workflow is disabled. You have to\n             <a href=""\n                tal:attributes="\ndiff --git a/pyproject.toml b/pyproject.toml\nindex faf50fb2..cc0a3f98 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +37,122 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = ["Products.LinguaPlone.interfaces.ITranslatable", "collective.akismet", "collective.z3cform.norobots", "plone.formwidget.captcha", "plone.formwidget.recaptcha", "plone.contentrules", "plone.app.contentrules", "plone.stringinterp", "plone.app.collection"]\n+ignore-packages = [\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.py b/setup.py\nindex 93efe89c..693b571e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,9 +1,14 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n version = "4.0.2.dev0"\n \n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n+\n install_requires = [\n     "BTrees",\n     "Products.GenericSetup",\n@@ -12,7 +17,6 @@\n     "persistent",\n     "plone.api",\n     "plone.app.event",\n-    "plone.dexterity",\n     "plone.registry",\n     "plone.resource",\n     "plone.uuid",\n@@ -31,7 +35,10 @@\n     name="plone.app.discussion",\n     version=version,\n     description="Enhanced discussion support for Plone",\n-    long_description=open("README.rst").read() + "\\n" + open("CHANGES.rst").read(),\n+    long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n@@ -71,6 +78,7 @@\n             "plone.protect",\n             "Products.MailHost",\n             "robotsuite",\n+            "plone.dexterity",\n             "python-dateutil",\n         ],\n     },\ndiff --git a/tox.ini b/tox.ini\nindex fe28c83f..06ce1354 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,22 +52,138 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n-    zope-testrunner --test-path={toxinidir} -s plone.app.discussion\n+    zope-testrunner --all --test-path={toxinidir} -s plone.app.discussion {posargs}\n extras =\n     test\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run --branch --source plone.app.discussion {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.discussion {posargs}\n+    coverage report -m --format markdown\n+    coverage xml\n+extras =\n+    test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

