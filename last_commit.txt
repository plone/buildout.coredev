Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-07-16T21:54:41+02:00
Author: Fulvio Casali (fulv) <fulviocasali@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/acdcc7435aeb7c0140c7e0fa4ab9c09d4592ba5b

Add a converter for Decimal() objects. (#977)

* Add a converter for Decimal() objects.

* Fix tests and py2

* format with %f can still alter the decimal representation, better with str

* Make black happy

Files changed:
A news/963.bugfix
M src/plone/restapi/serializer/configure.zcml
M src/plone/restapi/serializer/converters.py
M src/plone/restapi/tests/test_dxcontent_serializer.py
M src/plone/restapi/tests/test_dxfield_deserializer.py
M src/plone/restapi/tests/test_dxfield_serializer.py

b'diff --git a/news/963.bugfix b/news/963.bugfix\nnew file mode 100644\nindex 000000000..5b63614a8\n--- /dev/null\n+++ b/news/963.bugfix\n@@ -0,0 +1,2 @@\n+- Add a Decimal() converter\n+  [fulv]\ndiff --git a/src/plone/restapi/serializer/configure.zcml b/src/plone/restapi/serializer/configure.zcml\nindex e3b45b819..7c6a96b75 100644\n--- a/src/plone/restapi/serializer/configure.zcml\n+++ b/src/plone/restapi/serializer/configure.zcml\n@@ -48,6 +48,7 @@\n     </configure>\n \n     <adapter factory=".converters.date_converter" />\n+    <adapter factory=".converters.decimal_converter" />\n     <adapter factory=".converters.default_converter" />\n     <adapter factory=".converters.dict_converter" />\n     <adapter factory=".converters.frozenset_converter" />\ndiff --git a/src/plone/restapi/serializer/converters.py b/src/plone/restapi/serializer/converters.py\nindex cf1e18ecd..b3aaaa4c9 100644\n--- a/src/plone/restapi/serializer/converters.py\n+++ b/src/plone/restapi/serializer/converters.py\n@@ -4,6 +4,7 @@\n from datetime import time\n from datetime import timedelta\n from DateTime import DateTime\n+from decimal import Decimal\n from persistent.list import PersistentList\n from persistent.mapping import PersistentMapping\n from plone.app.textfield.interfaces import IRichTextValue\n@@ -86,6 +87,12 @@ def default_converter(value):\n     )\n \n \n+@adapter(Decimal)\n+@implementer(IJsonCompatible)\n+def decimal_converter(value):\n+    return safe_unicode(str(value))\n+\n+\n @adapter(bytes)\n @implementer(IJsonCompatible)\n def bytes_converter(value):\ndiff --git a/src/plone/restapi/tests/test_dxcontent_serializer.py b/src/plone/restapi/tests/test_dxcontent_serializer.py\nindex f4bc38c3b..6b169c330 100644\n--- a/src/plone/restapi/tests/test_dxcontent_serializer.py\n+++ b/src/plone/restapi/tests/test_dxcontent_serializer.py\n@@ -4,6 +4,7 @@\n from datetime import time\n from datetime import timedelta\n from DateTime import DateTime\n+from decimal import Decimal\n from plone import api\n from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.app.testing import logout\n@@ -68,7 +69,7 @@ def setUp(self):\n             test_choice_field=u"foo",\n             test_date_field=date(2015, 7, 15),\n             test_datetime_field=datetime(2015, 6, 20, 13, 22, 4),\n-            test_decimal_field="1.1",\n+            test_decimal_field=Decimal(1.1),\n             test_dict_field={"foo": "bar", "spam": "eggs", "1": 1},\n             test_float_field=1.5,\n             test_frozenset_field=frozenset([1, 2, 3]),\ndiff --git a/src/plone/restapi/tests/test_dxfield_deserializer.py b/src/plone/restapi/tests/test_dxfield_deserializer.py\nindex a67949055..46ee9d9b7 100644\n--- a/src/plone/restapi/tests/test_dxfield_deserializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_deserializer.py\n@@ -177,10 +177,10 @@ def test_datetime_deserialization_required(self):\n             with self.assertRaises(RequiredMissing):\n                 self.deserialize(field_name, None)\n \n-    def test_decimal_deserialization_returns_decimal(self):\n+    def test_text_deserialization_returns_decimal(self):\n         value = self.deserialize("test_decimal_field", u"1.1")\n         self.assertTrue(isinstance(value, Decimal), "Not a <Decimal>")\n-        self.assertEqual(Decimal("1.1"), value)\n+        self.assertEqual(Decimal(u"1.1"), value)\n \n     def test_dict_deserialization_returns_dict(self):\n         value = self.deserialize("test_dict_field", {u"key": u"value"})\ndiff --git a/src/plone/restapi/tests/test_dxfield_serializer.py b/src/plone/restapi/tests/test_dxfield_serializer.py\nindex 4a5ecb196..8777becca 100644\n--- a/src/plone/restapi/tests/test_dxfield_serializer.py\n+++ b/src/plone/restapi/tests/test_dxfield_serializer.py\n@@ -3,6 +3,7 @@\n from datetime import datetime\n from datetime import time\n from datetime import timedelta\n+from decimal import Decimal\n from mock import patch\n from plone.app.textfield.value import RichTextValue\n from plone.dexterity.utils import iterSchemata\n@@ -102,7 +103,7 @@ def test_datetime_field_serialization_returns_unicode(self):\n         self.assertEqual(u"2015-06-20T13:22:04", value)\n \n     def test_decimal_field_serialization_returns_unicode(self):\n-        value = self.serialize("test_decimal_field", "1.1")\n+        value = self.serialize("test_decimal_field", Decimal(u"1.1"))\n         self.assertTrue(isinstance(value, six.text_type), "Not an <unicode>")\n         self.assertEqual(u"1.1", value)\n \n'

