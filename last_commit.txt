Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-08-12T16:26:32+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/Products.CMFPlone/commit/c43c4c7f45809aedc2b7daa431ccfabb71d57f4e

Do not use deprecated base_hasattr in utils.py.

This was moved to plone.base.utils, so utils.py should not be using its own deprecated import.

In fact, this gives a strange error when running the `Products.validation` tests in the coredev 6.0 buildout:

```
$ bin/test -s Products.validation
...
Error in test test_isValidId_plone (Products.validation.tests.test_validation.TestValidation.test_isValidId_plone)
Traceback (most recent call last):
  File "/Users/maurits/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", line 57, in testPartExecutor
    yield
  File "/Users/maurits/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", line 623, in run
    self._callTestMethod(testMethod)
  File "/Users/maurits/.pyenv/versions/3.11.9/lib/python3.11/unittest/case.py", line 579, in _callTestMethod
    if method() is not None:
  File "/Users/maurits/community/plone-coredev/6.0/src/Products.validation/Products/validation/tests/test_validation.py", line 154, in test_isValidId_plone
    self.assertEqual(v('good', obj), 1)
  File "/Users/maurits/community/plone-coredev/6.0/src/Products.validation/Products/validation/validators/IdValidator.py", line 69, in __call__
    result = check_id(instance, id, required=kwargs.get('required'))
  File "/Users/maurits/community/plone-coredev/6.0/src/Products.CMFPlone/Products/CMFPlone/utils.py", line 641, in check_id
    result = _check_for_collision(contained_by, id, **kwargs)
  File "/Users/maurits/community/plone-coredev/6.0/src/Products.CMFPlone/Products/CMFPlone/utils.py", line 684, in _check_for_collision
    if base_hasattr(contained_by, "checkIdAvailable"):
NameError: name 'base_hasattr' is not defined
```

One strange thing here is that the error only shows up when you run these packae tests in isolation.  A full `bin/test` in coredev 6.0 works.

Files changed:
A news/3998.bugfix
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 11bead9cb7..03ffff10cc 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -163,11 +163,11 @@ def isExpired(content):\n     # convert to a DateTime\n \n     # Try DC accessor first\n-    if base_hasattr(content, "ExpirationDate"):\n+    if base_utils.base_hasattr(content, "ExpirationDate"):\n         expiry = content.ExpirationDate\n \n     # Try the direct way\n-    if not expiry and base_hasattr(content, "expires"):\n+    if not expiry and base_utils.base_hasattr(content, "expires"):\n         expiry = content.expires\n \n     # See if we have a callable\n@@ -675,13 +675,13 @@ def _check_for_collision(contained_by, id, **kwargs):\n     # Check for an existing object.\n     if id in contained_by:\n         existing_obj = getattr(contained_by, id, None)\n-        if base_hasattr(existing_obj, "portal_type"):\n+        if base_utils.base_hasattr(existing_obj, "portal_type"):\n             return _(\n                 "There is already an item named ${name} in this folder.",\n                 mapping={"name": id},\n             )\n \n-    if base_hasattr(contained_by, "checkIdAvailable"):\n+    if base_utils.base_hasattr(contained_by, "checkIdAvailable"):\n         # This used to be called from the check_id skin script,\n         # which would check the permission automatically,\n         # and the code would catch the Unauthorized exception.\n@@ -690,7 +690,7 @@ def _check_for_collision(contained_by, id, **kwargs):\n                 return _("${name} is reserved.", mapping={"name": id})\n \n     # containers may implement this hook to further restrict ids\n-    if base_hasattr(contained_by, "checkValidId"):\n+    if base_utils.base_hasattr(contained_by, "checkValidId"):\n         try:\n             contained_by.checkValidId(id)\n         except ConflictError:\ndiff --git a/news/3998.bugfix b/news/3998.bugfix\nnew file mode 100644\nindex 0000000000..d74a637292\n--- /dev/null\n+++ b/news/3998.bugfix\n@@ -0,0 +1,2 @@\n+Do not use deprecated `base_hasattr` in `utils.py`.\n+[maurits]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-08-12T22:02:52+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/Products.CMFPlone/commit/110e3b54b2fa15f0c08bec046b638525f6aabe80

Merge pull request #3999 from plone/maurits-do-not-use-deprecated-base-hasattr-in-utils-61

Do not use deprecated base_hasattr in utils.py. [6.1]

Files changed:
A news/3998.bugfix
M Products/CMFPlone/utils.py

b'diff --git a/Products/CMFPlone/utils.py b/Products/CMFPlone/utils.py\nindex 11bead9cb7..03ffff10cc 100644\n--- a/Products/CMFPlone/utils.py\n+++ b/Products/CMFPlone/utils.py\n@@ -163,11 +163,11 @@ def isExpired(content):\n     # convert to a DateTime\n \n     # Try DC accessor first\n-    if base_hasattr(content, "ExpirationDate"):\n+    if base_utils.base_hasattr(content, "ExpirationDate"):\n         expiry = content.ExpirationDate\n \n     # Try the direct way\n-    if not expiry and base_hasattr(content, "expires"):\n+    if not expiry and base_utils.base_hasattr(content, "expires"):\n         expiry = content.expires\n \n     # See if we have a callable\n@@ -675,13 +675,13 @@ def _check_for_collision(contained_by, id, **kwargs):\n     # Check for an existing object.\n     if id in contained_by:\n         existing_obj = getattr(contained_by, id, None)\n-        if base_hasattr(existing_obj, "portal_type"):\n+        if base_utils.base_hasattr(existing_obj, "portal_type"):\n             return _(\n                 "There is already an item named ${name} in this folder.",\n                 mapping={"name": id},\n             )\n \n-    if base_hasattr(contained_by, "checkIdAvailable"):\n+    if base_utils.base_hasattr(contained_by, "checkIdAvailable"):\n         # This used to be called from the check_id skin script,\n         # which would check the permission automatically,\n         # and the code would catch the Unauthorized exception.\n@@ -690,7 +690,7 @@ def _check_for_collision(contained_by, id, **kwargs):\n                 return _("${name} is reserved.", mapping={"name": id})\n \n     # containers may implement this hook to further restrict ids\n-    if base_hasattr(contained_by, "checkValidId"):\n+    if base_utils.base_hasattr(contained_by, "checkValidId"):\n         try:\n             contained_by.checkValidId(id)\n         except ConflictError:\ndiff --git a/news/3998.bugfix b/news/3998.bugfix\nnew file mode 100644\nindex 0000000000..d74a637292\n--- /dev/null\n+++ b/news/3998.bugfix\n@@ -0,0 +1,2 @@\n+Do not use deprecated `base_hasattr` in `utils.py`.\n+[maurits]\n'

