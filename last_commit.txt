Repository: plone.app.content


Branch: refs/heads/master
Date: 2020-06-30T11:57:25+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/035b71931f73b57c4afe6618a430f1d2d17b27cf

A new MetadataFields vocabulary was added in plone.app.vocabularies, iterate on it to have the translated columns

Files changed:
A news/203.bugfix
M plone/app/content/browser/contents/__init__.py
M plone/app/content/configure.zcml
M setup.py

b'diff --git a/news/203.bugfix b/news/203.bugfix\nnew file mode 100644\nindex 0000000..d37cfe8\n--- /dev/null\n+++ b/news/203.bugfix\n@@ -0,0 +1,3 @@\n+Use new MetadataFields vocabulary from plone.app.vocabularies to get the translated columns in folder contents.\n+The mime_type column is now properly internationalized as "MIME Type".\n+[vincentfretin]\ndiff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py\nindex fdaf26c..fbcee04 100644\n--- a/plone/app/content/browser/contents/__init__.py\n+++ b/plone/app/content/browser/contents/__init__.py\n@@ -22,6 +22,7 @@\n from zope.component import getUtility\n from zope.i18n import translate\n from zope.interface import implementer\n+from zope.schema.interfaces import IVocabularyFactory\n \n import six\n import zope.deferredimport\n@@ -200,38 +201,12 @@ def ignored_columns(self):\n         return ignored\n \n     def get_columns(self):\n-        # Base set of columns\n-        columns = {\n-            \'CreationDate\': translate(_(\'Created on\'), context=self.request),\n-            \'Creator\': translate(_(\'Creator\'), context=self.request),\n-            \'Description\': translate(_(\'Description\'), context=self.request),\n-            \'EffectiveDate\': translate(_(\'Publication date\'), context=self.request),  # noqa\n-            \'end\': translate(_(\'End Date\'), context=self.request),\n-            \'exclude_from_nav\': translate(_(\'Excluded from navigation\'), context=self.request),  # noqa\n-            \'ExpirationDate\': translate(_(\'Expiration date\'), context=self.request),  # noqa\n-            \'getObjSize\': translate(_(\'Object Size\'), context=self.request),\n-            \'id\': translate(_(\'ID\'), context=self.request),\n-            \'is_folderish\': translate(_(\'Folder\'), context=self.request),\n-            \'last_comment_date\': translate(_(\'Last comment date\'), context=self.request),  # noqa\n-            \'location\': translate(_(\'Location\'), context=self.request),\n-            \'ModificationDate\': translate(_(\'Last modified\'), context=self.request),  # noqa\n-            \'review_state\': translate(_(\'Review state\'), context=self.request),  # noqa\n-            \'start\': translate(_(\'Start Date\'), context=self.request),\n-            \'Subject\': translate(_(\'Tags\'), context=self.request),\n-            \'Type\': translate(_(\'Type\'), context=self.request),\n-            \'total_comments\': translate(_(\'Total comments\'), context=self.request),  # noqa\n-        }\n-        # Filter out ignored\n-        columns = {\n-            k: v for k, v in six.iteritems(columns)\n-            if k not in self.ignored_columns\n-        }\n-        # Add in extra metadata columns\n-        catalog = getToolByName(self.context, \'portal_catalog\')\n-        metadata_columns = [column for column in catalog.schema()]\n-        for column in metadata_columns:\n-            if column not in columns and column not in self.ignored_columns:\n-                columns[column] = translate(_(column), context=self.request)\n+        columns = {}\n+        voc = getUtility(IVocabularyFactory, \'plone.app.vocabularies.MetadataFields\')(self.context)\n+        for term in voc:\n+            if term.value not in self.ignored_columns:\n+                columns[term.value] = translate(term.title, context=self.request)\n+\n         return columns\n \n     def get_thumb_scale(self):\ndiff --git a/plone/app/content/configure.zcml b/plone/app/content/configure.zcml\nindex 4a56046..60466f6 100644\n--- a/plone/app/content/configure.zcml\n+++ b/plone/app/content/configure.zcml\n@@ -3,6 +3,7 @@\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:plone="http://namespaces.plone.org/plone">\n \n+    <include package="plone.app.vocabularies" />\n     <include package=".browser" />\n \n     <!-- Register a name chooser that chooses plone-like normalized names -->\ndiff --git a/setup.py b/setup.py\nindex dfa89d6..f35841f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -50,6 +50,7 @@\n         \'Products.CMFCore>=2.2.0dev\',\n         \'Products.CMFDynamicViewFTI\',  # required for cmf.ModifyViewTemplate\n         \'Products.CMFPlone\',\n+        \'plone.app.vocabularies>4.1.2\',\n         \'setuptools\',\n         \'simplejson\',\n         \'six\',\n'

Repository: plone.app.content


Branch: refs/heads/master
Date: 2020-06-30T16:28:01+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.content/commit/18f2c7d682feb8732ee24a760a7877aafd5c4f21

Merge pull request #203 from plone/fix-i18n-columns-title

consume the metadatafields vocabulary for translated columns

Files changed:
A news/203.bugfix
M plone/app/content/browser/contents/__init__.py
M plone/app/content/configure.zcml
M setup.py

b'diff --git a/news/203.bugfix b/news/203.bugfix\nnew file mode 100644\nindex 0000000..d37cfe8\n--- /dev/null\n+++ b/news/203.bugfix\n@@ -0,0 +1,3 @@\n+Use new MetadataFields vocabulary from plone.app.vocabularies to get the translated columns in folder contents.\n+The mime_type column is now properly internationalized as "MIME Type".\n+[vincentfretin]\ndiff --git a/plone/app/content/browser/contents/__init__.py b/plone/app/content/browser/contents/__init__.py\nindex fdaf26c..fbcee04 100644\n--- a/plone/app/content/browser/contents/__init__.py\n+++ b/plone/app/content/browser/contents/__init__.py\n@@ -22,6 +22,7 @@\n from zope.component import getUtility\n from zope.i18n import translate\n from zope.interface import implementer\n+from zope.schema.interfaces import IVocabularyFactory\n \n import six\n import zope.deferredimport\n@@ -200,38 +201,12 @@ def ignored_columns(self):\n         return ignored\n \n     def get_columns(self):\n-        # Base set of columns\n-        columns = {\n-            \'CreationDate\': translate(_(\'Created on\'), context=self.request),\n-            \'Creator\': translate(_(\'Creator\'), context=self.request),\n-            \'Description\': translate(_(\'Description\'), context=self.request),\n-            \'EffectiveDate\': translate(_(\'Publication date\'), context=self.request),  # noqa\n-            \'end\': translate(_(\'End Date\'), context=self.request),\n-            \'exclude_from_nav\': translate(_(\'Excluded from navigation\'), context=self.request),  # noqa\n-            \'ExpirationDate\': translate(_(\'Expiration date\'), context=self.request),  # noqa\n-            \'getObjSize\': translate(_(\'Object Size\'), context=self.request),\n-            \'id\': translate(_(\'ID\'), context=self.request),\n-            \'is_folderish\': translate(_(\'Folder\'), context=self.request),\n-            \'last_comment_date\': translate(_(\'Last comment date\'), context=self.request),  # noqa\n-            \'location\': translate(_(\'Location\'), context=self.request),\n-            \'ModificationDate\': translate(_(\'Last modified\'), context=self.request),  # noqa\n-            \'review_state\': translate(_(\'Review state\'), context=self.request),  # noqa\n-            \'start\': translate(_(\'Start Date\'), context=self.request),\n-            \'Subject\': translate(_(\'Tags\'), context=self.request),\n-            \'Type\': translate(_(\'Type\'), context=self.request),\n-            \'total_comments\': translate(_(\'Total comments\'), context=self.request),  # noqa\n-        }\n-        # Filter out ignored\n-        columns = {\n-            k: v for k, v in six.iteritems(columns)\n-            if k not in self.ignored_columns\n-        }\n-        # Add in extra metadata columns\n-        catalog = getToolByName(self.context, \'portal_catalog\')\n-        metadata_columns = [column for column in catalog.schema()]\n-        for column in metadata_columns:\n-            if column not in columns and column not in self.ignored_columns:\n-                columns[column] = translate(_(column), context=self.request)\n+        columns = {}\n+        voc = getUtility(IVocabularyFactory, \'plone.app.vocabularies.MetadataFields\')(self.context)\n+        for term in voc:\n+            if term.value not in self.ignored_columns:\n+                columns[term.value] = translate(term.title, context=self.request)\n+\n         return columns\n \n     def get_thumb_scale(self):\ndiff --git a/plone/app/content/configure.zcml b/plone/app/content/configure.zcml\nindex 4a56046..60466f6 100644\n--- a/plone/app/content/configure.zcml\n+++ b/plone/app/content/configure.zcml\n@@ -3,6 +3,7 @@\n     xmlns:five="http://namespaces.zope.org/five"\n     xmlns:plone="http://namespaces.plone.org/plone">\n \n+    <include package="plone.app.vocabularies" />\n     <include package=".browser" />\n \n     <!-- Register a name chooser that chooses plone-like normalized names -->\ndiff --git a/setup.py b/setup.py\nindex dfa89d6..f35841f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -50,6 +50,7 @@\n         \'Products.CMFCore>=2.2.0dev\',\n         \'Products.CMFDynamicViewFTI\',  # required for cmf.ModifyViewTemplate\n         \'Products.CMFPlone\',\n+        \'plone.app.vocabularies>4.1.2\',\n         \'setuptools\',\n         \'simplejson\',\n         \'six\',\n'

