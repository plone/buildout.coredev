Repository: plone.versioncheck


Branch: refs/heads/master
Date: 2023-05-02T12:16:58+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.versioncheck/commit/2348919abd1a1e1ed7b53a25aa163b51860dfc6c

Catch empty version and ignore invalid versions in more places.

Needed when a package is explicitly unpinned, for example `Zope =`.
See failed coredev job after I checked out Zope and use its versions config files:
https://github.com/plone/buildout.coredev/actions/runs/4859777432/jobs/8662807731

Files changed:
M CHANGES.rst
M src/plone/versioncheck/pypi.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex e7c8565..ad98a6e 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,9 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Catch empty version and ignore invalid versions in more places.\n+  Needed when a package is explicitly unpinned, for example ``Zope =``.\n+  [maurits]\n \n \n 1.8.0 (2023-04-15)\ndiff --git a/src/plone/versioncheck/pypi.py b/src/plone/versioncheck/pypi.py\nindex 88b3e04..854e726 100644\n--- a/src/plone/versioncheck/pypi.py\n+++ b/src/plone/versioncheck/pypi.py\n@@ -42,10 +42,16 @@ def check(name, version, session):  # noqa: C901\n         ]\n     )\n \n+    if not version:\n+        return False, "Empty version."\n+\n     # parse version to test against:\n     try:\n         version = parse_version(version)\n-    except TypeError:\n+    except Exception:\n+        # likely pkg_resources.extern.packaging.version.InvalidVersion\n+        # or TypeError, but really any exception can be ignored.\n+        # See https://github.com/plone/plone.versioncheck/issues/52\n         return False, "Version broken/ not checkable."\n     try:\n         vtuple = mmbp_tuple(version)\n'

Repository: plone.versioncheck


Branch: refs/heads/master
Date: 2023-05-02T14:07:11+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.versioncheck/commit/d9e672d99b92853d397babfbefe5cdc3bbd16699

Merge pull request #54 from plone/maurits-more-parse-version-fixing

Catch empty version and ignore invalid versions in more places.

Files changed:
M CHANGES.rst
M src/plone/versioncheck/pypi.py

b'diff --git a/CHANGES.rst b/CHANGES.rst\nindex e7c8565..ad98a6e 100644\n--- a/CHANGES.rst\n+++ b/CHANGES.rst\n@@ -14,7 +14,9 @@ New features:\n \n Bug fixes:\n \n-- *add item here*\n+- Catch empty version and ignore invalid versions in more places.\n+  Needed when a package is explicitly unpinned, for example ``Zope =``.\n+  [maurits]\n \n \n 1.8.0 (2023-04-15)\ndiff --git a/src/plone/versioncheck/pypi.py b/src/plone/versioncheck/pypi.py\nindex 88b3e04..854e726 100644\n--- a/src/plone/versioncheck/pypi.py\n+++ b/src/plone/versioncheck/pypi.py\n@@ -42,10 +42,16 @@ def check(name, version, session):  # noqa: C901\n         ]\n     )\n \n+    if not version:\n+        return False, "Empty version."\n+\n     # parse version to test against:\n     try:\n         version = parse_version(version)\n-    except TypeError:\n+    except Exception:\n+        # likely pkg_resources.extern.packaging.version.InvalidVersion\n+        # or TypeError, but really any exception can be ignored.\n+        # See https://github.com/plone/plone.versioncheck/issues/52\n         return False, "Version broken/ not checkable."\n     try:\n         vtuple = mmbp_tuple(version)\n'

