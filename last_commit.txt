Repository: plone.formwidget.namedfile


Branch: refs/heads/2.x
Date: 2021-08-18T14:00:10+02:00
Author: Harald Friessnegger (frisi) <friessnegger@lovelysystems.com>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/76fa41e4cd7500ab329f055a0f45aa93ce5556a6

fix storage.cleanup()

by not removing items while iterating over the dictionary

Files changed:
A news/52.bugfix
M plone/formwidget/namedfile/utils.py

b'diff --git a/news/52.bugfix b/news/52.bugfix\nnew file mode 100644\nindex 0000000..e8e7658\n--- /dev/null\n+++ b/news/52.bugfix\n@@ -0,0 +1 @@\n+Fix issue where expired temporary uploads have not been removed when calling FileUploadTemporaryStorage.cleanup() (https://github.com/plone/plone.formwidget.namedfile/issues/52) [fRiSi]\n\\ No newline at end of file\ndiff --git a/plone/formwidget/namedfile/utils.py b/plone/formwidget/namedfile/utils.py\nindex da16d48..d3894cf 100644\n--- a/plone/formwidget/namedfile/utils.py\n+++ b/plone/formwidget/namedfile/utils.py\n@@ -43,11 +43,9 @@ def cleanup(self):\n         """Remove obsolete temporary uploads.\n         """\n         upload_map = self.upload_map\n-        for key, val in upload_map.items():\n-            if val.get(\'dt\', FALLBACK_DATE) < (\n-                datetime.now() - timedelta(\n-                    seconds=FILE_UPLOAD_EXPIRATION_TIME\n-                )\n-            ) and randint(0, 5) == 0:  # Avoid conflict errors by deleting only every fifth time  # noqa\n+        expiration_limit = datetime.now() - timedelta(seconds=FILE_UPLOAD_EXPIRATION_TIME)\n+        for key in list(upload_map.keys()):\n+            dt = upload_map[key].get(\'dt\', FALLBACK_DATE)\n+            if dt < expiration_limit and randint(0, 5) == 0:  # Avoid conflict errors by deleting only every fifth time  # noqa\n                 # Delete expired files or files without timestamp\n                 del upload_map[key]\n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/2.x
Date: 2021-08-18T14:15:15+02:00
Author: Harald Friessnegger (frisi) <friessnegger@lovelysystems.com>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/28075cc94098df23cb6d361246996c3141165bcc

improve cleanup

reduce risk of conflict errors and allow to force cleanup

Files changed:
M plone/formwidget/namedfile/utils.py

b'diff --git a/plone/formwidget/namedfile/utils.py b/plone/formwidget/namedfile/utils.py\nindex d3894cf..4e7e33b 100644\n--- a/plone/formwidget/namedfile/utils.py\n+++ b/plone/formwidget/namedfile/utils.py\n@@ -39,13 +39,18 @@ def upload_map(self):\n         upload_map = annotations.setdefault(FILE_UPLOAD_MAP_KEY, OOBTree())\n         return upload_map\n \n-    def cleanup(self):\n+    def cleanup(self, force=False):\n         """Remove obsolete temporary uploads.\n+\n+        To avoid conflict errors, files are deleted on every ~5th method call.\n+        Use force to make sure all expired files are deleted\n         """\n         upload_map = self.upload_map\n         expiration_limit = datetime.now() - timedelta(seconds=FILE_UPLOAD_EXPIRATION_TIME)\n+        # Avoid conflict errors by deleting only every fifth time\n+        delete = force or randint(0, 5) == 0\n         for key in list(upload_map.keys()):\n             dt = upload_map[key].get(\'dt\', FALLBACK_DATE)\n-            if dt < expiration_limit and randint(0, 5) == 0:  # Avoid conflict errors by deleting only every fifth time  # noqa\n+            if dt < expiration_limit and delete:\n                 # Delete expired files or files without timestamp\n                 del upload_map[key]\n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/2.x
Date: 2021-08-20T09:50:46+02:00
Author: Harald Friessnegger (frisi) <friessnegger@lovelysystems.com>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/1dc35aeac0ec59e8d3ee5828ae747dd7912d0474

make cleanup interval patchable

fixes #54

Files changed:
A news/54.bugfix
M plone/formwidget/namedfile/utils.py

b'diff --git a/news/54.bugfix b/news/54.bugfix\nnew file mode 100644\nindex 0000000..bb9d919\n--- /dev/null\n+++ b/news/54.bugfix\n@@ -0,0 +1 @@\n+Make CLEANUP_INTERVAL patchable and fix condition (https://github.com/plone/plone.formwidget.namedfile/issues/54)\n\\ No newline at end of file\ndiff --git a/plone/formwidget/namedfile/utils.py b/plone/formwidget/namedfile/utils.py\nindex 4e7e33b..9ad4568 100644\n--- a/plone/formwidget/namedfile/utils.py\n+++ b/plone/formwidget/namedfile/utils.py\n@@ -15,7 +15,7 @@\n FILE_UPLOAD_MAP_KEY = \'file_upload_map\'\n FILE_UPLOAD_EXPIRATION_TIME = 30*60  # seconds\n FALLBACK_DATE = datetime(2000, 2, 2)\n-\n+CLEANUP_INTERVAL = 5\n \n def is_file_upload(item):\n     """Check if ``item`` is a file upload.\n@@ -48,7 +48,7 @@ def cleanup(self, force=False):\n         upload_map = self.upload_map\n         expiration_limit = datetime.now() - timedelta(seconds=FILE_UPLOAD_EXPIRATION_TIME)\n         # Avoid conflict errors by deleting only every fifth time\n-        delete = force or randint(0, 5) == 0\n+        delete = force or randint(1, CLEANUP_INTERVAL) == 1\n         for key in list(upload_map.keys()):\n             dt = upload_map[key].get(\'dt\', FALLBACK_DATE)\n             if dt < expiration_limit and delete:\n'

Repository: plone.formwidget.namedfile


Branch: refs/heads/2.x
Date: 2021-08-26T15:43:18+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.formwidget.namedfile/commit/5e07cf5895799915f4b701e53889ee567a806ec7

Merge pull request #53 from plone/fix/temp-storage

fix storage.cleanup()

Files changed:
A news/52.bugfix
A news/54.bugfix
M plone/formwidget/namedfile/utils.py

b'diff --git a/news/52.bugfix b/news/52.bugfix\nnew file mode 100644\nindex 0000000..e8e7658\n--- /dev/null\n+++ b/news/52.bugfix\n@@ -0,0 +1 @@\n+Fix issue where expired temporary uploads have not been removed when calling FileUploadTemporaryStorage.cleanup() (https://github.com/plone/plone.formwidget.namedfile/issues/52) [fRiSi]\n\\ No newline at end of file\ndiff --git a/news/54.bugfix b/news/54.bugfix\nnew file mode 100644\nindex 0000000..bb9d919\n--- /dev/null\n+++ b/news/54.bugfix\n@@ -0,0 +1 @@\n+Make CLEANUP_INTERVAL patchable and fix condition (https://github.com/plone/plone.formwidget.namedfile/issues/54)\n\\ No newline at end of file\ndiff --git a/plone/formwidget/namedfile/utils.py b/plone/formwidget/namedfile/utils.py\nindex da16d48..9ad4568 100644\n--- a/plone/formwidget/namedfile/utils.py\n+++ b/plone/formwidget/namedfile/utils.py\n@@ -15,7 +15,7 @@\n FILE_UPLOAD_MAP_KEY = \'file_upload_map\'\n FILE_UPLOAD_EXPIRATION_TIME = 30*60  # seconds\n FALLBACK_DATE = datetime(2000, 2, 2)\n-\n+CLEANUP_INTERVAL = 5\n \n def is_file_upload(item):\n     """Check if ``item`` is a file upload.\n@@ -39,15 +39,18 @@ def upload_map(self):\n         upload_map = annotations.setdefault(FILE_UPLOAD_MAP_KEY, OOBTree())\n         return upload_map\n \n-    def cleanup(self):\n+    def cleanup(self, force=False):\n         """Remove obsolete temporary uploads.\n+\n+        To avoid conflict errors, files are deleted on every ~5th method call.\n+        Use force to make sure all expired files are deleted\n         """\n         upload_map = self.upload_map\n-        for key, val in upload_map.items():\n-            if val.get(\'dt\', FALLBACK_DATE) < (\n-                datetime.now() - timedelta(\n-                    seconds=FILE_UPLOAD_EXPIRATION_TIME\n-                )\n-            ) and randint(0, 5) == 0:  # Avoid conflict errors by deleting only every fifth time  # noqa\n+        expiration_limit = datetime.now() - timedelta(seconds=FILE_UPLOAD_EXPIRATION_TIME)\n+        # Avoid conflict errors by deleting only every fifth time\n+        delete = force or randint(1, CLEANUP_INTERVAL) == 1\n+        for key in list(upload_map.keys()):\n+            dt = upload_map[key].get(\'dt\', FALLBACK_DATE)\n+            if dt < expiration_limit and delete:\n                 # Delete expired files or files without timestamp\n                 del upload_map[key]\n'

