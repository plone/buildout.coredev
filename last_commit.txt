Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-02-11T17:01:49+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/99708b3acba164b9e17b31eb00718fadc0af18b0

respect access inactive content permission in search

Files changed:
M src/plone/restapi/search/handler.py
M src/plone/restapi/tests/test_search.py

b'diff --git a/src/plone/restapi/search/handler.py b/src/plone/restapi/search/handler.py\nindex 032435003..c8b26aef7 100644\n--- a/src/plone/restapi/search/handler.py\n+++ b/src/plone/restapi/search/handler.py\n@@ -76,10 +76,9 @@ def search(self, query=None):\n \n         self._constrain_query_by_path(query)\n         query = self._parse_query(query)\n-\n-        lazy_resultset = self.catalog.searchResults(query)\n-        results = getMultiAdapter((lazy_resultset, self.request), ISerializeToJson)(\n-            fullobjects=fullobjects\n-        )\n+        lazy_resultset = self.catalog.searchResults(**query)\n+        results = getMultiAdapter(\n+            (lazy_resultset, self.request), ISerializeToJson\n+        )(fullobjects=fullobjects)\n \n         return results\ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex 859349d4f..c7f3ece67 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -37,10 +37,25 @@ def setUp(self):\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n+        api.user.create(\n+            email="editor@example.com",\n+            username="editoruser",\n+            password="secret",\n+        )\n+        api.user.create(\n+            email="editor@example.com",\n+            username="localeditor",\n+            password="secret",\n+        )\n+\n         # /plone/folder\n         self.folder = createContentInContainer(\n             self.portal, u"Folder", id=u"folder", title=u"Some Folder"\n         )\n+        api.user.grant_roles(username="editoruser", roles=["Editor"])\n+        api.user.grant_roles(\n+            username="localeditor", obj=self.folder, roles=["Editor", "Reader"]\n+        )\n \n         # /plone/folder/doc\n         self.doc = createContentInContainer(\n@@ -587,6 +602,56 @@ def test_uuid_index_query(self):\n         response = self.api_session.get("/@search", params=query)\n         self.assertEqual([u"/plone/folder/doc"], result_paths(response.json()))\n \n+    def test_respect_access_inactive_permission(self):\n+        # admin can see everything\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 6)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 1)\n+\n+        # not admin users can\'t see expired items\n+        self.api_session.auth = ("editoruser", "secret")\n+\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 3)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 0)\n+\n+        # now grant permission to Editor to access inactive content\n+        self.portal.manage_permission(\n+            "Access inactive portal content", roles=["Manager", "Editor"]\n+        )\n+        transaction.commit()\n+\n+        # \xc2\xa0portal-enabled Editor can see expired contents\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 6)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 1)\n+\n+        # local-enabled Editor can only access expired contents inside folder\n+        self.api_session.auth = ("localeditor", "secret")\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 1)\n+        response = self.api_session.get(\n+            "/@search", params={"path": "/plone/folder"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 3)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 0)\n+        response = self.api_session.get(\n+            "/@search",\n+            params={"Title": "Lorem Ipsum", "path": "/plone/folder"},\n+        ).json()\n+        self.assertEqual(response["items_total"], 1)\n \n class TestSearchATFunctional(unittest.TestCase):\n     layer = PLONE_RESTAPI_AT_FUNCTIONAL_TESTING\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-02-11T17:02:10+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/69fe6ca5c91c08995299482d534e6aa970e4ebbc

respect access inactive content permission in search

Files changed:
M src/plone/restapi/tests/test_search.py

b'diff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex c7f3ece67..f12fd974d 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -653,6 +653,7 @@ def test_respect_access_inactive_permission(self):\n         ).json()\n         self.assertEqual(response["items_total"], 1)\n \n+\n class TestSearchATFunctional(unittest.TestCase):\n     layer = PLONE_RESTAPI_AT_FUNCTIONAL_TESTING\n \n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-02-11T17:16:51+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/04c4f6e49d2c9e0cba11003ea3c2100a61b657dc

add changelogg

Files changed:
A news/1066.bugfix

b'diff --git a/news/1066.bugfix b/news/1066.bugfix\nnew file mode 100644\nindex 000000000..58fed2e1e\n--- /dev/null\n+++ b/news/1066.bugfix\n@@ -0,0 +1 @@\n+Respect "Access inactive portal content" permission in @search endpoint [cekk]\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-02-11T17:47:21+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/98d23aca0ab8e8d7e3c66bbe34df5abb9887444d

fix black

Files changed:
M src/plone/restapi/search/handler.py

b'diff --git a/src/plone/restapi/search/handler.py b/src/plone/restapi/search/handler.py\nindex c8b26aef7..1b310aee8 100644\n--- a/src/plone/restapi/search/handler.py\n+++ b/src/plone/restapi/search/handler.py\n@@ -77,8 +77,8 @@ def search(self, query=None):\n         self._constrain_query_by_path(query)\n         query = self._parse_query(query)\n         lazy_resultset = self.catalog.searchResults(**query)\n-        results = getMultiAdapter(\n-            (lazy_resultset, self.request), ISerializeToJson\n-        )(fullobjects=fullobjects)\n+        results = getMultiAdapter((lazy_resultset, self.request), ISerializeToJson)(\n+            fullobjects=fullobjects\n+        )\n \n         return results\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-02-12T17:18:08+01:00
Author: Andrea Cecchi (cekk) <andrea.cecchi85@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/49b03fbaab514592e0d4d1fffb7b692459157daa

skip test for plone 4

Files changed:
M src/plone/restapi/tests/test_search.py

b'diff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex f12fd974d..64c158d6f 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -21,6 +21,13 @@\n import transaction\n import unittest\n \n+try:\n+    from Products.CMFPlone.factory import _IMREALLYPLONE5  # noqa\n+except ImportError:\n+    PLONE5 = False\n+else:\n+    PLONE5 = True\n+\n \n class TestSearchFunctional(unittest.TestCase):\n \n@@ -602,6 +609,9 @@ def test_uuid_index_query(self):\n         response = self.api_session.get("/@search", params=query)\n         self.assertEqual([u"/plone/folder/doc"], result_paths(response.json()))\n \n+    @unittest.skipIf(\n+        not PLONE5, "searchResults in Plone 4 does not handle correctly that permission"\n+    )\n     def test_respect_access_inactive_permission(self):\n         # admin can see everything\n         response = self.api_session.get("/@search", params={}).json()\n@@ -642,6 +652,7 @@ def test_respect_access_inactive_permission(self):\n         response = self.api_session.get(\n             "/@search", params={"path": "/plone/folder"}\n         ).json()\n+\n         self.assertEqual(response["items_total"], 3)\n         response = self.api_session.get(\n             "/@search", params={"Title": "Lorem Ipsum"}\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-02-23T08:51:55+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/f556893791fba75d5cbd8d0b0030436be5cdf386

Merge pull request #1066 from plone/respect_access_inactive_permission

Respect access inactive content permission in @search

Files changed:
A news/1066.bugfix
M src/plone/restapi/search/handler.py
M src/plone/restapi/tests/test_search.py

b'diff --git a/news/1066.bugfix b/news/1066.bugfix\nnew file mode 100644\nindex 000000000..58fed2e1e\n--- /dev/null\n+++ b/news/1066.bugfix\n@@ -0,0 +1 @@\n+Respect "Access inactive portal content" permission in @search endpoint [cekk]\ndiff --git a/src/plone/restapi/search/handler.py b/src/plone/restapi/search/handler.py\nindex 032435003..1b310aee8 100644\n--- a/src/plone/restapi/search/handler.py\n+++ b/src/plone/restapi/search/handler.py\n@@ -76,8 +76,7 @@ def search(self, query=None):\n \n         self._constrain_query_by_path(query)\n         query = self._parse_query(query)\n-\n-        lazy_resultset = self.catalog.searchResults(query)\n+        lazy_resultset = self.catalog.searchResults(**query)\n         results = getMultiAdapter((lazy_resultset, self.request), ISerializeToJson)(\n             fullobjects=fullobjects\n         )\ndiff --git a/src/plone/restapi/tests/test_search.py b/src/plone/restapi/tests/test_search.py\nindex 859349d4f..64c158d6f 100644\n--- a/src/plone/restapi/tests/test_search.py\n+++ b/src/plone/restapi/tests/test_search.py\n@@ -21,6 +21,13 @@\n import transaction\n import unittest\n \n+try:\n+    from Products.CMFPlone.factory import _IMREALLYPLONE5  # noqa\n+except ImportError:\n+    PLONE5 = False\n+else:\n+    PLONE5 = True\n+\n \n class TestSearchFunctional(unittest.TestCase):\n \n@@ -37,10 +44,25 @@ def setUp(self):\n         self.api_session.headers.update({"Accept": "application/json"})\n         self.api_session.auth = (SITE_OWNER_NAME, SITE_OWNER_PASSWORD)\n \n+        api.user.create(\n+            email="editor@example.com",\n+            username="editoruser",\n+            password="secret",\n+        )\n+        api.user.create(\n+            email="editor@example.com",\n+            username="localeditor",\n+            password="secret",\n+        )\n+\n         # /plone/folder\n         self.folder = createContentInContainer(\n             self.portal, u"Folder", id=u"folder", title=u"Some Folder"\n         )\n+        api.user.grant_roles(username="editoruser", roles=["Editor"])\n+        api.user.grant_roles(\n+            username="localeditor", obj=self.folder, roles=["Editor", "Reader"]\n+        )\n \n         # /plone/folder/doc\n         self.doc = createContentInContainer(\n@@ -587,6 +609,61 @@ def test_uuid_index_query(self):\n         response = self.api_session.get("/@search", params=query)\n         self.assertEqual([u"/plone/folder/doc"], result_paths(response.json()))\n \n+    @unittest.skipIf(\n+        not PLONE5, "searchResults in Plone 4 does not handle correctly that permission"\n+    )\n+    def test_respect_access_inactive_permission(self):\n+        # admin can see everything\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 6)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 1)\n+\n+        # not admin users can\'t see expired items\n+        self.api_session.auth = ("editoruser", "secret")\n+\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 3)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 0)\n+\n+        # now grant permission to Editor to access inactive content\n+        self.portal.manage_permission(\n+            "Access inactive portal content", roles=["Manager", "Editor"]\n+        )\n+        transaction.commit()\n+\n+        # \xc2\xa0portal-enabled Editor can see expired contents\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 6)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 1)\n+\n+        # local-enabled Editor can only access expired contents inside folder\n+        self.api_session.auth = ("localeditor", "secret")\n+        response = self.api_session.get("/@search", params={}).json()\n+        self.assertEqual(response["items_total"], 1)\n+        response = self.api_session.get(\n+            "/@search", params={"path": "/plone/folder"}\n+        ).json()\n+\n+        self.assertEqual(response["items_total"], 3)\n+        response = self.api_session.get(\n+            "/@search", params={"Title": "Lorem Ipsum"}\n+        ).json()\n+        self.assertEqual(response["items_total"], 0)\n+        response = self.api_session.get(\n+            "/@search",\n+            params={"Title": "Lorem Ipsum", "path": "/plone/folder"},\n+        ).json()\n+        self.assertEqual(response["items_total"], 1)\n+\n \n class TestSearchATFunctional(unittest.TestCase):\n     layer = PLONE_RESTAPI_AT_FUNCTIONAL_TESTING\n'

