Repository: plone.registry


Branch: refs/heads/master
Date: 2021-04-13T15:32:58+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.registry/commit/8fe646deaf2304b588d4c82f720a5a9b2707c055

Allow plone.schema.JSONField in registry

Files changed:
A news/719.feature
M plone/registry/field.py
M plone/registry/field.rst
M setup.py

b'diff --git a/news/719.feature b/news/719.feature\nnew file mode 100644\nindex 0000000..48000e4\n--- /dev/null\n+++ b/news/719.feature\n@@ -0,0 +1,2 @@\n+ Allow plone.schema.JSONField be stored in registry (as dict-like)\n+ [sneridagh]\ndiff --git a/plone/registry/field.py b/plone/registry/field.py\nindex d48bce2..f6171e6 100644\n--- a/plone/registry/field.py\n+++ b/plone/registry/field.py\n@@ -12,6 +12,7 @@\n from zope.schema.interfaces import IContextSourceBinder\n from zope.schema.vocabulary import SimpleVocabulary\n \n+import plone.schema\n import zope.schema\n import zope.schema._field\n import sys\n@@ -292,3 +293,9 @@ def bind(self, object):\n             clone._vocabulary = vr.get(object, self.vocabularyName)\n             assert zope.schema.interfaces.ISource.providedBy(clone.vocabulary)\n         return clone\n+\n+\n+class JSONField(PersistentField, plone.schema.JSONField):\n+\n+    key_type = InterfaceConstrainedProperty("key_type", IPersistentField)\n+    value_type = InterfaceConstrainedProperty("value_type", IPersistentField)\ndiff --git a/plone/registry/field.rst b/plone/registry/field.rst\nindex 4b72d6b..33badc6 100644\n--- a/plone/registry/field.rst\n+++ b/plone/registry/field.rst\n@@ -761,6 +761,21 @@ As with other fields, you also cannot set a constraint::\n     >>> f.constraint(\'ABC\')\n     True\n \n+JSONField\n+---------\n+\n+The set field describes a JSONField::\n+\n+    >>> import plone.schema\n+    >>> f = field.JSONField(title=u"Test",\n+    ...     key_type=field.ASCII(title=u"Key"),\n+    ...     value_type=field.TextLine(title=u"Value"))\n+    >>> isinstance(f, plone.schema.JSONField)\n+    True\n+\n+    >>> f.order\n+    -1\n+\n ``IPersistentField`` adapters\n =============================\n \ndiff --git a/setup.py b/setup.py\nindex 9fe65b7..5832132 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -61,6 +61,7 @@ def read(*rnames):\n         \'zope.event\',\n         \'zope.interface\',\n         \'zope.schema\',\n+        \'plone.schema\'\n     ],\n     extras_require={\n         \'test\': \'BTrees\'\n'

Repository: plone.registry


Branch: refs/heads/master
Date: 2021-04-13T17:02:27+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.registry/commit/f94e42b33742922ed157cbfb12c00e8c2f064f8f

Fix tests

Files changed:
M plone/registry/field.rst

b'diff --git a/plone/registry/field.rst b/plone/registry/field.rst\nindex 33badc6..956e5a9 100644\n--- a/plone/registry/field.rst\n+++ b/plone/registry/field.rst\n@@ -767,9 +767,7 @@ JSONField\n The set field describes a JSONField::\n \n     >>> import plone.schema\n-    >>> f = field.JSONField(title=u"Test",\n-    ...     key_type=field.ASCII(title=u"Key"),\n-    ...     value_type=field.TextLine(title=u"Value"))\n+    >>> f = field.JSONField(title=u"Test")\n     >>> isinstance(f, plone.schema.JSONField)\n     True\n \n'

Repository: plone.registry


Branch: refs/heads/master
Date: 2021-04-21T11:33:04+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.registry/commit/e13ecff1d096d0e7cdacac42fc0a2b4cb8b8a3f3

Make plone.schema optional

Files changed:
M plone/registry/field.py
M setup.py

b'diff --git a/plone/registry/field.py b/plone/registry/field.py\nindex f6171e6..2bd60a3 100644\n--- a/plone/registry/field.py\n+++ b/plone/registry/field.py\n@@ -12,11 +12,15 @@\n from zope.schema.interfaces import IContextSourceBinder\n from zope.schema.vocabulary import SimpleVocabulary\n \n-import plone.schema\n import zope.schema\n import zope.schema._field\n import sys\n \n+try:\n+    import plone.schema\n+    HASPLONESCHEMA = True\n+except ImportError:\n+    HASPLONESCHEMA = False\n \n if sys.version_info >= (3,):\n     basestring = str\n@@ -295,7 +299,8 @@ def bind(self, object):\n         return clone\n \n \n-class JSONField(PersistentField, plone.schema.JSONField):\n+if HASPLONESCHEMA:\n+    class JSONField(PersistentField, plone.schema.JSONField):\n \n-    key_type = InterfaceConstrainedProperty("key_type", IPersistentField)\n-    value_type = InterfaceConstrainedProperty("value_type", IPersistentField)\n+        key_type = InterfaceConstrainedProperty("key_type", IPersistentField)\n+        value_type = InterfaceConstrainedProperty("value_type", IPersistentField)\ndiff --git a/setup.py b/setup.py\nindex 5832132..8cb9adc 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -60,8 +60,7 @@ def read(*rnames):\n         \'zope.dottedname\',\n         \'zope.event\',\n         \'zope.interface\',\n-        \'zope.schema\',\n-        \'plone.schema\'\n+        \'zope.schema\'\n     ],\n     extras_require={\n         \'test\': \'BTrees\'\n'

Repository: plone.registry


Branch: refs/heads/master
Date: 2021-04-21T18:39:57+02:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.registry/commit/9ecbb092872ba00d921343e8a49bf479eac88bd7

Ale suggestions

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 8cb9adc..d0c4237 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -60,10 +60,10 @@ def read(*rnames):\n         \'zope.dottedname\',\n         \'zope.event\',\n         \'zope.interface\',\n-        \'zope.schema\'\n+        \'zope.schema\',\n     ],\n     extras_require={\n-        \'test\': \'BTrees\'\n+        \'test\': [\'BTrees\', \'plone.schema\']\n     },\n     entry_points="""\n     # -*- Entry points: -*-\n'

Repository: plone.registry


Branch: refs/heads/master
Date: 2021-04-22T11:10:50+02:00
Author: Timo Stollenwerk (tisto) <tisto@users.noreply.github.com>
Commit: https://github.com/plone/plone.registry/commit/75f71a55dc62e3893b5626a5987d87408fd89e09

Merge pull request #22 from plone/allowjsonfieldstore

Allow plone.schema.JSONField in registry

Files changed:
A news/719.feature
M plone/registry/field.py
M plone/registry/field.rst
M setup.py

b'diff --git a/news/719.feature b/news/719.feature\nnew file mode 100644\nindex 0000000..48000e4\n--- /dev/null\n+++ b/news/719.feature\n@@ -0,0 +1,2 @@\n+ Allow plone.schema.JSONField be stored in registry (as dict-like)\n+ [sneridagh]\ndiff --git a/plone/registry/field.py b/plone/registry/field.py\nindex d48bce2..2bd60a3 100644\n--- a/plone/registry/field.py\n+++ b/plone/registry/field.py\n@@ -16,6 +16,11 @@\n import zope.schema._field\n import sys\n \n+try:\n+    import plone.schema\n+    HASPLONESCHEMA = True\n+except ImportError:\n+    HASPLONESCHEMA = False\n \n if sys.version_info >= (3,):\n     basestring = str\n@@ -292,3 +297,10 @@ def bind(self, object):\n             clone._vocabulary = vr.get(object, self.vocabularyName)\n             assert zope.schema.interfaces.ISource.providedBy(clone.vocabulary)\n         return clone\n+\n+\n+if HASPLONESCHEMA:\n+    class JSONField(PersistentField, plone.schema.JSONField):\n+\n+        key_type = InterfaceConstrainedProperty("key_type", IPersistentField)\n+        value_type = InterfaceConstrainedProperty("value_type", IPersistentField)\ndiff --git a/plone/registry/field.rst b/plone/registry/field.rst\nindex 4b72d6b..956e5a9 100644\n--- a/plone/registry/field.rst\n+++ b/plone/registry/field.rst\n@@ -761,6 +761,19 @@ As with other fields, you also cannot set a constraint::\n     >>> f.constraint(\'ABC\')\n     True\n \n+JSONField\n+---------\n+\n+The set field describes a JSONField::\n+\n+    >>> import plone.schema\n+    >>> f = field.JSONField(title=u"Test")\n+    >>> isinstance(f, plone.schema.JSONField)\n+    True\n+\n+    >>> f.order\n+    -1\n+\n ``IPersistentField`` adapters\n =============================\n \ndiff --git a/setup.py b/setup.py\nindex 9fe65b7..d0c4237 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -63,7 +63,7 @@ def read(*rnames):\n         \'zope.schema\',\n     ],\n     extras_require={\n-        \'test\': \'BTrees\'\n+        \'test\': [\'BTrees\', \'plone.schema\']\n     },\n     entry_points="""\n     # -*- Entry points: -*-\n'

