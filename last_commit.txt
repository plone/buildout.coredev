Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2021-06-23T17:00:07+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.PlonePAS/commit/8ea26dd743f38c4af62c5121f637ec051747054a

Pillow 8 support

Files changed:
A news/61.bugfix
M src/Products/PlonePAS/utils.py

b'diff --git a/news/61.bugfix b/news/61.bugfix\nnew file mode 100644\nindex 00000000..2a794d67\n--- /dev/null\n+++ b/news/61.bugfix\n@@ -0,0 +1 @@\n+Support for Pillow 8. [jensens]\ndiff --git a/src/Products/PlonePAS/utils.py b/src/Products/PlonePAS/utils.py\nindex 12c183b2..4f287dda 100644\n--- a/src/Products/PlonePAS/utils.py\n+++ b/src/Products/PlonePAS/utils.py\n@@ -44,7 +44,7 @@ def scale_image(image_file, max_size=None, default_format=None):\n \n         >>> from Products.PlonePAS import config\n         >>> import os\n-        >>> from six import StringIO\n+        >>> from six import BytesIO\n         >>> from Products.PlonePAS.utils import scale_image\n         >>> from PIL import Image\n \n@@ -61,19 +61,22 @@ def scale_image(image_file, max_size=None, default_format=None):\n     We\'ll also make some evil non-images, including one which\n     masquerades as a jpeg (which would trick OFS.Image)::\n \n-        >>> invalid = StringIO(\'<div>Evil!!!</div>\')\n-        >>> sneaky = StringIO(\'\\377\\330<div>Evil!!!</div>\')\n+        >>> invalid = BytesIO(\'<div>Evil!!!</div>\'.encode("utf-8"))\n+        >>> sneaky = BytesIO(\'\\377\\330<div>Evil!!!</div>\'.encode("utf-8"))\n \n     OK, let\'s get to it, first check that our bad images fail:\n \n-        >>> scale_image(invalid, (50, 50))\n-        Traceback (most recent call last):\n-        ...\n-        OSError: cannot identify image file...\n-        >>> scale_image(sneaky, (50, 50))\n-        Traceback (most recent call last):\n-        ...\n-        OSError: cannot identify image file...\n+        >>> try:\n+        ...     scale_image(invalid, (50, 50))\n+        ... except Exception as e:\n+        ...     print(e)\n+        cannot identify image file...\n+\n+        >>> try:\n+        ...     scale_image(sneaky, (50, 50))\n+        ... except Exception as e:\n+        ...     print(e)\n+        cannot identify image file...\n \n     Now that that\'s out of the way we check on our real images to make\n     sure the format and mode are preserved, that they are scaled, and that they\n'

Repository: Products.PlonePAS


Branch: refs/heads/master
Date: 2021-06-23T21:06:12+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/Products.PlonePAS/commit/e2900c1caba0462152867059c2f261f02b6a3821

Merge pull request #61 from plone/pillow-8

Pillow 8 support

Files changed:
A news/61.bugfix
M src/Products/PlonePAS/utils.py

b'diff --git a/news/61.bugfix b/news/61.bugfix\nnew file mode 100644\nindex 00000000..2a794d67\n--- /dev/null\n+++ b/news/61.bugfix\n@@ -0,0 +1 @@\n+Support for Pillow 8. [jensens]\ndiff --git a/src/Products/PlonePAS/utils.py b/src/Products/PlonePAS/utils.py\nindex 12c183b2..4f287dda 100644\n--- a/src/Products/PlonePAS/utils.py\n+++ b/src/Products/PlonePAS/utils.py\n@@ -44,7 +44,7 @@ def scale_image(image_file, max_size=None, default_format=None):\n \n         >>> from Products.PlonePAS import config\n         >>> import os\n-        >>> from six import StringIO\n+        >>> from six import BytesIO\n         >>> from Products.PlonePAS.utils import scale_image\n         >>> from PIL import Image\n \n@@ -61,19 +61,22 @@ def scale_image(image_file, max_size=None, default_format=None):\n     We\'ll also make some evil non-images, including one which\n     masquerades as a jpeg (which would trick OFS.Image)::\n \n-        >>> invalid = StringIO(\'<div>Evil!!!</div>\')\n-        >>> sneaky = StringIO(\'\\377\\330<div>Evil!!!</div>\')\n+        >>> invalid = BytesIO(\'<div>Evil!!!</div>\'.encode("utf-8"))\n+        >>> sneaky = BytesIO(\'\\377\\330<div>Evil!!!</div>\'.encode("utf-8"))\n \n     OK, let\'s get to it, first check that our bad images fail:\n \n-        >>> scale_image(invalid, (50, 50))\n-        Traceback (most recent call last):\n-        ...\n-        OSError: cannot identify image file...\n-        >>> scale_image(sneaky, (50, 50))\n-        Traceback (most recent call last):\n-        ...\n-        OSError: cannot identify image file...\n+        >>> try:\n+        ...     scale_image(invalid, (50, 50))\n+        ... except Exception as e:\n+        ...     print(e)\n+        cannot identify image file...\n+\n+        >>> try:\n+        ...     scale_image(sneaky, (50, 50))\n+        ... except Exception as e:\n+        ...     print(e)\n+        cannot identify image file...\n \n     Now that that\'s out of the way we check on our real images to make\n     sure the format and mode are preserved, that they are scaled, and that they\n'

