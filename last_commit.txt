Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-06-30T10:38:55+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/c680d4908fe53ce49352fc58879c9d5e64342e01

Add new plone.app.vocabularies.MetadataFields vocabulary

Files changed:
A news/62.feature
A plone/app/vocabularies/metadatafields.py
M plone/app/vocabularies/configure.zcml

b'diff --git a/news/62.feature b/news/62.feature\nnew file mode 100644\nindex 0000000..d4a4319\n--- /dev/null\n+++ b/news/62.feature\n@@ -0,0 +1,2 @@\n+Add new plone.app.vocabularies.MetadataFields vocabulary.\n+[vincentfretin]\ndiff --git a/plone/app/vocabularies/configure.zcml b/plone/app/vocabularies/configure.zcml\nindex 405b84e..db77f4d 100644\n--- a/plone/app/vocabularies/configure.zcml\n+++ b/plone/app/vocabularies/configure.zcml\n@@ -161,6 +161,9 @@\n     name="plone.app.vocabularies.ImagesScales"\n     />\n \n+  <utility\n+      component=".metadatafields.MetaDataFieldsVocabularyFactory"\n+      name="plone.app.vocabularies.MetadataFields" />\n \n   <!-- All source implementations will be deprecated -->\n   <adapter\ndiff --git a/plone/app/vocabularies/metadatafields.py b/plone/app/vocabularies/metadatafields.py\nnew file mode 100644\nindex 0000000..676bf34\n--- /dev/null\n+++ b/plone/app/vocabularies/metadatafields.py\n@@ -0,0 +1,49 @@\n+# -*- coding: utf-8 -*-\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n+from zope.interface import implementer\n+from zope.schema.interfaces import IVocabularyFactory\n+from zope.schema.vocabulary import SimpleTerm\n+from zope.schema.vocabulary import SimpleVocabulary\n+\n+\n+_FIELD_LABEL = {\n+    \'CreationDate\': _(\'Created on\'),\n+    \'Creator\': _(\'Creator\'),\n+    \'Description\': _(\'Description\'),\n+    \'EffectiveDate\': _(\'Publication date\'),\n+    \'end\': _(\'End Date\'),\n+    \'exclude_from_nav\': _(\'Excluded from navigation\'),\n+    \'ExpirationDate\': _(\'Expiration date\'),\n+    \'getObjSize\': _(\'Object Size\'),\n+    \'id\': _(\'ID\'),\n+    \'is_folderish\': _(\'Folder\'),\n+    \'last_comment_date\': _(\'Last comment date\'),\n+    \'location\': _(\'Location\'),\n+    \'ModificationDate\': _(\'Last modified\'),\n+    \'review_state\': _(\'Review state\'),\n+    \'start\': _(\'Start Date\'),\n+    \'Subject\': _(\'Tags\'),\n+    \'Type\': _(\'Type\'),\n+    \'total_comments\': _(\'Total comments\'),\n+    \'mime_type\': _(\'MIME type\'),\n+}\n+\n+\n+@implementer(IVocabularyFactory)\n+class MetaDataFieldsVocabulary(object):\n+\n+    def __call__(self, context):\n+        cat = getToolByName(context, \'portal_catalog\')\n+        items = [\n+            SimpleTerm(column, column, _FIELD_LABEL[column] if column in _FIELD_LABEL else _(column))\n+            for column in cat.schema()\n+        ]\n+        return SimpleVocabulary(items)\n+\n+\n+MetaDataFieldsVocabularyFactory = MetaDataFieldsVocabulary()\n+\n+\n+def get_field_label(field):\n+    return _FIELD_LABEL.get(field, field)\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-06-30T11:23:19+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/1b669bbfdb1771b2c0658d202b7c80c847e4a38d

add the new vocabulary in the README

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex 7000883..07061fb 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -125,6 +125,10 @@ Catalog\n ``plone.app.vocabularies.Catalog``\n     Generic queryable catalog\n \n+``plone.app.vocabularies.MetadataFields``\n+    List of available metadata fields (catalog brain columns) that can be used\n+    as table columns in a folder or collection listing.\n+\n \n Theme\n -----\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-06-30T11:42:19+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/37c837babf6e35b2d08d55dab02d41573bfc039a

add a test for metadatafields

Files changed:
M plone/app/vocabularies/metadatafields.py
M plone/app/vocabularies/tests/test_vocabularies.py

b'diff --git a/plone/app/vocabularies/metadatafields.py b/plone/app/vocabularies/metadatafields.py\nindex 676bf34..508a17e 100644\n--- a/plone/app/vocabularies/metadatafields.py\n+++ b/plone/app/vocabularies/metadatafields.py\n@@ -32,6 +32,33 @@\n \n @implementer(IVocabularyFactory)\n class MetaDataFieldsVocabulary(object):\n+    """Vocabulary factory for metadata fields\n+\n+      >>> from zope.component import queryUtility\n+      >>> from plone.app.vocabularies.tests.base import DummyCatalog\n+      >>> from plone.app.vocabularies.tests.base import DummyTool\n+      >>> from plone.app.vocabularies.tests.base import create_context\n+\n+      >>> context = create_context()\n+\n+      >>> catalog = DummyCatalog(())\n+      >>> catalog.schema = lambda: [\'ModificationDate\', \'review_state\', \'SomethingNew\']\n+      >>> context.portal_catalog = catalog\n+\n+      >>> name = \'plone.app.vocabularies.MetadataFields\'\n+      >>> util = queryUtility(IVocabularyFactory, name)\n+\n+      >>> fields = util(context)\n+      >>> fields\n+      <zope.schema.vocabulary.SimpleVocabulary object at ...>\n+\n+      >>> len(fields.by_token)\n+      3\n+\n+      >>> modification_date = fields.by_token[\'ModificationDate\']\n+      >>> modification_date.title, modification_date.token, modification_date.value\n+      (u\'Last modified\', \'ModificationDate\', \'ModificationDate\')\n+    """\n \n     def __call__(self, context):\n         cat = getToolByName(context, \'portal_catalog\')\ndiff --git a/plone/app/vocabularies/tests/test_vocabularies.py b/plone/app/vocabularies/tests/test_vocabularies.py\nindex 3570430..c6a6740 100644\n--- a/plone/app/vocabularies/tests/test_vocabularies.py\n+++ b/plone/app/vocabularies/tests/test_vocabularies.py\n@@ -70,6 +70,13 @@ def test_suite():\n                 optionflags=optionflags,\n                 checker=Py23DocChecker(),\n             ),\n+            DocTestSuite(\n+                \'plone.app.vocabularies.metadatafields\',\n+                setUp=vocabSetUp,\n+                tearDown=vocabTearDown,\n+                optionflags=optionflags,\n+                checker=Py23DocChecker(),\n+            ),\n             DocTestSuite(\n                 \'plone.app.vocabularies.security\',\n                 setUp=vocabSetUp,\n'

Repository: plone.app.vocabularies


Branch: refs/heads/master
Date: 2020-06-30T13:28:18+02:00
Author: Vincent Fretin (vincentfretin) <vincent.fretin@gmail.com>
Commit: https://github.com/plone/plone.app.vocabularies/commit/b31710c090201dd4416ac158e6c4349960f8c63f

Merge pull request #62 from plone/fix-i18n-columns-title

Add new plone.app.vocabularies.MetadataFields vocabulary

Files changed:
A news/62.feature
A plone/app/vocabularies/metadatafields.py
M README.rst
M plone/app/vocabularies/configure.zcml
M plone/app/vocabularies/tests/test_vocabularies.py

b'diff --git a/README.rst b/README.rst\nindex 7000883..07061fb 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -125,6 +125,10 @@ Catalog\n ``plone.app.vocabularies.Catalog``\n     Generic queryable catalog\n \n+``plone.app.vocabularies.MetadataFields``\n+    List of available metadata fields (catalog brain columns) that can be used\n+    as table columns in a folder or collection listing.\n+\n \n Theme\n -----\ndiff --git a/news/62.feature b/news/62.feature\nnew file mode 100644\nindex 0000000..d4a4319\n--- /dev/null\n+++ b/news/62.feature\n@@ -0,0 +1,2 @@\n+Add new plone.app.vocabularies.MetadataFields vocabulary.\n+[vincentfretin]\ndiff --git a/plone/app/vocabularies/configure.zcml b/plone/app/vocabularies/configure.zcml\nindex 405b84e..db77f4d 100644\n--- a/plone/app/vocabularies/configure.zcml\n+++ b/plone/app/vocabularies/configure.zcml\n@@ -161,6 +161,9 @@\n     name="plone.app.vocabularies.ImagesScales"\n     />\n \n+  <utility\n+      component=".metadatafields.MetaDataFieldsVocabularyFactory"\n+      name="plone.app.vocabularies.MetadataFields" />\n \n   <!-- All source implementations will be deprecated -->\n   <adapter\ndiff --git a/plone/app/vocabularies/metadatafields.py b/plone/app/vocabularies/metadatafields.py\nnew file mode 100644\nindex 0000000..508a17e\n--- /dev/null\n+++ b/plone/app/vocabularies/metadatafields.py\n@@ -0,0 +1,76 @@\n+# -*- coding: utf-8 -*-\n+from Products.CMFCore.utils import getToolByName\n+from Products.CMFPlone import PloneMessageFactory as _\n+from zope.interface import implementer\n+from zope.schema.interfaces import IVocabularyFactory\n+from zope.schema.vocabulary import SimpleTerm\n+from zope.schema.vocabulary import SimpleVocabulary\n+\n+\n+_FIELD_LABEL = {\n+    \'CreationDate\': _(\'Created on\'),\n+    \'Creator\': _(\'Creator\'),\n+    \'Description\': _(\'Description\'),\n+    \'EffectiveDate\': _(\'Publication date\'),\n+    \'end\': _(\'End Date\'),\n+    \'exclude_from_nav\': _(\'Excluded from navigation\'),\n+    \'ExpirationDate\': _(\'Expiration date\'),\n+    \'getObjSize\': _(\'Object Size\'),\n+    \'id\': _(\'ID\'),\n+    \'is_folderish\': _(\'Folder\'),\n+    \'last_comment_date\': _(\'Last comment date\'),\n+    \'location\': _(\'Location\'),\n+    \'ModificationDate\': _(\'Last modified\'),\n+    \'review_state\': _(\'Review state\'),\n+    \'start\': _(\'Start Date\'),\n+    \'Subject\': _(\'Tags\'),\n+    \'Type\': _(\'Type\'),\n+    \'total_comments\': _(\'Total comments\'),\n+    \'mime_type\': _(\'MIME type\'),\n+}\n+\n+\n+@implementer(IVocabularyFactory)\n+class MetaDataFieldsVocabulary(object):\n+    """Vocabulary factory for metadata fields\n+\n+      >>> from zope.component import queryUtility\n+      >>> from plone.app.vocabularies.tests.base import DummyCatalog\n+      >>> from plone.app.vocabularies.tests.base import DummyTool\n+      >>> from plone.app.vocabularies.tests.base import create_context\n+\n+      >>> context = create_context()\n+\n+      >>> catalog = DummyCatalog(())\n+      >>> catalog.schema = lambda: [\'ModificationDate\', \'review_state\', \'SomethingNew\']\n+      >>> context.portal_catalog = catalog\n+\n+      >>> name = \'plone.app.vocabularies.MetadataFields\'\n+      >>> util = queryUtility(IVocabularyFactory, name)\n+\n+      >>> fields = util(context)\n+      >>> fields\n+      <zope.schema.vocabulary.SimpleVocabulary object at ...>\n+\n+      >>> len(fields.by_token)\n+      3\n+\n+      >>> modification_date = fields.by_token[\'ModificationDate\']\n+      >>> modification_date.title, modification_date.token, modification_date.value\n+      (u\'Last modified\', \'ModificationDate\', \'ModificationDate\')\n+    """\n+\n+    def __call__(self, context):\n+        cat = getToolByName(context, \'portal_catalog\')\n+        items = [\n+            SimpleTerm(column, column, _FIELD_LABEL[column] if column in _FIELD_LABEL else _(column))\n+            for column in cat.schema()\n+        ]\n+        return SimpleVocabulary(items)\n+\n+\n+MetaDataFieldsVocabularyFactory = MetaDataFieldsVocabulary()\n+\n+\n+def get_field_label(field):\n+    return _FIELD_LABEL.get(field, field)\ndiff --git a/plone/app/vocabularies/tests/test_vocabularies.py b/plone/app/vocabularies/tests/test_vocabularies.py\nindex 3570430..c6a6740 100644\n--- a/plone/app/vocabularies/tests/test_vocabularies.py\n+++ b/plone/app/vocabularies/tests/test_vocabularies.py\n@@ -70,6 +70,13 @@ def test_suite():\n                 optionflags=optionflags,\n                 checker=Py23DocChecker(),\n             ),\n+            DocTestSuite(\n+                \'plone.app.vocabularies.metadatafields\',\n+                setUp=vocabSetUp,\n+                tearDown=vocabTearDown,\n+                optionflags=optionflags,\n+                checker=Py23DocChecker(),\n+            ),\n             DocTestSuite(\n                 \'plone.app.vocabularies.security\',\n                 setUp=vocabSetUp,\n'

