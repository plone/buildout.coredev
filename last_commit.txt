Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-05-17T14:43:54+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/3021ea5a6dfbcf84ab6e56f0e8fda83bb50acc48

Reduce deprecation warnings.

Files changed:
A news/3949.bugfix
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/navtree.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py
M Products/CMFPlone/tests/testNavTree.py

b'diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex e6799e20b7..39266987f2 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -2,10 +2,10 @@\n from Acquisition import aq_inner\n from plone.app.layout.navigation.interfaces import INavtreeStrategy\n from plone.app.layout.navigation.navtree import buildFolderTree\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.base.defaultpage import check_default_page_via_view\n from plone.base.interfaces import IHideFromBreadcrumbs\n from plone.base.interfaces import INavigationSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.base.utils import pretty_title_or_id\n from plone.base.utils import safe_callable\n from plone.registry.interfaces import IRegistry\n@@ -79,7 +79,7 @@ def _getNavQuery(self):\n         else:\n             query = {}\n \n-        query["path"] = {"query": getNavigationRoot(self.context), "depth": 1}\n+        query["path"] = {"query": get_navigation_root(self.context), "depth": 1}\n         query["portal_type"] = [t for t in navigation_settings.displayed_types]\n         query["sort_on"] = navigation_settings.sort_tabs_on\n         if navigation_settings.sort_tabs_reversed:\n@@ -189,7 +189,7 @@ def breadcrumbs(self):\n         dec_result = [(len(r.getPath()), r) for r in rawresult]\n         dec_result.sort()\n \n-        rootPath = getNavigationRoot(context)\n+        rootPath = get_navigation_root(context)\n \n         # Build result dict\n         result = []\n@@ -234,7 +234,7 @@ def breadcrumbs(self):\n         if IHideFromBreadcrumbs.providedBy(context):\n             return base\n \n-        rootPath = getNavigationRoot(context)\n+        rootPath = get_navigation_root(context)\n         itemPath = "/".join(context.getPhysicalPath())\n \n         # don\'t show default pages in breadcrumbs or pages above the navigation\ndiff --git a/Products/CMFPlone/browser/navtree.py b/Products/CMFPlone/browser/navtree.py\nindex d161ad83c7..75e7c79ffb 100644\n--- a/Products/CMFPlone/browser/navtree.py\n+++ b/Products/CMFPlone/browser/navtree.py\n@@ -7,8 +7,8 @@\n from plone.app.layout.navigation.interfaces import INavigationQueryBuilder\n from plone.app.layout.navigation.interfaces import INavtreeStrategy\n from plone.app.layout.navigation.navtree import NavtreeStrategyBase\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.base.interfaces import INavigationSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -44,7 +44,7 @@ def __init__(self, context):\n \n         # Construct the path query\n \n-        rootPath = getNavigationRoot(context)\n+        rootPath = get_navigation_root(context)\n         currentPath = "/".join(context.getPhysicalPath())\n \n         # If we are above the navigation root, a navtree query would return\n@@ -115,7 +115,7 @@ def __init__(self, context, view=None):\n         )\n \n         self.showAllParents = True\n-        self.rootPath = getNavigationRoot(context)\n+        self.rootPath = get_navigation_root(context)\n \n         membership = getToolByName(context, "portal_membership")\n         self.memberId = membership.getAuthenticatedMember().getId()\n@@ -196,7 +196,7 @@ def __init__(self, context, view=None):\n         if view is not None:\n             self.rootPath = view.navigationTreeRootPath()\n         else:\n-            self.rootPath = getNavigationRoot(context)\n+            self.rootPath = get_navigation_root(context)\n \n     def subtreeFilter(self, node):\n         sitemapDecision = SitemapNavtreeStrategy.subtreeFilter(self, node)\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 84503505dd..ae4d6cbe27 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -1,12 +1,12 @@\n from DateTime import DateTime\n from plone.app.contentlisting.interfaces import IContentListing\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.base.batch import Batch\n+from plone.base.interfaces import INavigationRoot\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.navigationroot import get_navigation_root\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.browser.navtree import getNavigationRoot\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\n from zope.component import getMultiAdapter\n@@ -147,7 +147,7 @@ def _filter_query(self, query):\n         query["show_inactive"] = False\n         # respect navigation root if we\'re not at the site root.\n         if "path" not in query and not IPloneSiteRoot.providedBy(self.context):\n-            query["path"] = getNavigationRoot(self.context)\n+            query["path"] = get_navigation_root(self.context)\n \n         if "sort_order" in query and not query["sort_order"]:\n             del query["sort_order"]\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\nindex 3a219f5e57..4099a0f60f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n@@ -465,7 +465,7 @@ def test_manage_aliases_remove(self):\n         self.assertEqual(storage.get("/plone/alias3"), "/plone/test-folder")\n \n     def test_manage_aliases_navigation_root(self):\n-        from plone.app.layout.navigation.interfaces import INavigationRoot\n+        from plone.base.interfaces import INavigationRoot\n         from zope.interface import alsoProvides\n \n         storage = getUtility(IRedirectionStorage)\ndiff --git a/Products/CMFPlone/tests/testNavTree.py b/Products/CMFPlone/tests/testNavTree.py\nindex bd6308028f..0876d8be55 100644\n--- a/Products/CMFPlone/tests/testNavTree.py\n+++ b/Products/CMFPlone/tests/testNavTree.py\n@@ -1,8 +1,8 @@\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.app.layout.navigation.navtree import buildFolderTree\n from plone.app.layout.navigation.navtree import NavtreeStrategyBase\n-from plone.app.layout.navigation.root import getNavigationRoot\n+from plone.base.interfaces import INavigationRoot\n from plone.base.interfaces import INonStructuralFolder\n+from plone.base.navigationroot import get_navigation_root\n from Products.CMFCore.CMFCatalogAware import CatalogAware\n from Products.CMFCore.PortalFolder import PortalFolderBase\n from Products.CMFCore.utils import getToolByName\n@@ -577,33 +577,33 @@ def testCurrentParent(self):\n \n \n class TestNavigationRoot(PloneTestCase.PloneTestCase):\n-    def testGetNavigationRootPropertyNotSet(self):\n+    def testGet_navigation_rootPropertyNotSet(self):\n         del self.portal.portal_registry.records["plone.root"]\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, "/".join(self.portal.getPhysicalPath()))\n \n-    def testGetNavigationRootPropertyEmptyNoVirtualHost(self):\n+    def testGet_navigation_rootPropertyEmptyNoVirtualHost(self):\n         self.portal.portal_registry["plone.root"] = ""\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, "/".join(self.portal.getPhysicalPath()))\n \n-    def testGetNavigationRootPropertyIsRoot(self):\n+    def testGet_navigation_rootPropertyIsRoot(self):\n         self.portal.portal_registry["plone.root"] = "/"\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, "/".join(self.portal.getPhysicalPath()))\n \n-    def testGetNavigationRootPropertyIsFolder(self):\n+    def testGet_navigation_rootPropertyIsFolder(self):\n         folderPath = "/".join(self.folder.getPhysicalPath())\n         portalPath = "/".join(self.portal.getPhysicalPath())\n         relativePath = folderPath[len(portalPath) :]\n         self.portal.portal_registry["plone.root"] = relativePath\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, folderPath)\n \n-    def testGetNavigationRootWithINavigationRoot(self):\n+    def testGet_navigation_rootWithINavigationRoot(self):\n         folderPath = "/".join(self.folder.getPhysicalPath())\n         self.folder.invokeFactory("Folder", "folder1")\n         self.folder.folder1.invokeFactory("Document", "doc1")\n         directlyProvides(self.folder, INavigationRoot)\n-        root = getNavigationRoot(self.folder.folder1.doc1)\n+        root = get_navigation_root(self.folder.folder1.doc1)\n         self.assertEqual(root, folderPath)\ndiff --git a/news/3949.bugfix b/news/3949.bugfix\nnew file mode 100644\nindex 0000000000..bf15b1c268\n--- /dev/null\n+++ b/news/3949.bugfix\n@@ -0,0 +1 @@\n+Reduce DeprecationWarnings. [@jensens]\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-05-18T15:25:22+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/fcb6137b47787af4c18484af6d657979ad1fa183

remove no longer needed security declaration test because method is gone

Files changed:
M Products/CMFPlone/tests/testSecurityDeclarations.py

b'diff --git a/Products/CMFPlone/tests/testSecurityDeclarations.py b/Products/CMFPlone/tests/testSecurityDeclarations.py\nindex fd4cf2d532..5025c6260d 100644\n--- a/Products/CMFPlone/tests/testSecurityDeclarations.py\n+++ b/Products/CMFPlone/tests/testSecurityDeclarations.py\n@@ -468,6 +468,3 @@ def testSitemapQueryBuilder(self):\n             "n=SitemapQueryBuilder(context);"\n             "n();"\n         )\n-\n-    def testGetNavigationRoot(self):\n-        self.check("from Products.CMFPlone.browser.navtree import getNavigationRoot")\n'

Repository: Products.CMFPlone


Branch: refs/heads/master
Date: 2024-05-20T19:51:34+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/Products.CMFPlone/commit/eae1506e9cddbbd07c6dc25311d05c4ca5e7d78e

Merge pull request #3949 from plone/reduce-deprecation-warnings

Reduce deprecation warnings.

Files changed:
A news/3949.bugfix
M Products/CMFPlone/browser/navigation.py
M Products/CMFPlone/browser/navtree.py
M Products/CMFPlone/browser/search.py
M Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py
M Products/CMFPlone/tests/testNavTree.py
M Products/CMFPlone/tests/testSecurityDeclarations.py

b'diff --git a/Products/CMFPlone/browser/navigation.py b/Products/CMFPlone/browser/navigation.py\nindex e6799e20b7..39266987f2 100644\n--- a/Products/CMFPlone/browser/navigation.py\n+++ b/Products/CMFPlone/browser/navigation.py\n@@ -2,10 +2,10 @@\n from Acquisition import aq_inner\n from plone.app.layout.navigation.interfaces import INavtreeStrategy\n from plone.app.layout.navigation.navtree import buildFolderTree\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.base.defaultpage import check_default_page_via_view\n from plone.base.interfaces import IHideFromBreadcrumbs\n from plone.base.interfaces import INavigationSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.base.utils import pretty_title_or_id\n from plone.base.utils import safe_callable\n from plone.registry.interfaces import IRegistry\n@@ -79,7 +79,7 @@ def _getNavQuery(self):\n         else:\n             query = {}\n \n-        query["path"] = {"query": getNavigationRoot(self.context), "depth": 1}\n+        query["path"] = {"query": get_navigation_root(self.context), "depth": 1}\n         query["portal_type"] = [t for t in navigation_settings.displayed_types]\n         query["sort_on"] = navigation_settings.sort_tabs_on\n         if navigation_settings.sort_tabs_reversed:\n@@ -189,7 +189,7 @@ def breadcrumbs(self):\n         dec_result = [(len(r.getPath()), r) for r in rawresult]\n         dec_result.sort()\n \n-        rootPath = getNavigationRoot(context)\n+        rootPath = get_navigation_root(context)\n \n         # Build result dict\n         result = []\n@@ -234,7 +234,7 @@ def breadcrumbs(self):\n         if IHideFromBreadcrumbs.providedBy(context):\n             return base\n \n-        rootPath = getNavigationRoot(context)\n+        rootPath = get_navigation_root(context)\n         itemPath = "/".join(context.getPhysicalPath())\n \n         # don\'t show default pages in breadcrumbs or pages above the navigation\ndiff --git a/Products/CMFPlone/browser/navtree.py b/Products/CMFPlone/browser/navtree.py\nindex d161ad83c7..75e7c79ffb 100644\n--- a/Products/CMFPlone/browser/navtree.py\n+++ b/Products/CMFPlone/browser/navtree.py\n@@ -7,8 +7,8 @@\n from plone.app.layout.navigation.interfaces import INavigationQueryBuilder\n from plone.app.layout.navigation.interfaces import INavtreeStrategy\n from plone.app.layout.navigation.navtree import NavtreeStrategyBase\n-from plone.app.layout.navigation.root import getNavigationRoot\n from plone.base.interfaces import INavigationSchema\n+from plone.base.navigationroot import get_navigation_root\n from plone.i18n.normalizer.interfaces import IIDNormalizer\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n@@ -44,7 +44,7 @@ def __init__(self, context):\n \n         # Construct the path query\n \n-        rootPath = getNavigationRoot(context)\n+        rootPath = get_navigation_root(context)\n         currentPath = "/".join(context.getPhysicalPath())\n \n         # If we are above the navigation root, a navtree query would return\n@@ -115,7 +115,7 @@ def __init__(self, context, view=None):\n         )\n \n         self.showAllParents = True\n-        self.rootPath = getNavigationRoot(context)\n+        self.rootPath = get_navigation_root(context)\n \n         membership = getToolByName(context, "portal_membership")\n         self.memberId = membership.getAuthenticatedMember().getId()\n@@ -196,7 +196,7 @@ def __init__(self, context, view=None):\n         if view is not None:\n             self.rootPath = view.navigationTreeRootPath()\n         else:\n-            self.rootPath = getNavigationRoot(context)\n+            self.rootPath = get_navigation_root(context)\n \n     def subtreeFilter(self, node):\n         sitemapDecision = SitemapNavtreeStrategy.subtreeFilter(self, node)\ndiff --git a/Products/CMFPlone/browser/search.py b/Products/CMFPlone/browser/search.py\nindex 84503505dd..ae4d6cbe27 100644\n--- a/Products/CMFPlone/browser/search.py\n+++ b/Products/CMFPlone/browser/search.py\n@@ -1,12 +1,12 @@\n from DateTime import DateTime\n from plone.app.contentlisting.interfaces import IContentListing\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.base.batch import Batch\n+from plone.base.interfaces import INavigationRoot\n from plone.base.interfaces import ISearchSchema\n from plone.base.interfaces.siteroot import IPloneSiteRoot\n+from plone.base.navigationroot import get_navigation_root\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.browser.navtree import getNavigationRoot\n from Products.ZCTextIndex.ParseTree import ParseError\n from zope.cachedescriptors.property import Lazy as lazy_property\n from zope.component import getMultiAdapter\n@@ -147,7 +147,7 @@ def _filter_query(self, query):\n         query["show_inactive"] = False\n         # respect navigation root if we\'re not at the site root.\n         if "path" not in query and not IPloneSiteRoot.providedBy(self.context):\n-            query["path"] = getNavigationRoot(self.context)\n+            query["path"] = get_navigation_root(self.context)\n \n         if "sort_order" in query and not query["sort_order"]:\n             del query["sort_order"]\ndiff --git a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\nindex 3a219f5e57..4099a0f60f 100644\n--- a/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n+++ b/Products/CMFPlone/controlpanel/tests/test_controlpanel_browser_redirection.py\n@@ -465,7 +465,7 @@ def test_manage_aliases_remove(self):\n         self.assertEqual(storage.get("/plone/alias3"), "/plone/test-folder")\n \n     def test_manage_aliases_navigation_root(self):\n-        from plone.app.layout.navigation.interfaces import INavigationRoot\n+        from plone.base.interfaces import INavigationRoot\n         from zope.interface import alsoProvides\n \n         storage = getUtility(IRedirectionStorage)\ndiff --git a/Products/CMFPlone/tests/testNavTree.py b/Products/CMFPlone/tests/testNavTree.py\nindex bd6308028f..0876d8be55 100644\n--- a/Products/CMFPlone/tests/testNavTree.py\n+++ b/Products/CMFPlone/tests/testNavTree.py\n@@ -1,8 +1,8 @@\n-from plone.app.layout.navigation.interfaces import INavigationRoot\n from plone.app.layout.navigation.navtree import buildFolderTree\n from plone.app.layout.navigation.navtree import NavtreeStrategyBase\n-from plone.app.layout.navigation.root import getNavigationRoot\n+from plone.base.interfaces import INavigationRoot\n from plone.base.interfaces import INonStructuralFolder\n+from plone.base.navigationroot import get_navigation_root\n from Products.CMFCore.CMFCatalogAware import CatalogAware\n from Products.CMFCore.PortalFolder import PortalFolderBase\n from Products.CMFCore.utils import getToolByName\n@@ -577,33 +577,33 @@ def testCurrentParent(self):\n \n \n class TestNavigationRoot(PloneTestCase.PloneTestCase):\n-    def testGetNavigationRootPropertyNotSet(self):\n+    def testGet_navigation_rootPropertyNotSet(self):\n         del self.portal.portal_registry.records["plone.root"]\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, "/".join(self.portal.getPhysicalPath()))\n \n-    def testGetNavigationRootPropertyEmptyNoVirtualHost(self):\n+    def testGet_navigation_rootPropertyEmptyNoVirtualHost(self):\n         self.portal.portal_registry["plone.root"] = ""\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, "/".join(self.portal.getPhysicalPath()))\n \n-    def testGetNavigationRootPropertyIsRoot(self):\n+    def testGet_navigation_rootPropertyIsRoot(self):\n         self.portal.portal_registry["plone.root"] = "/"\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, "/".join(self.portal.getPhysicalPath()))\n \n-    def testGetNavigationRootPropertyIsFolder(self):\n+    def testGet_navigation_rootPropertyIsFolder(self):\n         folderPath = "/".join(self.folder.getPhysicalPath())\n         portalPath = "/".join(self.portal.getPhysicalPath())\n         relativePath = folderPath[len(portalPath) :]\n         self.portal.portal_registry["plone.root"] = relativePath\n-        root = getNavigationRoot(self.portal)\n+        root = get_navigation_root(self.portal)\n         self.assertEqual(root, folderPath)\n \n-    def testGetNavigationRootWithINavigationRoot(self):\n+    def testGet_navigation_rootWithINavigationRoot(self):\n         folderPath = "/".join(self.folder.getPhysicalPath())\n         self.folder.invokeFactory("Folder", "folder1")\n         self.folder.folder1.invokeFactory("Document", "doc1")\n         directlyProvides(self.folder, INavigationRoot)\n-        root = getNavigationRoot(self.folder.folder1.doc1)\n+        root = get_navigation_root(self.folder.folder1.doc1)\n         self.assertEqual(root, folderPath)\ndiff --git a/Products/CMFPlone/tests/testSecurityDeclarations.py b/Products/CMFPlone/tests/testSecurityDeclarations.py\nindex fd4cf2d532..5025c6260d 100644\n--- a/Products/CMFPlone/tests/testSecurityDeclarations.py\n+++ b/Products/CMFPlone/tests/testSecurityDeclarations.py\n@@ -468,6 +468,3 @@ def testSitemapQueryBuilder(self):\n             "n=SitemapQueryBuilder(context);"\n             "n();"\n         )\n-\n-    def testGetNavigationRoot(self):\n-        self.check("from Products.CMFPlone.browser.navtree import getNavigationRoot")\ndiff --git a/news/3949.bugfix b/news/3949.bugfix\nnew file mode 100644\nindex 0000000000..bf15b1c268\n--- /dev/null\n+++ b/news/3949.bugfix\n@@ -0,0 +1 @@\n+Reduce DeprecationWarnings. [@jensens]\n'

