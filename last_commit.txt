Repository: plone.restapi


Branch: refs/heads/main
Date: 2024-10-20T16:45:24-07:00
Author: Mikel Larreategi (erral) <mlarreategi@codesyntax.com>
Commit: https://github.com/plone/plone.restapi/commit/344dd9c7d4ee822978e35bca7b073b1cb0c570dc

Test event Occurrence serialization (#1811)

* add a failing test

* add a check for objects that are not able to be adapted to IContentListing

* changelog

* run black

* run flake8

* test that Ocurrence serialization returns correct data

* changelog

* conditional tests

* lint

* restore

* changelog

* restore

* rename changelog file

Files changed:
A news/1809.internal
M src/plone/restapi/tests/test_serializer_summary.py

b'diff --git a/news/1809.internal b/news/1809.internal\nnew file mode 100644\nindex 000000000..ae905f006\n--- /dev/null\n+++ b/news/1809.internal\n@@ -0,0 +1,2 @@\n+Test that recurrence serialization provides correct data\n+[erral]\ndiff --git a/src/plone/restapi/tests/test_serializer_summary.py b/src/plone/restapi/tests/test_serializer_summary.py\nindex 16b54f7b0..794579241 100644\n--- a/src/plone/restapi/tests/test_serializer_summary.py\n+++ b/src/plone/restapi/tests/test_serializer_summary.py\n@@ -1,19 +1,31 @@\n+from datetime import datetime\n+from datetime import timedelta\n from DateTime import DateTime\n from plone.app.contentlisting.interfaces import IContentListingObject\n+from plone.app.event.dx.traverser import OccurrenceTraverser\n from plone.app.testing import popGlobalRegistry\n from plone.app.testing import pushGlobalRegistry\n from plone.dexterity.utils import createContentInContainer\n+from plone.event.interfaces import IEvent\n+from plone.event.interfaces import IEventRecurrence\n from plone.restapi.interfaces import ISerializeToJsonSummary\n from plone.restapi.testing import PLONE_RESTAPI_DX_INTEGRATION_TESTING\n from plone.restapi.testing import register_static_uuid_utility\n from Products.CMFCore.utils import getToolByName\n from zope.component import getMultiAdapter\n from zope.component.hooks import getSite\n+from zope.interface import alsoProvides\n \n import Missing\n import unittest\n \n \n+try:\n+    from plone.app.event.adapters import OccurrenceContentListingObject\n+except ImportError:\n+    OccurrenceContentListingObject = None\n+\n+\n class TestSummarySerializers(unittest.TestCase):\n     layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n \n@@ -203,3 +215,65 @@ def test_dx_type_summary(self):\n             },\n             summary,\n         )\n+\n+\n+class TestSummarySerializerswithRecurrenceObjects(unittest.TestCase):\n+    layer = PLONE_RESTAPI_DX_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer["portal"]\n+        self.request = self.layer["request"]\n+\n+        pushGlobalRegistry(getSite())\n+        register_static_uuid_utility(prefix="c6dcbd55ab2746e199cd4ed458")\n+\n+        behaviors = self.portal.portal_types.DXTestDocument.behaviors\n+        behaviors = behaviors + (\n+            "plone.eventbasic",\n+            "plone.eventrecurrence",\n+        )\n+        self.portal.portal_types.DXTestDocument.behaviors = behaviors\n+\n+        self.event = createContentInContainer(\n+            self.portal,\n+            "DXTestDocument",\n+            id="doc1",\n+            title="Lorem Ipsum event",\n+            description="Description event",\n+            start=datetime.now(),\n+            end=datetime.now() + timedelta(hours=1),\n+            recurrence="RRULE:FREQ=DAILY;COUNT=3",  # see https://github.com/plone/plone.app.event/blob/master/plone/app/event/tests/base_setup.py\n+        )\n+\n+        alsoProvides(self.event, IEvent)\n+        alsoProvides(self.event, IEventRecurrence)\n+\n+    def tearDown(self):\n+        popGlobalRegistry(getSite())\n+\n+    @unittest.skipIf(\n+        OccurrenceContentListingObject is not None,\n+        "this test needs a plone.app.event version that does not include a IContentListingObject adapter",\n+    )\n+    def test_dx_event_with_recurrence_old_version(self):\n+        tomorrow = datetime.now() + timedelta(days=1)\n+        tomorrow_str = tomorrow.strftime("%Y-%m-%d")\n+        ot = OccurrenceTraverser(self.event, self.request)\n+        ocurrence = ot.publishTraverse(self.request, tomorrow_str)\n+\n+        with self.assertRaises(TypeError):\n+            getMultiAdapter((ocurrence, self.request), ISerializeToJsonSummary)()\n+\n+    @unittest.skipIf(\n+        OccurrenceContentListingObject is None,\n+        "this test needs a plone.app.event version that includes a IContentListingObject adapter",\n+    )\n+    def test_dx_event_with_recurrence_new_version(self):\n+        tomorrow = datetime.now() + timedelta(days=1)\n+        tomorrow_str = tomorrow.strftime("%Y-%m-%d")\n+        ot = OccurrenceTraverser(self.event, self.request)\n+        ocurrence = ot.publishTraverse(self.request, tomorrow_str)\n+        summary = getMultiAdapter((ocurrence, self.request), ISerializeToJsonSummary)()\n+\n+        self.assertEqual(summary["start"], tomorrow_str)\n+        self.assertEqual(summary["Title"], ocurrence.Title())\n'

