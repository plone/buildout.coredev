Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-06-16T23:56:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/5da03238cf1724cccb3a228c303869fe00d85603

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/7723aeaf.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89d..919b41166 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 000000000..7ef4f64d9\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 000000000..4748f0f48\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex 59d8710d5..81594fde9 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,33 +1,51 @@\n-.coverage\n-*,cover\n-/develop-eggs\n-/eggs\n-/fake-eggs\n-/bin\n-/local\n-/parts\n-/downloads\n-/var\n-/build\n-/dist\n-/local.cfg\n-/*.egg-info\n-/.installed.cfg\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n+*.egg-info\n *.pyc\n-/.Python\n-/include\n-/lib\n-/.project\n-/.pydevproject\n-/.mr.developer.cfg\n-/src/*\n-/robot_*\n-/test_*\n-*.mo\n-docs/Makefile\n-docs/make.bat\n-docs/doctrees\n-docs/html\n-library-settings.txt\n-pip-selfcheck.json\n-venv\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 73c8dcacf..cda7c83b6 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "112d1c69"\n+commit-id = "7723aeaf"\n \n-[codespell]\n-additional-ignores = "discreet,oder,ist,crate"\n+[pyproject]\n+codespell_ignores = "oder,ist,crate"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5cd1..5ef2b8196 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,12 +1,13 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.4.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -19,9 +20,17 @@ repos:\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.0.4\n+    rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n@@ -32,6 +41,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +57,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/7723aeaf.internal b/news/7723aeaf.internal\nnew file mode 100644\nindex 000000000..c08f53991\n--- /dev/null\n+++ b/news/7723aeaf.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex e1fc03729..fa8867f4c 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -44,6 +45,13 @@ target-version = ["py38"]\n \n [tool.codespell]\n ignore-words-list = "discreet,oder,ist,crate"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n \n [tool.dependencychecker]\n Zope = [\n@@ -51,15 +59,75 @@ Zope = [\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 022d88e1d..030fd7492 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,17 +52,30 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -52,3 +85,72 @@ commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.contenttypes {posargs}\n extras =\n     test\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run --branch --source plone.app.contenttypes {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.contenttypes {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-06-16T23:56:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/8861c7dcf8e3231fa8b6db48127cc9f97fd86771

cleanup: remove unused file

Files changed:
D setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8fb..00000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-06-17T15:10:36+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/d5a20b3842032388fbf2c65cb525ec79d8b81060

feat: mark strings for translations

Files changed:
M plone/app/contenttypes/browser/templates/image.pt

b'diff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex b2f4d397..cb77820f 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -63,8 +63,16 @@\n               <span class="d-none"\n                     i18n:translate="image_size_label"\n               >File size</span>\n-              <tal:mb condition="use_MB">${python:round(size/1024/1024, 1)} MB</tal:mb>\n-              <tal:kb condition="not: use_MB">${python:round(size/1024, 1)} KB</tal:kb>\n+              <tal:mb condition="use_MB"\n+                      i18n:translate=""\n+              >\n+                <tal:size i18n:name="size">${python:round(size/1024/1024, 1)}</tal:size>\n+                MB</tal:mb>\n+              <tal:kb condition="not: use_MB"\n+                      i18n:translate=""\n+              >\n+                <tal:size i18n:name="size">${python:round(size/1024, 1)}</tal:size>\n+                KB</tal:kb>\n             </div>\n           </div>\n \n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-06-24T14:05:57+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.contenttypes/commit/5980a74999dc0f4f7b466c89beddc155b54a16f9

feat: declare dependencies

Files changed:
M .meta.toml
M pyproject.toml
M setup.py

b'diff --git a/.meta.toml b/.meta.toml\nindex cda7c83b..d3ded7c0 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,3 +7,4 @@ commit-id = "7723aeaf"\n \n [pyproject]\n codespell_ignores = "oder,ist,crate"\n+dependencies_ignores = "[\'ZServer\', \'plone.app.event\', \'Products.CFMPlone\',]"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex fa8867f4..e4468843 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -92,6 +92,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'ZServer\', \'plone.app.event\', \'Products.CMFPlone\',]\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex a6ea1dfa..03e62fdf 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -61,6 +61,7 @@ def read(*rnames):\n         "plone.app.z3cform>=1.1.0",\n         "zope.deprecation",\n         "plone.base",\n+        "Products.BTreeFolder2",\n         "Products.GenericSetup",\n         "Products.MimetypesRegistry",\n         "Products.PortalTransforms",\n'

Repository: plone.app.contenttypes


Branch: refs/heads/master
Date: 2023-10-05T09:36:17+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.contenttypes/commit/846e95f19a6893dba1a87d06d79600ca2087d147

Merge pull request #669 from plone/config-with-default-template-4e0aa66e

Config with default template

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/7723aeaf.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M plone/app/contenttypes/browser/templates/image.pt
M pyproject.toml
M setup.py
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89d..919b41166 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -32,8 +33,21 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 62%\nrename from setup.cfg\nrename to .flake8\nindex 0da8f8fbc..7ef4f64d9 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -15,9 +13,10 @@ ignore =\n     # black takes care of spaces after commas\n     E231,\n \n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 000000000..4748f0f48\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex 59d8710d5..81594fde9 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,33 +1,51 @@\n-.coverage\n-*,cover\n-/develop-eggs\n-/eggs\n-/fake-eggs\n-/bin\n-/local\n-/parts\n-/downloads\n-/var\n-/build\n-/dist\n-/local.cfg\n-/*.egg-info\n-/.installed.cfg\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n+*.egg-info\n *.pyc\n-/.Python\n-/include\n-/lib\n-/.project\n-/.pydevproject\n-/.mr.developer.cfg\n-/src/*\n-/robot_*\n-/test_*\n-*.mo\n-docs/Makefile\n-docs/make.bat\n-docs/doctrees\n-docs/html\n-library-settings.txt\n-pip-selfcheck.json\n-venv\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 73c8dcacf..d3ded7c05 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,8 +1,10 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "112d1c69"\n+commit-id = "7723aeaf"\n \n-[codespell]\n-additional-ignores = "discreet,oder,ist,crate"\n+[pyproject]\n+codespell_ignores = "oder,ist,crate"\n+dependencies_ignores = "[\'ZServer\', \'plone.app.event\', \'Products.CFMPlone\',]"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5cd1..5ef2b8196 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,12 +1,13 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.4.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -19,9 +20,17 @@ repos:\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.0.4\n+    rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n@@ -32,6 +41,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +57,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/7723aeaf.internal b/news/7723aeaf.internal\nnew file mode 100644\nindex 000000000..c08f53991\n--- /dev/null\n+++ b/news/7723aeaf.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/contenttypes/browser/templates/image.pt b/plone/app/contenttypes/browser/templates/image.pt\nindex b2f4d397d..cb77820f0 100644\n--- a/plone/app/contenttypes/browser/templates/image.pt\n+++ b/plone/app/contenttypes/browser/templates/image.pt\n@@ -63,8 +63,16 @@\n               <span class="d-none"\n                     i18n:translate="image_size_label"\n               >File size</span>\n-              <tal:mb condition="use_MB">${python:round(size/1024/1024, 1)} MB</tal:mb>\n-              <tal:kb condition="not: use_MB">${python:round(size/1024, 1)} KB</tal:kb>\n+              <tal:mb condition="use_MB"\n+                      i18n:translate=""\n+              >\n+                <tal:size i18n:name="size">${python:round(size/1024/1024, 1)}</tal:size>\n+                MB</tal:mb>\n+              <tal:kb condition="not: use_MB"\n+                      i18n:translate=""\n+              >\n+                <tal:size i18n:name="size">${python:round(size/1024, 1)}</tal:size>\n+                KB</tal:kb>\n             </div>\n           </div>\n \ndiff --git a/pyproject.toml b/pyproject.toml\nindex e1fc03729..e4468843b 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -44,6 +45,13 @@ target-version = ["py38"]\n \n [tool.codespell]\n ignore-words-list = "discreet,oder,ist,crate"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n \n [tool.dependencychecker]\n Zope = [\n@@ -51,15 +59,76 @@ Zope = [\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'ZServer\', \'plone.app.event\', \'Products.CMFPlone\',]\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.py b/setup.py\nindex a6ea1dfa1..03e62fdf0 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -61,6 +61,7 @@ def read(*rnames):\n         "plone.app.z3cform>=1.1.0",\n         "zope.deprecation",\n         "plone.base",\n+        "Products.BTreeFolder2",\n         "Products.GenericSetup",\n         "Products.MimetypesRegistry",\n         "Products.PortalTransforms",\ndiff --git a/tox.ini b/tox.ini\nindex 022d88e1d..030fd7492 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,17 +52,30 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -52,3 +85,72 @@ commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.contenttypes {posargs}\n extras =\n     test\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n+[testenv:coverage]\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n+constrain_package_deps = true\n+set_env = ROBOT_BROWSER=headlesschrome\n+deps =\n+    coverage\n+    zope.testrunner\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    coverage run --branch --source plone.app.contenttypes {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.contenttypes {posargs}\n+    coverage report -m --format markdown\n+extras =\n+    test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

