Repository: plone.restapi


Branch: refs/heads/master
Date: 2023-07-12T13:40:53-04:00
Author: Akshat Jain (Akshat2Jain) <101265586+Akshat2Jain@users.noreply.github.com>
Commit: https://github.com/plone/plone.restapi/commit/869ad6d02952474f0e93fa8ec1a087469b3fc743

Add Documentation for Code Formatting and Testing (#1667)

* Document steps to contribute that are specific to plone.restapi

* changes index.md

---------

Co-authored-by: David Glick &lt;david@glicksoftware.com&gt;

Files changed:
A news/1664.documentation
M docs/source/contributing/index.md

b"diff --git a/docs/source/contributing/index.md b/docs/source/contributing/index.md\nindex f0a6e50df..5654a396d 100644\n--- a/docs/source/contributing/index.md\n+++ b/docs/source/contributing/index.md\n@@ -9,6 +9,12 @@ myst:\n \n # Contributing to `plone.restapi`\n \n+We use GNU `make` when developing `plone.restapi`.\n+To install this package, its dependencies, and its documentation, code formatting, and testing tools, run the following command in the root of the project.\n+\n+```shell\n+make\n+```\n \n ## Generating documentation examples\n \n@@ -37,7 +43,6 @@ Include them in the documentation using MyST syntax:\n Build the documentation locally to test the rendering by running `./bin/sphinxbuilder`.\n Alternatively, you can use Makefile targets:\n \n-\n `docs-clean`\n : Clean current and legacy docs build directories, and Python virtual environment\n \n@@ -58,9 +63,8 @@ Alternatively, you can use Makefile targets:\n \n `docs`\n : Build Docs\n- \n-Make sure you add and commit the generated files in `http-examples`.\n \n+Make sure you add and commit the generated files in `http-examples`.\n \n ## Conventions\n \n@@ -69,3 +73,21 @@ Make sure you add and commit the generated files in `http-examples`.\n \n conventions\n ```\n+\n+## Code formatting and testing\n+\n+To ensure consistent code formatting, we use [Black](https://black.readthedocs.io/en/stable/index.html).\n+All pull requests must pass code formatting checks.\n+We recommend that you run Black locally.\n+You can use the following command to automatically format the code.\n+\n+```shell\n+make black\n+```\n+\n+To run tests locally and ensure your changes don't introduce any issues, use the following command.\n+This will execute the test suite and provide test feedback.\n+\n+```shell\n+make test\n+```\ndiff --git a/news/1664.documentation b/news/1664.documentation\nnew file mode 100644\nindex 000000000..b0be5741c\n--- /dev/null\n+++ b/news/1664.documentation\n@@ -0,0 +1 @@\n+added instruction to ensure consistent code formatting. @Akshat2Jain\n\\ No newline at end of file\n"

