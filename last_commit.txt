Repository: Products.CMFPlone


Branch: refs/heads/5.2.x
Date: 2021-11-19T08:28:38+01:00
Author: Wesley Barroso Lopes (wesleybl) <wesleybl@gmail.com>
Commit: https://github.com/plone/Products.CMFPlone/commit/6ab590e5e5af72b52f9b0cd280acc981c499fada

Load adapter for index location, only if Archetypes is installed (#3360)

Adapter for index location only works on Archetypes content, as it uses
the getField method. This caused that, when an location index  was
created in the catalog, the indexing would not work for Dexterity
contents, since the adapter trie to use the getField method on a
Dexterity content.

Files changed:
A news/3347.bugfix
M Products/CMFPlone/CatalogTool.py
M Products/CMFPlone/catalog.zcml
M Products/CMFPlone/tests/testCatalogTool.py

b'diff --git a/Products/CMFPlone/CatalogTool.py b/Products/CMFPlone/CatalogTool.py\nindex c85c0a8a1f..5606847b6f 100644\n--- a/Products/CMFPlone/CatalogTool.py\n+++ b/Products/CMFPlone/CatalogTool.py\n@@ -276,9 +276,14 @@ def mime_type(obj):\n     return aq_base(obj).getPrimaryField().getContentType(obj)\n \n \n-@indexer(Interface)\n-def location(obj):\n-    return obj.getField(\'location\').get(obj)\n+# BBB: This adapter is for compatibility and should be removed in Plone 6.\n+try:\n+    from Products.Archetypes.interfaces import IBaseObject\n+    @indexer(IBaseObject)\n+    def location(obj):\n+        return obj.getField(\'location\').get(obj)\n+except ImportError:\n+    pass\n \n \n @implementer(IPloneCatalogTool)\ndiff --git a/Products/CMFPlone/catalog.zcml b/Products/CMFPlone/catalog.zcml\nindex 97d2852553..c2a9de94ce 100644\n--- a/Products/CMFPlone/catalog.zcml\n+++ b/Products/CMFPlone/catalog.zcml\n@@ -1,4 +1,7 @@\n-<configure xmlns="http://namespaces.zope.org/zope" i18n_domain="plone">\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone">\n \n     <!-- Register the default indexable object wrapper -->\n     <adapter\n@@ -17,7 +20,8 @@\n     <adapter factory=".CatalogTool.is_folderish"           name="is_folderish" />\n     <adapter factory=".CatalogTool.is_default_page"        name="is_default_page" />\n     <adapter factory=".CatalogTool.getIcon"                name="getIcon" />\n-    <adapter factory=".CatalogTool.location"               name="location" />\n+    <!-- BBB: This adapter is for compatibility and should be removed in Plone 6. -->\n+    <adapter factory=".CatalogTool.location"               name="location" zcml:condition="installed Products.Archetypes"/>\n     <adapter factory=".CatalogTool.mime_type"              name="mime_type" />\n \n </configure>\ndiff --git a/Products/CMFPlone/tests/testCatalogTool.py b/Products/CMFPlone/tests/testCatalogTool.py\nindex f3fa4adc1b..f516e02a30 100644\n--- a/Products/CMFPlone/tests/testCatalogTool.py\n+++ b/Products/CMFPlone/tests/testCatalogTool.py\n@@ -359,6 +359,22 @@ def test_acquired_attributes_are_not_indexed(self):\n         brains = self.catalog(foo=\'FOO\')\n         self.assertEqual(len(brains), 1)\n \n+    def test_indexing_location_to_dexterity(self):\n+        # BBB: \'Products.CMFPlone.CatalogTool.location\' only works for Archetypes.\n+        # It should be removed in Plone 6. When it is removed, this test can be removed\n+        # as well.\n+        doc = self.folder.doc\n+        from plone.dexterity.interfaces import IDexterityContent\n+        if not IDexterityContent.providedBy(doc):\n+            return\n+        self.catalog.addIndex("location", "FieldIndex")\n+        doc.location = "home"\n+        doc.reindexObject()\n+        results = self.catalog(location="home")\n+        self.assertTrue(results)\n+        self.assertEqual(len(results), 1)\n+        self.assertEqual(results[0].id, doc.id)\n+\n \n class TestCatalogSearching(PloneTestCase):\n \ndiff --git a/news/3347.bugfix b/news/3347.bugfix\nnew file mode 100644\nindex 0000000000..47486450dc\n--- /dev/null\n+++ b/news/3347.bugfix\n@@ -0,0 +1 @@\n+Load adapter for index location, only if Archetypes is installed. [wesleybl]\n\\ No newline at end of file\n'

