Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-11-16T11:18:04+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.theming/commit/b22ccb1b8db526cc426ec6451e162bb5d94481d8

For increased security, fail when trying file protocol access in diazo rules.

Also do not resolve entities, and remove processing instructions.
See https://github.com/plone/Products.CMFPlone/issues/3209

Files changed:
A news/3209.bugfix
M src/plone/app/theming/utils.py

b'diff --git a/news/3209.bugfix b/news/3209.bugfix\nnew file mode 100644\nindex 0000000..fcda3a1\n--- /dev/null\n+++ b/news/3209.bugfix\n@@ -0,0 +1,3 @@\n+For increased security, fail when trying file protocol access in diazo rules.\n+Also do not resolve entities, and remove processing instructions.\n+[maurits]\ndiff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex ed6b734..f2cf3d8 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -66,6 +66,16 @@ def theming_policy(request=None):\n     return IThemingPolicy(request)\n \n \n+class FailingFileProtocolResolver(etree.Resolver):\n+    """Resolver that fails for security when file:/// urls are tried.\n+    """\n+    def resolve(self, system_url, public_id, context):\n+        if system_url.startswith(\'file://\') and system_url != \'file:///__diazo__\':\n+            # The error will be caught by lxml and we only see this in the traceback:\n+            # XIncludeError: could not load <system_url>, and no fallback was found\n+            raise ValueError("File protocol access not allowed: \'%s\'" % system_url)\n+\n+\n class NetworkResolver(etree.Resolver):\n     """Resolver for network urls\n     """\n@@ -618,15 +628,16 @@ def getParser(type, readNetwork):\n     """\n \n     if type == \'rules\':\n-        parser = etree.XMLParser(recover=False)\n+        parser = etree.XMLParser(recover=False, resolve_entities=False, remove_pis=True)\n     elif type == \'theme\':\n         parser = etree.HTMLParser()\n     elif type == \'compiler\':\n-        parser = etree.XMLParser()\n+        parser = etree.XMLParser(resolve_entities=False, remove_pis=True)\n     parser.resolvers.add(InternalResolver())\n     parser.resolvers.add(PythonResolver())\n     if readNetwork:\n         parser.resolvers.add(NetworkResolver())\n+    parser.resolvers.add(FailingFileProtocolResolver())\n     return parser\n \n \n'

Repository: plone.app.theming


Branch: refs/heads/master
Date: 2020-11-16T21:17:18+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.theming/commit/8b23f0d33a961714050abc0ebba99f74ecad6e79

Merge pull request #193 from plone/maurits/cmfplone-issue-3209-lxml

Fail when trying file protocol access in diazo rules

Files changed:
A news/3209.bugfix
M src/plone/app/theming/utils.py

b'diff --git a/news/3209.bugfix b/news/3209.bugfix\nnew file mode 100644\nindex 0000000..fcda3a1\n--- /dev/null\n+++ b/news/3209.bugfix\n@@ -0,0 +1,3 @@\n+For increased security, fail when trying file protocol access in diazo rules.\n+Also do not resolve entities, and remove processing instructions.\n+[maurits]\ndiff --git a/src/plone/app/theming/utils.py b/src/plone/app/theming/utils.py\nindex ed6b734..f2cf3d8 100644\n--- a/src/plone/app/theming/utils.py\n+++ b/src/plone/app/theming/utils.py\n@@ -66,6 +66,16 @@ def theming_policy(request=None):\n     return IThemingPolicy(request)\n \n \n+class FailingFileProtocolResolver(etree.Resolver):\n+    """Resolver that fails for security when file:/// urls are tried.\n+    """\n+    def resolve(self, system_url, public_id, context):\n+        if system_url.startswith(\'file://\') and system_url != \'file:///__diazo__\':\n+            # The error will be caught by lxml and we only see this in the traceback:\n+            # XIncludeError: could not load <system_url>, and no fallback was found\n+            raise ValueError("File protocol access not allowed: \'%s\'" % system_url)\n+\n+\n class NetworkResolver(etree.Resolver):\n     """Resolver for network urls\n     """\n@@ -618,15 +628,16 @@ def getParser(type, readNetwork):\n     """\n \n     if type == \'rules\':\n-        parser = etree.XMLParser(recover=False)\n+        parser = etree.XMLParser(recover=False, resolve_entities=False, remove_pis=True)\n     elif type == \'theme\':\n         parser = etree.HTMLParser()\n     elif type == \'compiler\':\n-        parser = etree.XMLParser()\n+        parser = etree.XMLParser(resolve_entities=False, remove_pis=True)\n     parser.resolvers.add(InternalResolver())\n     parser.resolvers.add(PythonResolver())\n     if readNetwork:\n         parser.resolvers.add(NetworkResolver())\n+    parser.resolvers.add(FailingFileProtocolResolver())\n     return parser\n \n \n'

