Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-23T13:43:39+03:00
Author: dobri1408 (dobri1408) <50819975+dobri1408@users.noreply.github.com>
Commit: https://github.com/plone/plone.namedfile/commit/26b108b7ec927beb6c783fcb6c127fde898d3e64

Update svg_utils.py to look for viewbox also

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 59c8dd50..105cd93f 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -7,6 +7,31 @@\n \n log = getLogger(__name__)\n \n+def dimension_int(dimension):\n+    if isinstance(dimension, str):\n+        try:\n+            _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n+        except ValueError:\n+            _dimension = 0\n+    elif isinstance(dimension, int):\n+        _dimension = dimension\n+    elif isinstance(dimension, float):\n+        _dimension = int(dimension)\n+    else:\n+        _dimension = 0\n+\n+    return _dimension\n+\n+\n+def calculate_dimensions_from_viewbox(view_box):\n+        parts = [float(x) for x in view_box.split()]\n+        print(f"Parsed viewBox parts: {parts}")\n+        if len(parts) == 4:\n+            width = int(parts[2] - parts[0])\n+            height = int(parts[3] - parts[1])\n+            return width, height\n+        return 1, 1\n+\n \n def process_svg(data):\n     content_type = None\n@@ -15,12 +40,18 @@ def process_svg(data):\n     size = len(data)\n \n     tag = None\n+    view_box = None\n     try:\n         for event, el in et.iterparse(BytesIO(data), ("start",)):\n             tag = el.tag\n             w = dimension_int(el.attrib.get("width"))\n             h = dimension_int(el.attrib.get("height"))\n+            view_box = el.attrib.get("viewBox")\n             break\n+\n+        if (w == 0 or h == 0) and view_box:\n+            w, h = calculate_dimensions_from_viewbox(view_box)\n+        print(w,h)\n         w = w if w > 1 else 1\n         h = h if h > 1 else 1\n     except et.ParseError as e:\n@@ -33,19 +64,3 @@ def process_svg(data):\n         content_type = "image/svg+xml"\n \n     return content_type, w, h\n-\n-\n-def dimension_int(dimension):\n-    if isinstance(dimension, str):\n-        try:\n-            _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n-        except ValueError:\n-            _dimension = 0\n-    elif isinstance(dimension, int):\n-        _dimension = dimension\n-    elif isinstance(dimension, float):\n-        _dimension = int(dimension)\n-    else:\n-        _dimension = 0\n-\n-    return _dimension\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-23T13:49:33+03:00
Author: dobri1408 (dobri1408) <50819975+dobri1408@users.noreply.github.com>
Commit: https://github.com/plone/plone.namedfile/commit/0ed951f25ed8204eb9c080a38c9e0c142646d744

Update svg_utils.py

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 105cd93..875e47e 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -7,22 +7,6 @@\n \n log = getLogger(__name__)\n \n-def dimension_int(dimension):\n-    if isinstance(dimension, str):\n-        try:\n-            _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n-        except ValueError:\n-            _dimension = 0\n-    elif isinstance(dimension, int):\n-        _dimension = dimension\n-    elif isinstance(dimension, float):\n-        _dimension = int(dimension)\n-    else:\n-        _dimension = 0\n-\n-    return _dimension\n-\n-\n def calculate_dimensions_from_viewbox(view_box):\n         parts = [float(x) for x in view_box.split()]\n         print(f"Parsed viewBox parts: {parts}")\n@@ -64,3 +48,19 @@ def process_svg(data):\n         content_type = "image/svg+xml"\n \n     return content_type, w, h\n+\n+\n+def dimension_int(dimension):\n+    if isinstance(dimension, str):\n+        try:\n+            _dimension = int(float(re.sub(r"[^\\d\\.]", "", dimension)))\n+        except ValueError:\n+            _dimension = 0\n+    elif isinstance(dimension, int):\n+        _dimension = dimension\n+    elif isinstance(dimension, float):\n+        _dimension = int(dimension)\n+    else:\n+        _dimension = 0\n+\n+    return _dimension\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-23T13:50:20+03:00
Author: dobri1408 (dobri1408) <50819975+dobri1408@users.noreply.github.com>
Commit: https://github.com/plone/plone.namedfile/commit/8b90cc6d04d9d60cca2dd3ea4013d38fda8d09f1

Update svg_utils.py

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 875e47e..9602c56 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -35,7 +35,6 @@ def process_svg(data):\n \n         if (w == 0 or h == 0) and view_box:\n             w, h = calculate_dimensions_from_viewbox(view_box)\n-        print(w,h)\n         w = w if w > 1 else 1\n         h = h if h > 1 else 1\n     except et.ParseError as e:\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-23T13:50:33+03:00
Author: dobri1408 (dobri1408) <50819975+dobri1408@users.noreply.github.com>
Commit: https://github.com/plone/plone.namedfile/commit/f8c49bee5a0df1efb313cab6818d2a81c1e0c513

Update svg_utils.py

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 9602c56..2180f7f 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -9,7 +9,6 @@\n \n def calculate_dimensions_from_viewbox(view_box):\n         parts = [float(x) for x in view_box.split()]\n-        print(f"Parsed viewBox parts: {parts}")\n         if len(parts) == 4:\n             width = int(parts[2] - parts[0])\n             height = int(parts[3] - parts[1])\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-23T13:52:54+03:00
Author: dobri1408 (dobri1408) <50819975+dobri1408@users.noreply.github.com>
Commit: https://github.com/plone/plone.namedfile/commit/9e056c51405c78496cc11e05383c9f61b1fff254

Create 161.bugfix

Files changed:
A news/161.bugfix

b'diff --git a/news/161.bugfix b/news/161.bugfix\nnew file mode 100644\nindex 0000000..90ad8ca\n--- /dev/null\n+++ b/news/161.bugfix\n@@ -0,0 +1 @@\n+Fix: Upload a svg without width and height set  @dobri1408\n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-23T14:06:53+03:00
Author: dobri1408 (dobri1408) <50819975+dobri1408@users.noreply.github.com>
Commit: https://github.com/plone/plone.namedfile/commit/e94e42f3c687c37df1d898cd38b2633422489205

Update svg_utils.py

Files changed:
M plone/namedfile/utils/svg_utils.py

b'diff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 2180f7f..33e3617 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -10,9 +10,7 @@\n def calculate_dimensions_from_viewbox(view_box):\n         parts = [float(x) for x in view_box.split()]\n         if len(parts) == 4:\n-            width = int(parts[2] - parts[0])\n-            height = int(parts[3] - parts[1])\n-            return width, height\n+            return int(parts[2]), int(parts[3])\n         return 1, 1\n \n \n'

Repository: plone.namedfile


Branch: refs/heads/master
Date: 2024-07-26T23:57:58+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/plone.namedfile/commit/2db172febe7a51fbeeb74b198caeb8b8bd01d2d8

Merge pull request #161 from plone/scale-svg

Fix: Upload a svg without width and height set

Files changed:
A news/161.bugfix
M plone/namedfile/utils/svg_utils.py

b'diff --git a/news/161.bugfix b/news/161.bugfix\nnew file mode 100644\nindex 00000000..90ad8cac\n--- /dev/null\n+++ b/news/161.bugfix\n@@ -0,0 +1 @@\n+Fix: Upload a svg without width and height set  @dobri1408\ndiff --git a/plone/namedfile/utils/svg_utils.py b/plone/namedfile/utils/svg_utils.py\nindex 59c8dd50..33e36176 100644\n--- a/plone/namedfile/utils/svg_utils.py\n+++ b/plone/namedfile/utils/svg_utils.py\n@@ -7,6 +7,12 @@\n \n log = getLogger(__name__)\n \n+def calculate_dimensions_from_viewbox(view_box):\n+        parts = [float(x) for x in view_box.split()]\n+        if len(parts) == 4:\n+            return int(parts[2]), int(parts[3])\n+        return 1, 1\n+\n \n def process_svg(data):\n     content_type = None\n@@ -15,12 +21,17 @@ def process_svg(data):\n     size = len(data)\n \n     tag = None\n+    view_box = None\n     try:\n         for event, el in et.iterparse(BytesIO(data), ("start",)):\n             tag = el.tag\n             w = dimension_int(el.attrib.get("width"))\n             h = dimension_int(el.attrib.get("height"))\n+            view_box = el.attrib.get("viewBox")\n             break\n+\n+        if (w == 0 or h == 0) and view_box:\n+            w, h = calculate_dimensions_from_viewbox(view_box)\n         w = w if w > 1 else 1\n         h = h if h > 1 else 1\n     except et.ParseError as e:\n'

