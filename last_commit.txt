Repository: plone.schemaeditor


Branch: refs/heads/2.x
Date: 2020-05-27T20:55:18+03:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/1b1648717ce3390e996abe773a8daf197b86c033

Fixes #76 - Can't get Fields vocabulary via RestAPI

Files changed:
M plone/schemaeditor/browser/schema/listing.py
M plone/schemaeditor/fields.py

b'diff --git a/plone/schemaeditor/browser/schema/listing.py b/plone/schemaeditor/browser/schema/listing.py\nindex 55e2cc1..6a6152e 100644\n--- a/plone/schemaeditor/browser/schema/listing.py\n+++ b/plone/schemaeditor/browser/schema/listing.py\n@@ -64,8 +64,9 @@ def _field_factory(self, field):\n             field.__module__,\n             field.__class__.__name__,\n         )\n-        if self.context.allowedFields is not None:\n-            if field_identifier not in self.context.allowedFields:\n+        allowedFields = getattr(self.context, "allowedFields", None)\n+        if allowedFields is not None:\n+            if field_identifier not in allowedFields:\n                 return None\n         return queryUtility(IFieldFactory, name=field_identifier)\n \ndiff --git a/plone/schemaeditor/fields.py b/plone/schemaeditor/fields.py\nindex 7fcb460..4cb2f3a 100644\n--- a/plone/schemaeditor/fields.py\n+++ b/plone/schemaeditor/fields.py\n@@ -59,9 +59,10 @@ def protected(self, field):\n def FieldsVocabularyFactory(context):\n     request = getRequest()\n     field_factories = getUtilitiesFor(IFieldFactory)\n-    if context.allowedFields is not None:\n+    allowedFields = getattr(context, "allowedFields", None)\n+    if allowedFields is not None:\n         field_factories = [(id, factory) for id, factory in field_factories\n-                           if id in context.allowedFields]\n+                           if id in allowedFields]\n     terms = []\n     for (field_id, factory) in field_factories:\n         terms.append(\n'

Repository: plone.schemaeditor


Branch: refs/heads/2.x
Date: 2020-05-27T20:55:32+03:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/e568b8ad10fbb738234bd6c12fc7472b025b9762

Add CHANGELOG

Files changed:
A news/76.bugfix

b'diff --git a/news/76.bugfix b/news/76.bugfix\nnew file mode 100644\nindex 0000000..7ef755d\n--- /dev/null\n+++ b/news/76.bugfix\n@@ -0,0 +1 @@\n+Fix `Fields` vocabulary via RestAPI [avoinea]\n'

Repository: plone.schemaeditor


Branch: refs/heads/2.x
Date: 2020-06-19T16:08:12+03:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.schemaeditor/commit/f5f569f9844c2cb160c2272cf775540ee3e5f9fc

Merge pull request #78 from plone/restapi-fields-vocabulary-2.x

Restapi fields vocabulary 2.x

Files changed:
A news/76.bugfix
M plone/schemaeditor/browser/schema/listing.py
M plone/schemaeditor/fields.py

b'diff --git a/news/76.bugfix b/news/76.bugfix\nnew file mode 100644\nindex 0000000..7ef755d\n--- /dev/null\n+++ b/news/76.bugfix\n@@ -0,0 +1 @@\n+Fix `Fields` vocabulary via RestAPI [avoinea]\ndiff --git a/plone/schemaeditor/browser/schema/listing.py b/plone/schemaeditor/browser/schema/listing.py\nindex 55e2cc1..6a6152e 100644\n--- a/plone/schemaeditor/browser/schema/listing.py\n+++ b/plone/schemaeditor/browser/schema/listing.py\n@@ -64,8 +64,9 @@ def _field_factory(self, field):\n             field.__module__,\n             field.__class__.__name__,\n         )\n-        if self.context.allowedFields is not None:\n-            if field_identifier not in self.context.allowedFields:\n+        allowedFields = getattr(self.context, "allowedFields", None)\n+        if allowedFields is not None:\n+            if field_identifier not in allowedFields:\n                 return None\n         return queryUtility(IFieldFactory, name=field_identifier)\n \ndiff --git a/plone/schemaeditor/fields.py b/plone/schemaeditor/fields.py\nindex 7fcb460..4cb2f3a 100644\n--- a/plone/schemaeditor/fields.py\n+++ b/plone/schemaeditor/fields.py\n@@ -59,9 +59,10 @@ def protected(self, field):\n def FieldsVocabularyFactory(context):\n     request = getRequest()\n     field_factories = getUtilitiesFor(IFieldFactory)\n-    if context.allowedFields is not None:\n+    allowedFields = getattr(context, "allowedFields", None)\n+    if allowedFields is not None:\n         field_factories = [(id, factory) for id, factory in field_factories\n-                           if id in context.allowedFields]\n+                           if id in allowedFields]\n     terms = []\n     for (field_id, factory) in field_factories:\n         terms.append(\n'

