Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-05-31T10:03:59+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/d0d560dcd380ce923c780c1727a01a3ae5c9f1a5

Improve help text for member fields option where fields are shown.

For Managers the restriction to not show a field on the user profile does not apply.
Fixes https://github.com/plone/Products.CMFPlone/issues/3794

Files changed:
A news/3794.bugfix
M plone/app/users/field_extender.py

b'diff --git a/news/3794.bugfix b/news/3794.bugfix\nnew file mode 100644\nindex 00000000..bd6e5c28\n--- /dev/null\n+++ b/news/3794.bugfix\n@@ -0,0 +1,3 @@\n+Improve help text for member fields option where fields are shown.\n+For Managers the restriction to not show a field on the user profile does not apply.\n+[maurits]\ndiff --git a/plone/app/users/field_extender.py b/plone/app/users/field_extender.py\nindex 4bab68c2..c15e93c9 100644\n--- a/plone/app/users/field_extender.py\n+++ b/plone/app/users/field_extender.py\n@@ -1,6 +1,7 @@\n from plone.app.users.browser.schemaeditor import USERS_NAMESPACE\n from plone.app.users.browser.schemaeditor import USERS_PREFIX\n from plone.autoform import directives as form\n+from plone.base import PloneMessageFactory as _\n from plone.supermodel.interfaces import IFieldMetadataHandler\n from plone.supermodel.utils import ns\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n@@ -16,8 +17,8 @@\n \n form_vocab = SimpleVocabulary(\n     [\n-        SimpleTerm(value="On Registration", title="On Registration"),\n-        SimpleTerm(value="In User Profile", title="In User Profile"),\n+        SimpleTerm(value="On Registration", title=_("On Registration")),\n+        SimpleTerm(value="In User Profile", title=_("In User Profile")),\n     ]\n )\n \n@@ -25,8 +26,11 @@\n class IUserFormSelection(Interface):\n     form.widget(forms=CheckBoxFieldWidget)\n     forms = zope.schema.List(\n-        title="Where should this field be shown",\n-        description="Does not apply to username or to email fields",\n+        title=_("Where should this field be shown?"),\n+        description=_(\n+            "Does not apply to username or to email fields. "\n+            "With the Manager role you always see all fields in the user profile."\n+        ),\n         required=True,\n         value_type=zope.schema.Choice(vocabulary=form_vocab),\n     )\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-05-31T10:04:28+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/e28521bb4f69d8be818feb16727e53ec1a36e55d

Configuring with plone/meta

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/53dc5b4c.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b8..bb09dd7 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -37,3 +38,12 @@ indent_size = 2\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 0000000..c156803\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,14 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 0000000..4748f0f\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex a7646ed..f89f86b 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,10 +1,49 @@\n-*.py[co]\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-bin\n-include\n-lib\n-develop-eggs\n-parts\n-*.pydevproject\n-*.project\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 4eda434..561f26d 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "434550cc"\n+commit-id = "53dc5b4c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5c..46b7aec 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -32,6 +33,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +49,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/53dc5b4c.internal b/news/53dc5b4c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/53dc5b4c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex d094650..46d3d7a 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -42,25 +43,91 @@ profile = "plone"\n [tool.black]\n target-version = ["py38"]\n \n+[tool.codespell]\n+ignore-words-list = "discreet,"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.CMFPlone\']\n \n-[tool.codespell]\n-ignore-words-list = "complet,exemple"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 999746d..f299da8 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,25 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n \n-[testenv]\n-allowlist_externals =\n-    sh\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,17 +41,28 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the package\'s dependencies\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -54,7 +74,8 @@ extras =\n     test\n \n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -62,7 +83,49 @@ deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s plone.app.users {posargs}\n+    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n     coverage report -m --format markdown\n extras =\n     test\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+usedevelop = true\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-05-31T10:06:39+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/80540f8feb5660bc6c5f29d1c6019294d1b8cf09

chore: removed no longer needed setup.cfg.

Files changed:
D setup.cfg

b'diff --git a/setup.cfg b/setup.cfg\ndeleted file mode 100644\nindex 0da8f8f..0000000\n--- a/setup.cfg\n+++ /dev/null\n@@ -1,23 +0,0 @@\n-# Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-05-31T10:18:04+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/e9d8592b6183cd680e3376675fb43f4ea83c9250

chore: fix codespell config.

Files changed:
M .meta.toml
M pyproject.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex 561f26d..e5cf873 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -4,3 +4,6 @@\n [meta]\n template = "default"\n commit-id = "53dc5b4c"\n+\n+[pyproject]\n+codespell_ignores = "complet,exemple"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 46d3d7a..7727894 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -44,7 +44,7 @@ profile = "plone"\n target-version = ["py38"]\n \n [tool.codespell]\n-ignore-words-list = "discreet,"\n+ignore-words-list = "discreet,complet,exemple"\n skip = "*.po,"\n ##\n # Add extra configuration options in .meta.toml:\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-05-31T10:18:14+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/00ea1af8703916c9e95c7d876460f1822d61a367

Configuring with plone/meta

Temporarily ignore the Products.CMFPlone dependency.
See https://github.com/plone/plone.app.users/issues/119

Files changed:
M .meta.toml
M pyproject.toml

b'diff --git a/.meta.toml b/.meta.toml\nindex e5cf873..89d2a98 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,3 +7,4 @@ commit-id = "53dc5b4c"\n \n [pyproject]\n codespell_ignores = "complet,exemple"\n+dependencies_ignores = "[\'Products.CMFPlone\']"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 7727894..2530107 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -92,6 +92,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'Products.CMFPlone\']\n \n ##\n # Add extra configuration options in .meta.toml:\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-05-31T10:29:32+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/11e4cac84b69c323ab34ee9436d1be28de3788d2

Comment out circular workflow.

It always fails currently, because of a dependency cycle in three different packages.

Files changed:
M .github/workflows/meta.yml

b'diff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f..1f66838 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -24,5 +24,5 @@ jobs:\n     uses: plone/meta/.github/workflows/dependencies.yml@master\n   release-ready:\n     uses: plone/meta/.github/workflows/release_ready.yml@master\n-  circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+# circular:\n+#   uses: plone/meta/.github/workflows/circular.yml@master\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-06-01T10:22:38+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/2cd926ef2a35c6dfdf20057c1ddffc1f9b709ec7

Revert "Comment out circular workflow."

Should have been fixed now.
This reverts commit 11e4cac84b69c323ab34ee9436d1be28de3788d2.

Files changed:
M .github/workflows/meta.yml

b'diff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 1f66838..4748f0f 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -24,5 +24,5 @@ jobs:\n     uses: plone/meta/.github/workflows/dependencies.yml@master\n   release-ready:\n     uses: plone/meta/.github/workflows/release_ready.yml@master\n-# circular:\n-#   uses: plone/meta/.github/workflows/circular.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-06-01T10:23:45+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/9957122e6e1ddae83cc3146cab8198129b012e86

Configuring with plone/meta. Should fix the coverage job.

Files changed:
A news/e08b1234.internal
M .meta.toml
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex 89d2a98..fd72470 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,7 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "53dc5b4c"\n+commit-id = "e08b1234"\n \n [pyproject]\n codespell_ignores = "complet,exemple"\ndiff --git a/news/e08b1234.internal b/news/e08b1234.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/e08b1234.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/tox.ini b/tox.ini\nindex f299da8..c8ffeba 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -21,6 +21,17 @@ envlist =\n #  """\n ##\n \n+[testenv]\n+skip_install = true\n+allowlist_externals =\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -51,7 +62,8 @@ commands =\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph out of the package\'s dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -63,6 +75,7 @@ commands =\n [testenv:test]\n description = run the distribution tests\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -76,6 +89,7 @@ extras =\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -83,7 +97,7 @@ deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n+    coverage run --source plone.app.users {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n     coverage report -m --format markdown\n extras =\n     test\n@@ -106,7 +120,8 @@ commands =\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-usedevelop = true\n+use_develop = true\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n'

Repository: plone.app.users


Branch: refs/heads/master
Date: 2023-06-01T10:31:23+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.users/commit/42dbacea810a4894eb2803e223b652f319ebd194

Merge pull request #120 from plone/config-with-default-template-4a127f9f

Improve help text for member fields option where fields are shown.

Files changed:
A .flake8
A .github/workflows/meta.yml
A news/3794.bugfix
A news/53dc5b4c.internal
A news/e08b1234.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M plone/app/users/field_extender.py
M pyproject.toml
M tox.ini
D setup.cfg

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..bb09dd73 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -37,3 +38,12 @@ indent_size = 2\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/.flake8\nsimilarity index 72%\nrename from setup.cfg\nrename to .flake8\nindex 0da8f8fb..c1568033 100644\n--- a/setup.cfg\n+++ b/.flake8\n@@ -1,8 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n-[bdist_wheel]\n-universal = 0\n-\n+# See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\n ignore =\n@@ -14,10 +12,3 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..4748f0f4\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,28 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@master\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@master\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@master\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@master\n+  release-ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@master\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@master\ndiff --git a/.gitignore b/.gitignore\nindex a7646ed4..f89f86be 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,10 +1,49 @@\n-*.py[co]\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-bin\n-include\n-lib\n-develop-eggs\n-parts\n-*.pydevproject\n-*.project\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 4eda434e..fd724703 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,10 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "434550cc"\n+commit-id = "e08b1234"\n+\n+[pyproject]\n+codespell_ignores = "complet,exemple"\n+dependencies_ignores = "[\'Products.CMFPlone\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5cd..46b7aece 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,6 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n@@ -32,6 +33,14 @@ repos:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +49,20 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.21.2"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.0.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/news/3794.bugfix b/news/3794.bugfix\nnew file mode 100644\nindex 00000000..bd6e5c28\n--- /dev/null\n+++ b/news/3794.bugfix\n@@ -0,0 +1,3 @@\n+Improve help text for member fields option where fields are shown.\n+For Managers the restriction to not show a field on the user profile does not apply.\n+[maurits]\ndiff --git a/news/53dc5b4c.internal b/news/53dc5b4c.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/53dc5b4c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/news/e08b1234.internal b/news/e08b1234.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/e08b1234.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/plone/app/users/field_extender.py b/plone/app/users/field_extender.py\nindex 4bab68c2..c15e93c9 100644\n--- a/plone/app/users/field_extender.py\n+++ b/plone/app/users/field_extender.py\n@@ -1,6 +1,7 @@\n from plone.app.users.browser.schemaeditor import USERS_NAMESPACE\n from plone.app.users.browser.schemaeditor import USERS_PREFIX\n from plone.autoform import directives as form\n+from plone.base import PloneMessageFactory as _\n from plone.supermodel.interfaces import IFieldMetadataHandler\n from plone.supermodel.utils import ns\n from z3c.form.browser.checkbox import CheckBoxFieldWidget\n@@ -16,8 +17,8 @@\n \n form_vocab = SimpleVocabulary(\n     [\n-        SimpleTerm(value="On Registration", title="On Registration"),\n-        SimpleTerm(value="In User Profile", title="In User Profile"),\n+        SimpleTerm(value="On Registration", title=_("On Registration")),\n+        SimpleTerm(value="In User Profile", title=_("In User Profile")),\n     ]\n )\n \n@@ -25,8 +26,11 @@\n class IUserFormSelection(Interface):\n     form.widget(forms=CheckBoxFieldWidget)\n     forms = zope.schema.List(\n-        title="Where should this field be shown",\n-        description="Does not apply to username or to email fields",\n+        title=_("Where should this field be shown?"),\n+        description=_(\n+            "Does not apply to username or to email fields. "\n+            "With the Manager role you always see all fields in the user profile."\n+        ),\n         required=True,\n         value_type=zope.schema.Choice(vocabulary=form_vocab),\n     )\ndiff --git a/pyproject.toml b/pyproject.toml\nindex d0946500..25301075 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,9 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -42,25 +43,92 @@ profile = "plone"\n [tool.black]\n target-version = ["py38"]\n \n+[tool.codespell]\n+ignore-words-list = "discreet,complet,exemple"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n ignore-packages = [\'Products.CMFPlone\']\n \n-[tool.codespell]\n-ignore-words-list = "complet,exemple"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+#  """\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "tox.ini",\n+    ".flake8",\n+    "mx.ini",\n+\n+]\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/tox.ini b/tox.ini\nindex 999746d2..c8ffeba4 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,36 @@\n # Generated from:\n # https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,17 +52,30 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n deps =\n+    build\n     z3c.dependencychecker==2.11\n+commands =\n+    python -m build --sdist --no-isolation\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -54,7 +87,9 @@ extras =\n     test\n \n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n set_env = ROBOT_BROWSER=headlesschrome\n deps =\n@@ -62,7 +97,50 @@ deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir} -s plone.app.users {posargs}\n+    coverage run --source plone.app.users {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.users {posargs}\n     coverage report -m --format markdown\n extras =\n     test\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist --no-isolation\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#      my_other_environment\n+#  """\n+##\n'

