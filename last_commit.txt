Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/a3f9160a93a60f3ae817dbc138018ef6bdffd3a9

Turn this into a core addon, sync with CMFPlone, make installable and remove old files

Files changed:
M plone/app/discussion/configure.zcml
M plone/app/discussion/profiles/default/types/Discussion_Item.xml
M setup.py
D plone/app/discussion/TODO.txt
D plone/app/discussion/profiles/default/portal_atct.xml

b'diff --git a/plone/app/discussion/TODO.txt b/plone/app/discussion/TODO.txt\ndeleted file mode 100644\nindex 30a1031e..00000000\n--- a/plone/app/discussion/TODO.txt\n+++ /dev/null\n@@ -1,100 +0,0 @@\n-==========================\n-plone.app.discussion to-do\n-==========================\n-\n- [ ] Add BBB support for the existing portal_discussion interface\n-\n-    - implement in BBB package\n-    - mix into tool.CommentingTool\n-    - emit deprecation warnings\n-\n-MINOR/FUTURE RELEASES:\n-----------------------\n-\n- [ ] During recursive deletion of child comments, events are fired when the\n-     conversation data structures may be in an inconsistent state. We need\n-     some tests for this, and possibly some different handling of those\n-     events.\n-\n- [ ] Ajaxify adding and deleting comments in the comments viewlet.\n-\n- [ ] Rebuild the zebra table after batch deleting/publishing\n-\n- [ ] Replace the comment_review_workflow\n-\n- [ ] Thread building in conversation.getThreads()\n-\n- [ ] Batching in conversation.getComments()\n-\n-\n-DONE:\n------\n-\n- [X] Make sure a catalog Clear & Rebuild doesn\'t lose all comments\n-\n- [X] Add UI\n-\n-    - comment forms should use z3c.form subforms and plone.z3cform\'s\n-        ExtensibleForm support\n-\n- [X] Implement plone.indexer indexers for comments, filling standard metadata\n-\n-    - Note discrepancy between Python datetime and indexing expecting a Zope 2\n-        DateTime field\n-\n- [X] Implement plone.indexer indexers for commented-upon content\n-\n-    - Unique set of commentators\n-    - Number of comments\n-    - Date/time of most recent comment\n-\n-    These have to be reindexed when comment is added/removed\n-    (IContainerModifiedEvent). They also need to be set up in catalog.xml.\n-\n- [X] Add jQuery auto-resize to comment text field\n-     http://www.aclevercookie.com/demos/autogrow_textarea.html\n-\n- [X] Add event handlers to ensure we don\'t get stale comments in the catalog\n-     when parent objects are removed/moved/cloned:\n-\n-    - Create the conversation when an object is created\n-    - Dispatch object added/removed/moved/cloned events to conversations\n-    - Dispatch conversation added/removed/moved/cloned events to comments\n-\n- [X] Add tests for conversation dict API\n-\n- [X] Add tests for IReplies adapters\n-\n- [X] Add control panel\n-\n-    - install plone.registry records using registry.xml\n-    - create control panel using helper class in plone.app.registry\n-\n- [X] Discussion Control Panel: Add icon\n-\n- [X] Add id fall back for Creator if no Username (Title) has been added\n-\n- [X] Replace the reply-to-comment button with a Plone-like reply-button\n-\n- [X] IE: cancel button in reply-to-comment form does not work\n-\n- [X] Chrome (Linux): Reply to comment is not working\n-     (TypeError: long() argument must be a string or a number)\n-\n- [X] Restrict nesting of comments on a certain level\n-\n- [X] Fix temporary commenter\'s image css\n-\n- [X] Make comments viewlet format_time return localized time\n-\n- [X] Add i18n translations\n-\n- [X] Add i18n translations for author_username and author_email\n-\n- [X] Plone reports "unsuccessfully attempted to uncatalog an object" while\n-     trying to delete a comment.\n-\n- [X] Fix that when opening a reply form before the page has been fully loaded,\n-     the reply layer is closed again.\n-\n- [X] Form validation is not working in the reply-to-comment form\n\\ No newline at end of file\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex e2b82f2d..63ae743c 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -40,7 +40,7 @@\n   <!-- Register the installation GenericSetup extension profile -->\n   <genericsetup:registerProfile\n       name="default"\n-      title="Plone Discussions"\n+      title="Discussion Support"\n       description="Commenting infrastructure for Plone"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.IPloneSiteRoot"\ndiff --git a/plone/app/discussion/profiles/default/portal_atct.xml b/plone/app/discussion/profiles/default/portal_atct.xml\ndeleted file mode 100644\nindex 0c7068c6..00000000\n--- a/plone/app/discussion/profiles/default/portal_atct.xml\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-<?xml version="1.0" encoding="utf-8"?>\n-<atcttool xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-  <topic_indexes i18n:domain="plone">\n-\n-    <index description="Users who have commented on the item"\n-           enabled="True"\n-           friendlyName="Commentators"\n-           name="commentators"\n-           i18n:attributes="description; friendlyName"\n-    >\n-\n-      <criteria>ATCurrentAuthorCriterion</criteria>\n-      <criteria>ATSimpleStringCriterion</criteria>\n-      <criteria>ATListCriterion</criteria>\n-\n-    </index>\n-\n-    <index description="Total number of comments on this item."\n-           enabled="False"\n-           friendlyName="Total number of comments"\n-           name="total_comments"\n-           i18n:attributes="description; friendlyName"\n-    >\n-\n-      <criteria>ATSimpleIntCriterion</criteria>\n-\n-    </index>\n-\n-  </topic_indexes>\n-  <topic_metadata i18n:domain="plone">\n-\n-    <metadata description="Total number of comments on this item."\n-              enabled="True"\n-              friendlyName="Total number of comments"\n-              name="total_comments"\n-    />\n-\n-  </topic_metadata>\n-</atcttool>\ndiff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex c05efcb9..31be160f 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -9,8 +9,9 @@\n   >Comment</property>\n   <property name="description"\n             i18n:translate=""\n-  >Comments added to a content item.</property>\n-  <property name="content_icon">discussionitem_icon.png</property>\n+  >Discussion Items are documents which reply to other content.\n+  They should *not* be addable through the standard \'folder_factories\' interface.</property>\n+  <property name="content_icon">string:${portal_url}/discussionitem_icon.png</property>\n   <property name="content_meta_type">Discussion Item</property>\n   <property name="product" />\n   <property name="factory">plone.Comment</property>\n@@ -18,20 +19,31 @@\n   <property name="global_allow">False</property>\n   <property name="filter_content_types">True</property>\n   <property name="allowed_content_types" />\n-  <property name="allow_discussion">True</property>\n+  <property name="allow_discussion">False</property>\n   <alias from="(Default)"\n-         to="@@view"\n+         to="discussionitem_view"\n   />\n   <alias from="view"\n-         to="@@view"\n+         to="discussionitem_view"\n   />\n   <action action_id="view"\n           category="object"\n           condition_expr=""\n           title="View"\n-          url_expr="string:${object_url}/@@view"\n+          url_expr="string:${object_url}/discussionitem_view"\n           visible="True"\n+          i18n:attributes="title"\n   >\n     <permission value="View" />\n   </action>\n+  <action action_id="external_edit"\n+          category="object"\n+          condition_expr=""\n+          title="External Edit"\n+          url_expr="string:$object_url/external_edit"\n+          visible="False"\n+          i18n:attributes="title"\n+  >\n+    <permission value="Modify portal content" />\n+  </action>\n </object>\ndiff --git a/setup.py b/setup.py\nindex 3b94f76a..661a9df1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -3,33 +3,12 @@\n from setuptools import setup\n \n \n-version = "4.1.3.dev0"\n+version = "5.0.0.dev0"\n \n long_description = (\n     f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n )\n \n-install_requires = [\n-    "BTrees",\n-    "Products.GenericSetup",\n-    "Products.ZCatalog",\n-    "Products.statusmessages",\n-    "persistent",\n-    "plone.api",\n-    "plone.app.event",\n-    "plone.registry",\n-    "plone.resource",\n-    "plone.uuid",\n-    "zope.annotation",\n-    "setuptools",\n-    "plone.app.layout",\n-    "plone.app.registry",\n-    "plone.app.uuid",\n-    "plone.base",\n-    "plone.indexer",\n-    "plone.z3cform",\n-    "z3c.form>=2.3.3",\n-]\n \n setup(\n     name="plone.app.discussion",\n@@ -43,16 +22,15 @@\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 6.0",\n+        "Framework :: Plone :: 6.1",\n         "Framework :: Plone :: Core",\n         "Framework :: Zope :: 5",\n         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 3.8",\n-        "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\n         "Programming Language :: Python :: 3.11",\n+        "Programming Language :: Python :: 3.12",\n     ],\n     keywords="plone discussion",\n     author="Timo Stollenwerk - Plone Foundation",\n@@ -63,8 +41,30 @@\n     namespace_packages=["plone", "plone.app"],\n     include_package_data=True,\n     zip_safe=False,\n-    python_requires=">=3.8",\n-    install_requires=install_requires,\n+    python_requires=">=3.10",\n+    install_requires=[\n+        "Products.CMFPlone",\n+        "BTrees",\n+        "Products.GenericSetup",\n+        "Products.ZCatalog",\n+        "Products.statusmessages",\n+        "persistent",\n+        "plone.api",\n+        "plone.app.event",\n+        "plone.dexterity",\n+        "plone.registry",\n+        "plone.resource",\n+        "plone.uuid",\n+        "zope.annotation",\n+        "setuptools",\n+        "plone.app.layout",\n+        "plone.app.registry",\n+        "plone.app.uuid",\n+        "plone.base",\n+        "plone.indexer",\n+        "plone.z3cform",\n+        "z3c.form>=2.3.3",\n+    ],\n     extras_require={\n         "test": [\n             "plone.app.testing",\n@@ -82,4 +82,8 @@\n             "python-dateutil",\n         ],\n     },\n+    entry_points="""\n+    [z3c.autoinclude.plugin]\n+    target = plone\n+    """,\n )\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/82328bea918d338ead86937bd47a977128628627

move behavior here

Files changed:
A plone/app/discussion/behavior.py
A plone/app/discussion/behavior.zcml
A plone/app/discussion/tests/functional_test_behavior_discussion.rst
M plone/app/discussion/configure.zcml
M plone/app/discussion/tests/test_functional.py

b'diff --git a/plone/app/discussion/behavior.py b/plone/app/discussion/behavior.py\nnew file mode 100644\nindex 00000000..bdc2d8d8\n--- /dev/null\n+++ b/plone/app/discussion/behavior.py\n@@ -0,0 +1,39 @@\n+from plone.app.dexterity import _\n+from plone.autoform import directives\n+from plone.autoform.interfaces import IFormFieldProvider\n+from plone.supermodel import model\n+from z3c.form.interfaces import IAddForm\n+from z3c.form.interfaces import IEditForm\n+from zope import schema\n+from zope.interface import provider\n+from zope.schema.vocabulary import SimpleTerm\n+from zope.schema.vocabulary import SimpleVocabulary\n+\n+\n+options = SimpleVocabulary(\n+    [\n+        SimpleTerm(value=True, title=_("Yes")),\n+        SimpleTerm(value=False, title=_("No")),\n+    ]\n+)\n+\n+\n+@provider(IFormFieldProvider)\n+class IAllowDiscussion(model.Schema):\n+    model.fieldset(\n+        "settings",\n+        label=_("Settings"),\n+        fields=["allow_discussion"],\n+    )\n+\n+    allow_discussion = schema.Choice(\n+        title=_("Allow discussion"),\n+        description=_("Allow discussion for this content object."),\n+        vocabulary=options,\n+        required=False,\n+        default=None,\n+    )\n+\n+    directives.omitted("allow_discussion")\n+    directives.no_omit(IEditForm, "allow_discussion")\n+    directives.no_omit(IAddForm, "allow_discussion")\ndiff --git a/plone/app/discussion/behavior.zcml b/plone/app/discussion/behavior.zcml\nnew file mode 100644\nindex 00000000..b921a5e4\n--- /dev/null\n+++ b/plone/app/discussion/behavior.zcml\n@@ -0,0 +1,21 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone"\n+>\n+\n+  <include\n+      package="plone.behavior"\n+      file="meta.zcml"\n+      />\n+\n+  <!--Allow discussion -->\n+  <plone:behavior\n+      name="plone.allowdiscussion"\n+      title="Allow discussion"\n+      description="Allow discussion on this item"\n+      provides=".behavior.IAllowDiscussion"\n+      />\n+\n+</configure>\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex 63ae743c..1553f07a 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -15,6 +15,7 @@\n   <include package="plone.uuid" />\n   <include package="plone.app.uuid" />\n \n+  <include file="behavior.zcml" />\n   <include file="contentrules.zcml" />\n   <include file="permissions.zcml" />\n   <include file="notifications.zcml" />\ndiff --git a/plone/app/discussion/tests/functional_test_behavior_discussion.rst b/plone/app/discussion/tests/functional_test_behavior_discussion.rst\nnew file mode 100644\nindex 00000000..6b247cfa\n--- /dev/null\n+++ b/plone/app/discussion/tests/functional_test_behavior_discussion.rst\n@@ -0,0 +1,106 @@\n+Allow Discussion\n+================\n+\n+Test Setup\n+----------\n+\n+We create a dexterity content type that provides the allow discussion behavior::\n+\n+    >>> portal = layer[\'portal\']\n+    >>> from plone.dexterity.fti import DexterityFTI\n+    >>> fti = DexterityFTI(\'discussiondocument\')\n+    >>> fti.behaviors = (\'plone.app.dexterity.behaviors.discussion.IAllowDiscussion\',)\n+    >>> portal.portal_types._setObject(\'discussiondocument\', fti)\n+    \'discussiondocument\'\n+\n+Set up a test browser::\n+\n+    >>> from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD, setRoles\n+    >>> setRoles(portal, TEST_USER_ID, [\'Manager\'])\n+    >>> import transaction; transaction.commit()\n+    >>> from plone.testing.zope import Browser\n+    >>> browser = Browser(layer[\'app\'])\n+    >>> browser.addHeader(\'Authorization\', \'Basic %s:%s\' % (TEST_USER_NAME, TEST_USER_PASSWORD,))\n+\n+We have to make sure the request provides IDiscussonLayer because the enabled\n+method on the conversation calls conversation_view (which is only registered\n+for IDiscussionLayer).\n+\n+    >>> from plone.app.discussion.interfaces import IDiscussionLayer\n+    >>> from zope.interface import alsoProvides\n+    >>> alsoProvides(portal.REQUEST, IDiscussionLayer)\n+\n+Add a document::\n+\n+    >>> browser.open(\'http://nohost/plone/++add++discussiondocument\')\n+\n+\n+Default Allow Discussion Options\n+--------------------------------\n+\n+There are three options for the allow discussion select field::\n+\n+    >>> allowDiscussion = browser.getControl(\'Allow discussion\')\n+    >>> allowDiscussion.options\n+    [\'--NOVALUE--\', \'True\', \'False\']\n+\n+By default, no value is set for allow discussion::\n+\n+    >>> browser.getControl(\'Allow discussion\').value\n+    [\'--NOVALUE--\']\n+    >>> browser.getControl(\'Save\').click()\n+    >>> browser.url\n+    \'http://nohost/plone/discussiondocument/view\'\n+\n+This means discussion is not enabled:\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\n+\n+We have to globally enable discussion in order to be able to add comments::\n+\n+    >>> from plone.registry.interfaces import IRegistry\n+    >>> from zope.component import queryUtility\n+    >>> from plone.app.discussion.interfaces import IDiscussionSettings\n+    >>> registry = queryUtility(IRegistry)\n+    >>> settings = registry.forInterface(IDiscussionSettings)\n+    >>> settings.globally_enabled = True\n+\n+Discussion is still disabled for our content object though::\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\n+\n+This is because discussion is disabled by default for the document content\n+type::\n+\n+    >>> fti.allow_discussion\n+    False\n+\n+If we allow discussion for the \'Document\' content type, the conversation\n+for our content object is enabled because it just uses the default setting\n+(because allow_discussion is set to None)::\n+\n+    >>> fti.allow_discussion = True\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    True\n+\n+We can now override the default value (True) by explicitly setting allow discussion to False::\n+\n+    >>> browser.open(\'http://nohost/plone/discussiondocument/edit\')\n+    >>> allowDiscussion = browser.getControl(\'Allow discussion\')\n+    >>> allowDiscussion.value = [\'False\']\n+    >>> browser.getControl(\'Save\').click()\n+\n+Discussion on our content object is now not enabled::\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\ndiff --git a/plone/app/discussion/tests/test_functional.py b/plone/app/discussion/tests/test_functional.py\nindex b4ce3f0e..a9090a0a 100644\n--- a/plone/app/discussion/tests/test_functional.py\n+++ b/plone/app/discussion/tests/test_functional.py\n@@ -17,6 +17,7 @@\n normal_testfiles = [\n     "functional_test_comments.txt",\n     "functional_test_comment_review_workflow.txt",\n+    "functional_test_behavior_discussion.rst",\n ]\n \n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/ae0e9a1cc90b85dc3371c93f452f586a99e1e6a2

tune behavior and install it

Files changed:
A plone/app/discussion/setuphandlers.py
M plone/app/discussion/behavior.zcml
M plone/app/discussion/configure.zcml
M plone/app/discussion/profiles/default/metadata.xml
M plone/app/discussion/upgrades.py
M plone/app/discussion/upgrades.zcml

b'diff --git a/plone/app/discussion/behavior.zcml b/plone/app/discussion/behavior.zcml\nindex b921a5e4..adfab872 100644\n--- a/plone/app/discussion/behavior.zcml\n+++ b/plone/app/discussion/behavior.zcml\n@@ -12,10 +12,12 @@\n \n   <!--Allow discussion -->\n   <plone:behavior\n-      name="plone.allowdiscussion"\n-      title="Allow discussion"\n       description="Allow discussion on this item"\n+      former_dotted_names="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"\n+      name_only="yes"\n+      name="plone.allowdiscussion"\n       provides=".behavior.IAllowDiscussion"\n+      title="Allow discussion"\n       />\n \n </configure>\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex 1553f07a..f02f3ca0 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -43,6 +43,7 @@\n       name="default"\n       title="Discussion Support"\n       description="Commenting infrastructure for Plone"\n+      post_handler=".setuphandlers.post_install"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.IPloneSiteRoot"\n       directory="profiles/default"\ndiff --git a/plone/app/discussion/profiles/default/metadata.xml b/plone/app/discussion/profiles/default/metadata.xml\nindex 38abca6d..4cad4f61 100644\n--- a/plone/app/discussion/profiles/default/metadata.xml\n+++ b/plone/app/discussion/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>2001</version>\n+  <version>2002</version>\n   <dependencies>\n     <dependency>profile-plone.resource:default</dependency>\n     <dependency>profile-plone.app.registry:default</dependency>\ndiff --git a/plone/app/discussion/setuphandlers.py b/plone/app/discussion/setuphandlers.py\nnew file mode 100644\nindex 00000000..ed3e575d\n--- /dev/null\n+++ b/plone/app/discussion/setuphandlers.py\n@@ -0,0 +1,26 @@\n+from Products.CMFCore.utils import getToolByName\n+\n+\n+DEFAULT_TYPES = [\n+    "Document",\n+    "Event",\n+    "File",\n+    "Folder",\n+    "Image",\n+    "News Item",\n+    "Collection",\n+    "Link",\n+]\n+\n+\n+def add_discussion_behavior_to_default_types(context):\n+    """Add the discussion behavior to all default types, if they exist."""\n+    types_tool = getToolByName(context, "portal_types")\n+    for type_name in DEFAULT_TYPES:\n+        if type_name in types_tool.objectIds():\n+            types_tool[type_name].behaviors += ("plone.allowdiscussion",)\n+\n+\n+def post_install(context):\n+    """Post install script"""\n+    add_discussion_behavior_to_default_types(context)\ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex dc78ea76..e5f61dbd 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -1,6 +1,7 @@\n+from .interfaces import IDiscussionSettings\n+from .setuphandlers import add_discussion_behavior_to_default_types\n from datetime import timezone\n from plone import api\n-from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.ZCatalog.ProgressHandler import ZLogHandler\n@@ -115,3 +116,8 @@ def set_timezone_on_dates(context):\n     logger.info(\n         "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n     )\n+\n+def set_discussion_behavior(context):\n+    """Add the discussion behavior to all default types, if they exist.\n+    """\n+    add_discussion_behavior_to_default_types(context)\ndiff --git a/plone/app/discussion/upgrades.zcml b/plone/app/discussion/upgrades.zcml\nindex d265d428..e63f85d6 100644\n--- a/plone/app/discussion/upgrades.zcml\n+++ b/plone/app/discussion/upgrades.zcml\n@@ -108,4 +108,16 @@\n         />\n   </genericsetup:upgradeSteps>\n \n+  <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n+      source="2001"\n+      destination="2002"\n+      >\n+    <genericsetup:upgradeStep\n+        title="Add behavior plone.allowdiscussion to default content types"\n+        description="Ensure default types have discussion behavior set"\n+        handler=".upgrades.add_discussion_behavior_to_default_types"\n+        />\n+  </genericsetup:upgradeSteps>\n+\n </configure>\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/b499f9bca1246ca45a104dad8e0daf9b1215933c

fix behavior name usage

Files changed:
M plone/app/discussion/tests/functional_test_behavior_discussion.rst

b"diff --git a/plone/app/discussion/tests/functional_test_behavior_discussion.rst b/plone/app/discussion/tests/functional_test_behavior_discussion.rst\nindex 6b247cfa..f86925b4 100644\n--- a/plone/app/discussion/tests/functional_test_behavior_discussion.rst\n+++ b/plone/app/discussion/tests/functional_test_behavior_discussion.rst\n@@ -9,7 +9,7 @@ We create a dexterity content type that provides the allow discussion behavior::\n     >>> portal = layer['portal']\n     >>> from plone.dexterity.fti import DexterityFTI\n     >>> fti = DexterityFTI('discussiondocument')\n-    >>> fti.behaviors = ('plone.app.dexterity.behaviors.discussion.IAllowDiscussion',)\n+    >>> fti.behaviors = ('plone.allowdiscussion',)\n     >>> portal.portal_types._setObject('discussiondocument', fti)\n     'discussiondocument'\n \n"

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/6378dce64db0c1b013041ea07ba114ae1b9f2da6

fix one test and finetuning

Files changed:
A plone/app/discussion/tests/functional_test_comments.rst
M plone/app/discussion/architecture.txt
M plone/app/discussion/behavior.py
M plone/app/discussion/design.txt
M plone/app/discussion/tests/test_functional.py
D plone/app/discussion/tests/functional_test_comments.txt

b'diff --git a/plone/app/discussion/architecture.txt b/plone/app/discussion/architecture.txt\nindex f8026e38..5002ef0e 100644\n--- a/plone/app/discussion/architecture.txt\n+++ b/plone/app/discussion/architecture.txt\n@@ -14,15 +14,15 @@ plone.app.discussion.\n     content.\n \n   **Discussion items are subject to workflow and permission**\n-    Moderation, anonymous commenting, and auto approve/reject should be\n+    Moderation, anonymous commenting, and auto-approve/reject should be\n     handled using workflow states, automatic and manual transitions, and\n     permissions.\n \n-  **Discussion items are light weight objects**\n-    Discussion item objects are as light weight as possible. Ideally, a\n+  **Discussion items are lightweight objects**\n+    Discussion item objects are as lightweight as possible. Ideally, a\n     discussion item should be as lightweight as a catalog brain. This may mean\n     that we forego convenience base classes and re-implement certain interfaces.\n-    Comments should not provide the full set of dublin core metadata, though\n+    Comments should not provide the full set of Dublin Core metadata, though\n     custom indexers can be used to provide values for standard catalog indexes.\n \n   **Optimise for retrieval speed**\n@@ -49,7 +49,7 @@ plone.app.discussion.\n   **Discussion items are retrieved in reverse creation date order**\n     Discussion items do not need to support explicit ordering. They should\n     always be retrieved in reverse creation date order (most recent for).\n-    They can be stored with keys so that this is always true.\n+    They can be stored with keys so this is always true.\n \n   **Discussion items do not need readable ids**\n     Ids can be based on the creation date.\ndiff --git a/plone/app/discussion/behavior.py b/plone/app/discussion/behavior.py\nindex bdc2d8d8..9691f694 100644\n--- a/plone/app/discussion/behavior.py\n+++ b/plone/app/discussion/behavior.py\n@@ -1,6 +1,6 @@\n-from plone.app.dexterity import _\n from plone.autoform import directives\n from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base import PloneMessageFactory as _\n from plone.supermodel import model\n from z3c.form.interfaces import IAddForm\n from z3c.form.interfaces import IEditForm\ndiff --git a/plone/app/discussion/design.txt b/plone/app/discussion/design.txt\nindex 11c75bd0..c5af0354 100644\n--- a/plone/app/discussion/design.txt\n+++ b/plone/app/discussion/design.txt\n@@ -8,7 +8,7 @@ Storage and traversal\n ---------------------\n \n For each content item, there is a Conversation object stored in annotations.\n-This can be traversed to via the ++conversation++ namespace, but also fetched\n+This can be traversed via the ++conversation++ namespace, but also fetched\n via an adapter lookup to IConversation.\n \n The conversation stores all comments related to a content object. Each\n@@ -22,7 +22,7 @@ incremental. Ids must be positive integers - 0 or negative numbers are not\n allowed.\n \n Threading information is stored in the conversation: we keep track of the\n-set of children and the parent if any comment. Top-level comments have a\n+set of children and the parent if any comments. Top-level comments have a\n parent id of 0. This information is managed by the conversation class when\n comments are manipulated using a dict-like API.\n \n@@ -82,20 +82,20 @@ Thus, we want:\n \n   * Traversable, to get absolute_url() and friends\n       - this requires a good acquisition chain at all times\n-  * Acquisition.Explicit, to support acquisition\n+  * Acquisition.Explicit, to support the acquisition\n       - we do not want implicit acquisition\n   * Owned, to be able to track ownership\n   * RoleManager, to support permissions and local roles\n \n We also want to use a number of custom indexers for most of the standard\n-metadata such as creator, effective date etc.\n+metadata such as creator, effective date, etc.\n \n Finally, we\'ll need event handlers to perform the actual indexing.\n \n Discussion settings\n -------------------\n \n-Discussion can be enabled per-type and per-instance, via values in the FTI\n+Discussion can be enabled per type and per instance, via values in the FTI\n (allow_discussion) and on the object. These will remain unchanged. The\n IConversation object\'s \'enabled\' property should consult these.\n \n@@ -117,7 +117,7 @@ Where possible, we should use existing permissions:\n   * Modify Portal Content\n   * Request Review\n \n-In addition, we\'ll need a \'Moderator\' role and a moderation permission,\n+In addition, we\'ll need a \'Moderator\' role and moderation permission,\n \n   * Moderate comment\n   * Bypass moderation\n@@ -137,11 +137,11 @@ These could work in a workflow like this:\n            |                          |\n            +----- {auto-moderate} ----+\n \n-The \'posted\' state is the initial state. \'published\' is the state where the\n-comment is visible to non-reviewers.\n+The \'posted\' state is the initial state.\n+\'published\', is the state where the comment is visible to non-reviewers.\n \n The \'publish\' transition would be protected by the \'Moderate comment\'\n-permission. We could have states and transition for \'rejected\', etc, but it\n+permission. We could have states and transitions for \'rejected\', etc, but it\n is probably just as good to delete comments that are rejected.\n \n The \'auto-publish\' transition would be an automatic transition protected by\ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.rst\nsimilarity index 99%\nrename from plone/app/discussion/tests/functional_test_comments.txt\nrename to plone/app/discussion/tests/functional_test_comments.rst\nindex 61ab4a3e..59d08782 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.rst\n@@ -163,8 +163,8 @@ Check if the comment has been added properly.\n     True\n \n \n-Post a comment as anonymous user\n---------------------------------\n+Post a comment as an anonymous user\n+-----------------------------------\n \n Login and post comment as Anonymous\n \ndiff --git a/plone/app/discussion/tests/test_functional.py b/plone/app/discussion/tests/test_functional.py\nindex a9090a0a..5a3813d7 100644\n--- a/plone/app/discussion/tests/test_functional.py\n+++ b/plone/app/discussion/tests/test_functional.py\n@@ -1,9 +1,7 @@\n """Functional Doctests for plone.app.discussion.\n-\n-   These test are only triggered when Plone 4 (and plone.testing) is installed.\n """\n \n-from ..testing import PLONE_APP_DISCUSSION_FUNCTIONAL_TESTING  # noqa\n+from ..testing import PLONE_APP_DISCUSSION_FUNCTIONAL_TESTING\n from plone.testing import layered\n \n import doctest\n@@ -15,7 +13,7 @@\n     doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE | doctest.REPORT_ONLY_FIRST_FAILURE\n )\n normal_testfiles = [\n-    "functional_test_comments.txt",\n+    "functional_test_comments.rst",\n     "functional_test_comment_review_workflow.txt",\n     "functional_test_behavior_discussion.rst",\n ]\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/798e2dc833cdebe96153df3453fef7faee0d1a99

fix after merge of master

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 661a9df1..908d235e 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -3,16 +3,13 @@\n from setuptools import setup\n \n \n-version = "5.0.0.dev0"\n-\n long_description = (\n     f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n )\n \n-\n setup(\n     name="plone.app.discussion",\n-    version=version,\n+    version="5.0.0.dev0",\n     description="Enhanced discussion support for Plone",\n     long_description=long_description,\n     long_description_content_type="text/x-rst",\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/018689d62adaadb52466f8081706567ab31de213

add change log

Files changed:
A news/211.breaking

b'diff --git a/news/211.breaking b/news/211.breaking\nnew file mode 100644\nindex 00000000..f4cad3c5\n--- /dev/null\n+++ b/news/211.breaking\n@@ -0,0 +1,4 @@\n+Move this package in the space of Plone Core add-ons.\n+It now depends on Products.CMFPlone and is no longer installed by default.\n+It is still available in the default Plone distribution, but can be omitted in customizations.\n+[jensens]\n\\ No newline at end of file\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/1e74750f675407463e16a7bc51b383264f1bc8dc

move check for 'Reply to item' permission from Products.CMFPlone here.

Files changed:
A plone/app/discussion/tests/test_permissions.py

b'diff --git a/plone/app/discussion/tests/test_permissions.py b/plone/app/discussion/tests/test_permissions.py\nnew file mode 100644\nindex 00000000..ce14146b\n--- /dev/null\n+++ b/plone/app/discussion/tests/test_permissions.py\n@@ -0,0 +1,19 @@\n+from ..testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n+from AccessControl.PermissionRole import rolesForPermissionOn\n+\n+import unittest\n+\n+\n+class PermissionsTest(unittest.TestCase):\n+    """Make sure the permissions are set up properly."""\n+\n+    layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n+\n+    def test_permissions_site_administrator_role(self):\n+        # This integration test shows that the correct permissions were\n+        # assigned to the Site Administrator role (whether inherited from the\n+        # Zope application, or specified in the portal rolemap).\n+        self.assertTrue(\n+            "Site Administrator"\n+            not in rolesForPermissionOn("Reply to item", self.layer["portal"])\n+        )\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/8b09087026d95a34e5c7916acdc2a6d2e730a6bc

pre-commit fixes

Files changed:
M plone/app/discussion/behavior.zcml
M plone/app/discussion/configure.zcml
M plone/app/discussion/upgrades.py

b'diff --git a/plone/app/discussion/behavior.zcml b/plone/app/discussion/behavior.zcml\nindex adfab872..6a3a26fc 100644\n--- a/plone/app/discussion/behavior.zcml\n+++ b/plone/app/discussion/behavior.zcml\n@@ -3,7 +3,7 @@\n     xmlns:plone="http://namespaces.plone.org/plone"\n     xmlns:zcml="http://namespaces.zope.org/zcml"\n     i18n_domain="plone"\n->\n+    >\n \n   <include\n       package="plone.behavior"\n@@ -12,12 +12,12 @@\n \n   <!--Allow discussion -->\n   <plone:behavior\n-      description="Allow discussion on this item"\n-      former_dotted_names="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"\n-      name_only="yes"\n       name="plone.allowdiscussion"\n-      provides=".behavior.IAllowDiscussion"\n       title="Allow discussion"\n+      description="Allow discussion on this item"\n+      provides=".behavior.IAllowDiscussion"\n+      name_only="yes"\n+      former_dotted_names="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"\n       />\n \n </configure>\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex f02f3ca0..1a2e663b 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -43,10 +43,10 @@\n       name="default"\n       title="Discussion Support"\n       description="Commenting infrastructure for Plone"\n-      post_handler=".setuphandlers.post_install"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.IPloneSiteRoot"\n       directory="profiles/default"\n+      post_handler=".setuphandlers.post_install"\n       />\n   <!-- For upgrade steps see upgrades.zcml. -->\n \ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex e5f61dbd..b63a666b 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -117,7 +117,7 @@ def set_timezone_on_dates(context):\n         "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n     )\n \n+\n def set_discussion_behavior(context):\n-    """Add the discussion behavior to all default types, if they exist.\n-    """\n+    """Add the discussion behavior to all default types, if they exist."""\n     add_discussion_behavior_to_default_types(context)\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/63e6fbcf0651079ff06c0b9574397d931c318625

move test from pa.dexterity to here

Files changed:
A plone/app/discussion/tests/dexterity_discussion.rst
M plone/app/discussion/tests/test_functional.py

b'diff --git a/plone/app/discussion/tests/dexterity_discussion.rst b/plone/app/discussion/tests/dexterity_discussion.rst\nnew file mode 100644\nindex 00000000..f86925b4\n--- /dev/null\n+++ b/plone/app/discussion/tests/dexterity_discussion.rst\n@@ -0,0 +1,106 @@\n+Allow Discussion\n+================\n+\n+Test Setup\n+----------\n+\n+We create a dexterity content type that provides the allow discussion behavior::\n+\n+    >>> portal = layer[\'portal\']\n+    >>> from plone.dexterity.fti import DexterityFTI\n+    >>> fti = DexterityFTI(\'discussiondocument\')\n+    >>> fti.behaviors = (\'plone.allowdiscussion\',)\n+    >>> portal.portal_types._setObject(\'discussiondocument\', fti)\n+    \'discussiondocument\'\n+\n+Set up a test browser::\n+\n+    >>> from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD, setRoles\n+    >>> setRoles(portal, TEST_USER_ID, [\'Manager\'])\n+    >>> import transaction; transaction.commit()\n+    >>> from plone.testing.zope import Browser\n+    >>> browser = Browser(layer[\'app\'])\n+    >>> browser.addHeader(\'Authorization\', \'Basic %s:%s\' % (TEST_USER_NAME, TEST_USER_PASSWORD,))\n+\n+We have to make sure the request provides IDiscussonLayer because the enabled\n+method on the conversation calls conversation_view (which is only registered\n+for IDiscussionLayer).\n+\n+    >>> from plone.app.discussion.interfaces import IDiscussionLayer\n+    >>> from zope.interface import alsoProvides\n+    >>> alsoProvides(portal.REQUEST, IDiscussionLayer)\n+\n+Add a document::\n+\n+    >>> browser.open(\'http://nohost/plone/++add++discussiondocument\')\n+\n+\n+Default Allow Discussion Options\n+--------------------------------\n+\n+There are three options for the allow discussion select field::\n+\n+    >>> allowDiscussion = browser.getControl(\'Allow discussion\')\n+    >>> allowDiscussion.options\n+    [\'--NOVALUE--\', \'True\', \'False\']\n+\n+By default, no value is set for allow discussion::\n+\n+    >>> browser.getControl(\'Allow discussion\').value\n+    [\'--NOVALUE--\']\n+    >>> browser.getControl(\'Save\').click()\n+    >>> browser.url\n+    \'http://nohost/plone/discussiondocument/view\'\n+\n+This means discussion is not enabled:\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\n+\n+We have to globally enable discussion in order to be able to add comments::\n+\n+    >>> from plone.registry.interfaces import IRegistry\n+    >>> from zope.component import queryUtility\n+    >>> from plone.app.discussion.interfaces import IDiscussionSettings\n+    >>> registry = queryUtility(IRegistry)\n+    >>> settings = registry.forInterface(IDiscussionSettings)\n+    >>> settings.globally_enabled = True\n+\n+Discussion is still disabled for our content object though::\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\n+\n+This is because discussion is disabled by default for the document content\n+type::\n+\n+    >>> fti.allow_discussion\n+    False\n+\n+If we allow discussion for the \'Document\' content type, the conversation\n+for our content object is enabled because it just uses the default setting\n+(because allow_discussion is set to None)::\n+\n+    >>> fti.allow_discussion = True\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    True\n+\n+We can now override the default value (True) by explicitly setting allow discussion to False::\n+\n+    >>> browser.open(\'http://nohost/plone/discussiondocument/edit\')\n+    >>> allowDiscussion = browser.getControl(\'Allow discussion\')\n+    >>> allowDiscussion.value = [\'False\']\n+    >>> browser.getControl(\'Save\').click()\n+\n+Discussion on our content object is now not enabled::\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\ndiff --git a/plone/app/discussion/tests/test_functional.py b/plone/app/discussion/tests/test_functional.py\nindex 5a3813d7..19e8303c 100644\n--- a/plone/app/discussion/tests/test_functional.py\n+++ b/plone/app/discussion/tests/test_functional.py\n@@ -16,6 +16,7 @@\n     "functional_test_comments.rst",\n     "functional_test_comment_review_workflow.txt",\n     "functional_test_behavior_discussion.rst",\n+    "dexterity_discussion.rst",\n ]\n \n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/2a4b3933ba62b5248f8779d311075eae33bb4109

fix requirements

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 908d235e..a8c5c7b2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -40,7 +40,6 @@\n     zip_safe=False,\n     python_requires=">=3.10",\n     install_requires=[\n-        "Products.CMFPlone",\n         "BTrees",\n         "Products.GenericSetup",\n         "Products.ZCatalog",\n@@ -48,9 +47,11 @@\n         "persistent",\n         "plone.api",\n         "plone.app.event",\n-        "plone.dexterity",\n         "plone.registry",\n         "plone.resource",\n+        "plone.autoform",\n+        "plone.behavior",\n+        "plone.supermodel",\n         "plone.uuid",\n         "zope.annotation",\n         "setuptools",\n@@ -71,6 +72,7 @@\n             "plone.app.contenttypes[test]",\n             "plone.app.robotframework",\n             "plone.app.vocabularies",\n+            "plone.dexterity",\n             "plone.testing",\n             "plone.protect",\n             "Products.MailHost",\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/9ab3065e0790c7b669cf23943eaf0f0f6c68bcd5

add uninstall

Files changed:
A plone/app/discussion/profiles/uninstall/actions.xml
A plone/app/discussion/profiles/uninstall/browserlayer.xml
A plone/app/discussion/profiles/uninstall/catalog.xml
A plone/app/discussion/profiles/uninstall/controlpanel.xml
A plone/app/discussion/profiles/uninstall/registry.xml
M plone/app/discussion/configure.zcml
M plone/app/discussion/setuphandlers.py

b'diff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex 1a2e663b..4a19dafd 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -7,50 +7,59 @@\n     i18n_domain="plone"\n     >\n \n-  <five:registerPackage package="." />\n+    <five:registerPackage package="." />\n \n-  <include package="plone.indexer" />\n-  <include package="plone.app.registry" />\n-  <include package="plone.resource" />\n-  <include package="plone.uuid" />\n-  <include package="plone.app.uuid" />\n+    <include package="plone.indexer" />\n+    <include package="plone.app.registry" />\n+    <include package="plone.resource" />\n+    <include package="plone.uuid" />\n+    <include package="plone.app.uuid" />\n \n-  <include file="behavior.zcml" />\n-  <include file="contentrules.zcml" />\n-  <include file="permissions.zcml" />\n-  <include file="notifications.zcml" />\n-  <include file="subscribers.zcml" />\n-  <include file="upgrades.zcml" />\n+    <include file="behavior.zcml" />\n+    <include file="contentrules.zcml" />\n+    <include file="permissions.zcml" />\n+    <include file="notifications.zcml" />\n+    <include file="subscribers.zcml" />\n+    <include file="upgrades.zcml" />\n \n   <!-- load captcha before browser -->\n   <configure zcml:condition="installed plone.formwidget.captcha">\n-    <include package="plone.formwidget.captcha" />\n+        <include package="plone.formwidget.captcha" />\n   </configure>\n   <configure zcml:condition="installed plone.formwidget.recaptcha">\n-    <include package="plone.formwidget.recaptcha" />\n+        <include package="plone.formwidget.recaptcha" />\n   </configure>\n   <configure zcml:condition="installed plone.formwidget.hcaptcha">\n-    <include package="plone.formwidget.hcaptcha" />\n+        <include package="plone.formwidget.hcaptcha" />\n   </configure>\n   <configure zcml:condition="installed collective.z3cform.norobots">\n-    <include package="collective.z3cform.norobots" />\n+        <include package="collective.z3cform.norobots" />\n   </configure>\n \n-  <include package=".browser" />\n+    <include package=".browser" />\n \n   <!-- Register the installation GenericSetup extension profile -->\n-  <genericsetup:registerProfile\n-      name="default"\n-      title="Discussion Support"\n-      description="Commenting infrastructure for Plone"\n-      provides="Products.GenericSetup.interfaces.EXTENSION"\n-      for="plone.base.interfaces.IPloneSiteRoot"\n-      directory="profiles/default"\n-      post_handler=".setuphandlers.post_install"\n-      />\n-  <!-- For upgrade steps see upgrades.zcml. -->\n-\n-  <!-- Comments -->\n+    <genericsetup:registerProfile\n+        name="default"\n+        title="Discussion Support"\n+        description="Commenting infrastructure for Plone"\n+        provides="Products.GenericSetup.interfaces.EXTENSION"\n+        for="plone.base.interfaces.IPloneSiteRoot"\n+        directory="profiles/default"\n+        post_handler=".setuphandlers.post_install"\n+    />\n+    <genericsetup:registerProfile\n+        name="uninstall"\n+        title="Uninstall Discussion Support"\n+        description="Uninstall Commenting infrastructure for Plone"\n+        provides="Products.GenericSetup.interfaces.EXTENSION"\n+        for="plone.base.interfaces.IPloneSiteRoot"\n+        directory="profiles/uninstall"\n+        post_handler=".setuphandlers.post_uninstall"\n+    />\n+    <!-- For upgrade steps see upgrades.zcml. -->\n+\n+    <!-- Comments -->\n \n   <class class=".comment.Comment">\n     <require\n@@ -72,7 +81,7 @@\n       component=".comment.CommentFactory"\n       />\n \n-  <!-- Conversations -->\n+    <!-- Conversations -->\n \n   <class class=".conversation.Conversation">\n     <require\n@@ -86,21 +95,21 @@\n   <adapter factory=".conversation.ConversationReplies" />\n   <adapter factory=".conversation.CommentReplies" />\n \n-  <!-- Captcha Vocabulary -->\n+    <!-- Captcha Vocabulary -->\n   <utility\n       provides="zope.schema.interfaces.IVocabularyFactory"\n       name="plone.app.discussion.vocabularies.CaptchaVocabulary"\n       component=".vocabularies.captcha_vocabulary"\n       />\n \n-  <!-- Text Transform Vocabulary -->\n+    <!-- Text Transform Vocabulary -->\n   <utility\n       provides="zope.schema.interfaces.IVocabularyFactory"\n       name="plone.app.discussion.vocabularies.TextTransformVocabulary"\n       component=".vocabularies.text_transform_vocabulary"\n       />\n \n-  <!-- Conversation indexes -->\n+    <!-- Conversation indexes -->\n   <adapter\n       factory=".catalog.total_comments"\n       name="total_comments"\n@@ -118,7 +127,7 @@\n       name="in_response_to"\n       />\n \n-  <!-- Comment indexes -->\n+    <!-- Comment indexes -->\n   <adapter\n       factory=".catalog.UID"\n       name="UID"\ndiff --git a/plone/app/discussion/profiles/uninstall/actions.xml b/plone/app/discussion/profiles/uninstall/actions.xml\nnew file mode 100644\nindex 00000000..680e5e96\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/actions.xml\n@@ -0,0 +1,13 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_actions"\n+>\n+  <object meta_type="CMF Action Category"\n+          name="user"\n+  >\n+    <object meta_type="CMF Action"\n+            name="review-comments"\n+            remove="true"\n+    />\n+  </object>\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/browserlayer.xml b/plone/app/discussion/profiles/uninstall/browserlayer.xml\nnew file mode 100644\nindex 00000000..078a4cbb\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/browserlayer.xml\n@@ -0,0 +1,6 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<layers>\n+  <layer name="plone.app.discussion"\n+         remove="true"\n+  />\n+</layers>\ndiff --git a/plone/app/discussion/profiles/uninstall/catalog.xml b/plone/app/discussion/profiles/uninstall/catalog.xml\nnew file mode 100644\nindex 00000000..fe787701\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/catalog.xml\n@@ -0,0 +1,18 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object name="portal_catalog">\n+\n+  <index meta_type="FieldIndex"\n+         name="total_comments"\n+         remove="true"\n+  />\n+  <index meta_type="KeywordIndex"\n+         name="commentators"\n+         remove="true"\n+  />\n+  <column value="total_comments" remove="true" />\n+  <column value="last_comment_date" remove="true" />\n+  <column value="commentators" remove="true" />\n+  <column value="in_response_to" remove="true" />\n+  <column value="author_name" remove="true" />\n+\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/controlpanel.xml b/plone/app/discussion/profiles/uninstall/controlpanel.xml\nnew file mode 100644\nindex 00000000..2506618d\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/controlpanel.xml\n@@ -0,0 +1,14 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        purge="False"\n+        i18n:domain="plone"\n+>\n+\n+  <configlet action_id="discussion"\n+             appId="plone.app.discussion"\n+             category="plone-general"\n+             remove="true"\n+  />\n+\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/registry.xml b/plone/app/discussion/profiles/uninstall/registry.xml\nnew file mode 100644\nindex 00000000..234fa24d\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/registry.xml\n@@ -0,0 +1,6 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<registry>\n+  <records interface="plone.app.discussion.interfaces.IDiscussionSettings"\n+           remove="true"\n+  />\n+</registry>\ndiff --git a/plone/app/discussion/setuphandlers.py b/plone/app/discussion/setuphandlers.py\nindex ed3e575d..e16eb4c6 100644\n--- a/plone/app/discussion/setuphandlers.py\n+++ b/plone/app/discussion/setuphandlers.py\n@@ -12,15 +12,35 @@\n     "Link",\n ]\n \n+BEHAVIOR = "plone.allowdiscussion"\n+\n \n def add_discussion_behavior_to_default_types(context):\n     """Add the discussion behavior to all default types, if they exist."""\n     types_tool = getToolByName(context, "portal_types")\n     for type_name in DEFAULT_TYPES:\n-        if type_name in types_tool.objectIds():\n-            types_tool[type_name].behaviors += ("plone.allowdiscussion",)\n+        if type_name in types_tool.objectIds() and BEHAVIOR not in types_tool[type_name].behaviors:\n+            types_tool[type_name].behaviors += (BEHAVIOR,)\n+\n+\n+def remove_discussion_behavior_to_default_types(context):\n+    """Remove the discussion behavior from all default types, if they exist."""\n+    types_tool = getToolByName(context, "portal_types")\n+    for type_name in types_tool.objectIds():\n+        fti = types_tool[type_name]\n+        if getattr(fti, "behaviors", None) is None:\n+            continue\n+        if BEHAVIOR in fti.behaviors:\n+            behaviors = list(fti.behaviors)\n+            behaviors.remove(BEHAVIOR)\n+            fti.behaviors = tuple(behaviors)\n \n \n def post_install(context):\n     """Post install script"""\n     add_discussion_behavior_to_default_types(context)\n+\n+\n+def post_uninstall(context):\n+    """Post uninstall script"""\n+    remove_discussion_behavior_to_default_types(context)\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.discussion/commit/7a806ba390e489307a8d1fb686905c3d15e0d498

[pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci

Files changed:
M plone/app/discussion/configure.zcml
M plone/app/discussion/profiles/uninstall/catalog.xml
M plone/app/discussion/setuphandlers.py

b'diff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex 4a19dafd..3eee5027 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -7,59 +7,59 @@\n     i18n_domain="plone"\n     >\n \n-    <five:registerPackage package="." />\n+  <five:registerPackage package="." />\n \n-    <include package="plone.indexer" />\n-    <include package="plone.app.registry" />\n-    <include package="plone.resource" />\n-    <include package="plone.uuid" />\n-    <include package="plone.app.uuid" />\n+  <include package="plone.indexer" />\n+  <include package="plone.app.registry" />\n+  <include package="plone.resource" />\n+  <include package="plone.uuid" />\n+  <include package="plone.app.uuid" />\n \n-    <include file="behavior.zcml" />\n-    <include file="contentrules.zcml" />\n-    <include file="permissions.zcml" />\n-    <include file="notifications.zcml" />\n-    <include file="subscribers.zcml" />\n-    <include file="upgrades.zcml" />\n+  <include file="behavior.zcml" />\n+  <include file="contentrules.zcml" />\n+  <include file="permissions.zcml" />\n+  <include file="notifications.zcml" />\n+  <include file="subscribers.zcml" />\n+  <include file="upgrades.zcml" />\n \n   <!-- load captcha before browser -->\n   <configure zcml:condition="installed plone.formwidget.captcha">\n-        <include package="plone.formwidget.captcha" />\n+    <include package="plone.formwidget.captcha" />\n   </configure>\n   <configure zcml:condition="installed plone.formwidget.recaptcha">\n-        <include package="plone.formwidget.recaptcha" />\n+    <include package="plone.formwidget.recaptcha" />\n   </configure>\n   <configure zcml:condition="installed plone.formwidget.hcaptcha">\n-        <include package="plone.formwidget.hcaptcha" />\n+    <include package="plone.formwidget.hcaptcha" />\n   </configure>\n   <configure zcml:condition="installed collective.z3cform.norobots">\n-        <include package="collective.z3cform.norobots" />\n+    <include package="collective.z3cform.norobots" />\n   </configure>\n \n-    <include package=".browser" />\n+  <include package=".browser" />\n \n   <!-- Register the installation GenericSetup extension profile -->\n-    <genericsetup:registerProfile\n-        name="default"\n-        title="Discussion Support"\n-        description="Commenting infrastructure for Plone"\n-        provides="Products.GenericSetup.interfaces.EXTENSION"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        directory="profiles/default"\n-        post_handler=".setuphandlers.post_install"\n-    />\n-    <genericsetup:registerProfile\n-        name="uninstall"\n-        title="Uninstall Discussion Support"\n-        description="Uninstall Commenting infrastructure for Plone"\n-        provides="Products.GenericSetup.interfaces.EXTENSION"\n-        for="plone.base.interfaces.IPloneSiteRoot"\n-        directory="profiles/uninstall"\n-        post_handler=".setuphandlers.post_uninstall"\n-    />\n-    <!-- For upgrade steps see upgrades.zcml. -->\n-\n-    <!-- Comments -->\n+  <genericsetup:registerProfile\n+      name="default"\n+      title="Discussion Support"\n+      description="Commenting infrastructure for Plone"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/default"\n+      post_handler=".setuphandlers.post_install"\n+      />\n+  <genericsetup:registerProfile\n+      name="uninstall"\n+      title="Uninstall Discussion Support"\n+      description="Uninstall Commenting infrastructure for Plone"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/uninstall"\n+      post_handler=".setuphandlers.post_uninstall"\n+      />\n+  <!-- For upgrade steps see upgrades.zcml. -->\n+\n+  <!-- Comments -->\n \n   <class class=".comment.Comment">\n     <require\n@@ -81,7 +81,7 @@\n       component=".comment.CommentFactory"\n       />\n \n-    <!-- Conversations -->\n+  <!-- Conversations -->\n \n   <class class=".conversation.Conversation">\n     <require\n@@ -95,21 +95,21 @@\n   <adapter factory=".conversation.ConversationReplies" />\n   <adapter factory=".conversation.CommentReplies" />\n \n-    <!-- Captcha Vocabulary -->\n+  <!-- Captcha Vocabulary -->\n   <utility\n       provides="zope.schema.interfaces.IVocabularyFactory"\n       name="plone.app.discussion.vocabularies.CaptchaVocabulary"\n       component=".vocabularies.captcha_vocabulary"\n       />\n \n-    <!-- Text Transform Vocabulary -->\n+  <!-- Text Transform Vocabulary -->\n   <utility\n       provides="zope.schema.interfaces.IVocabularyFactory"\n       name="plone.app.discussion.vocabularies.TextTransformVocabulary"\n       component=".vocabularies.text_transform_vocabulary"\n       />\n \n-    <!-- Conversation indexes -->\n+  <!-- Conversation indexes -->\n   <adapter\n       factory=".catalog.total_comments"\n       name="total_comments"\n@@ -127,7 +127,7 @@\n       name="in_response_to"\n       />\n \n-    <!-- Comment indexes -->\n+  <!-- Comment indexes -->\n   <adapter\n       factory=".catalog.UID"\n       name="UID"\ndiff --git a/plone/app/discussion/profiles/uninstall/catalog.xml b/plone/app/discussion/profiles/uninstall/catalog.xml\nindex fe787701..e4584ca6 100644\n--- a/plone/app/discussion/profiles/uninstall/catalog.xml\n+++ b/plone/app/discussion/profiles/uninstall/catalog.xml\n@@ -9,10 +9,20 @@\n          name="commentators"\n          remove="true"\n   />\n-  <column value="total_comments" remove="true" />\n-  <column value="last_comment_date" remove="true" />\n-  <column value="commentators" remove="true" />\n-  <column value="in_response_to" remove="true" />\n-  <column value="author_name" remove="true" />\n+  <column remove="true"\n+          value="total_comments"\n+  />\n+  <column remove="true"\n+          value="last_comment_date"\n+  />\n+  <column remove="true"\n+          value="commentators"\n+  />\n+  <column remove="true"\n+          value="in_response_to"\n+  />\n+  <column remove="true"\n+          value="author_name"\n+  />\n \n </object>\ndiff --git a/plone/app/discussion/setuphandlers.py b/plone/app/discussion/setuphandlers.py\nindex e16eb4c6..2d40dabc 100644\n--- a/plone/app/discussion/setuphandlers.py\n+++ b/plone/app/discussion/setuphandlers.py\n@@ -19,7 +19,10 @@ def add_discussion_behavior_to_default_types(context):\n     """Add the discussion behavior to all default types, if they exist."""\n     types_tool = getToolByName(context, "portal_types")\n     for type_name in DEFAULT_TYPES:\n-        if type_name in types_tool.objectIds() and BEHAVIOR not in types_tool[type_name].behaviors:\n+        if (\n+            type_name in types_tool.objectIds()\n+            and BEHAVIOR not in types_tool[type_name].behaviors\n+        ):\n             types_tool[type_name].behaviors += (BEHAVIOR,)\n \n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:35:48+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/f2f16027672f5f4f939a9a2aaf0cda3f584a6d8b

move cpanel to content section as this is not core any more

Files changed:
M plone/app/discussion/profiles/default/controlpanel.xml
M plone/app/discussion/profiles/uninstall/controlpanel.xml

b'diff --git a/plone/app/discussion/profiles/default/controlpanel.xml b/plone/app/discussion/profiles/default/controlpanel.xml\nindex d85f7a47..d98078ea 100644\n--- a/plone/app/discussion/profiles/default/controlpanel.xml\n+++ b/plone/app/discussion/profiles/default/controlpanel.xml\n@@ -7,7 +7,7 @@\n \n   <configlet action_id="discussion"\n              appId="plone.app.discussion"\n-             category="plone-general"\n+             category="plone-content"\n              condition_expr=""\n              icon_expr="string:chat-square-dots"\n              title="Discussion"\ndiff --git a/plone/app/discussion/profiles/uninstall/controlpanel.xml b/plone/app/discussion/profiles/uninstall/controlpanel.xml\nindex 2506618d..f76f5d75 100644\n--- a/plone/app/discussion/profiles/uninstall/controlpanel.xml\n+++ b/plone/app/discussion/profiles/uninstall/controlpanel.xml\n@@ -7,7 +7,7 @@\n \n   <configlet action_id="discussion"\n              appId="plone.app.discussion"\n-             category="plone-general"\n+             category="plone-content"\n              remove="true"\n   />\n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-30T17:50:35+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/8217f261332695e7a2544f0ce4cef885161c489e

README overhaul

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex 3753d940..9e9f4bba 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -1,18 +1,22 @@\n Introduction\n ============\n \n+plone.app.discussion is the commenting add-on for Plone.\n+It is part of the maintained Plone core.\n \n-plone.app.discussion is the commenting system used since Plone 4.1.\n-It was initially developed as part of the Google Summer of Code 2009 by Timo Stollenwerk (student) and Martin Aspeli (mentor).\n+Installation\n+============\n \n+If your installation depends on the `Plone <https://pypi.org/project/Plone/>`_ package, you can install it via the Plone control panel.\n+In case you do only depend on either the `plone.volto`, `plone.classicui` or `Products.CMFPlone` package, you need to add it to your requirements file.\n+After adding it and installing the requirement, you can install it via the Plone control panel.\n \n \n-Add-on Products\n+Spam protection\n ===============\n \n-- `collective.autoresizetextarea\n-  <https://pypi.org/project/collective.autoresizetextarea/>`_\n-  (for auto-resizing the comment textarea while typing)\n+These days it is essential to protect your site from commenting spam.\n+The following add-ons can help to protect your site:\n \n - `plone.formwidget.captcha\n   <https://pypi.org/project/plone.formwidget.captcha/>`_\n@@ -22,33 +26,24 @@ Add-on Products\n   <https://pypi.org/project/plone.formwidget.recaptcha/>`_\n   (for ReCaptcha spam protection)\n \n-- `collective.akismet\n-  <https://pypi.org/project/collective.akismet/>`_\n-  (for Akismet spam protection)\n-\n - `collective.z3cform.norobots\n-  <https://pypi.org/project/collective.z3cform.norobots/1.1/>`_\n+  <https://pypi.org/project/collective.z3cform.norobots/>`_\n   (provides a "human" captcha widget based on a list of questions/answers)\n \n - `plone.formwidget.hcaptcha\n   <https://pypi.org/project/plone.formwidget.hcaptcha/>`_\n   (for spam protection by `HCaptcha <https://www.hcaptcha.com/>`_ )\n \n-Note: not all of these may be compatible with the current version of ``plone.app.discussion`` and ``Plone`` itself.\n-\n \n Documentation\n =============\n \n-There is initial `documentation <https://pythonhosted.org/plone.app.discussion/>`_ but it is outdated.\n-You will still get a feel for how the package is structured though.\n-\n+For further information, please refer to the `official Plone documentation <https://docs.plone.org/>`_.\n \n Credits\n =======\n \n-- Timo Stollenwerk\n-- Martin Aspeli\n+This pakcage was initially developed as part of the Google Summer of Code 2009 by Timo Stollenwerk (student) and Martin Aspeli (mentor).\n \n Many thanks to:\n \n@@ -59,4 +54,4 @@ Many thanks to:\n - Hanno Schlichting (for making p.a.d work with Zope 2.12)\n - Alan Hoey (for providing fixes)\n - Maik Roeder (for providing and setting up a buildbot)\n-\n+- Jens Klein (for ripping it out of core and making it a separate core-addon for Plone 6.1)\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-31T00:13:39+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/e416b703e74149c3d775a12352e7b586397fd142

typo

Files changed:
M README.rst

b'diff --git a/README.rst b/README.rst\nindex 9e9f4bba..caf71abd 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -43,7 +43,7 @@ For further information, please refer to the `official Plone documentation <http\n Credits\n =======\n \n-This pakcage was initially developed as part of the Google Summer of Code 2009 by Timo Stollenwerk (student) and Martin Aspeli (mentor).\n+This package was initially developed as part of the Google Summer of Code 2009 by Timo Stollenwerk (student) and Martin Aspeli (mentor).\n \n Many thanks to:\n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-31T18:34:40+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/a2f6c855cc6542b00aa0681837d63f7ba956b2d3

move test from CMFPlone here

Files changed:
A plone/app/discussion/tests/robot/test_allow_discussion.robot

b'diff --git a/plone/app/discussion/tests/robot/test_allow_discussion.robot b/plone/app/discussion/tests/robot/test_allow_discussion.robot\nnew file mode 100644\nindex 00000000..e40530a1\n--- /dev/null\n+++ b/plone/app/discussion/tests/robot/test_allow_discussion.robot\n@@ -0,0 +1,68 @@\n+*** Settings *****************************************************************\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Resource  keywords.robot\n+\n+Test Setup  Run keywords  Plone Test Setup\n+Test Teardown  Run keywords  Plone Test Teardown\n+\n+\n+*** Test Cases ***************************************************************\n+\n+Scenario: Allow comments for Link Type\n+  Given a logged-in manager\n+    and Globally enabled comments\n+    and the types control panel\n+   When I select \'Link\' in types dropdown\n+    and Allow discussion\n+   Then Wait until page contains  Content Settings\n+   When I add new Link \'my_link\'\n+    Then Link \'my_link\' should have comments enabled\n+\n+\n+*** Keywords *****************************************************************\n+\n+# --- GIVEN ------------------------------------------------------------------\n+\n+a logged-in manager\n+  Enable autologin as  Manager\n+\n+the types control panel\n+  Go to  ${PLONE_URL}/@@content-controlpanel\n+  Wait until page contains  Content Settings\n+\n+Globally enabled comments\n+  Go to  ${PLONE_URL}/@@discussion-settings\n+  Wait until page contains  Discussion settings\n+  Select checkbox  name=form.widgets.globally_enabled:list\n+  Click button  Save\n+\n+\n+\n+# --- WHEN -------------------------------------------------------------------\n+\n+I select \'${content_type}\' in types dropdown\n+  Select from list by label  name=type_id  ${content_type}\n+  Wait until page contains  Globally addable\n+\n+Allow discussion\n+  Select checkbox  name=allow_discussion:boolean\n+  Click Button  Save\n+\n+I add new Link \'${id}\'\n+  Go to  ${PLONE_URL}\n+  Wait until page contains  Plone site\n+  Create content  type=Link  id=${id}  title=${id}  remoteUrl=http://www.starzel.de\n+\n+\n+# --- THEN -------------------------------------------------------------------\n+\n+Link \'${id}\' should have comments enabled\n+  Go to  ${PLONE_URL}/${id}\n+  Wait until page contains  ${id}\n+  Page should contain element  xpath=//div[@id="commenting"]\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-05-31T18:58:33+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/99811456f70546d068ac149195ad17975ecec707

Fix redirection after comment edit to main content, preventing NotFound.

Files changed:
A news/211.bugfix
M plone/app/discussion/browser/comment.py

b'diff --git a/news/211.bugfix b/news/211.bugfix\nnew file mode 100644\nindex 00000000..43a08fec\n--- /dev/null\n+++ b/news/211.bugfix\n@@ -0,0 +1 @@\n+Fix redirection after comment edit to main content, preventing NotFound. [@jensens]\n\\ No newline at end of file\ndiff --git a/plone/app/discussion/browser/comment.py b/plone/app/discussion/browser/comment.py\nindex d11dfeb4..e52f86ae 100644\n--- a/plone/app/discussion/browser/comment.py\n+++ b/plone/app/discussion/browser/comment.py\n@@ -104,7 +104,8 @@ def handle_cancel(self, action):\n             _("comment_edit_cancel_notification", default="Edit comment cancelled"),\n             type="info",\n         )\n-        return self._redirect(target=self.context.absolute_url())\n+        main_content = aq_parent(aq_parent(self.context))\n+        return self._redirect(target=main_content.absolute_url())\n \n \n EditComment = wrap_form(EditCommentForm)\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-06-10T10:48:07-04:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.discussion/commit/99d0d0c18fddd2b2721ac770f0500f31b627a954

Merge branch 'main' into core-addon

Files changed:
A dependabot.yml
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.py
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex 919b4116..5b3c112c 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,5 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n@@ -13,7 +13,8 @@\n root = true\n \n \n-[*]  # For All Files\n+[*]\n+# Default settings for all files.\n # Unix-style newlines with a newline ending every file\n end_of_line = lf\n insert_final_newline = true\n@@ -29,13 +30,15 @@ max_line_length = off\n # 4 space indentation\n indent_size = 4\n \n-[*.{yml,zpt,pt,dtml,zcml}]\n+[*.{yml,zpt,pt,dtml,zcml,html,xml}]\n # 2 space indentation\n indent_size = 2\n \n-[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss}]\n+# Frontend development\n # 2 space indentation\n indent_size = 2\n+max_line_length = 80\n \n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\ndiff --git a/.flake8 b/.flake8\nindex 7ef4f64d..38918f42 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -1,5 +1,5 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n [flake8]\n doctests = 1\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex a7f25e02..c9848bcb 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -1,5 +1,5 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n name: Meta\n on:\n@@ -13,6 +13,16 @@ on:\n       - main\n   workflow_dispatch:\n \n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n jobs:\n   qa:\n     uses: plone/meta/.github/workflows/qa.yml@main\n@@ -22,7 +32,44 @@ jobs:\n     uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n     uses: plone/meta/.github/workflows/dependencies.yml@main\n-  release-ready:\n+  release_ready:\n     uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n     uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+##\n+# To test against a specific matrix of python versions\n+# when running tests jobs, add in .meta.toml:\n+# [github]\n+# py_versions = "[\'3.12\', \'3.11\']"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 81594fde..486392f6 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,14 +1,18 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n # python related\n *.egg-info\n *.pyc\n *.pyo\n \n+# translation related\n+*.mo\n+\n # tools related\n build/\n .coverage\n+.*project\n coverage.xml\n dist/\n docs/_build\n@@ -31,6 +35,7 @@ lib64\n parts/\n pyvenv.cfg\n var/\n+local.cfg\n \n # mxdev\n /instance/\ndiff --git a/.meta.toml b/.meta.toml\nindex 65043ef1..abdbeba6 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,9 +1,9 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "cfffba8c"\n+commit-id = "a89af8f2"\n \n [pyproject]\n dependencies_ignores = "[\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.formwidget.hcaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 69b04522..da56023f 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,5 +1,5 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n@@ -44,7 +44,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.6\n+    rev: v2.3.0\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n@@ -75,6 +75,16 @@ repos:\n     hooks:\n     -   id: i18ndude\n \n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pre_commit]\ndiff --git a/dependabot.yml b/dependabot.yml\nnew file mode 100644\nindex 00000000..bbd3ab05\n--- /dev/null\n+++ b/dependabot.yml\n@@ -0,0 +1,11 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+version: 2\n+updates:\n+\n+  - package-ecosystem: "github-actions"\n+    directory: "/"\n+    schedule:\n+      # Check for updates to GitHub Actions every week\n+      interval: "weekly"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex ab35c2f2..219769da 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,6 +1,9 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n directory = "news/"\n filename = "CHANGES.rst"\n@@ -68,7 +71,7 @@ target-version = ["py38"]\n ##\n \n [tool.codespell]\n-ignore-words-list = "discreet,"\n+ignore-words-list = "discreet,assertin,"\n skip = "*.po,"\n ##\n # Add extra configuration options in .meta.toml:\n@@ -126,19 +129,20 @@ ignore-packages = [\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.\n #    "gitpython = [\'git\']",\n #    "pygithub = [\'github\']",\n #  ]\n-#  """\n ##\n \n [tool.check-manifest]\n ignore = [\n     ".editorconfig",\n+    ".flake8",\n     ".meta.toml",\n     ".pre-commit-config.yaml",\n-    "tox.ini",\n-    ".flake8",\n+    "dependabot.yml",\n     "mx.ini",\n+    "tox.ini",\n \n ]\n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pyproject]\n@@ -146,6 +150,11 @@ ignore = [\n #      "*.map.js",\n #      "*.pyc",\n #  """\n+#  check_manifest_extra_lines = """\n+#  ignore-bad-ideas = [\n+#      "some/test/file/PKG-INFO",\n+#  ]\n+#  """\n ##\n \n \ndiff --git a/setup.py b/setup.py\nindex a8c5c7b2..5489fc9c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -7,6 +7,7 @@\n     f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n )\n \n+\n setup(\n     name="plone.app.discussion",\n     version="5.0.0.dev0",\n@@ -40,11 +41,9 @@\n     zip_safe=False,\n     python_requires=">=3.10",\n     install_requires=[\n-        "BTrees",\n         "Products.GenericSetup",\n         "Products.ZCatalog",\n         "Products.statusmessages",\n-        "persistent",\n         "plone.api",\n         "plone.app.event",\n         "plone.registry",\n@@ -53,7 +52,6 @@\n         "plone.behavior",\n         "plone.supermodel",\n         "plone.uuid",\n-        "zope.annotation",\n         "setuptools",\n         "plone.app.layout",\n         "plone.app.registry",\n@@ -62,6 +60,7 @@\n         "plone.indexer",\n         "plone.z3cform",\n         "z3c.form>=2.3.3",\n+        "Zope",\n     ],\n     extras_require={\n         "test": [\ndiff --git a/tox.ini b/tox.ini\nindex 06ce1354..c6869f58 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,5 +1,5 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n # See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n@@ -32,6 +32,21 @@ commands =\n     echo "Unrecognized environment name {envname}"\n     false\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -56,9 +71,9 @@ description = check if the package defines all its dependencies\n skip_install = true\n deps =\n     build\n-    z3c.dependencychecker==2.11\n+    z3c.dependencychecker==2.14.3\n commands =\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     dependencychecker\n \n [testenv:dependencies-graph]\n@@ -86,16 +101,26 @@ set_env =\n #  test_environment_variables = """\n #      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n #  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n ##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n ##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n # Specify a custom constraints file in .meta.toml:\n #  [tox]\n #  constraints_file = "https://my-server.com/constraints.txt"\n ##\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir} -s plone.app.discussion {posargs}\n extras =\n     test\n@@ -128,10 +153,13 @@ deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n commands =\n+    rfbrowser init\n     coverage run --branch --source plone.app.discussion {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.app.discussion {posargs}\n     coverage report -m --format markdown\n     coverage xml\n+    coverage html\n extras =\n     test\n \n@@ -144,18 +172,22 @@ deps =\n     build\n     towncrier\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n commands =\n     # fake version to not have to install the package\n     # we build the change log as news entries might break\n     # the README that is displayed on PyPI\n     towncrier build --version=100.0.0 --yes\n-    python -m build --sdist --no-isolation\n+    python -m build --sdist\n     twine check dist/*\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n use_develop = true\n skip_install = false\n+# Here we must always constrain the package deps to what is already installed,\n+# otherwise we simply get the latest from PyPI, which may not work.\n+constrain_package_deps = true\n set_env =\n \n ##\n@@ -171,6 +203,7 @@ deps =\n     pipdeptree\n     pipforester\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n commands =\n     # Generate the full dependency tree\n     sh -c \'pipdeptree -j > forest.json\'\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:27:28+02:00
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.discussion/commit/a6d7a4df1794bfb973bb16a05fd1cf18d9cee451

[pre-commit.ci] pre-commit autoupdate

updates:
- [github.com/asottile/pyupgrade: v3.15.2 → v3.16.0](https://github.com/asottile/pyupgrade/compare/v3.15.2...v3.16.0)
- [github.com/PyCQA/flake8: 7.0.0 → 7.1.0](https://github.com/PyCQA/flake8/compare/7.0.0...7.1.0)

Files changed:
M .pre-commit-config.yaml

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex da56023f..3479cc26 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.15.2\n+    rev: v3.16.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -32,7 +32,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 7.0.0\n+    rev: 7.1.0\n     hooks:\n     -   id: flake8\n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:27:29+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/c8e7340b5b01995bc3f9a1f468c3d05286834a47

Test drop five:registerPackage

Is that actually needed in Plone 6?

Files changed:
M plone/app/discussion/configure.zcml

b'diff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex 3eee5027..76c04e9a 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -7,8 +7,6 @@\n     i18n_domain="plone"\n     >\n \n-  <five:registerPackage package="." />\n-\n   <include package="plone.indexer" />\n   <include package="plone.app.registry" />\n   <include package="plone.resource" />\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:27:29+02:00
Author: pre-commit-ci[bot] (pre-commit-ci[bot]) <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Commit: https://github.com/plone/plone.app.discussion/commit/ae39d5968af9d24c6ed9f7d4cca0e67d11d584e0

[pre-commit.ci] pre-commit autoupdate

updates:
- [github.com/asottile/pyupgrade: v3.16.0 → v3.17.0](https://github.com/asottile/pyupgrade/compare/v3.16.0...v3.17.0)
- [github.com/psf/black: 24.4.2 → 24.8.0](https://github.com/psf/black/compare/24.4.2...24.8.0)
- [github.com/PyCQA/flake8: 7.1.0 → 7.1.1](https://github.com/PyCQA/flake8/compare/7.1.0...7.1.1)
- [github.com/collective/i18ndude: 6.2.0 → 6.2.1](https://github.com/collective/i18ndude/compare/6.2.0...6.2.1)

Files changed:
M .pre-commit-config.yaml

b'diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 3479cc26..14603265 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -7,7 +7,7 @@ ci:\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.16.0\n+    rev: v3.17.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n@@ -16,7 +16,7 @@ repos:\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 24.4.2\n+    rev: 24.8.0\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n@@ -32,7 +32,7 @@ repos:\n #  """\n ##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 7.1.0\n+    rev: 7.1.1\n     hooks:\n     -   id: flake8\n \n@@ -71,7 +71,7 @@ repos:\n     -   id: check-python-versions\n         args: [\'--only\', \'setup.py,pyproject.toml\']\n -   repo: https://github.com/collective/i18ndude\n-    rev: "6.2.0"\n+    rev: "6.2.1"\n     hooks:\n     -   id: i18ndude\n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:27:29+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/e66c836f6d2edd8434227910d1bb81a2ae9b0e01

Uninstall profile: remove Discussion Item from portal_types tool.

Files changed:
A plone/app/discussion/profiles/uninstall/types.xml

b'diff --git a/plone/app/discussion/profiles/uninstall/types.xml b/plone/app/discussion/profiles/uninstall/types.xml\nnew file mode 100644\nindex 00000000..86b5306b\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/types.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="CMF Types Tool"\n+        name="portal_types"\n+>\n+  <object meta_type="Factory-based Type Information"\n+          name="Discussion Item"\n+          remove="True"\n+  />\n+</object>\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:27:29+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/f9c646990d88e37d864d9bc0bf2d8004fe595c8c

Uninstall profile: remove our workflow definitions.

Files changed:
A plone/app/discussion/profiles/uninstall/workflows.xml

b'diff --git a/plone/app/discussion/profiles/uninstall/workflows.xml b/plone/app/discussion/profiles/uninstall/workflows.xml\nnew file mode 100644\nindex 00000000..b7269a77\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/workflows.xml\n@@ -0,0 +1,13 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="Plone Workflow Tool"\n+        name="portal_workflow"\n+>\n+  <object meta_type="Workflow"\n+          name="comment_review_workflow"\n+          remove="True"\n+  />\n+  <object meta_type="Workflow"\n+          name="comment_one_state_workflow"\n+          remove="True"\n+  />\n+</object>\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:27:36+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/c5711cf9f4aa50161849a8e861ff7355425fb5bb

Merge branch 'main' into core-addon

Files changed:


b''

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T19:32:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/f896cb4d5da9a128822ccbd317763c56f97bf1db

Configuring with plone/meta

Files changed:
M .meta.toml
M tox.ini

b'diff --git a/.meta.toml b/.meta.toml\nindex abdbeba6..3d682dc3 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,10 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "a89af8f2"\n+commit-id = "7a017355"\n \n [pyproject]\n dependencies_ignores = "[\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.formwidget.hcaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']"\n+\n+[tox]\n+constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\ndiff --git a/tox.ini b/tox.ini\nindex c6869f58..a44a828d 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -108,7 +108,7 @@ set_env =\n ##\n deps =\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n ##\n # Specify additional deps in .meta.toml:\n@@ -152,7 +152,7 @@ set_env =\n deps =\n     coverage\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     rfbrowser init\n@@ -171,7 +171,7 @@ deps =\n     twine\n     build\n     towncrier\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # fake version to not have to install the package\n@@ -202,7 +202,7 @@ allowlist_externals =\n deps =\n     pipdeptree\n     pipforester\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # Generate the full dependency tree\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T21:46:32+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/603c903eb8995711014ab8cebd56305a5fc1d949

Robot tests: install our GS profile.

I noticed that on Jenkins only 142 robot tests were run instead of 149.  The console showed the reason:

```
  Set up plone.app.contenttypes.testing.PloneAppContenttypes in 0.020 seconds.
  Set up plone.app.robotframework.testing.SimplePublicationLayer in 0.001 seconds.
  Set up plone.app.robotframework.remote.RemoteLibraryBundle:RobotRemote in 0.000 seconds.
  Set up plone.testing.zope.WSGIServer in 0.043 seconds.
  Set up plone.app.robotframework.testing.RemoteLibrary:Robot in 0.000 seconds.
  Set up plone.app.discussion.testing.PloneAppDiscussionRobot Traceback (most recent call last):
  File "/Users/maurits/shared-eggs/cp311/zope.testrunner-6.4-py3.11.egg/zope/testrunner/runner.py", line 474, in run_layer
    setup_layer(options, layer, setup_layers)
  File "/Users/maurits/shared-eggs/cp311/zope.testrunner-6.4-py3.11.egg/zope/testrunner/runner.py", line 839, in setup_layer
    setup_layer(options, base, setup_layers)
  File "/Users/maurits/shared-eggs/cp311/zope.testrunner-6.4-py3.11.egg/zope/testrunner/runner.py", line 844, in setup_layer
    layer.setUp()
  File "/Users/maurits/shared-eggs/cp311/plone.app.testing-7.1.0-py3.11.egg/plone/app/testing/helpers.py", line 378, in setUp
    self.setUpPloneSite(portal)
  File "/Users/maurits/community/plone-coredev/6.1/src/plone.app.discussion/plone/app/discussion/testing.py", line 111, in setUpPloneSite
    settings = registry.forInterface(IDiscussionSettings)
  File "/Users/maurits/shared-eggs/cp311/plone.registry-2.0.1-py3.11.egg/plone/registry/registry.py", line 71, in forInterface
    raise KeyError(
KeyError: 'Interface `plone.app.discussion.interfaces.IDiscussionSettings` defines a field `globally_enabled`, for which there is no record.'
```

Files changed:
M plone/app/discussion/testing.py

b'diff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py\nindex fe23d84f..48a74392 100644\n--- a/plone/app/discussion/testing.py\n+++ b/plone/app/discussion/testing.py\n@@ -106,6 +106,7 @@ class PloneAppDiscussionRobot(PloneAppDiscussion):\n     )\n \n     def setUpPloneSite(self, portal):\n+        applyProfile(portal, "plone.app.discussion:default")\n         registry = queryUtility(IRegistry)\n         settings = registry.forInterface(IDiscussionSettings)\n         settings.globally_enabled = True\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-13T21:48:23+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/5ed24388745819de2d1f3f6e8b71462e4608b71a

Robot tests: we have no own keywords.robot file.

We are already loading a file with the same name from plone.app.robotframework.

Files changed:
M plone/app/discussion/tests/robot/test_allow_discussion.robot

b'diff --git a/plone/app/discussion/tests/robot/test_allow_discussion.robot b/plone/app/discussion/tests/robot/test_allow_discussion.robot\nindex e40530a1..d2ed6117 100644\n--- a/plone/app/discussion/tests/robot/test_allow_discussion.robot\n+++ b/plone/app/discussion/tests/robot/test_allow_discussion.robot\n@@ -6,8 +6,6 @@ Resource  plone/app/robotframework/selenium.robot\n \n Library  Remote  ${PLONE_URL}/RobotRemote\n \n-Resource  keywords.robot\n-\n Test Setup  Run keywords  Plone Test Setup\n Test Teardown  Run keywords  Plone Test Teardown\n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T14:42:58+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/121a2565f83fad1f874dcfc82a728076e95fefa6

Removed tests/dexterity_discussion.rst

This was moved here from `plone.app.dexterity`, but it has the exact same contents as `tests/functional_test_behavior_discussion.rst`.
I compared again with the original in `plone.app.dexterity`, and it is indeed the same, except that the behavior name is fixed to `plone.allowdiscussion` instead of the former `plone.app.dexterity.behaviors.discussion.IAllowDiscussion`.

Files changed:
D plone/app/discussion/tests/dexterity_discussion.rst

b"diff --git a/plone/app/discussion/tests/dexterity_discussion.rst b/plone/app/discussion/tests/dexterity_discussion.rst\ndeleted file mode 100644\nindex f86925b4..00000000\n--- a/plone/app/discussion/tests/dexterity_discussion.rst\n+++ /dev/null\n@@ -1,106 +0,0 @@\n-Allow Discussion\n-================\n-\n-Test Setup\n-----------\n-\n-We create a dexterity content type that provides the allow discussion behavior::\n-\n-    >>> portal = layer['portal']\n-    >>> from plone.dexterity.fti import DexterityFTI\n-    >>> fti = DexterityFTI('discussiondocument')\n-    >>> fti.behaviors = ('plone.allowdiscussion',)\n-    >>> portal.portal_types._setObject('discussiondocument', fti)\n-    'discussiondocument'\n-\n-Set up a test browser::\n-\n-    >>> from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD, setRoles\n-    >>> setRoles(portal, TEST_USER_ID, ['Manager'])\n-    >>> import transaction; transaction.commit()\n-    >>> from plone.testing.zope import Browser\n-    >>> browser = Browser(layer['app'])\n-    >>> browser.addHeader('Authorization', 'Basic %s:%s' % (TEST_USER_NAME, TEST_USER_PASSWORD,))\n-\n-We have to make sure the request provides IDiscussonLayer because the enabled\n-method on the conversation calls conversation_view (which is only registered\n-for IDiscussionLayer).\n-\n-    >>> from plone.app.discussion.interfaces import IDiscussionLayer\n-    >>> from zope.interface import alsoProvides\n-    >>> alsoProvides(portal.REQUEST, IDiscussionLayer)\n-\n-Add a document::\n-\n-    >>> browser.open('http://nohost/plone/++add++discussiondocument')\n-\n-\n-Default Allow Discussion Options\n---------------------------------\n-\n-There are three options for the allow discussion select field::\n-\n-    >>> allowDiscussion = browser.getControl('Allow discussion')\n-    >>> allowDiscussion.options\n-    ['--NOVALUE--', 'True', 'False']\n-\n-By default, no value is set for allow discussion::\n-\n-    >>> browser.getControl('Allow discussion').value\n-    ['--NOVALUE--']\n-    >>> browser.getControl('Save').click()\n-    >>> browser.url\n-    'http://nohost/plone/discussiondocument/view'\n-\n-This means discussion is not enabled:\n-\n-    >>> from plone.app.discussion.interfaces import IConversation\n-    >>> conv = IConversation(portal.discussiondocument)\n-    >>> conv.enabled()\n-    False\n-\n-We have to globally enable discussion in order to be able to add comments::\n-\n-    >>> from plone.registry.interfaces import IRegistry\n-    >>> from zope.component import queryUtility\n-    >>> from plone.app.discussion.interfaces import IDiscussionSettings\n-    >>> registry = queryUtility(IRegistry)\n-    >>> settings = registry.forInterface(IDiscussionSettings)\n-    >>> settings.globally_enabled = True\n-\n-Discussion is still disabled for our content object though::\n-\n-    >>> from plone.app.discussion.interfaces import IConversation\n-    >>> conv = IConversation(portal.discussiondocument)\n-    >>> conv.enabled()\n-    False\n-\n-This is because discussion is disabled by default for the document content\n-type::\n-\n-    >>> fti.allow_discussion\n-    False\n-\n-If we allow discussion for the 'Document' content type, the conversation\n-for our content object is enabled because it just uses the default setting\n-(because allow_discussion is set to None)::\n-\n-    >>> fti.allow_discussion = True\n-    >>> from plone.app.discussion.interfaces import IConversation\n-    >>> conv = IConversation(portal.discussiondocument)\n-    >>> conv.enabled()\n-    True\n-\n-We can now override the default value (True) by explicitly setting allow discussion to False::\n-\n-    >>> browser.open('http://nohost/plone/discussiondocument/edit')\n-    >>> allowDiscussion = browser.getControl('Allow discussion')\n-    >>> allowDiscussion.value = ['False']\n-    >>> browser.getControl('Save').click()\n-\n-Discussion on our content object is now not enabled::\n-\n-    >>> from plone.app.discussion.interfaces import IConversation\n-    >>> conv = IConversation(portal.discussiondocument)\n-    >>> conv.enabled()\n-    False\n"

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T14:55:44+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/da5b2f5f8770eb3683974e9a0db0ab79e56933b3

Remove unused content_icon and content_meta_type properties from FTI.

The FTIs in `plone.app.contenttypes` do not have them.

Files changed:
M plone/app/discussion/profiles/default/types/Discussion_Item.xml

b'diff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex 31be160f..2c3a8f53 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -11,8 +11,6 @@\n             i18n:translate=""\n   >Discussion Items are documents which reply to other content.\n   They should *not* be addable through the standard \'folder_factories\' interface.</property>\n-  <property name="content_icon">string:${portal_url}/discussionitem_icon.png</property>\n-  <property name="content_meta_type">Discussion Item</property>\n   <property name="product" />\n   <property name="factory">plone.Comment</property>\n   <property name="immediate_view" />\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T15:26:46+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/a8f000dfb2fa29bf7346d3dc3029e977486ecc12

FTI: use @@view alias instead non-existing discussionitem_view.

Files changed:
M plone/app/discussion/profiles/default/types/Discussion_Item.xml

b'diff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex 2c3a8f53..13f1b91e 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -19,10 +19,10 @@\n   <property name="allowed_content_types" />\n   <property name="allow_discussion">False</property>\n   <alias from="(Default)"\n-         to="discussionitem_view"\n+         to="@@view"\n   />\n   <alias from="view"\n-         to="discussionitem_view"\n+         to="@@view"\n   />\n   <action action_id="view"\n           category="object"\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T16:03:04+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/95d53994f2d4ed466d6922e8455aaf1ccd106535

Revert "Remove unused content_icon and content_meta_type properties from FTI."

This reverts commit da5b2f5f8770eb3683974e9a0db0ab79e56933b3.

I looked at `plone.app.contenttypes` for comparison, but those are Dexterity FTIs, and here we have an old-style FTI.
When I locally added `icon_expr` in here, I actually got an error while adding a Plone Site:

```
ValueError: http://localhost:8080/@@plone-addsite
Traceback (innermost last):
  Module ZPublisher.WSGIPublisher, line 181, in transaction_pubevents
  Module ZPublisher.WSGIPublisher, line 391, in publish_module
  Module ZPublisher.WSGIPublisher, line 285, in publish
  Module ZPublisher.mapply, line 98, in mapply
  Module ZPublisher.WSGIPublisher, line 68, in call_object
  Module Products.CMFPlone.browser.admin, line 299, in __call__
  Module Products.CMFPlone.factory, line 165, in addPloneSite
  Module Products.GenericSetup.tool, line 393, in runAllImportStepsFromProfile
   - __traceback_info__: profile-Products.CMFPlone:plone
  Module Products.GenericSetup.tool, line 1513, in _runImportStepsFromContext
  Module Products.GenericSetup.tool, line 1360, in _doRunHandler
  Module Products.CMFPlone.setuphandlers, line 139, in importFinalSteps
  Module Products.GenericSetup.tool, line 393, in runAllImportStepsFromProfile
   - __traceback_info__: profile-Products.CMFPlone:dependencies
  Module Products.GenericSetup.tool, line 1504, in _runImportStepsFromContext
  Module Products.GenericSetup.tool, line 1316, in _doRunImportStep
   - __traceback_info__: typeinfo
  Module Products.CMFCore.exportimport.typeinfo, line 222, in importTypesTool
  Module Products.GenericSetup.utils, line 926, in importObjects
   - __traceback_info__: portal_types
  Module Products.GenericSetup.utils, line 922, in importObjects
   - __traceback_info__: types/Discussion_Item
  Module Products.GenericSetup.utils, line 525, in _importBody
  Module Products.CMFCore.exportimport.typeinfo, line 61, in _importNode
  Module Products.GenericSetup.utils, line 757, in _initProperties
ValueError: undefined property 'content_icon'
```

So let's keep the old-style properties, although I am not sure they are actually used anywhere in current Plone.

Files changed:
M plone/app/discussion/profiles/default/types/Discussion_Item.xml

b'diff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex 13f1b91e..4598e375 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -11,6 +11,8 @@\n             i18n:translate=""\n   >Discussion Items are documents which reply to other content.\n   They should *not* be addable through the standard \'folder_factories\' interface.</property>\n+  <property name="content_icon">string:${portal_url}/discussionitem_icon.png</property>\n+  <property name="content_meta_type">Discussion Item</property>\n   <property name="product" />\n   <property name="factory">plone.Comment</property>\n   <property name="immediate_view" />\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T16:18:54+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/473224a5b15f0f157d7971fe6c65fc11359f8caf

Add missing icon

The `view` action of comments had no icon on Plone 6.

Files changed:
M plone/app/discussion/profiles/default/types/Discussion_Item.xml

b'diff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex 4598e375..ad1d4b3c 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -30,7 +30,8 @@\n           category="object"\n           condition_expr=""\n           title="View"\n-          url_expr="string:${object_url}/discussionitem_view"\n+          url_expr="string:${object_url}/@@view"\n+          icon_expr="string:toolbar-action/view"\n           visible="True"\n           i18n:attributes="title"\n   >\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T16:19:02+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.discussion/commit/840a4457bbff1aea905ca36217adb1e381582833

Add news entry

Files changed:
A news/+ignore.bugfix

b"diff --git a/news/+ignore.bugfix b/news/+ignore.bugfix\nnew file mode 100644\nindex 00000000..7f7f4e85\n--- /dev/null\n+++ b/news/+ignore.bugfix\n@@ -0,0 +1,2 @@\n+Add missing icon on comments' `view` action\n+[gforcada]\n"

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-19T16:26:18+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/ebd965ccd57fbef3cf914f07245e6fada695bf2a

Register contenttype icon.  Add upgrade step for updating the icons.

Update the profile version to 3000.  This leaves room for upgrades on the 4.x branch (Plone 6.0).

Files changed:
A news/222.bugfix
A plone/app/discussion/profiles/to_2002/registry.xml
A plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml
M plone/app/discussion/configure.zcml
M plone/app/discussion/profiles/default/metadata.xml
M plone/app/discussion/profiles/default/registry.xml
M plone/app/discussion/profiles/default/types/Discussion_Item.xml
M plone/app/discussion/setuphandlers.py
M plone/app/discussion/upgrades.zcml
D news/+ignore.bugfix

b'diff --git a/news/+ignore.bugfix b/news/+ignore.bugfix\ndeleted file mode 100644\nindex 7f7f4e85..00000000\n--- a/news/+ignore.bugfix\n+++ /dev/null\n@@ -1,2 +0,0 @@\n-Add missing icon on comments\' `view` action\n-[gforcada]\ndiff --git a/news/222.bugfix b/news/222.bugfix\nnew file mode 100644\nindex 00000000..6f0a228f\n--- /dev/null\n+++ b/news/222.bugfix\n@@ -0,0 +1,3 @@\n+Add missing icon on comments\' `view` action\n+Register contenttype icon for comments.\n+[gforcada, maurits]\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex 76c04e9a..2653af7a 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -55,6 +55,11 @@\n       directory="profiles/uninstall"\n       post_handler=".setuphandlers.post_uninstall"\n       />\n+  <utility\n+      factory=".setuphandlers.HiddenProfiles"\n+      provides="plone.base.interfaces.INonInstallable"\n+      name="plone.app.discussion"\n+      />\n   <!-- For upgrade steps see upgrades.zcml. -->\n \n   <!-- Comments -->\ndiff --git a/plone/app/discussion/profiles/default/metadata.xml b/plone/app/discussion/profiles/default/metadata.xml\nindex 4cad4f61..15f3d34a 100644\n--- a/plone/app/discussion/profiles/default/metadata.xml\n+++ b/plone/app/discussion/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>2002</version>\n+  <version>3000</version>\n   <dependencies>\n     <dependency>profile-plone.resource:default</dependency>\n     <dependency>profile-plone.app.registry:default</dependency>\ndiff --git a/plone/app/discussion/profiles/default/registry.xml b/plone/app/discussion/profiles/default/registry.xml\nindex 2a1aaffc..944359d3 100644\n--- a/plone/app/discussion/profiles/default/registry.xml\n+++ b/plone/app/discussion/profiles/default/registry.xml\n@@ -4,4 +4,10 @@\n     <value key="edit_comment_enabled">False</value>\n     <value key="delete_own_comment_enabled">False</value>\n   </records>\n+  <record name="plone.icon.contenttype/discussion-item">\n+    <field type="plone.registry.field.TextLine">\n+      <title>Plone Image</title>\n+    </field>\n+    <value key="resource">++plone++bootstrap-icons/chat-left-text.svg</value>\n+  </record>\n </registry>\ndiff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex ad1d4b3c..fb1cc595 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -11,7 +11,7 @@\n             i18n:translate=""\n   >Discussion Items are documents which reply to other content.\n   They should *not* be addable through the standard \'folder_factories\' interface.</property>\n-  <property name="content_icon">string:${portal_url}/discussionitem_icon.png</property>\n+  <property name="content_icon">++plone++bootstrap-icons/chat-left-text.svg</property>\n   <property name="content_meta_type">Discussion Item</property>\n   <property name="product" />\n   <property name="factory">plone.Comment</property>\n@@ -29,9 +29,9 @@\n   <action action_id="view"\n           category="object"\n           condition_expr=""\n+          icon_expr="string:toolbar-action/view"\n           title="View"\n           url_expr="string:${object_url}/@@view"\n-          icon_expr="string:toolbar-action/view"\n           visible="True"\n           i18n:attributes="title"\n   >\ndiff --git a/plone/app/discussion/profiles/to_2002/registry.xml b/plone/app/discussion/profiles/to_2002/registry.xml\nnew file mode 100644\nindex 00000000..e7886adb\n--- /dev/null\n+++ b/plone/app/discussion/profiles/to_2002/registry.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<registry>\n+  <record name="plone.icon.contenttype/discussion-item">\n+    <field type="plone.registry.field.TextLine">\n+      <title>Plone Image</title>\n+    </field>\n+    <value key="resource">++plone++bootstrap-icons/chat-left-text.svg</value>\n+  </record>\n+</registry>\ndiff --git a/plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml b/plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml\nnew file mode 100644\nindex 00000000..92fb9496\n--- /dev/null\n+++ b/plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml\n@@ -0,0 +1,26 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Factory-based Type Information"\n+        name="Discussion Item"\n+        i18n:domain="plone"\n+>\n+  <property name="content_icon">++plone++bootstrap-icons/chat-left-text.svg</property>\n+  <alias from="(Default)"\n+         to="@@view"\n+  />\n+  <alias from="view"\n+         to="@@view"\n+  />\n+  <!-- Note: we cannot only set an icon_exp in this action:\n+       the other settings would be reset to empty then. -->\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          icon_expr="string:toolbar-action/view"\n+          title="View"\n+          url_expr="string:${object_url}/@@view"\n+          visible="True"\n+  >\n+    <permission value="View" />\n+  </action>\n+</object>\ndiff --git a/plone/app/discussion/setuphandlers.py b/plone/app/discussion/setuphandlers.py\nindex 2d40dabc..58215a3a 100644\n--- a/plone/app/discussion/setuphandlers.py\n+++ b/plone/app/discussion/setuphandlers.py\n@@ -1,4 +1,6 @@\n+from plone.base.interfaces import INonInstallable\n from Products.CMFCore.utils import getToolByName\n+from zope.interface import implementer\n \n \n DEFAULT_TYPES = [\n@@ -15,6 +17,14 @@\n BEHAVIOR = "plone.allowdiscussion"\n \n \n+@implementer(INonInstallable)\n+class HiddenProfiles:\n+    def getNonInstallableProfiles(self):\n+        return [\n+            "plone.app.contenttypes:to_3000",\n+        ]\n+\n+\n def add_discussion_behavior_to_default_types(context):\n     """Add the discussion behavior to all default types, if they exist."""\n     types_tool = getToolByName(context, "portal_types")\ndiff --git a/plone/app/discussion/upgrades.zcml b/plone/app/discussion/upgrades.zcml\nindex e63f85d6..129b73ee 100644\n--- a/plone/app/discussion/upgrades.zcml\n+++ b/plone/app/discussion/upgrades.zcml\n@@ -108,11 +108,23 @@\n         />\n   </genericsetup:upgradeSteps>\n \n+  <genericsetup:registerProfile\n+      name="to_3000"\n+      title="Upgrade: icons"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IMigratingPloneSiteRoot"\n+      directory="profiles/to_3000"\n+      />\n+\n   <genericsetup:upgradeSteps\n       profile="plone.app.discussion:default"\n       source="2001"\n-      destination="2002"\n+      destination="3000"\n       >\n+    <genericsetup:upgradeDepends\n+        title="Update icons"\n+        import_profile="plone.app.discussion:to_3000"\n+        />\n     <genericsetup:upgradeStep\n         title="Add behavior plone.allowdiscussion to default content types"\n         description="Ensure default types have discussion behavior set"\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-20T10:22:24+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/aa64bd19dd1e9b7f440004a76839ed6496b27e35

Removed reference to unneeded test file that I removed yesterday.

Files changed:
M plone/app/discussion/tests/test_functional.py

b'diff --git a/plone/app/discussion/tests/test_functional.py b/plone/app/discussion/tests/test_functional.py\nindex 19e8303c..5a3813d7 100644\n--- a/plone/app/discussion/tests/test_functional.py\n+++ b/plone/app/discussion/tests/test_functional.py\n@@ -16,7 +16,6 @@\n     "functional_test_comments.rst",\n     "functional_test_comment_review_workflow.txt",\n     "functional_test_behavior_discussion.rst",\n-    "dexterity_discussion.rst",\n ]\n \n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-20T10:23:16+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/7e32976c6d0e9c6b1c9c02d5a0bd6df0aff01fef

Fix hidden profile id.

Files changed:
M plone/app/discussion/setuphandlers.py

b'diff --git a/plone/app/discussion/setuphandlers.py b/plone/app/discussion/setuphandlers.py\nindex 58215a3a..19afede9 100644\n--- a/plone/app/discussion/setuphandlers.py\n+++ b/plone/app/discussion/setuphandlers.py\n@@ -21,7 +21,7 @@\n class HiddenProfiles:\n     def getNonInstallableProfiles(self):\n         return [\n-            "plone.app.contenttypes:to_3000",\n+            "plone.app.discussion:to_3000",\n         ]\n \n \n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-08-20T10:23:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.discussion/commit/98aee4a30a5988f850b85a86a1fe9855b179b00d

Rename profiles/to_2002 to profiles/to_3000.

Files changed:
A plone/app/discussion/profiles/to_3000/registry.xml
A plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml
D plone/app/discussion/profiles/to_2002/registry.xml
D plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml

b'diff --git a/plone/app/discussion/profiles/to_2002/registry.xml b/plone/app/discussion/profiles/to_3000/registry.xml\nsimilarity index 100%\nrename from plone/app/discussion/profiles/to_2002/registry.xml\nrename to plone/app/discussion/profiles/to_3000/registry.xml\ndiff --git a/plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml b/plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml\nsimilarity index 100%\nrename from plone/app/discussion/profiles/to_2002/types/Discussion_Item.xml\nrename to plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml\n'

Repository: plone.app.discussion


Branch: refs/heads/main
Date: 2024-09-02T16:53:56+02:00
Author: Maurits van Rees (mauritsvanrees) <maurits@py76.be>
Commit: https://github.com/plone/plone.app.discussion/commit/9648d821249a420bdc0b69ac9473dcd84599e1fe

Merge pull request #211 from plone/core-addon

Turn this into a core addon

Files changed:
A news/211.breaking
A news/211.bugfix
A news/222.bugfix
A plone/app/discussion/behavior.py
A plone/app/discussion/behavior.zcml
A plone/app/discussion/profiles/to_3000/registry.xml
A plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml
A plone/app/discussion/profiles/uninstall/actions.xml
A plone/app/discussion/profiles/uninstall/browserlayer.xml
A plone/app/discussion/profiles/uninstall/catalog.xml
A plone/app/discussion/profiles/uninstall/controlpanel.xml
A plone/app/discussion/profiles/uninstall/registry.xml
A plone/app/discussion/profiles/uninstall/types.xml
A plone/app/discussion/profiles/uninstall/workflows.xml
A plone/app/discussion/setuphandlers.py
A plone/app/discussion/tests/functional_test_behavior_discussion.rst
A plone/app/discussion/tests/functional_test_comments.rst
A plone/app/discussion/tests/robot/test_allow_discussion.robot
A plone/app/discussion/tests/test_permissions.py
M .meta.toml
M README.rst
M plone/app/discussion/architecture.txt
M plone/app/discussion/browser/comment.py
M plone/app/discussion/configure.zcml
M plone/app/discussion/design.txt
M plone/app/discussion/profiles/default/controlpanel.xml
M plone/app/discussion/profiles/default/metadata.xml
M plone/app/discussion/profiles/default/registry.xml
M plone/app/discussion/profiles/default/types/Discussion_Item.xml
M plone/app/discussion/testing.py
M plone/app/discussion/tests/test_functional.py
M plone/app/discussion/upgrades.py
M plone/app/discussion/upgrades.zcml
M setup.py
M tox.ini
D plone/app/discussion/TODO.txt
D plone/app/discussion/profiles/default/portal_atct.xml
D plone/app/discussion/tests/functional_test_comments.txt

b'diff --git a/.meta.toml b/.meta.toml\nindex abdbeba6..3d682dc3 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,7 +3,10 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "a89af8f2"\n+commit-id = "7a017355"\n \n [pyproject]\n dependencies_ignores = "[\'Products.LinguaPlone.interfaces.ITranslatable\', \'collective.akismet\', \'collective.z3cform.norobots\', \'plone.formwidget.captcha\', \'plone.formwidget.recaptcha\', \'plone.formwidget.hcaptcha\', \'plone.contentrules\', \'plone.app.contentrules\', \'plone.stringinterp\', \'plone.app.collection\']"\n+\n+[tox]\n+constraints_file = "https://dist.plone.org/release/6.1-dev/constraints.txt"\ndiff --git a/README.rst b/README.rst\nindex 3753d940..caf71abd 100644\n--- a/README.rst\n+++ b/README.rst\n@@ -1,18 +1,22 @@\n Introduction\n ============\n \n+plone.app.discussion is the commenting add-on for Plone.\n+It is part of the maintained Plone core.\n \n-plone.app.discussion is the commenting system used since Plone 4.1.\n-It was initially developed as part of the Google Summer of Code 2009 by Timo Stollenwerk (student) and Martin Aspeli (mentor).\n+Installation\n+============\n \n+If your installation depends on the `Plone <https://pypi.org/project/Plone/>`_ package, you can install it via the Plone control panel.\n+In case you do only depend on either the `plone.volto`, `plone.classicui` or `Products.CMFPlone` package, you need to add it to your requirements file.\n+After adding it and installing the requirement, you can install it via the Plone control panel.\n \n \n-Add-on Products\n+Spam protection\n ===============\n \n-- `collective.autoresizetextarea\n-  <https://pypi.org/project/collective.autoresizetextarea/>`_\n-  (for auto-resizing the comment textarea while typing)\n+These days it is essential to protect your site from commenting spam.\n+The following add-ons can help to protect your site:\n \n - `plone.formwidget.captcha\n   <https://pypi.org/project/plone.formwidget.captcha/>`_\n@@ -22,33 +26,24 @@ Add-on Products\n   <https://pypi.org/project/plone.formwidget.recaptcha/>`_\n   (for ReCaptcha spam protection)\n \n-- `collective.akismet\n-  <https://pypi.org/project/collective.akismet/>`_\n-  (for Akismet spam protection)\n-\n - `collective.z3cform.norobots\n-  <https://pypi.org/project/collective.z3cform.norobots/1.1/>`_\n+  <https://pypi.org/project/collective.z3cform.norobots/>`_\n   (provides a "human" captcha widget based on a list of questions/answers)\n \n - `plone.formwidget.hcaptcha\n   <https://pypi.org/project/plone.formwidget.hcaptcha/>`_\n   (for spam protection by `HCaptcha <https://www.hcaptcha.com/>`_ )\n \n-Note: not all of these may be compatible with the current version of ``plone.app.discussion`` and ``Plone`` itself.\n-\n \n Documentation\n =============\n \n-There is initial `documentation <https://pythonhosted.org/plone.app.discussion/>`_ but it is outdated.\n-You will still get a feel for how the package is structured though.\n-\n+For further information, please refer to the `official Plone documentation <https://docs.plone.org/>`_.\n \n Credits\n =======\n \n-- Timo Stollenwerk\n-- Martin Aspeli\n+This package was initially developed as part of the Google Summer of Code 2009 by Timo Stollenwerk (student) and Martin Aspeli (mentor).\n \n Many thanks to:\n \n@@ -59,4 +54,4 @@ Many thanks to:\n - Hanno Schlichting (for making p.a.d work with Zope 2.12)\n - Alan Hoey (for providing fixes)\n - Maik Roeder (for providing and setting up a buildbot)\n-\n+- Jens Klein (for ripping it out of core and making it a separate core-addon for Plone 6.1)\ndiff --git a/news/211.breaking b/news/211.breaking\nnew file mode 100644\nindex 00000000..f4cad3c5\n--- /dev/null\n+++ b/news/211.breaking\n@@ -0,0 +1,4 @@\n+Move this package in the space of Plone Core add-ons.\n+It now depends on Products.CMFPlone and is no longer installed by default.\n+It is still available in the default Plone distribution, but can be omitted in customizations.\n+[jensens]\n\\ No newline at end of file\ndiff --git a/news/211.bugfix b/news/211.bugfix\nnew file mode 100644\nindex 00000000..43a08fec\n--- /dev/null\n+++ b/news/211.bugfix\n@@ -0,0 +1 @@\n+Fix redirection after comment edit to main content, preventing NotFound. [@jensens]\n\\ No newline at end of file\ndiff --git a/news/222.bugfix b/news/222.bugfix\nnew file mode 100644\nindex 00000000..6f0a228f\n--- /dev/null\n+++ b/news/222.bugfix\n@@ -0,0 +1,3 @@\n+Add missing icon on comments\' `view` action\n+Register contenttype icon for comments.\n+[gforcada, maurits]\ndiff --git a/plone/app/discussion/TODO.txt b/plone/app/discussion/TODO.txt\ndeleted file mode 100644\nindex 30a1031e..00000000\n--- a/plone/app/discussion/TODO.txt\n+++ /dev/null\n@@ -1,100 +0,0 @@\n-==========================\n-plone.app.discussion to-do\n-==========================\n-\n- [ ] Add BBB support for the existing portal_discussion interface\n-\n-    - implement in BBB package\n-    - mix into tool.CommentingTool\n-    - emit deprecation warnings\n-\n-MINOR/FUTURE RELEASES:\n-----------------------\n-\n- [ ] During recursive deletion of child comments, events are fired when the\n-     conversation data structures may be in an inconsistent state. We need\n-     some tests for this, and possibly some different handling of those\n-     events.\n-\n- [ ] Ajaxify adding and deleting comments in the comments viewlet.\n-\n- [ ] Rebuild the zebra table after batch deleting/publishing\n-\n- [ ] Replace the comment_review_workflow\n-\n- [ ] Thread building in conversation.getThreads()\n-\n- [ ] Batching in conversation.getComments()\n-\n-\n-DONE:\n------\n-\n- [X] Make sure a catalog Clear & Rebuild doesn\'t lose all comments\n-\n- [X] Add UI\n-\n-    - comment forms should use z3c.form subforms and plone.z3cform\'s\n-        ExtensibleForm support\n-\n- [X] Implement plone.indexer indexers for comments, filling standard metadata\n-\n-    - Note discrepancy between Python datetime and indexing expecting a Zope 2\n-        DateTime field\n-\n- [X] Implement plone.indexer indexers for commented-upon content\n-\n-    - Unique set of commentators\n-    - Number of comments\n-    - Date/time of most recent comment\n-\n-    These have to be reindexed when comment is added/removed\n-    (IContainerModifiedEvent). They also need to be set up in catalog.xml.\n-\n- [X] Add jQuery auto-resize to comment text field\n-     http://www.aclevercookie.com/demos/autogrow_textarea.html\n-\n- [X] Add event handlers to ensure we don\'t get stale comments in the catalog\n-     when parent objects are removed/moved/cloned:\n-\n-    - Create the conversation when an object is created\n-    - Dispatch object added/removed/moved/cloned events to conversations\n-    - Dispatch conversation added/removed/moved/cloned events to comments\n-\n- [X] Add tests for conversation dict API\n-\n- [X] Add tests for IReplies adapters\n-\n- [X] Add control panel\n-\n-    - install plone.registry records using registry.xml\n-    - create control panel using helper class in plone.app.registry\n-\n- [X] Discussion Control Panel: Add icon\n-\n- [X] Add id fall back for Creator if no Username (Title) has been added\n-\n- [X] Replace the reply-to-comment button with a Plone-like reply-button\n-\n- [X] IE: cancel button in reply-to-comment form does not work\n-\n- [X] Chrome (Linux): Reply to comment is not working\n-     (TypeError: long() argument must be a string or a number)\n-\n- [X] Restrict nesting of comments on a certain level\n-\n- [X] Fix temporary commenter\'s image css\n-\n- [X] Make comments viewlet format_time return localized time\n-\n- [X] Add i18n translations\n-\n- [X] Add i18n translations for author_username and author_email\n-\n- [X] Plone reports "unsuccessfully attempted to uncatalog an object" while\n-     trying to delete a comment.\n-\n- [X] Fix that when opening a reply form before the page has been fully loaded,\n-     the reply layer is closed again.\n-\n- [X] Form validation is not working in the reply-to-comment form\n\\ No newline at end of file\ndiff --git a/plone/app/discussion/architecture.txt b/plone/app/discussion/architecture.txt\nindex f8026e38..5002ef0e 100644\n--- a/plone/app/discussion/architecture.txt\n+++ b/plone/app/discussion/architecture.txt\n@@ -14,15 +14,15 @@ plone.app.discussion.\n     content.\n \n   **Discussion items are subject to workflow and permission**\n-    Moderation, anonymous commenting, and auto approve/reject should be\n+    Moderation, anonymous commenting, and auto-approve/reject should be\n     handled using workflow states, automatic and manual transitions, and\n     permissions.\n \n-  **Discussion items are light weight objects**\n-    Discussion item objects are as light weight as possible. Ideally, a\n+  **Discussion items are lightweight objects**\n+    Discussion item objects are as lightweight as possible. Ideally, a\n     discussion item should be as lightweight as a catalog brain. This may mean\n     that we forego convenience base classes and re-implement certain interfaces.\n-    Comments should not provide the full set of dublin core metadata, though\n+    Comments should not provide the full set of Dublin Core metadata, though\n     custom indexers can be used to provide values for standard catalog indexes.\n \n   **Optimise for retrieval speed**\n@@ -49,7 +49,7 @@ plone.app.discussion.\n   **Discussion items are retrieved in reverse creation date order**\n     Discussion items do not need to support explicit ordering. They should\n     always be retrieved in reverse creation date order (most recent for).\n-    They can be stored with keys so that this is always true.\n+    They can be stored with keys so this is always true.\n \n   **Discussion items do not need readable ids**\n     Ids can be based on the creation date.\ndiff --git a/plone/app/discussion/behavior.py b/plone/app/discussion/behavior.py\nnew file mode 100644\nindex 00000000..9691f694\n--- /dev/null\n+++ b/plone/app/discussion/behavior.py\n@@ -0,0 +1,39 @@\n+from plone.autoform import directives\n+from plone.autoform.interfaces import IFormFieldProvider\n+from plone.base import PloneMessageFactory as _\n+from plone.supermodel import model\n+from z3c.form.interfaces import IAddForm\n+from z3c.form.interfaces import IEditForm\n+from zope import schema\n+from zope.interface import provider\n+from zope.schema.vocabulary import SimpleTerm\n+from zope.schema.vocabulary import SimpleVocabulary\n+\n+\n+options = SimpleVocabulary(\n+    [\n+        SimpleTerm(value=True, title=_("Yes")),\n+        SimpleTerm(value=False, title=_("No")),\n+    ]\n+)\n+\n+\n+@provider(IFormFieldProvider)\n+class IAllowDiscussion(model.Schema):\n+    model.fieldset(\n+        "settings",\n+        label=_("Settings"),\n+        fields=["allow_discussion"],\n+    )\n+\n+    allow_discussion = schema.Choice(\n+        title=_("Allow discussion"),\n+        description=_("Allow discussion for this content object."),\n+        vocabulary=options,\n+        required=False,\n+        default=None,\n+    )\n+\n+    directives.omitted("allow_discussion")\n+    directives.no_omit(IEditForm, "allow_discussion")\n+    directives.no_omit(IAddForm, "allow_discussion")\ndiff --git a/plone/app/discussion/behavior.zcml b/plone/app/discussion/behavior.zcml\nnew file mode 100644\nindex 00000000..6a3a26fc\n--- /dev/null\n+++ b/plone/app/discussion/behavior.zcml\n@@ -0,0 +1,23 @@\n+<configure\n+    xmlns="http://namespaces.zope.org/zope"\n+    xmlns:plone="http://namespaces.plone.org/plone"\n+    xmlns:zcml="http://namespaces.zope.org/zcml"\n+    i18n_domain="plone"\n+    >\n+\n+  <include\n+      package="plone.behavior"\n+      file="meta.zcml"\n+      />\n+\n+  <!--Allow discussion -->\n+  <plone:behavior\n+      name="plone.allowdiscussion"\n+      title="Allow discussion"\n+      description="Allow discussion on this item"\n+      provides=".behavior.IAllowDiscussion"\n+      name_only="yes"\n+      former_dotted_names="plone.app.dexterity.behaviors.discussion.IAllowDiscussion"\n+      />\n+\n+</configure>\ndiff --git a/plone/app/discussion/browser/comment.py b/plone/app/discussion/browser/comment.py\nindex d11dfeb4..e52f86ae 100644\n--- a/plone/app/discussion/browser/comment.py\n+++ b/plone/app/discussion/browser/comment.py\n@@ -104,7 +104,8 @@ def handle_cancel(self, action):\n             _("comment_edit_cancel_notification", default="Edit comment cancelled"),\n             type="info",\n         )\n-        return self._redirect(target=self.context.absolute_url())\n+        main_content = aq_parent(aq_parent(self.context))\n+        return self._redirect(target=main_content.absolute_url())\n \n \n EditComment = wrap_form(EditCommentForm)\ndiff --git a/plone/app/discussion/configure.zcml b/plone/app/discussion/configure.zcml\nindex d8ab08fa..2653af7a 100644\n--- a/plone/app/discussion/configure.zcml\n+++ b/plone/app/discussion/configure.zcml\n@@ -13,6 +13,7 @@\n   <include package="plone.uuid" />\n   <include package="plone.app.uuid" />\n \n+  <include file="behavior.zcml" />\n   <include file="contentrules.zcml" />\n   <include file="permissions.zcml" />\n   <include file="notifications.zcml" />\n@@ -38,11 +39,26 @@\n   <!-- Register the installation GenericSetup extension profile -->\n   <genericsetup:registerProfile\n       name="default"\n-      title="Plone Discussions"\n+      title="Discussion Support"\n       description="Commenting infrastructure for Plone"\n       provides="Products.GenericSetup.interfaces.EXTENSION"\n       for="plone.base.interfaces.IPloneSiteRoot"\n       directory="profiles/default"\n+      post_handler=".setuphandlers.post_install"\n+      />\n+  <genericsetup:registerProfile\n+      name="uninstall"\n+      title="Uninstall Discussion Support"\n+      description="Uninstall Commenting infrastructure for Plone"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IPloneSiteRoot"\n+      directory="profiles/uninstall"\n+      post_handler=".setuphandlers.post_uninstall"\n+      />\n+  <utility\n+      factory=".setuphandlers.HiddenProfiles"\n+      provides="plone.base.interfaces.INonInstallable"\n+      name="plone.app.discussion"\n       />\n   <!-- For upgrade steps see upgrades.zcml. -->\n \ndiff --git a/plone/app/discussion/design.txt b/plone/app/discussion/design.txt\nindex 11c75bd0..c5af0354 100644\n--- a/plone/app/discussion/design.txt\n+++ b/plone/app/discussion/design.txt\n@@ -8,7 +8,7 @@ Storage and traversal\n ---------------------\n \n For each content item, there is a Conversation object stored in annotations.\n-This can be traversed to via the ++conversation++ namespace, but also fetched\n+This can be traversed via the ++conversation++ namespace, but also fetched\n via an adapter lookup to IConversation.\n \n The conversation stores all comments related to a content object. Each\n@@ -22,7 +22,7 @@ incremental. Ids must be positive integers - 0 or negative numbers are not\n allowed.\n \n Threading information is stored in the conversation: we keep track of the\n-set of children and the parent if any comment. Top-level comments have a\n+set of children and the parent if any comments. Top-level comments have a\n parent id of 0. This information is managed by the conversation class when\n comments are manipulated using a dict-like API.\n \n@@ -82,20 +82,20 @@ Thus, we want:\n \n   * Traversable, to get absolute_url() and friends\n       - this requires a good acquisition chain at all times\n-  * Acquisition.Explicit, to support acquisition\n+  * Acquisition.Explicit, to support the acquisition\n       - we do not want implicit acquisition\n   * Owned, to be able to track ownership\n   * RoleManager, to support permissions and local roles\n \n We also want to use a number of custom indexers for most of the standard\n-metadata such as creator, effective date etc.\n+metadata such as creator, effective date, etc.\n \n Finally, we\'ll need event handlers to perform the actual indexing.\n \n Discussion settings\n -------------------\n \n-Discussion can be enabled per-type and per-instance, via values in the FTI\n+Discussion can be enabled per type and per instance, via values in the FTI\n (allow_discussion) and on the object. These will remain unchanged. The\n IConversation object\'s \'enabled\' property should consult these.\n \n@@ -117,7 +117,7 @@ Where possible, we should use existing permissions:\n   * Modify Portal Content\n   * Request Review\n \n-In addition, we\'ll need a \'Moderator\' role and a moderation permission,\n+In addition, we\'ll need a \'Moderator\' role and moderation permission,\n \n   * Moderate comment\n   * Bypass moderation\n@@ -137,11 +137,11 @@ These could work in a workflow like this:\n            |                          |\n            +----- {auto-moderate} ----+\n \n-The \'posted\' state is the initial state. \'published\' is the state where the\n-comment is visible to non-reviewers.\n+The \'posted\' state is the initial state.\n+\'published\', is the state where the comment is visible to non-reviewers.\n \n The \'publish\' transition would be protected by the \'Moderate comment\'\n-permission. We could have states and transition for \'rejected\', etc, but it\n+permission. We could have states and transitions for \'rejected\', etc, but it\n is probably just as good to delete comments that are rejected.\n \n The \'auto-publish\' transition would be an automatic transition protected by\ndiff --git a/plone/app/discussion/profiles/default/controlpanel.xml b/plone/app/discussion/profiles/default/controlpanel.xml\nindex d85f7a47..d98078ea 100644\n--- a/plone/app/discussion/profiles/default/controlpanel.xml\n+++ b/plone/app/discussion/profiles/default/controlpanel.xml\n@@ -7,7 +7,7 @@\n \n   <configlet action_id="discussion"\n              appId="plone.app.discussion"\n-             category="plone-general"\n+             category="plone-content"\n              condition_expr=""\n              icon_expr="string:chat-square-dots"\n              title="Discussion"\ndiff --git a/plone/app/discussion/profiles/default/metadata.xml b/plone/app/discussion/profiles/default/metadata.xml\nindex 38abca6d..15f3d34a 100644\n--- a/plone/app/discussion/profiles/default/metadata.xml\n+++ b/plone/app/discussion/profiles/default/metadata.xml\n@@ -1,6 +1,6 @@\n <?xml version="1.0" encoding="utf-8"?>\n <metadata>\n-  <version>2001</version>\n+  <version>3000</version>\n   <dependencies>\n     <dependency>profile-plone.resource:default</dependency>\n     <dependency>profile-plone.app.registry:default</dependency>\ndiff --git a/plone/app/discussion/profiles/default/portal_atct.xml b/plone/app/discussion/profiles/default/portal_atct.xml\ndeleted file mode 100644\nindex 0c7068c6..00000000\n--- a/plone/app/discussion/profiles/default/portal_atct.xml\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-<?xml version="1.0" encoding="utf-8"?>\n-<atcttool xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n-  <topic_indexes i18n:domain="plone">\n-\n-    <index description="Users who have commented on the item"\n-           enabled="True"\n-           friendlyName="Commentators"\n-           name="commentators"\n-           i18n:attributes="description; friendlyName"\n-    >\n-\n-      <criteria>ATCurrentAuthorCriterion</criteria>\n-      <criteria>ATSimpleStringCriterion</criteria>\n-      <criteria>ATListCriterion</criteria>\n-\n-    </index>\n-\n-    <index description="Total number of comments on this item."\n-           enabled="False"\n-           friendlyName="Total number of comments"\n-           name="total_comments"\n-           i18n:attributes="description; friendlyName"\n-    >\n-\n-      <criteria>ATSimpleIntCriterion</criteria>\n-\n-    </index>\n-\n-  </topic_indexes>\n-  <topic_metadata i18n:domain="plone">\n-\n-    <metadata description="Total number of comments on this item."\n-              enabled="True"\n-              friendlyName="Total number of comments"\n-              name="total_comments"\n-    />\n-\n-  </topic_metadata>\n-</atcttool>\ndiff --git a/plone/app/discussion/profiles/default/registry.xml b/plone/app/discussion/profiles/default/registry.xml\nindex 2a1aaffc..944359d3 100644\n--- a/plone/app/discussion/profiles/default/registry.xml\n+++ b/plone/app/discussion/profiles/default/registry.xml\n@@ -4,4 +4,10 @@\n     <value key="edit_comment_enabled">False</value>\n     <value key="delete_own_comment_enabled">False</value>\n   </records>\n+  <record name="plone.icon.contenttype/discussion-item">\n+    <field type="plone.registry.field.TextLine">\n+      <title>Plone Image</title>\n+    </field>\n+    <value key="resource">++plone++bootstrap-icons/chat-left-text.svg</value>\n+  </record>\n </registry>\ndiff --git a/plone/app/discussion/profiles/default/types/Discussion_Item.xml b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\nindex c05efcb9..fb1cc595 100644\n--- a/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n+++ b/plone/app/discussion/profiles/default/types/Discussion_Item.xml\n@@ -9,8 +9,9 @@\n   >Comment</property>\n   <property name="description"\n             i18n:translate=""\n-  >Comments added to a content item.</property>\n-  <property name="content_icon">discussionitem_icon.png</property>\n+  >Discussion Items are documents which reply to other content.\n+  They should *not* be addable through the standard \'folder_factories\' interface.</property>\n+  <property name="content_icon">++plone++bootstrap-icons/chat-left-text.svg</property>\n   <property name="content_meta_type">Discussion Item</property>\n   <property name="product" />\n   <property name="factory">plone.Comment</property>\n@@ -18,7 +19,7 @@\n   <property name="global_allow">False</property>\n   <property name="filter_content_types">True</property>\n   <property name="allowed_content_types" />\n-  <property name="allow_discussion">True</property>\n+  <property name="allow_discussion">False</property>\n   <alias from="(Default)"\n          to="@@view"\n   />\n@@ -28,10 +29,22 @@\n   <action action_id="view"\n           category="object"\n           condition_expr=""\n+          icon_expr="string:toolbar-action/view"\n           title="View"\n           url_expr="string:${object_url}/@@view"\n           visible="True"\n+          i18n:attributes="title"\n   >\n     <permission value="View" />\n   </action>\n+  <action action_id="external_edit"\n+          category="object"\n+          condition_expr=""\n+          title="External Edit"\n+          url_expr="string:$object_url/external_edit"\n+          visible="False"\n+          i18n:attributes="title"\n+  >\n+    <permission value="Modify portal content" />\n+  </action>\n </object>\ndiff --git a/plone/app/discussion/profiles/to_3000/registry.xml b/plone/app/discussion/profiles/to_3000/registry.xml\nnew file mode 100644\nindex 00000000..e7886adb\n--- /dev/null\n+++ b/plone/app/discussion/profiles/to_3000/registry.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<registry>\n+  <record name="plone.icon.contenttype/discussion-item">\n+    <field type="plone.registry.field.TextLine">\n+      <title>Plone Image</title>\n+    </field>\n+    <value key="resource">++plone++bootstrap-icons/chat-left-text.svg</value>\n+  </record>\n+</registry>\ndiff --git a/plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml b/plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml\nnew file mode 100644\nindex 00000000..92fb9496\n--- /dev/null\n+++ b/plone/app/discussion/profiles/to_3000/types/Discussion_Item.xml\n@@ -0,0 +1,26 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        meta_type="Factory-based Type Information"\n+        name="Discussion Item"\n+        i18n:domain="plone"\n+>\n+  <property name="content_icon">++plone++bootstrap-icons/chat-left-text.svg</property>\n+  <alias from="(Default)"\n+         to="@@view"\n+  />\n+  <alias from="view"\n+         to="@@view"\n+  />\n+  <!-- Note: we cannot only set an icon_exp in this action:\n+       the other settings would be reset to empty then. -->\n+  <action action_id="view"\n+          category="object"\n+          condition_expr=""\n+          icon_expr="string:toolbar-action/view"\n+          title="View"\n+          url_expr="string:${object_url}/@@view"\n+          visible="True"\n+  >\n+    <permission value="View" />\n+  </action>\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/actions.xml b/plone/app/discussion/profiles/uninstall/actions.xml\nnew file mode 100644\nindex 00000000..680e5e96\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/actions.xml\n@@ -0,0 +1,13 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_actions"\n+>\n+  <object meta_type="CMF Action Category"\n+          name="user"\n+  >\n+    <object meta_type="CMF Action"\n+            name="review-comments"\n+            remove="true"\n+    />\n+  </object>\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/browserlayer.xml b/plone/app/discussion/profiles/uninstall/browserlayer.xml\nnew file mode 100644\nindex 00000000..078a4cbb\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/browserlayer.xml\n@@ -0,0 +1,6 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<layers>\n+  <layer name="plone.app.discussion"\n+         remove="true"\n+  />\n+</layers>\ndiff --git a/plone/app/discussion/profiles/uninstall/catalog.xml b/plone/app/discussion/profiles/uninstall/catalog.xml\nnew file mode 100644\nindex 00000000..e4584ca6\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/catalog.xml\n@@ -0,0 +1,28 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object name="portal_catalog">\n+\n+  <index meta_type="FieldIndex"\n+         name="total_comments"\n+         remove="true"\n+  />\n+  <index meta_type="KeywordIndex"\n+         name="commentators"\n+         remove="true"\n+  />\n+  <column remove="true"\n+          value="total_comments"\n+  />\n+  <column remove="true"\n+          value="last_comment_date"\n+  />\n+  <column remove="true"\n+          value="commentators"\n+  />\n+  <column remove="true"\n+          value="in_response_to"\n+  />\n+  <column remove="true"\n+          value="author_name"\n+  />\n+\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/controlpanel.xml b/plone/app/discussion/profiles/uninstall/controlpanel.xml\nnew file mode 100644\nindex 00000000..f76f5d75\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/controlpanel.xml\n@@ -0,0 +1,14 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n+        name="portal_controlpanel"\n+        purge="False"\n+        i18n:domain="plone"\n+>\n+\n+  <configlet action_id="discussion"\n+             appId="plone.app.discussion"\n+             category="plone-content"\n+             remove="true"\n+  />\n+\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/registry.xml b/plone/app/discussion/profiles/uninstall/registry.xml\nnew file mode 100644\nindex 00000000..234fa24d\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/registry.xml\n@@ -0,0 +1,6 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<registry>\n+  <records interface="plone.app.discussion.interfaces.IDiscussionSettings"\n+           remove="true"\n+  />\n+</registry>\ndiff --git a/plone/app/discussion/profiles/uninstall/types.xml b/plone/app/discussion/profiles/uninstall/types.xml\nnew file mode 100644\nindex 00000000..86b5306b\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/types.xml\n@@ -0,0 +1,9 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="CMF Types Tool"\n+        name="portal_types"\n+>\n+  <object meta_type="Factory-based Type Information"\n+          name="Discussion Item"\n+          remove="True"\n+  />\n+</object>\ndiff --git a/plone/app/discussion/profiles/uninstall/workflows.xml b/plone/app/discussion/profiles/uninstall/workflows.xml\nnew file mode 100644\nindex 00000000..b7269a77\n--- /dev/null\n+++ b/plone/app/discussion/profiles/uninstall/workflows.xml\n@@ -0,0 +1,13 @@\n+<?xml version="1.0" encoding="utf-8"?>\n+<object meta_type="Plone Workflow Tool"\n+        name="portal_workflow"\n+>\n+  <object meta_type="Workflow"\n+          name="comment_review_workflow"\n+          remove="True"\n+  />\n+  <object meta_type="Workflow"\n+          name="comment_one_state_workflow"\n+          remove="True"\n+  />\n+</object>\ndiff --git a/plone/app/discussion/setuphandlers.py b/plone/app/discussion/setuphandlers.py\nnew file mode 100644\nindex 00000000..19afede9\n--- /dev/null\n+++ b/plone/app/discussion/setuphandlers.py\n@@ -0,0 +1,59 @@\n+from plone.base.interfaces import INonInstallable\n+from Products.CMFCore.utils import getToolByName\n+from zope.interface import implementer\n+\n+\n+DEFAULT_TYPES = [\n+    "Document",\n+    "Event",\n+    "File",\n+    "Folder",\n+    "Image",\n+    "News Item",\n+    "Collection",\n+    "Link",\n+]\n+\n+BEHAVIOR = "plone.allowdiscussion"\n+\n+\n+@implementer(INonInstallable)\n+class HiddenProfiles:\n+    def getNonInstallableProfiles(self):\n+        return [\n+            "plone.app.discussion:to_3000",\n+        ]\n+\n+\n+def add_discussion_behavior_to_default_types(context):\n+    """Add the discussion behavior to all default types, if they exist."""\n+    types_tool = getToolByName(context, "portal_types")\n+    for type_name in DEFAULT_TYPES:\n+        if (\n+            type_name in types_tool.objectIds()\n+            and BEHAVIOR not in types_tool[type_name].behaviors\n+        ):\n+            types_tool[type_name].behaviors += (BEHAVIOR,)\n+\n+\n+def remove_discussion_behavior_to_default_types(context):\n+    """Remove the discussion behavior from all default types, if they exist."""\n+    types_tool = getToolByName(context, "portal_types")\n+    for type_name in types_tool.objectIds():\n+        fti = types_tool[type_name]\n+        if getattr(fti, "behaviors", None) is None:\n+            continue\n+        if BEHAVIOR in fti.behaviors:\n+            behaviors = list(fti.behaviors)\n+            behaviors.remove(BEHAVIOR)\n+            fti.behaviors = tuple(behaviors)\n+\n+\n+def post_install(context):\n+    """Post install script"""\n+    add_discussion_behavior_to_default_types(context)\n+\n+\n+def post_uninstall(context):\n+    """Post uninstall script"""\n+    remove_discussion_behavior_to_default_types(context)\ndiff --git a/plone/app/discussion/testing.py b/plone/app/discussion/testing.py\nindex fe23d84f..48a74392 100644\n--- a/plone/app/discussion/testing.py\n+++ b/plone/app/discussion/testing.py\n@@ -106,6 +106,7 @@ class PloneAppDiscussionRobot(PloneAppDiscussion):\n     )\n \n     def setUpPloneSite(self, portal):\n+        applyProfile(portal, "plone.app.discussion:default")\n         registry = queryUtility(IRegistry)\n         settings = registry.forInterface(IDiscussionSettings)\n         settings.globally_enabled = True\ndiff --git a/plone/app/discussion/tests/functional_test_behavior_discussion.rst b/plone/app/discussion/tests/functional_test_behavior_discussion.rst\nnew file mode 100644\nindex 00000000..f86925b4\n--- /dev/null\n+++ b/plone/app/discussion/tests/functional_test_behavior_discussion.rst\n@@ -0,0 +1,106 @@\n+Allow Discussion\n+================\n+\n+Test Setup\n+----------\n+\n+We create a dexterity content type that provides the allow discussion behavior::\n+\n+    >>> portal = layer[\'portal\']\n+    >>> from plone.dexterity.fti import DexterityFTI\n+    >>> fti = DexterityFTI(\'discussiondocument\')\n+    >>> fti.behaviors = (\'plone.allowdiscussion\',)\n+    >>> portal.portal_types._setObject(\'discussiondocument\', fti)\n+    \'discussiondocument\'\n+\n+Set up a test browser::\n+\n+    >>> from plone.app.testing import TEST_USER_ID, TEST_USER_NAME, TEST_USER_PASSWORD, setRoles\n+    >>> setRoles(portal, TEST_USER_ID, [\'Manager\'])\n+    >>> import transaction; transaction.commit()\n+    >>> from plone.testing.zope import Browser\n+    >>> browser = Browser(layer[\'app\'])\n+    >>> browser.addHeader(\'Authorization\', \'Basic %s:%s\' % (TEST_USER_NAME, TEST_USER_PASSWORD,))\n+\n+We have to make sure the request provides IDiscussonLayer because the enabled\n+method on the conversation calls conversation_view (which is only registered\n+for IDiscussionLayer).\n+\n+    >>> from plone.app.discussion.interfaces import IDiscussionLayer\n+    >>> from zope.interface import alsoProvides\n+    >>> alsoProvides(portal.REQUEST, IDiscussionLayer)\n+\n+Add a document::\n+\n+    >>> browser.open(\'http://nohost/plone/++add++discussiondocument\')\n+\n+\n+Default Allow Discussion Options\n+--------------------------------\n+\n+There are three options for the allow discussion select field::\n+\n+    >>> allowDiscussion = browser.getControl(\'Allow discussion\')\n+    >>> allowDiscussion.options\n+    [\'--NOVALUE--\', \'True\', \'False\']\n+\n+By default, no value is set for allow discussion::\n+\n+    >>> browser.getControl(\'Allow discussion\').value\n+    [\'--NOVALUE--\']\n+    >>> browser.getControl(\'Save\').click()\n+    >>> browser.url\n+    \'http://nohost/plone/discussiondocument/view\'\n+\n+This means discussion is not enabled:\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\n+\n+We have to globally enable discussion in order to be able to add comments::\n+\n+    >>> from plone.registry.interfaces import IRegistry\n+    >>> from zope.component import queryUtility\n+    >>> from plone.app.discussion.interfaces import IDiscussionSettings\n+    >>> registry = queryUtility(IRegistry)\n+    >>> settings = registry.forInterface(IDiscussionSettings)\n+    >>> settings.globally_enabled = True\n+\n+Discussion is still disabled for our content object though::\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\n+\n+This is because discussion is disabled by default for the document content\n+type::\n+\n+    >>> fti.allow_discussion\n+    False\n+\n+If we allow discussion for the \'Document\' content type, the conversation\n+for our content object is enabled because it just uses the default setting\n+(because allow_discussion is set to None)::\n+\n+    >>> fti.allow_discussion = True\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    True\n+\n+We can now override the default value (True) by explicitly setting allow discussion to False::\n+\n+    >>> browser.open(\'http://nohost/plone/discussiondocument/edit\')\n+    >>> allowDiscussion = browser.getControl(\'Allow discussion\')\n+    >>> allowDiscussion.value = [\'False\']\n+    >>> browser.getControl(\'Save\').click()\n+\n+Discussion on our content object is now not enabled::\n+\n+    >>> from plone.app.discussion.interfaces import IConversation\n+    >>> conv = IConversation(portal.discussiondocument)\n+    >>> conv.enabled()\n+    False\ndiff --git a/plone/app/discussion/tests/functional_test_comments.txt b/plone/app/discussion/tests/functional_test_comments.rst\nsimilarity index 99%\nrename from plone/app/discussion/tests/functional_test_comments.txt\nrename to plone/app/discussion/tests/functional_test_comments.rst\nindex 61ab4a3e..59d08782 100644\n--- a/plone/app/discussion/tests/functional_test_comments.txt\n+++ b/plone/app/discussion/tests/functional_test_comments.rst\n@@ -163,8 +163,8 @@ Check if the comment has been added properly.\n     True\n \n \n-Post a comment as anonymous user\n---------------------------------\n+Post a comment as an anonymous user\n+-----------------------------------\n \n Login and post comment as Anonymous\n \ndiff --git a/plone/app/discussion/tests/robot/test_allow_discussion.robot b/plone/app/discussion/tests/robot/test_allow_discussion.robot\nnew file mode 100644\nindex 00000000..d2ed6117\n--- /dev/null\n+++ b/plone/app/discussion/tests/robot/test_allow_discussion.robot\n@@ -0,0 +1,66 @@\n+*** Settings *****************************************************************\n+\n+Resource  plone/app/robotframework/keywords.robot\n+Resource  plone/app/robotframework/saucelabs.robot\n+Resource  plone/app/robotframework/selenium.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Test Setup  Run keywords  Plone Test Setup\n+Test Teardown  Run keywords  Plone Test Teardown\n+\n+\n+*** Test Cases ***************************************************************\n+\n+Scenario: Allow comments for Link Type\n+  Given a logged-in manager\n+    and Globally enabled comments\n+    and the types control panel\n+   When I select \'Link\' in types dropdown\n+    and Allow discussion\n+   Then Wait until page contains  Content Settings\n+   When I add new Link \'my_link\'\n+    Then Link \'my_link\' should have comments enabled\n+\n+\n+*** Keywords *****************************************************************\n+\n+# --- GIVEN ------------------------------------------------------------------\n+\n+a logged-in manager\n+  Enable autologin as  Manager\n+\n+the types control panel\n+  Go to  ${PLONE_URL}/@@content-controlpanel\n+  Wait until page contains  Content Settings\n+\n+Globally enabled comments\n+  Go to  ${PLONE_URL}/@@discussion-settings\n+  Wait until page contains  Discussion settings\n+  Select checkbox  name=form.widgets.globally_enabled:list\n+  Click button  Save\n+\n+\n+\n+# --- WHEN -------------------------------------------------------------------\n+\n+I select \'${content_type}\' in types dropdown\n+  Select from list by label  name=type_id  ${content_type}\n+  Wait until page contains  Globally addable\n+\n+Allow discussion\n+  Select checkbox  name=allow_discussion:boolean\n+  Click Button  Save\n+\n+I add new Link \'${id}\'\n+  Go to  ${PLONE_URL}\n+  Wait until page contains  Plone site\n+  Create content  type=Link  id=${id}  title=${id}  remoteUrl=http://www.starzel.de\n+\n+\n+# --- THEN -------------------------------------------------------------------\n+\n+Link \'${id}\' should have comments enabled\n+  Go to  ${PLONE_URL}/${id}\n+  Wait until page contains  ${id}\n+  Page should contain element  xpath=//div[@id="commenting"]\ndiff --git a/plone/app/discussion/tests/test_functional.py b/plone/app/discussion/tests/test_functional.py\nindex b4ce3f0e..5a3813d7 100644\n--- a/plone/app/discussion/tests/test_functional.py\n+++ b/plone/app/discussion/tests/test_functional.py\n@@ -1,9 +1,7 @@\n """Functional Doctests for plone.app.discussion.\n-\n-   These test are only triggered when Plone 4 (and plone.testing) is installed.\n """\n \n-from ..testing import PLONE_APP_DISCUSSION_FUNCTIONAL_TESTING  # noqa\n+from ..testing import PLONE_APP_DISCUSSION_FUNCTIONAL_TESTING\n from plone.testing import layered\n \n import doctest\n@@ -15,8 +13,9 @@\n     doctest.ELLIPSIS | doctest.NORMALIZE_WHITESPACE | doctest.REPORT_ONLY_FIRST_FAILURE\n )\n normal_testfiles = [\n-    "functional_test_comments.txt",\n+    "functional_test_comments.rst",\n     "functional_test_comment_review_workflow.txt",\n+    "functional_test_behavior_discussion.rst",\n ]\n \n \ndiff --git a/plone/app/discussion/tests/test_permissions.py b/plone/app/discussion/tests/test_permissions.py\nnew file mode 100644\nindex 00000000..ce14146b\n--- /dev/null\n+++ b/plone/app/discussion/tests/test_permissions.py\n@@ -0,0 +1,19 @@\n+from ..testing import PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n+from AccessControl.PermissionRole import rolesForPermissionOn\n+\n+import unittest\n+\n+\n+class PermissionsTest(unittest.TestCase):\n+    """Make sure the permissions are set up properly."""\n+\n+    layer = PLONE_APP_DISCUSSION_INTEGRATION_TESTING\n+\n+    def test_permissions_site_administrator_role(self):\n+        # This integration test shows that the correct permissions were\n+        # assigned to the Site Administrator role (whether inherited from the\n+        # Zope application, or specified in the portal rolemap).\n+        self.assertTrue(\n+            "Site Administrator"\n+            not in rolesForPermissionOn("Reply to item", self.layer["portal"])\n+        )\ndiff --git a/plone/app/discussion/upgrades.py b/plone/app/discussion/upgrades.py\nindex dc78ea76..b63a666b 100644\n--- a/plone/app/discussion/upgrades.py\n+++ b/plone/app/discussion/upgrades.py\n@@ -1,6 +1,7 @@\n+from .interfaces import IDiscussionSettings\n+from .setuphandlers import add_discussion_behavior_to_default_types\n from datetime import timezone\n from plone import api\n-from plone.app.discussion.interfaces import IDiscussionSettings\n from plone.registry.interfaces import IRegistry\n from Products.CMFCore.utils import getToolByName\n from Products.ZCatalog.ProgressHandler import ZLogHandler\n@@ -115,3 +116,8 @@ def set_timezone_on_dates(context):\n     logger.info(\n         "Updated %i creation dates and %i modification dates" % (creations, modifieds)\n     )\n+\n+\n+def set_discussion_behavior(context):\n+    """Add the discussion behavior to all default types, if they exist."""\n+    add_discussion_behavior_to_default_types(context)\ndiff --git a/plone/app/discussion/upgrades.zcml b/plone/app/discussion/upgrades.zcml\nindex d265d428..129b73ee 100644\n--- a/plone/app/discussion/upgrades.zcml\n+++ b/plone/app/discussion/upgrades.zcml\n@@ -108,4 +108,28 @@\n         />\n   </genericsetup:upgradeSteps>\n \n+  <genericsetup:registerProfile\n+      name="to_3000"\n+      title="Upgrade: icons"\n+      provides="Products.GenericSetup.interfaces.EXTENSION"\n+      for="plone.base.interfaces.IMigratingPloneSiteRoot"\n+      directory="profiles/to_3000"\n+      />\n+\n+  <genericsetup:upgradeSteps\n+      profile="plone.app.discussion:default"\n+      source="2001"\n+      destination="3000"\n+      >\n+    <genericsetup:upgradeDepends\n+        title="Update icons"\n+        import_profile="plone.app.discussion:to_3000"\n+        />\n+    <genericsetup:upgradeStep\n+        title="Add behavior plone.allowdiscussion to default content types"\n+        description="Ensure default types have discussion behavior set"\n+        handler=".upgrades.add_discussion_behavior_to_default_types"\n+        />\n+  </genericsetup:upgradeSteps>\n+\n </configure>\ndiff --git a/setup.py b/setup.py\nindex 21d1e9bd..5489fc9c 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -3,35 +3,14 @@\n from setuptools import setup\n \n \n-version = "4.1.3.dev0"\n-\n long_description = (\n     f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n )\n \n-install_requires = [\n-    "Products.GenericSetup",\n-    "Products.ZCatalog",\n-    "Products.statusmessages",\n-    "plone.api",\n-    "plone.app.event",\n-    "plone.registry",\n-    "plone.resource",\n-    "plone.uuid",\n-    "setuptools",\n-    "plone.app.layout",\n-    "plone.app.registry",\n-    "plone.app.uuid",\n-    "plone.base",\n-    "plone.indexer",\n-    "plone.z3cform",\n-    "Zope",\n-    "z3c.form>=2.3.3",\n-]\n \n setup(\n     name="plone.app.discussion",\n-    version=version,\n+    version="5.0.0.dev0",\n     description="Enhanced discussion support for Plone",\n     long_description=long_description,\n     long_description_content_type="text/x-rst",\n@@ -41,16 +20,15 @@\n         "Development Status :: 5 - Production/Stable",\n         "Environment :: Web Environment",\n         "Framework :: Plone",\n-        "Framework :: Plone :: 6.0",\n+        "Framework :: Plone :: 6.1",\n         "Framework :: Plone :: Core",\n         "Framework :: Zope :: 5",\n         "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",\n         "Operating System :: OS Independent",\n         "Programming Language :: Python",\n-        "Programming Language :: Python :: 3.8",\n-        "Programming Language :: Python :: 3.9",\n         "Programming Language :: Python :: 3.10",\n         "Programming Language :: Python :: 3.11",\n+        "Programming Language :: Python :: 3.12",\n     ],\n     keywords="plone discussion",\n     author="Timo Stollenwerk - Plone Foundation",\n@@ -61,8 +39,29 @@\n     namespace_packages=["plone", "plone.app"],\n     include_package_data=True,\n     zip_safe=False,\n-    python_requires=">=3.8",\n-    install_requires=install_requires,\n+    python_requires=">=3.10",\n+    install_requires=[\n+        "Products.GenericSetup",\n+        "Products.ZCatalog",\n+        "Products.statusmessages",\n+        "plone.api",\n+        "plone.app.event",\n+        "plone.registry",\n+        "plone.resource",\n+        "plone.autoform",\n+        "plone.behavior",\n+        "plone.supermodel",\n+        "plone.uuid",\n+        "setuptools",\n+        "plone.app.layout",\n+        "plone.app.registry",\n+        "plone.app.uuid",\n+        "plone.base",\n+        "plone.indexer",\n+        "plone.z3cform",\n+        "z3c.form>=2.3.3",\n+        "Zope",\n+    ],\n     extras_require={\n         "test": [\n             "plone.app.testing",\n@@ -72,6 +71,7 @@\n             "plone.app.contenttypes[test]",\n             "plone.app.robotframework",\n             "plone.app.vocabularies",\n+            "plone.dexterity",\n             "plone.testing",\n             "plone.protect",\n             "Products.MailHost",\n@@ -80,4 +80,8 @@\n             "python-dateutil",\n         ],\n     },\n+    entry_points="""\n+    [z3c.autoinclude.plugin]\n+    target = plone\n+    """,\n )\ndiff --git a/tox.ini b/tox.ini\nindex c6869f58..a44a828d 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -108,7 +108,7 @@ set_env =\n ##\n deps =\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n ##\n # Specify additional deps in .meta.toml:\n@@ -152,7 +152,7 @@ set_env =\n deps =\n     coverage\n     zope.testrunner\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     rfbrowser init\n@@ -171,7 +171,7 @@ deps =\n     twine\n     build\n     towncrier\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # fake version to not have to install the package\n@@ -202,7 +202,7 @@ allowlist_externals =\n deps =\n     pipdeptree\n     pipforester\n-    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+    -c https://dist.plone.org/release/6.1-dev/constraints.txt\n \n commands =\n     # Generate the full dependency tree\n'

