Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-04-30T06:10:59+02:00
Author: David Erni (deiferni) <d.erni@4teamwork.ch>
Commit: https://github.com/plone/plone.restapi/commit/13023ec6b0966ddd9910979fb03d553c0001a2b8

Fix `@history` when full history is empty. (#1114)

The re-used viewlet returns `None` in its `fullHistory` when there is
no (visible) workflow history and when there is no (visible) revision
history.

We did not take this into account and always attempt to iterate the
returned value, which will fail for `None` for obvious reasons.

I'm adding a simple fix for the issue by initializing the value to an
empty list in such cases.

Files changed:
A news/1113.bugfix
M src/plone/restapi/services/history/get.py
M src/plone/restapi/tests/test_services_history.py

b'diff --git a/news/1113.bugfix b/news/1113.bugfix\nnew file mode 100644\nindex 000000000..9e0342db8\n--- /dev/null\n+++ b/news/1113.bugfix\n@@ -0,0 +1,2 @@\n+Fix ``@history`` when full history is empty.\n+[deiferni]\ndiff --git a/src/plone/restapi/services/history/get.py b/src/plone/restapi/services/history/get.py\nindex 95f60c99d..247f9ea4d 100644\n--- a/src/plone/restapi/services/history/get.py\n+++ b/src/plone/restapi/services/history/get.py\n@@ -40,6 +40,8 @@ def reply(self):\n         content_history_viewlet.navigation_root_url = site_url\n         content_history_viewlet.site_url = site_url\n         history = content_history_viewlet.fullHistory()\n+        if history is None:\n+            history = []\n \n         unwanted_keys = [\n             "diff_current_url",\ndiff --git a/src/plone/restapi/tests/test_services_history.py b/src/plone/restapi/tests/test_services_history.py\nindex a3ade88c9..325ba04c5 100644\n--- a/src/plone/restapi/tests/test_services_history.py\n+++ b/src/plone/restapi/tests/test_services_history.py\n@@ -1,9 +1,12 @@\n # -*- coding: utf-8 -*-\n from plone import api\n+from plone.app.testing import login\n from plone.app.testing import setRoles\n from plone.app.testing import SITE_OWNER_NAME\n from plone.app.testing import SITE_OWNER_PASSWORD\n from plone.app.testing import TEST_USER_ID\n+from plone.app.testing import TEST_USER_NAME\n+from plone.app.testing import TEST_USER_PASSWORD\n from plone.restapi.testing import PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n from plone.restapi.testing import RelativeSession\n \n@@ -124,6 +127,52 @@ def test_no_sharing(self):\n         self.assertNotIn("sharing", response.json())\n \n \n+class TestHistoryEndpointEmptyOrInacessibleHistory(unittest.TestCase):\n+\n+    layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n+\n+    def _disable_auto_versioning(self, content_type):\n+        portal_repository = self.portal.portal_repository\n+        types = list(portal_repository.getVersionableContentTypes())\n+        types.remove(content_type)\n+        portal_repository.setVersionableContentTypes(types)\n+        portal_repository.removePolicyFromContentType(\n+            content_type, u"version_on_revert"\n+        )\n+\n+    def setUp(self):\n+        self.portal = self.layer["portal"]\n+        self.portal_url = self.portal.absolute_url()\n+\n+        login(self.portal, SITE_OWNER_NAME)\n+\n+        # disabling auto versioning is necessary to have an empty revision\n+        # history\n+        self._disable_auto_versioning("Document")\n+\n+        self.portal.invokeFactory(\n+            "Document", id="doc_with_empty_history", title="My Document"\n+        )\n+        self.doc = self.portal.doc_with_empty_history\n+        api.content.transition(self.doc, "publish")\n+        self.endpoint_url = "{}/@history".format(self.doc.absolute_url())\n+\n+        self.api_session = RelativeSession(self.portal_url)\n+        self.api_session.headers.update({"Accept": "application/json"})\n+        self.api_session.auth = (TEST_USER_NAME, TEST_USER_PASSWORD)\n+        # forbid access to `workflowHistory`\n+        setRoles(self.portal, TEST_USER_ID, ["Reader", "Contributor"])\n+        transaction.commit()\n+\n+    def tearDown(self):\n+        self.api_session.close()\n+\n+    def test_empty_or_inaccessible_full_history_returns_empty_list(self):\n+        url = self.doc.absolute_url() + "/@history"\n+        response = self.api_session.get(url)\n+        self.assertEqual([], response.json())\n+\n+\n class TestHistoryEndpointTranslatedMessages(unittest.TestCase):\n     layer = PLONE_RESTAPI_DX_FUNCTIONAL_TESTING\n \n'

