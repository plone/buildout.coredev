Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:24+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/16d4317aa4fb194765591e650c52d4afe4e3acb9

Add dependency on robotframework-browser

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex dd74abb..90cafe1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -62,6 +62,7 @@ def read(filename):\n     "robotframework",\n     "robotframework-selenium2library",\n     "robotframework-seleniumtestability",\n+    "robotframework-browser",\n     "robotsuite",  # not a direct dependency, but required for convenience\n     "selenium",\n     "setuptools",\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:24+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/6c2367e4234517c968753b74c4431a6a332c6baa

Add minimal rfbrowser test sample

Files changed:
A src/plone/app/robotframework/tests/test_browser_library.robot
M src/plone/app/robotframework/tests/test_robot.py

b'diff --git a/src/plone/app/robotframework/tests/test_browser_library.robot b/src/plone/app/robotframework/tests/test_browser_library.robot\nnew file mode 100644\nindex 0000000..c485c7a\n--- /dev/null\n+++ b/src/plone/app/robotframework/tests/test_browser_library.robot\n@@ -0,0 +1,7 @@\n+*** Settings ***\n+Library   Browser\n+\n+*** Test Cases ***\n+Example Test\n+    New Page    https://playwright.dev\n+    Get Text    h1    ==    \xf0\x9f\x8e\xad Playwrighe\n\\ No newline at end of file\ndiff --git a/src/plone/app/robotframework/tests/test_robot.py b/src/plone/app/robotframework/tests/test_robot.py\nindex 6178ad9..4e51ab5 100644\n--- a/src/plone/app/robotframework/tests/test_robot.py\n+++ b/src/plone/app/robotframework/tests/test_robot.py\n@@ -22,6 +22,10 @@ def test_suite():\n     suite = unittest.TestSuite()\n     suite.addTests(\n         [\n+            layered(\n+                robotsuite.RobotTestSuite("test_browser_library.robot"),\n+                layer=SIMPLE_PUBLICATION_ROBOT_TESTING,\n+            ),\n             layered(\n                 robotsuite.RobotTestSuite("test_autologin_library.robot"),\n                 layer=SIMPLE_PUBLICATION_ROBOT_TESTING,\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:25+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/5c1ddbae119adc7f0807b979f03735cb60ef59f3

Init Resource  plone/app/robotframework/browser.robot

Files changed:
A src/plone/app/robotframework/browser.robot
M src/plone/app/robotframework/tests/test_browser_library.robot

b'diff --git a/src/plone/app/robotframework/browser.robot b/src/plone/app/robotframework/browser.robot\nnew file mode 100644\nindex 0000000..57bf752\n--- /dev/null\n+++ b/src/plone/app/robotframework/browser.robot\n@@ -0,0 +1,57 @@\n+*** Settings ***\n+\n+# This browser.robot setups Robot tests with Playwright via robotframework-browser.\n+# This browser.robot cannot be used with selenium.robot, saucelabs.robot or keywords.robot.\n+\n+# https://marketsquare.github.io/robotframework-browser/Browser.html#Importing\n+\n+Library  Browser  run_on_failure=${BROWSER_RUN_ON_FAILURE}\n+\n+Resource  variables.robot\n+Resource  ${CMFPLONE_SELECTORS}\n+\n+*** Variables ***\n+\n+${BROWSER_RUN_ON_FAILURE}  Take Screenshot\n+\n+${BROWSER}  chromium\n+\n+${\xc3\x90EBUG}\n+${TRACING}  ${OUTPUT_DIR}/tracing\n+\n+*** Keywords ***\n+\n+# ----------------------------------------------------------------------------\n+# Browser\n+# ----------------------------------------------------------------------------\n+\n+# https://marketsquare.github.io/robotframework-browser/Browser.html#New%20Persistent%20Context\n+\n+Open Test Browser\n+    ${record_video}  Create dictionary   dir  ${OUTPUT_DIR}/video\n+    Run Keyword If  "${DEBUG}".lower() == "true"\n+    ...    New persistent context\n+    ...        url=${START_URL}\n+    ...        browser=${BROWSER}\n+    ...        tracing=${TRACING}\n+    ...        recordVideo=${record_video}\n+    ...    ELSE\n+    ...    New persistent context\n+    ...        url=${START_URL}\n+    ...        browser=${BROWSER}\n+\n+Plone Test Setup\n+    Open Test Browser\n+\n+Plone Test Teardown\n+    Run Keyword If Test Failed  ${BROWSER_RUN_ON_FAILURE}\n+    Run Keyword If  "${DEBUG}".lower() == "true"  Sleep  1s\n+    Close browser\n+\n+Capture page screenshot\n+    Take screenshot\n+\n+Capture page screenshot and log source\n+    Take screenshot\n+    ${source}=  Get page source\n+    Log source  ${source}\ndiff --git a/src/plone/app/robotframework/tests/test_browser_library.robot b/src/plone/app/robotframework/tests/test_browser_library.robot\nindex c485c7a..f90e8fd 100644\n--- a/src/plone/app/robotframework/tests/test_browser_library.robot\n+++ b/src/plone/app/robotframework/tests/test_browser_library.robot\n@@ -1,7 +1,19 @@\n *** Settings ***\n-Library   Browser\n+\n+Resource  plone/app/robotframework/browser.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Test Setup  Run keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n \n *** Test Cases ***\n-Example Test\n-    New Page    https://playwright.dev\n-    Get Text    h1    ==    \xf0\x9f\x8e\xad Playwrighe\n\\ No newline at end of file\n+\n+Test create content\n+    Enable autologin as  Contributor\n+    Create content  type=Document  id=example-document  title=Example document\n+    Go to  ${PLONE_URL}/example-document\n+    Get text  h1  Should be  Example document\n+   \n+# https://marketsquare.github.io/robotframework-browser/Browser.html#Assertions\n+    \n\\ No newline at end of file\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:25+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/62be708713755e35033eb6ab402785564eddec4b

Add notes on playwright video recording and trace viewer

Files changed:
M src/plone/app/robotframework/browser.robot

b'diff --git a/src/plone/app/robotframework/browser.robot b/src/plone/app/robotframework/browser.robot\nindex 57bf752..fc7fb2a 100644\n--- a/src/plone/app/robotframework/browser.robot\n+++ b/src/plone/app/robotframework/browser.robot\n@@ -3,6 +3,17 @@\n # This browser.robot setups Robot tests with Playwright via robotframework-browser.\n # This browser.robot cannot be used with selenium.robot, saucelabs.robot or keywords.robot.\n \n+# Requires initialization::\n+#\n+# $ bin/rfbrowser init\n+#\n+# Creates video and trace with ROBOT_DEBUG=true\n+# \n+# Traces can be viewed with\n+#\n+# $ bin/rfbrowser -F parts/test/*/*/tracing show-trace\n+#\n+\n # https://marketsquare.github.io/robotframework-browser/Browser.html#Importing\n \n Library  Browser  run_on_failure=${BROWSER_RUN_ON_FAILURE}\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:25+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/2f66f9a63582c30c5fa019fd5f6365366707c503

Add separate ROBOT_DEBUG=true flag to pause on failure and ROBOT_TRACE=true to record video and trace

Files changed:
M src/plone/app/robotframework/browser.robot

b'diff --git a/src/plone/app/robotframework/browser.robot b/src/plone/app/robotframework/browser.robot\nindex fc7fb2a..f732d22 100644\n--- a/src/plone/app/robotframework/browser.robot\n+++ b/src/plone/app/robotframework/browser.robot\n@@ -7,7 +7,8 @@\n #\n # $ bin/rfbrowser init\n #\n-# Creates video and trace with ROBOT_DEBUG=true\n+# Pauses execution on error with ROBOT_DEBUG=true\n+# Creates video and trace with ROBOT_TRACE=true\n # \n # Traces can be viewed with\n #\n@@ -27,7 +28,8 @@ ${BROWSER_RUN_ON_FAILURE}  Take Screenshot\n \n ${BROWSER}  chromium\n \n-${\xc3\x90EBUG}\n+${TRACE}\n+${DEBUG}\n ${TRACING}  ${OUTPUT_DIR}/tracing\n \n *** Keywords ***\n@@ -41,6 +43,10 @@ ${TRACING}  ${OUTPUT_DIR}/tracing\n Open Test Browser\n     ${record_video}  Create dictionary   dir  ${OUTPUT_DIR}/video\n     Run Keyword If  "${DEBUG}".lower() == "true"\n+    ...    Open browser\n+    ...        url=${START_URL}\n+    ...        browser=${BROWSER}\n+    ...    ELSE IF  "${TRACE}".lower() == "true"\n     ...    New persistent context\n     ...        url=${START_URL}\n     ...        browser=${BROWSER}\n@@ -56,7 +62,7 @@ Plone Test Setup\n \n Plone Test Teardown\n     Run Keyword If Test Failed  ${BROWSER_RUN_ON_FAILURE}\n-    Run Keyword If  "${DEBUG}".lower() == "true"  Sleep  1s\n+    Run Keyword If  "${TRACE}".lower() == "true"  Sleep  1s\n     Close browser\n \n Capture page screenshot\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:25+02:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/988d56233a7ffbd9d61e5d4dcde7003482f8e7e3

Refactor Playwright browser configuration to support ROBOT_HEADLESS, ROBOT_DEBUG and ROBOT_TRACE flags in a reasonable way

Files changed:
M src/plone/app/robotframework/browser.robot

b'diff --git a/src/plone/app/robotframework/browser.robot b/src/plone/app/robotframework/browser.robot\nindex f732d22..dd226a0 100644\n--- a/src/plone/app/robotframework/browser.robot\n+++ b/src/plone/app/robotframework/browser.robot\n@@ -7,15 +7,16 @@\n #\n # $ bin/rfbrowser init\n #\n-# Pauses execution on error with ROBOT_DEBUG=true\n # Creates video and trace with ROBOT_TRACE=true\n-# \n+# Pauses execution on error with ROBOT_DEBUG=true\n+# Run browser as headless with ROBOT_HEADLESS=true\n+# Is backwards compatible with ROBOT_BROWESR=headless[browsername]\n+#\n # Traces can be viewed with\n #\n # $ bin/rfbrowser -F parts/test/*/*/tracing show-trace\n #\n-\n-# https://marketsquare.github.io/robotframework-browser/Browser.html#Importing\n+# Keywords: https://marketsquare.github.io/robotframework-browser/Browser.html\n \n Library  Browser  run_on_failure=${BROWSER_RUN_ON_FAILURE}\n \n@@ -26,10 +27,11 @@ Resource  ${CMFPLONE_SELECTORS}\n \n ${BROWSER_RUN_ON_FAILURE}  Take Screenshot\n \n-${BROWSER}  chromium\n+${BROWSER}  headlesschromium\n \n-${TRACE}\n-${DEBUG}\n+${DEBUG}  false\n+${HEADLESS}  false\n+${TRACE}  false\n ${TRACING}  ${OUTPUT_DIR}/tracing\n \n *** Keywords ***\n@@ -40,29 +42,47 @@ ${TRACING}  ${OUTPUT_DIR}/tracing\n \n # https://marketsquare.github.io/robotframework-browser/Browser.html#New%20Persistent%20Context\n \n+Configure Test Browser\n+    ${DEBUG}=     Set Variable If     "${DEBUG}".lower() in ["1", "on", "true", "yes"]  ${TRUE}  ${FALSE}\n+    ${TRACE}=     Set Variable If     "${TRACE}".lower() in ["1", "on", "true", "yes"]  ${TRUE}  ${FALSE}\n+    ${HEADLESS}=  Set Variable If     "${HEADLESS}".lower() in ["1", "on", "true", "yes"]  ${TRUE}  ${FALSE}\n+    ${HEADLESS}=  Set Variable if     "${BROWSER}".startswith("headless")  ${TRUE}  ${HEADLESS}\n+    ${HEADLESS}=  Set Variable If     ${TRACE}  ${FALSE}  ${HEADLESS}\n+    ${HEADLESS}=  Set Variable If     ${DEBUG}  ${FALSE}  ${HEADLESS}\n+    ${BROWSER}=   Set Variable if     "${BROWSER}".startswith("headless")  ${BROWSER[len("headless"):]}  ${BROWSER}\n+    ${VIDEO}=     Create dictionary   dir  ${OUTPUT_DIR}/video\n+\n+    Set Suite Variable  ${BROWSER}    ${BROWSER}\n+    Set Suite Variable  ${DEBUG}      ${DEBUG}\n+    Set Suite Variable  ${HEADLESS}   ${HEADLESS}\n+    Set Suite Variable  ${TRACE}      ${TRACE}\n+    Set Suite Variable  ${VIDEO}      ${VIDEO}\n+\n Open Test Browser\n-    ${record_video}  Create dictionary   dir  ${OUTPUT_DIR}/video\n-    Run Keyword If  "${DEBUG}".lower() == "true"\n+    Configure Test Browser\n+    Run Keyword If  ${DEBUG}\n     ...    Open browser\n     ...        url=${START_URL}\n     ...        browser=${BROWSER}\n-    ...    ELSE IF  "${TRACE}".lower() == "true"\n+    ...    ELSE IF  ${TRACE}\n     ...    New persistent context\n     ...        url=${START_URL}\n     ...        browser=${BROWSER}\n     ...        tracing=${TRACING}\n-    ...        recordVideo=${record_video}\n+    ...        headless=${HEADLESS}\n+    ...        recordVideo=${VIDEO}\n     ...    ELSE\n     ...    New persistent context\n     ...        url=${START_URL}\n     ...        browser=${BROWSER}\n+    ...        headless=${HEADLESS}\n \n Plone Test Setup\n     Open Test Browser\n \n Plone Test Teardown\n     Run Keyword If Test Failed  ${BROWSER_RUN_ON_FAILURE}\n-    Run Keyword If  "${TRACE}".lower() == "true"  Sleep  1s\n+    Run Keyword If  ${TRACE}  Sleep  1s\n     Close browser\n \n Capture page screenshot\n@@ -71,4 +91,4 @@ Capture page screenshot\n Capture page screenshot and log source\n     Take screenshot\n     ${source}=  Get page source\n-    Log source  ${source}\n+    Log  ${source}\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-06-30T18:55:26+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.robotframework/commit/235ddcb17f9e03e6c99ffef2535eecf13bc68d8d

Add news entry

Files changed:
A news/3813.feature

b'diff --git a/news/3813.feature b/news/3813.feature\nnew file mode 100644\nindex 0000000..6f3ff46\n--- /dev/null\n+++ b/news/3813.feature\n@@ -0,0 +1,2 @@\n+Add support for `playwright`-based tests via `robotframework-browser`.\n+[datakurre]\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-07-02T19:49:49+03:00
Author: Asko Soukka (datakurre) <asko.soukka@iki.fi>
Commit: https://github.com/plone/plone.app.robotframework/commit/7b57aee63556edf083fed782b7dfee396a1f5419

Fix Playwright integration to map headlesschrome to chromium with headless=true

Files changed:
M src/plone/app/robotframework/browser.robot

b'diff --git a/src/plone/app/robotframework/browser.robot b/src/plone/app/robotframework/browser.robot\nindex dd226a0..5e66276 100644\n--- a/src/plone/app/robotframework/browser.robot\n+++ b/src/plone/app/robotframework/browser.robot\n@@ -50,6 +50,7 @@ Configure Test Browser\n     ${HEADLESS}=  Set Variable If     ${TRACE}  ${FALSE}  ${HEADLESS}\n     ${HEADLESS}=  Set Variable If     ${DEBUG}  ${FALSE}  ${HEADLESS}\n     ${BROWSER}=   Set Variable if     "${BROWSER}".startswith("headless")  ${BROWSER[len("headless"):]}  ${BROWSER}\n+    ${BROWSER}=   Set Variable if     "${BROWSER}" == "chrome"  chromium  ${BROWSER}\n     ${VIDEO}=     Create dictionary   dir  ${OUTPUT_DIR}/video\n \n     Set Suite Variable  ${BROWSER}    ${BROWSER}\n'

Repository: plone.app.robotframework


Branch: refs/heads/master
Date: 2023-07-09T15:56:02+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.app.robotframework/commit/9c3a0eb8f528ba2639626de15662440557aeabe2

Merge pull request #149 from plone/datakurre-rfbrowser

Support playwright based robot tests via robotframework-browser extension

Files changed:
A news/3813.feature
A src/plone/app/robotframework/browser.robot
A src/plone/app/robotframework/tests/test_browser_library.robot
M setup.py
M src/plone/app/robotframework/tests/test_robot.py

b'diff --git a/news/3813.feature b/news/3813.feature\nnew file mode 100644\nindex 0000000..6f3ff46\n--- /dev/null\n+++ b/news/3813.feature\n@@ -0,0 +1,2 @@\n+Add support for `playwright`-based tests via `robotframework-browser`.\n+[datakurre]\ndiff --git a/setup.py b/setup.py\nindex dd74abb..90cafe1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -62,6 +62,7 @@ def read(filename):\n     "robotframework",\n     "robotframework-selenium2library",\n     "robotframework-seleniumtestability",\n+    "robotframework-browser",\n     "robotsuite",  # not a direct dependency, but required for convenience\n     "selenium",\n     "setuptools",\ndiff --git a/src/plone/app/robotframework/browser.robot b/src/plone/app/robotframework/browser.robot\nnew file mode 100644\nindex 0000000..5e66276\n--- /dev/null\n+++ b/src/plone/app/robotframework/browser.robot\n@@ -0,0 +1,95 @@\n+*** Settings ***\n+\n+# This browser.robot setups Robot tests with Playwright via robotframework-browser.\n+# This browser.robot cannot be used with selenium.robot, saucelabs.robot or keywords.robot.\n+\n+# Requires initialization::\n+#\n+# $ bin/rfbrowser init\n+#\n+# Creates video and trace with ROBOT_TRACE=true\n+# Pauses execution on error with ROBOT_DEBUG=true\n+# Run browser as headless with ROBOT_HEADLESS=true\n+# Is backwards compatible with ROBOT_BROWESR=headless[browsername]\n+#\n+# Traces can be viewed with\n+#\n+# $ bin/rfbrowser -F parts/test/*/*/tracing show-trace\n+#\n+# Keywords: https://marketsquare.github.io/robotframework-browser/Browser.html\n+\n+Library  Browser  run_on_failure=${BROWSER_RUN_ON_FAILURE}\n+\n+Resource  variables.robot\n+Resource  ${CMFPLONE_SELECTORS}\n+\n+*** Variables ***\n+\n+${BROWSER_RUN_ON_FAILURE}  Take Screenshot\n+\n+${BROWSER}  headlesschromium\n+\n+${DEBUG}  false\n+${HEADLESS}  false\n+${TRACE}  false\n+${TRACING}  ${OUTPUT_DIR}/tracing\n+\n+*** Keywords ***\n+\n+# ----------------------------------------------------------------------------\n+# Browser\n+# ----------------------------------------------------------------------------\n+\n+# https://marketsquare.github.io/robotframework-browser/Browser.html#New%20Persistent%20Context\n+\n+Configure Test Browser\n+    ${DEBUG}=     Set Variable If     "${DEBUG}".lower() in ["1", "on", "true", "yes"]  ${TRUE}  ${FALSE}\n+    ${TRACE}=     Set Variable If     "${TRACE}".lower() in ["1", "on", "true", "yes"]  ${TRUE}  ${FALSE}\n+    ${HEADLESS}=  Set Variable If     "${HEADLESS}".lower() in ["1", "on", "true", "yes"]  ${TRUE}  ${FALSE}\n+    ${HEADLESS}=  Set Variable if     "${BROWSER}".startswith("headless")  ${TRUE}  ${HEADLESS}\n+    ${HEADLESS}=  Set Variable If     ${TRACE}  ${FALSE}  ${HEADLESS}\n+    ${HEADLESS}=  Set Variable If     ${DEBUG}  ${FALSE}  ${HEADLESS}\n+    ${BROWSER}=   Set Variable if     "${BROWSER}".startswith("headless")  ${BROWSER[len("headless"):]}  ${BROWSER}\n+    ${BROWSER}=   Set Variable if     "${BROWSER}" == "chrome"  chromium  ${BROWSER}\n+    ${VIDEO}=     Create dictionary   dir  ${OUTPUT_DIR}/video\n+\n+    Set Suite Variable  ${BROWSER}    ${BROWSER}\n+    Set Suite Variable  ${DEBUG}      ${DEBUG}\n+    Set Suite Variable  ${HEADLESS}   ${HEADLESS}\n+    Set Suite Variable  ${TRACE}      ${TRACE}\n+    Set Suite Variable  ${VIDEO}      ${VIDEO}\n+\n+Open Test Browser\n+    Configure Test Browser\n+    Run Keyword If  ${DEBUG}\n+    ...    Open browser\n+    ...        url=${START_URL}\n+    ...        browser=${BROWSER}\n+    ...    ELSE IF  ${TRACE}\n+    ...    New persistent context\n+    ...        url=${START_URL}\n+    ...        browser=${BROWSER}\n+    ...        tracing=${TRACING}\n+    ...        headless=${HEADLESS}\n+    ...        recordVideo=${VIDEO}\n+    ...    ELSE\n+    ...    New persistent context\n+    ...        url=${START_URL}\n+    ...        browser=${BROWSER}\n+    ...        headless=${HEADLESS}\n+\n+Plone Test Setup\n+    Open Test Browser\n+\n+Plone Test Teardown\n+    Run Keyword If Test Failed  ${BROWSER_RUN_ON_FAILURE}\n+    Run Keyword If  ${TRACE}  Sleep  1s\n+    Close browser\n+\n+Capture page screenshot\n+    Take screenshot\n+\n+Capture page screenshot and log source\n+    Take screenshot\n+    ${source}=  Get page source\n+    Log  ${source}\ndiff --git a/src/plone/app/robotframework/tests/test_browser_library.robot b/src/plone/app/robotframework/tests/test_browser_library.robot\nnew file mode 100644\nindex 0000000..f90e8fd\n--- /dev/null\n+++ b/src/plone/app/robotframework/tests/test_browser_library.robot\n@@ -0,0 +1,19 @@\n+*** Settings ***\n+\n+Resource  plone/app/robotframework/browser.robot\n+\n+Library  Remote  ${PLONE_URL}/RobotRemote\n+\n+Test Setup  Run keywords  Plone test setup\n+Test Teardown  Run keywords  Plone test teardown\n+\n+*** Test Cases ***\n+\n+Test create content\n+    Enable autologin as  Contributor\n+    Create content  type=Document  id=example-document  title=Example document\n+    Go to  ${PLONE_URL}/example-document\n+    Get text  h1  Should be  Example document\n+   \n+# https://marketsquare.github.io/robotframework-browser/Browser.html#Assertions\n+    \n\\ No newline at end of file\ndiff --git a/src/plone/app/robotframework/tests/test_robot.py b/src/plone/app/robotframework/tests/test_robot.py\nindex 6178ad9..4e51ab5 100644\n--- a/src/plone/app/robotframework/tests/test_robot.py\n+++ b/src/plone/app/robotframework/tests/test_robot.py\n@@ -22,6 +22,10 @@ def test_suite():\n     suite = unittest.TestSuite()\n     suite.addTests(\n         [\n+            layered(\n+                robotsuite.RobotTestSuite("test_browser_library.robot"),\n+                layer=SIMPLE_PUBLICATION_ROBOT_TESTING,\n+            ),\n             layered(\n                 robotsuite.RobotTestSuite("test_autologin_library.robot"),\n                 layer=SIMPLE_PUBLICATION_ROBOT_TESTING,\n'

