Repository: plone.restapi


Branch: refs/heads/master
Date: 2021-04-19T21:15:45+02:00
Author: Mauro Amico (mamico) <mauro.amico@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/d78a8411d1166ee785ee71292a540f39fc2cf44c

fix sort_order in querystring-search api (#1108)

* fix sort_order

* changelog

* black + improved tests readability

* fix test

Files changed:
A news/1108.bugfix
M src/plone/restapi/services/querystringsearch/get.py
M src/plone/restapi/tests/test_services_querystringsearch.py

b'diff --git a/news/1108.bugfix b/news/1108.bugfix\nnew file mode 100644\nindex 000000000..4f7ba16c4\n--- /dev/null\n+++ b/news/1108.bugfix\n@@ -0,0 +1,2 @@\n+Fix ``@querystring-search`` endpoint with correct sort_order\n+@mamico\ndiff --git a/src/plone/restapi/services/querystringsearch/get.py b/src/plone/restapi/services/querystringsearch/get.py\nindex 9d620adff..63b92107c 100644\n--- a/src/plone/restapi/services/querystringsearch/get.py\n+++ b/src/plone/restapi/services/querystringsearch/get.py\n@@ -31,7 +31,7 @@ def reply(self):\n             raise Exception("No query supplied")\n \n         if sort_order:\n-            sort_order = "descending" if sort_order else "ascending"\n+            sort_order = "descending" if sort_order == "descending" else "ascending"\n \n         querybuilder = getMultiAdapter(\n             (self.context, self.request), name="querybuilderresults"\ndiff --git a/src/plone/restapi/tests/test_services_querystringsearch.py b/src/plone/restapi/tests/test_services_querystringsearch.py\nindex d8fa33e30..475986bb9 100644\n--- a/src/plone/restapi/tests/test_services_querystringsearch.py\n+++ b/src/plone/restapi/tests/test_services_querystringsearch.py\n@@ -167,3 +167,98 @@ def test_querystringsearch_do_not_return_context(self):\n             response.json()["items"][0]["@id"],\n             "{}/testdocument2".format(self.portal.absolute_url()),\n         )\n+\n+    def test_querystringsearch_sort(self):\n+        # id: testdocument1, title: Test I Document 1\n+        # id: testdocument2, title: Test H Document 2\n+        # ...\n+        # id: testdocument9, title: Test A Document 9\n+        for a in range(1, 10):\n+            self.portal.invokeFactory(\n+                "Document",\n+                "testdocument" + str(a),\n+                title="Test " + "ABCDEFGHI"[-a] + " Document " + str(a),\n+            )\n+        transaction.commit()\n+\n+        query = [\n+            {\n+                "i": "portal_type",\n+                "o": "plone.app.querystring.operation.selection.is",\n+                "v": ["Document"],\n+            }\n+        ]\n+        # default order \'ascending\'\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": query,\n+                "sort_on": "sortable_title",\n+            },\n+        )\n+        self.assertEqual(response.json()["items_total"], 10)\n+        self.assertEqual(\n+            response.json()["items"][0]["title"],\n+            "Test A Document 9",\n+        )\n+        self.assertEqual(\n+            response.json()["items"][-1]["title"],\n+            "Test I Document 1",\n+        )\n+\n+        # force order \'ascending\'\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": query,\n+                "sort_on": "sortable_title",\n+                "sort_order": "ascending",\n+            },\n+        )\n+        self.assertEqual(response.json()["items_total"], 10)\n+        self.assertEqual(\n+            response.json()["items"][0]["title"],\n+            "Test A Document 9",\n+        )\n+        self.assertEqual(\n+            response.json()["items"][-1]["title"],\n+            "Test I Document 1",\n+        )\n+\n+        # force order \'descending\'\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": query,\n+                "sort_on": "sortable_title",\n+                "sort_order": "descending",\n+            },\n+        )\n+        self.assertEqual(response.json()["items_total"], 10)\n+        self.assertEqual(\n+            response.json()["items"][0]["title"],\n+            "Test I Document 1",\n+        )\n+        self.assertEqual(\n+            response.json()["items"][-1]["title"],\n+            "Test A Document 9",\n+        )\n+\n+        # sort by id, \'ascending\'\n+        response = self.api_session.post(\n+            "/@querystring-search",\n+            json={\n+                "query": query,\n+                "sort_on": "getId",\n+                "sort_order": "ascending",\n+            },\n+        )\n+        self.assertEqual(response.json()["items_total"], 10)\n+        self.assertEqual(\n+            response.json()["items"][0]["@id"],\n+            "{}/testdocument".format(self.portal.absolute_url()),\n+        )\n+        self.assertEqual(\n+            response.json()["items"][-1]["@id"],\n+            "{}/testdocument9".format(self.portal.absolute_url()),\n+        )\n'

