Repository: plone.restapi


Branch: refs/heads/7.x.x
Date: 2022-01-07T07:58:51+01:00
Author: Balázs Reé (reebalazs) <ree@greenfinity.hu>
Commit: https://github.com/plone/plone.restapi/commit/58b1a8a70e03f98e7a35bf657f526474e530c9f6

Be permissive when testing the schema of the querystring endpoint (#1306) (#1309)

Allow any additional property to be defined by plone.app.querystring,
otherwise no properties can ever be added. The change also makes sure
that all code depending on any existing attributes continues to work.
This is needed in favor of
https://github.com/plone/plone.app.querystring/pull/104 .

Files changed:
A news/1307.feature
M src/plone/restapi/tests/test_services_querystring.py

b'diff --git a/news/1307.feature b/news/1307.feature\nnew file mode 100644\nindex 000000000..13b86a742\n--- /dev/null\n+++ b/news/1307.feature\n@@ -0,0 +1 @@\n+Be permissive when testing the schema of the querystring endpoint [reebalazs]\ndiff --git a/src/plone/restapi/tests/test_services_querystring.py b/src/plone/restapi/tests/test_services_querystring.py\nindex e749962e3..1892eee8b 100644\n--- a/src/plone/restapi/tests/test_services_querystring.py\n+++ b/src/plone/restapi/tests/test_services_querystring.py\n@@ -47,25 +47,31 @@ def test_endpoint_shows_field_config(self):\n         indexes = response.json()["indexes"]\n         idx = indexes["Title"]\n \n-        expected_field_config = {\n-            u"description": u"Text search of an item\'s title",\n-            u"enabled": True,\n-            u"group": u"Text",\n-            u"operations": [u"plone.app.querystring.operation.string.contains"],\n-            u"operators": {\n-                u"plone.app.querystring.operation.string.contains": {\n-                    u"description": None,\n-                    u"operation": u"plone.app.querystring.queryparser._contains",\n-                    u"title": u"Contains",\n-                    u"widget": u"StringWidget",\n+        # Be permissive with the check and only check the existing\n+        # attributes. (This gives plone.app.querystring to extend its schema\n+        # when that becomes necessary, while making sure that all code depending\n+        # on any existing attributes continues to work.)\n+        self.assertEqual(idx["description"], "Text search of an item\'s title")\n+        self.assertEqual(idx["enabled"], True)\n+        self.assertEqual(idx["group"], "Text")\n+        self.assertEqual(\n+            idx["operations"], ["plone.app.querystring.operation.string.contains"]\n+        )\n+        self.assertEqual(\n+            idx["operators"],\n+            {\n+                "plone.app.querystring.operation.string.contains": {\n+                    "description": None,\n+                    "operation": "plone.app.querystring.queryparser._contains",\n+                    "title": "Contains",\n+                    "widget": "StringWidget",\n                 }\n             },\n-            u"sortable": False,\n-            u"title": u"Title",\n-            u"values": {},\n-            u"vocabulary": None,\n-        }\n-        self.assertEqual(expected_field_config, idx)\n+        )\n+        self.assertEqual(idx["sortable"], False)\n+        self.assertEqual(idx["title"], "Title")\n+        self.assertEqual(idx["values"], {})\n+        self.assertEqual(idx["vocabulary"], None)\n \n     def test_endpoint_inlines_vocabularies(self):\n         response = self.api_session.get("/@querystring")\n'

