Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2024-03-11T13:00:35+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/7dce0f40c332d1c1a5b649cb9a54b3750413266d

Configuring with plone/meta [7.x]

Files changed:
A .flake8
A .github/workflows/meta.yml
A dependabot.yml
A news/+meta.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.cfg
M setup.py
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/browser/templates/modify_translations.pt
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/tests/test_form.py
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89d..5b3c112c3 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -12,7 +13,8 @@\n root = true\n \n \n-[*]  # For All Files\n+[*]\n+# Default settings for all files.\n # Unix-style newlines with a newline ending every file\n end_of_line = lf\n insert_final_newline = true\n@@ -28,12 +30,27 @@ max_line_length = off\n # 4 space indentation\n indent_size = 4\n \n-[*.{yml,zpt,pt,dtml,zcml}]\n+[*.{yml,zpt,pt,dtml,zcml,html,xml}]\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss}]\n+# Frontend development\n+# 2 space indentation\n+indent_size = 2\n+max_line_length = 80\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 000000000..38918f42f\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 000000000..b8edec02f\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,68 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release_ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 3a7251581..486392f69 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,46 +1,56 @@\n-*.pyc\n-*.egg\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n-\n-# Directories\n-/eggs/*\n-/parts/*\n-/bin/*\n-/extras/*\n-/develop-eggs/*\n-/var/*\n-/build/*\n-/dist/*\n-/docs/_build\n-/coverage\n+*.pyc\n+*.pyo\n \n-# Sublime Text\n-.codeintel/*\n-MKcodeintel\n+# translation related\n+*.mo\n \n-# buildout\n+# tools related\n+build/\n+.coverage\n+.*project\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n+include/\n+lib/\n+lib64\n .mr.developer.cfg\n-\n-# eclipse\n-.project\n-.pydevproject\n-.settings\n-\n-# Mac\n-.DS_Store\n-\n-# Emacs\n-.emacs.desktop*\n-\n-# Virtualenv\n-/lib64/\n-/lib/\n-/include/\n-/local/\n-.Python\n-\n-# tests\n-/test_acceptance/*\n-robot_*\n+parts/\n+pyvenv.cfg\n+var/\n+local.cfg\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex b66417080..93331a41b 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,9 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "11f0db91"\n+commit-id = "123ebc0a"\n+\n+[pyproject]\n+codespell_ignores = "pres"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5cd1..f857b4837 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,37 +1,62 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.15.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n -   repo: https://github.com/pycqa/isort\n-    rev: 5.12.0\n+    rev: 5.13.2\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 23.3.0\n+    rev: 24.1.1\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.0.4\n+    rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 6.0.0\n+    rev: 7.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.4\n+    rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,30 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.22.0"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.1.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/dependabot.yml b/dependabot.yml\nnew file mode 100644\nindex 000000000..bbd3ab050\n--- /dev/null\n+++ b/dependabot.yml\n@@ -0,0 +1,11 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+version: 2\n+updates:\n+\n+  - package-ecosystem: "github-actions"\n+    directory: "/"\n+    schedule:\n+      # Check for updates to GitHub Actions every week\n+      interval: "weekly"\ndiff --git a/news/+meta.internal b/news/+meta.internal\nnew file mode 100644\nindex 000000000..c08f53991\n--- /dev/null\n+++ b/news/+meta.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 78409e007..a4c099510 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,12 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +40,127 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,pres"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.LinguaPlone\', \'Products.CMFPlone\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet,pres"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".flake8",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "dependabot.yml",\n+    "mx.ini",\n+    "tox.ini",\n+\n+]\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+#  check_manifest_extra_lines = """\n+#  ignore-bad-ideas = [\n+#      "some/test/file/PKG-INFO",\n+#  ]\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/setup.cfg\nindex 80b51b21c..d6e2ab5d4 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -27,25 +27,3 @@ maintainer_email = releasemanager@plone.org\n \n [options]\n python_requires = >=3.8\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\ndiff --git a/setup.py b/setup.py\nindex da4d5c90c..bae0e3e48 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,4 +1,5 @@\n """Setup plone.app.multilingual."""\n+\n from setuptools import find_packages\n from setuptools import setup\n \ndiff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py\nindex fcc12ae2a..2b3d00c63 100644\n--- a/src/plone/app/multilingual/browser/menu.py\n+++ b/src/plone/app/multilingual/browser/menu.py\n@@ -530,7 +530,6 @@ class TranslateSubMenuItem(BrowserSubMenuItem):\n     )\n     submenuId = "plone_contentmenu_multilingual"\n     order = 5\n-    extra = {"id": "plone-contentmenu-multilingual"}\n \n     @property\n     def action(self):\ndiff --git a/src/plone/app/multilingual/browser/templates/modify_translations.pt b/src/plone/app/multilingual/browser/templates/modify_translations.pt\nindex c72c18d7c..3c7b72e69 100644\n--- a/src/plone/app/multilingual/browser/templates/modify_translations.pt\n+++ b/src/plone/app/multilingual/browser/templates/modify_translations.pt\n@@ -74,7 +74,7 @@\n                      href="#"\n                      title="Disconnect translation"\n                      tal:attributes="\n-                       href string:${context/absolute_url}/disconnect_translation?came_from=${context/UID}&language=${lang};;\n+                       href string:${context/absolute_url}/disconnect_translation?came_from=${context/UID}&language=${lang};\n                      "\n                      i18n:attributes="title disconnect_translation"\n                   >\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex 1f32c1cbd..37bc9cd9f 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -74,7 +74,7 @@ def register_translation(self, language, content):\n         if not language and language != "":\n             raise KeyError("There is no target language")\n \n-        if type(content) == str:\n+        if isinstance(content, str):\n             content = uuidToObject(content)\n \n         # Check if exists and is not myself\ndiff --git a/src/plone/app/multilingual/tests/test_form.py b/src/plone/app/multilingual/tests/test_form.py\nindex e1bb56512..e4644cc96 100644\n--- a/src/plone/app/multilingual/tests/test_form.py\n+++ b/src/plone/app/multilingual/tests/test_form.py\n@@ -47,9 +47,9 @@ def test_translation_form_creates_translation(self):\n         self.browser.open(a_ca.absolute_url() + "/@@create_translation?language=en")\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\n@@ -75,9 +75,9 @@ def test_translation_form_prevents_translating_twice(self):\n         add_translation_url = self.browser.url\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\n@@ -101,9 +101,9 @@ def test_translation_can_be_unregistered(self):\n         self.browser.open(a_ca.absolute_url() + "/@@create_translation?language=en")\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         # Unregister translation\n@@ -185,9 +185,9 @@ def test_translation_can_be_removed_by_deleting(self):\n         self.browser.open(a_ca.absolute_url() + "/@@create_translation?language=en")\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         # Remove translation\n@@ -210,9 +210,9 @@ def test_folderish_content_can_be_translated(self):\n             + "/ca/test-folder/@@create_translation?language=en"\n         )\n \n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test folder"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test folder"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\n@@ -234,9 +234,9 @@ def test_content_in_folders_can_be_translated(self):\n             af_ca.absolute_url() + "/" + b_ca.id + "/@@create_translation?language=en"\n         )\n \n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test folder"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test folder"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\ndiff --git a/tox.ini b/tox.ini\nindex 0b1bccdee..943908b8b 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,51 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +67,153 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n+deps =\n+    build\n+    z3c.dependencychecker==2.14.3\n+commands =\n+    python -m build --sdist\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n deps =\n-    z3c.dependencychecker==2.11\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n+##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n+    rfbrowser init\n+    coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n+    coverage html\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2024-03-11T13:14:26+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/a9b0c39955a3f9a512dbff6cf2ac19383110d289

Configuring with plone/meta

Files changed:
M .meta.toml
M pyproject.toml
M setup.py
M src/plone/app/multilingual/browser/controlpanel.py

b'diff --git a/.meta.toml b/.meta.toml\nindex 93331a41..3beb63b3 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -7,3 +7,4 @@ commit-id = "123ebc0a"\n \n [pyproject]\n codespell_ignores = "pres"\n+dependencies_ignores = "[\'Products.CMFPlone\', \'Products.LinguaPlone\']"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex a4c09951..8fcae1b4 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -119,6 +119,7 @@ Zope = [\n   \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n+ignore-packages = [\'Products.CMFPlone\', \'Products.LinguaPlone\']\n \n ##\n # Add extra configuration options in .meta.toml:\ndiff --git a/setup.py b/setup.py\nindex bae0e3e4..3d83b0ae 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -18,6 +18,7 @@\n         "Products.CMFCore",\n         "Products.GenericSetup",\n         "Products.statusmessages",\n+        "Zope",\n         "plone.app.content",\n         "plone.app.contentmenu",\n         "plone.app.dexterity",\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex 76d88e48..32e73860 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -6,7 +6,6 @@\n from plone.app.uuid.utils import uuidToObject\n from plone.base.interfaces import ILanguage\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.controlpanel.browser.language import LanguageControlPanelForm\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n@@ -20,6 +19,13 @@\n import json\n \n \n+try:\n+    # In Plone 6.0 we try not to depend on Products.CMFPlone.\n+    from Products.CMFPlone.controlpanel.browser.language import LanguageControlPanelForm\n+except ImportError:\n+    LanguageControlPanelForm = controlpanel.RegistryEditForm\n+\n+\n _ = MessageFactory("plone.app.multilingual")\n \n \n'

Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2024-03-18T10:17:02+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/280e1a0c86db5abd1adbcfb00149e217e1e3f7a0

Merge branch '7.x' into config-with-default-template-77741782

Files changed:
A news/449.bugfix
M src/plone/app/multilingual/browser/templates/modify_translations.pt

b'diff --git a/news/449.bugfix b/news/449.bugfix\nnew file mode 100644\nindex 00000000..339a02fe\n--- /dev/null\n+++ b/news/449.bugfix\n@@ -0,0 +1 @@\n+Fixing disconnection of translations [gogobd]\ndiff --git a/src/plone/app/multilingual/browser/templates/modify_translations.pt b/src/plone/app/multilingual/browser/templates/modify_translations.pt\nindex 3c7b72e6..5187ebba 100644\n--- a/src/plone/app/multilingual/browser/templates/modify_translations.pt\n+++ b/src/plone/app/multilingual/browser/templates/modify_translations.pt\n@@ -74,7 +74,7 @@\n                      href="#"\n                      title="Disconnect translation"\n                      tal:attributes="\n-                       href string:${context/absolute_url}/disconnect_translation?came_from=${context/UID}&language=${lang};\n+                       href python:context.absolute_url() + \'/disconnect_translation?came_from=\' + context.UID() + \'&amp;language=\' + lang;\n                      "\n                      i18n:attributes="title disconnect_translation"\n                   >\n'

Repository: plone.app.multilingual


Branch: refs/heads/7.x
Date: 2024-03-18T10:18:58+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.app.multilingual/commit/556160e9e8f11ec40e4f53f124a3098a3cdf1271

Merge pull request #451 from plone/config-with-default-template-77741782

Configuring with plone/meta [7.x]

Files changed:
A .flake8
A .github/workflows/meta.yml
A dependabot.yml
A news/+meta.internal
M .editorconfig
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.cfg
M setup.py
M src/plone/app/multilingual/browser/controlpanel.py
M src/plone/app/multilingual/browser/menu.py
M src/plone/app/multilingual/manager.py
M src/plone/app/multilingual/tests/test_form.py
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex b4158b89..5b3c112c 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -1,5 +1,6 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n #\n # EditorConfig Configuration file, for more details see:\n # http://EditorConfig.org\n@@ -12,7 +13,8 @@\n root = true\n \n \n-[*]  # For All Files\n+[*]\n+# Default settings for all files.\n # Unix-style newlines with a newline ending every file\n end_of_line = lf\n insert_final_newline = true\n@@ -28,12 +30,27 @@ max_line_length = off\n # 4 space indentation\n indent_size = 4\n \n-[*.{yml,zpt,pt,dtml,zcml}]\n+[*.{yml,zpt,pt,dtml,zcml,html,xml}]\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss}]\n+# Frontend development\n+# 2 space indentation\n+indent_size = 2\n+max_line_length = 80\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\n indent_size = unset\n tab_width = unset\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [editorconfig]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.flake8 b/.flake8\nnew file mode 100644\nindex 00000000..38918f42\n--- /dev/null\n+++ b/.flake8\n@@ -0,0 +1,22 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[flake8]\n+doctests = 1\n+ignore =\n+    # black takes care of line length\n+    E501,\n+    # black takes care of where to break lines\n+    W503,\n+    # black takes care of spaces within slicing (list[:])\n+    E203,\n+    # black takes care of spaces after commas\n+    E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nnew file mode 100644\nindex 00000000..b8edec02\n--- /dev/null\n+++ b/.github/workflows/meta.yml\n@@ -0,0 +1,68 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+name: Meta\n+on:\n+  push:\n+    branches:\n+      - master\n+      - main\n+  pull_request:\n+    branches:\n+      - master\n+      - main\n+  workflow_dispatch:\n+\n+##\n+# To set environment variables for all jobs, add in .meta.toml:\n+# [github]\n+# env = """\n+#     debug: 1\n+#     image-name: \'org/image\'\n+#     image-tag: \'latest\'\n+# """\n+##\n+\n+jobs:\n+  qa:\n+    uses: plone/meta/.github/workflows/qa.yml@main\n+  test:\n+    uses: plone/meta/.github/workflows/test.yml@main\n+  coverage:\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n+  dependencies:\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n+  release_ready:\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n+  circular:\n+    uses: plone/meta/.github/workflows/circular.yml@main\n+\n+##\n+# To modify the list of default jobs being created add in .meta.toml:\n+# [github]\n+# jobs = [\n+#    "qa",\n+#    "test",\n+#    "coverage",\n+#    "dependencies",\n+#    "release_ready",\n+#    "circular",\n+#    ]\n+##\n+\n+##\n+# To request that some OS level dependencies get installed\n+# when running tests/coverage jobs, add in .meta.toml:\n+# [github]\n+# os_dependencies = "git libxml2 libxslt"\n+##\n+\n+\n+##\n+# Specify additional jobs in .meta.toml:\n+#  [github]\n+#  extra_lines = """\n+#  another:\n+#    uses: org/repo/.github/workflows/file.yml@main\n+#  """\n+##\ndiff --git a/.gitignore b/.gitignore\nindex 3a725158..486392f6 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,46 +1,56 @@\n-*.pyc\n-*.egg\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n-\n-# Directories\n-/eggs/*\n-/parts/*\n-/bin/*\n-/extras/*\n-/develop-eggs/*\n-/var/*\n-/build/*\n-/dist/*\n-/docs/_build\n-/coverage\n+*.pyc\n+*.pyo\n \n-# Sublime Text\n-.codeintel/*\n-MKcodeintel\n+# translation related\n+*.mo\n \n-# buildout\n+# tools related\n+build/\n+.coverage\n+.*project\n+coverage.xml\n+dist/\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n .installed.cfg\n+include/\n+lib/\n+lib64\n .mr.developer.cfg\n-\n-# eclipse\n-.project\n-.pydevproject\n-.settings\n-\n-# Mac\n-.DS_Store\n-\n-# Emacs\n-.emacs.desktop*\n-\n-# Virtualenv\n-/lib64/\n-/lib/\n-/include/\n-/local/\n-.Python\n-\n-# tests\n-/test_acceptance/*\n-robot_*\n+parts/\n+pyvenv.cfg\n+var/\n+local.cfg\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex b6641708..3beb63b3 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -1,5 +1,10 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "11f0db91"\n+commit-id = "123ebc0a"\n+\n+[pyproject]\n+codespell_ignores = "pres"\n+dependencies_ignores = "[\'Products.CMFPlone\', \'Products.LinguaPlone\']"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex f9cdf5cd..f857b483 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -1,37 +1,62 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n ci:\n     autofix_prs: false\n     autoupdate_schedule: monthly\n \n repos:\n -   repo: https://github.com/asottile/pyupgrade\n-    rev: v3.3.2\n+    rev: v3.15.0\n     hooks:\n     -   id: pyupgrade\n         args: [--py38-plus]\n -   repo: https://github.com/pycqa/isort\n-    rev: 5.12.0\n+    rev: 5.13.2\n     hooks:\n     -   id: isort\n -   repo: https://github.com/psf/black\n-    rev: 23.3.0\n+    rev: 24.1.1\n     hooks:\n     -   id: black\n -   repo: https://github.com/collective/zpretty\n-    rev: 3.0.4\n+    rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n-    rev: 6.0.0\n+    rev: 7.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n-    rev: v2.2.4\n+    rev: v2.2.6\n     hooks:\n     -   id: codespell\n         additional_dependencies:\n           - tomli\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  codespell_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/mgedmin/check-manifest\n     rev: "0.49"\n     hooks:\n@@ -40,3 +65,30 @@ repos:\n     rev: "4.2"\n     hooks:\n     -   id: pyroma\n+-   repo: https://github.com/mgedmin/check-python-versions\n+    rev: "0.22.0"\n+    hooks:\n+    -   id: check-python-versions\n+        args: [\'--only\', \'setup.py,pyproject.toml\']\n+-   repo: https://github.com/collective/i18ndude\n+    rev: "6.1.0"\n+    hooks:\n+    -   id: i18ndude\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  i18ndude_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/dependabot.yml b/dependabot.yml\nnew file mode 100644\nindex 00000000..bbd3ab05\n--- /dev/null\n+++ b/dependabot.yml\n@@ -0,0 +1,11 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+version: 2\n+updates:\n+\n+  - package-ecosystem: "github-actions"\n+    directory: "/"\n+    schedule:\n+      # Check for updates to GitHub Actions every week\n+      interval: "weekly"\ndiff --git a/news/+meta.internal b/news/+meta.internal\nnew file mode 100644\nindex 00000000..c08f5399\n--- /dev/null\n+++ b/news/+meta.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 78409e00..8fcae1b4 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,8 +1,12 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+[build-system]\n+requires = ["setuptools>=68.2"]\n+\n [tool.towncrier]\n-filename = "CHANGES.rst"\n directory = "news/"\n+filename = "CHANGES.rst"\n title_format = "{version} ({project_date})"\n underlines = ["-", ""]\n \n@@ -36,31 +40,128 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n+[tool.codespell]\n+ignore-words-list = "discreet,pres"\n+skip = "*.po,"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  codespell_ignores = "foo,bar"\n+#  codespell_skip = "*.po,*.map,package-lock.json"\n+##\n+\n [tool.dependencychecker]\n Zope = [\n   # Zope own provided namespaces\n   \'App\', \'OFS\', \'Products.Five\', \'Products.OFSP\', \'Products.PageTemplates\',\n   \'Products.SiteAccess\', \'Shared\', \'Testing\', \'ZPublisher\', \'ZTUtils\',\n   \'Zope2\', \'webdav\', \'zmi\',\n+  # ExtensionClass own provided namespaces\n+  \'ExtensionClass\', \'ComputedAttribute\', \'MethodObject\',\n   # Zope dependencies\n-  \'Acquisition\', \'DateTime\', \'transaction\', \'zExceptions\', \'ZODB\', \'zope.component\',\n-  \'zope.configuration\', \'zope.container\', \'zope.deferredimport\', \'zope.event\',\n-  \'zope.exceptions\', \'zope.globalrequest\', \'zope.i18n\', \'zope.i18nmessageid\',\n-  \'zope.interface\', \'zope.lifecycleevent\', \'zope.location\', \'zope.publisher\',\n-  \'zope.schema\', \'zope.security\', \'zope.site\', \'zope.traversing\', \'AccessControl\',\n+  \'AccessControl\', \'Acquisition\', \'AuthEncoding\', \'beautifulsoup4\', \'BTrees\',\n+  \'cffi\', \'Chameleon\', \'DateTime\', \'DocumentTemplate\',\n+  \'MultiMapping\', \'multipart\', \'PasteDeploy\', \'Persistence\', \'persistent\',\n+  \'pycparser\', \'python-gettext\', \'pytz\', \'RestrictedPython\', \'roman\',\n+  \'soupsieve\', \'transaction\', \'waitress\', \'WebOb\', \'WebTest\', \'WSGIProxy2\',\n+  \'z3c.pt\', \'zc.lockfile\', \'ZConfig\', \'zExceptions\', \'ZODB\', \'zodbpickle\',\n+  \'zope.annotation\', \'zope.browser\', \'zope.browsermenu\', \'zope.browserpage\',\n+  \'zope.browserresource\', \'zope.cachedescriptors\', \'zope.component\',\n+  \'zope.configuration\', \'zope.container\', \'zope.contentprovider\',\n+  \'zope.contenttype\', \'zope.datetime\', \'zope.deferredimport\',\n+  \'zope.deprecation\', \'zope.dottedname\', \'zope.event\', \'zope.exceptions\',\n+  \'zope.filerepresentation\', \'zope.globalrequest\', \'zope.hookable\',\n+  \'zope.i18n\', \'zope.i18nmessageid\', \'zope.interface\', \'zope.lifecycleevent\',\n+  \'zope.location\', \'zope.pagetemplate\', \'zope.processlifetime\', \'zope.proxy\',\n+  \'zope.ptresource\', \'zope.publisher\', \'zope.schema\', \'zope.security\',\n+  \'zope.sequencesort\', \'zope.site\', \'zope.size\', \'zope.structuredtext\',\n+  \'zope.tal\', \'zope.tales\', \'zope.testbrowser\', \'zope.testing\',\n+  \'zope.traversing\', \'zope.viewlet\'\n+]\n+\'Products.CMFCore\' = [\n+  \'docutils\', \'five.localsitemanager\', \'Missing\', \'Products.BTreeFolder2\',\n+  \'Products.GenericSetup\', \'Products.MailHost\', \'Products.PythonScripts\',\n+  \'Products.StandardCacheManagers\', \'Products.ZCatalog\', \'Record\',\n+  \'zope.sendmail\', \'Zope\'\n ]\n \'plone.base\' = [\n-  \'AccessControl\', \'Products.BTreeFolder2\', \'Products.CMFCore\',\n-  \'Products.CMFDynamicViewFTI\', \'zope.deprecation\',\n+  \'plone.batching\', \'plone.registry\', \'plone.schema\',\'plone.z3cform\',\n+  \'Products.CMFCore\', \'Products.CMFDynamicViewFTI\',\n ]\n python-dateutil = [\'dateutil\']\n-ignore-packages = [\'Products.LinguaPlone\', \'Products.CMFPlone\']\n+ignore-packages = [\'Products.CMFPlone\', \'Products.LinguaPlone\']\n \n-[tool.codespell]\n-ignore-words-list = "discreet,pres"\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  dependencies_ignores = "[\'zestreleaser.towncrier\']"\n+#  dependencies_mappings = [\n+#    "gitpython = [\'git\']",\n+#    "pygithub = [\'github\']",\n+#  ]\n+##\n+\n+[tool.check-manifest]\n+ignore = [\n+    ".editorconfig",\n+    ".flake8",\n+    ".meta.toml",\n+    ".pre-commit-config.yaml",\n+    "dependabot.yml",\n+    "mx.ini",\n+    "tox.ini",\n+\n+]\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  check_manifest_ignores = """\n+#      "*.map.js",\n+#      "*.pyc",\n+#  """\n+#  check_manifest_extra_lines = """\n+#  ignore-bad-ideas = [\n+#      "some/test/file/PKG-INFO",\n+#  ]\n+#  """\n+##\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/setup.cfg b/setup.cfg\nindex 80b51b21..d6e2ab5d 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -27,25 +27,3 @@ maintainer_email = releasemanager@plone.org\n \n [options]\n python_requires = >=3.8\n-\n-[check-manifest]\n-ignore =\n-    .editorconfig\n-    .meta.toml\n-    .pre-commit-config.yaml\n-    tox.ini\n-\n-[bdist_wheel]\n-universal = 0\n-\n-[flake8]\n-doctests = 1\n-ignore =\n-    # black takes care of line length\n-    E501,\n-    # black takes care of where to break lines\n-    W503,\n-    # black takes care of spaces within slicing (list[:])\n-    E203,\n-    # black takes care of spaces after commas\n-    E231,\ndiff --git a/setup.py b/setup.py\nindex da4d5c90..3d83b0ae 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,4 +1,5 @@\n """Setup plone.app.multilingual."""\n+\n from setuptools import find_packages\n from setuptools import setup\n \n@@ -17,6 +18,7 @@\n         "Products.CMFCore",\n         "Products.GenericSetup",\n         "Products.statusmessages",\n+        "Zope",\n         "plone.app.content",\n         "plone.app.contentmenu",\n         "plone.app.dexterity",\ndiff --git a/src/plone/app/multilingual/browser/controlpanel.py b/src/plone/app/multilingual/browser/controlpanel.py\nindex 76d88e48..32e73860 100644\n--- a/src/plone/app/multilingual/browser/controlpanel.py\n+++ b/src/plone/app/multilingual/browser/controlpanel.py\n@@ -6,7 +6,6 @@\n from plone.app.uuid.utils import uuidToObject\n from plone.base.interfaces import ILanguage\n from Products.CMFCore.utils import getToolByName\n-from Products.CMFPlone.controlpanel.browser.language import LanguageControlPanelForm\n from Products.Five import BrowserView\n from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n from Products.statusmessages.interfaces import IStatusMessage\n@@ -20,6 +19,13 @@\n import json\n \n \n+try:\n+    # In Plone 6.0 we try not to depend on Products.CMFPlone.\n+    from Products.CMFPlone.controlpanel.browser.language import LanguageControlPanelForm\n+except ImportError:\n+    LanguageControlPanelForm = controlpanel.RegistryEditForm\n+\n+\n _ = MessageFactory("plone.app.multilingual")\n \n \ndiff --git a/src/plone/app/multilingual/browser/menu.py b/src/plone/app/multilingual/browser/menu.py\nindex fcc12ae2..2b3d00c6 100644\n--- a/src/plone/app/multilingual/browser/menu.py\n+++ b/src/plone/app/multilingual/browser/menu.py\n@@ -530,7 +530,6 @@ class TranslateSubMenuItem(BrowserSubMenuItem):\n     )\n     submenuId = "plone_contentmenu_multilingual"\n     order = 5\n-    extra = {"id": "plone-contentmenu-multilingual"}\n \n     @property\n     def action(self):\ndiff --git a/src/plone/app/multilingual/manager.py b/src/plone/app/multilingual/manager.py\nindex 1f32c1cb..37bc9cd9 100644\n--- a/src/plone/app/multilingual/manager.py\n+++ b/src/plone/app/multilingual/manager.py\n@@ -74,7 +74,7 @@ def register_translation(self, language, content):\n         if not language and language != "":\n             raise KeyError("There is no target language")\n \n-        if type(content) == str:\n+        if isinstance(content, str):\n             content = uuidToObject(content)\n \n         # Check if exists and is not myself\ndiff --git a/src/plone/app/multilingual/tests/test_form.py b/src/plone/app/multilingual/tests/test_form.py\nindex e1bb5651..e4644cc9 100644\n--- a/src/plone/app/multilingual/tests/test_form.py\n+++ b/src/plone/app/multilingual/tests/test_form.py\n@@ -47,9 +47,9 @@ def test_translation_form_creates_translation(self):\n         self.browser.open(a_ca.absolute_url() + "/@@create_translation?language=en")\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\n@@ -75,9 +75,9 @@ def test_translation_form_prevents_translating_twice(self):\n         add_translation_url = self.browser.url\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\n@@ -101,9 +101,9 @@ def test_translation_can_be_unregistered(self):\n         self.browser.open(a_ca.absolute_url() + "/@@create_translation?language=en")\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         # Unregister translation\n@@ -185,9 +185,9 @@ def test_translation_can_be_removed_by_deleting(self):\n         self.browser.open(a_ca.absolute_url() + "/@@create_translation?language=en")\n \n         # Fill in translation details\n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test document"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test document"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         # Remove translation\n@@ -210,9 +210,9 @@ def test_folderish_content_can_be_translated(self):\n             + "/ca/test-folder/@@create_translation?language=en"\n         )\n \n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test folder"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test folder"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\n@@ -234,9 +234,9 @@ def test_content_in_folders_can_be_translated(self):\n             af_ca.absolute_url() + "/" + b_ca.id + "/@@create_translation?language=en"\n         )\n \n-        self.browser.getControl(\n-            name="form.widgets.IDublinCore.title"\n-        ).value = "Test folder"\n+        self.browser.getControl(name="form.widgets.IDublinCore.title").value = (\n+            "Test folder"\n+        )\n         self.browser.getControl(name="form.buttons.save").click()\n \n         self.portal._p_jar.sync()\ndiff --git a/tox.ini b/tox.ini\nindex 0b1bccde..943908b8 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -1,16 +1,51 @@\n # Generated from:\n-# https://github.com/plone/meta/tree/master/config/default\n+# https://github.com/plone/meta/tree/main/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n [tox]\n # We need 4.4.0 for constrain_package_deps.\n min_version = 4.4.0\n envlist =\n-    format\n     lint\n     test\n+    dependencies\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  envlist_lines = """\n+#      my_other_environment\n+#  """\n+#  config_lines = """\n+#  my_extra_top_level_tox_configuration_lines\n+#  """\n+##\n \n [testenv]\n+skip_install = true\n allowlist_externals =\n-    sh\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  testenv_options = """\n+#  basepython = /usr/bin/python3.8\n+#  """\n+##\n+\n+[testenv:init]\n+description = Prepare environment\n+skip_install = true\n+commands =\n+    echo "Initial setup complete"\n+\n \n [testenv:format]\n description = automatically reformat code\n@@ -32,37 +67,153 @@ commands =\n     pre-commit run -a\n \n [testenv:dependencies]\n-description = check if the package defines all its dependencies and generate a graph out of them\n+description = check if the package defines all its dependencies\n+skip_install = true\n+deps =\n+    build\n+    z3c.dependencychecker==2.14.3\n+commands =\n+    python -m build --sdist\n+    dependencychecker\n+\n+[testenv:dependencies-graph]\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n+allowlist_externals =\n+    sh\n deps =\n-    z3c.dependencychecker==2.11\n     pipdeptree==2.5.1\n     graphviz  # optional dependency of pipdeptree\n commands =\n-    dependencychecker\n-    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,z3c.dependencychecker,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n+    sh -c \'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg\'\n \n [testenv:test]\n-usedevelop = true\n+description = run the distribution tests\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+#\n+# Set constrain_package_deps .meta.toml:\n+#  [tox]\n+#  constrain_package_deps = "false"\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n+##\n+# Specify additional deps in .meta.toml:\n+#  [tox]\n+#  test_deps_additional = "-esources/plonegovbr.portal_base[test]"\n+#\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n+    rfbrowser init\n     zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n-usedevelop = true\n+description = get a test coverage report\n+use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n commands =\n-    coverage run {envbindir}/zope-testrunner --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n+    rfbrowser init\n+    coverage run --branch --source plone.app.multilingual {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir}/src -s plone.app.multilingual {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n+    coverage html\n extras =\n     test\n+\n+\n+[testenv:release-check]\n+description = ensure that the distribution is ready to release\n+skip_install = true\n+deps =\n+    twine\n+    build\n+    towncrier\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n+commands =\n+    # fake version to not have to install the package\n+    # we build the change log as news entries might break\n+    # the README that is displayed on PyPI\n+    towncrier build --version=100.0.0 --yes\n+    python -m build --sdist\n+    twine check dist/*\n+\n+[testenv:circular]\n+description = ensure there are no cyclic dependencies\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n+allowlist_externals =\n+    sh\n+deps =\n+    pipdeptree\n+    pipforester\n+    -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+\n+commands =\n+    # Generate the full dependency tree\n+    sh -c \'pipdeptree -j > forest.json\'\n+    # Generate a DOT graph with the circular dependencies, if any\n+    pipforester -i forest.json -o forest.dot --cycles\n+    # Report if there are any circular dependencies, i.e. error if there are any\n+    pipforester -i forest.json --check-cycles -o /dev/null\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n'

