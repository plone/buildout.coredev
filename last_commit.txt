Repository: plone.app.caching


Branch: refs/heads/master
Date: 2020-01-27T01:41:29+01:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/plone.app.caching/commit/689264e8345e41a94a003133f07f46011c612044

Remove Range from request if the If-Range condition is not fulfilled

Files changed:
M plone/app/caching/operations/default.py

b'diff --git a/plone/app/caching/operations/default.py b/plone/app/caching/operations/default.py\nindex 54acab6..87b11dc 100644\n--- a/plone/app/caching/operations/default.py\n+++ b/plone/app/caching/operations/default.py\n@@ -98,6 +98,13 @@ def interceptResponse(self, rulename, response, class_=None):\n         lastModified = getLastModifiedAnnotation(\n             self.published, self.request, lastModified=lastModified)\n \n+        # Remove Range from request if the If-Range condition is not fulfilled\n+        if_range = self.request.environ.get(\'HTTP_IF_RANGE\', \'\').strip(\'"\')\n+        if if_range and if_range != lastModified and if_range != etag:\n+            if \'HTTP_RANGE\' in self.request.environ:\n+                del self.request.environ[\'HTTP_RANGE\']\n+            del self.request.environ[\'HTTP_IF_RANGE\']\n+\n         # Check for cache stop request variables\n         if cacheStop(self.request, rulename):\n             return None\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2020-02-29T17:54:35+01:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/plone.app.caching/commit/7fd690f83969f9ddc1f605c5881eda1013093e56

remove if-range header from the request

Files changed:
M plone/app/caching/operations/default.py

b'diff --git a/plone/app/caching/operations/default.py b/plone/app/caching/operations/default.py\nindex 87b11dc..cb5b1b4 100644\n--- a/plone/app/caching/operations/default.py\n+++ b/plone/app/caching/operations/default.py\n@@ -99,10 +99,12 @@ def interceptResponse(self, rulename, response, class_=None):\n             self.published, self.request, lastModified=lastModified)\n \n         # Remove Range from request if the If-Range condition is not fulfilled\n+        # If-Range check is done here so we could remove the header from request\n         if_range = self.request.environ.get(\'HTTP_IF_RANGE\', \'\').strip(\'"\')\n-        if if_range and if_range != lastModified and if_range != etag:\n-            if \'HTTP_RANGE\' in self.request.environ:\n-                del self.request.environ[\'HTTP_RANGE\']\n+        if if_range:\n+            if if_range != lastModified and if_range != etag:\n+                if \'HTTP_RANGE\' in self.request.environ:\n+                    del self.request.environ[\'HTTP_RANGE\']\n             del self.request.environ[\'HTTP_IF_RANGE\']\n \n         # Check for cache stop request variables\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2020-02-29T18:58:12+01:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/plone.app.caching/commit/e267aea8ed29f25bc50233efd5be155fcd402354

check if-range as lastmodified

Files changed:
M plone/app/caching/operations/default.py

b'diff --git a/plone/app/caching/operations/default.py b/plone/app/caching/operations/default.py\nindex cb5b1b4..e0e1e05 100644\n--- a/plone/app/caching/operations/default.py\n+++ b/plone/app/caching/operations/default.py\n@@ -10,6 +10,7 @@\n from plone.app.caching.operations.utils import getLastModifiedAnnotation\n from plone.app.caching.operations.utils import isModified\n from plone.app.caching.operations.utils import notModified\n+from plone.app.caching.operations.utils import parseDateTime\n from plone.app.caching.operations.utils import setCacheHeaders\n from plone.app.caching.operations.utils import visibleToRole\n from plone.caching.interfaces import ICachingOperation\n@@ -22,6 +23,7 @@\n from zope.interface import provider\n from zope.publisher.interfaces.http import IHTTPRequest\n \n+import datetime\n import random\n import time\n \n@@ -99,12 +101,18 @@ def interceptResponse(self, rulename, response, class_=None):\n             self.published, self.request, lastModified=lastModified)\n \n         # Remove Range from request if the If-Range condition is not fulfilled\n-        # If-Range check is done here so we could remove the header from request\n         if_range = self.request.environ.get(\'HTTP_IF_RANGE\', \'\').strip(\'"\')\n         if if_range:\n-            if if_range != lastModified and if_range != etag:\n-                if \'HTTP_RANGE\' in self.request.environ:\n+            if \'HTTP_RANGE\' in self.request.environ:\n+                if_range_dt = parseDateTime(if_range)\n+                delta_sec = datetime.timedelta(seconds=1)\n+                if if_range_dt and (lastModified - if_range_dt) < delta_sec:\n+                    pass\n+                elif if_range == etag:\n+                    pass\n+                else:\n                     del self.request.environ[\'HTTP_RANGE\']\n+            # If-Range check is done here so we could remove it from the request\n             del self.request.environ[\'HTTP_IF_RANGE\']\n \n         # Check for cache stop request variables\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2020-05-20T05:05:59+02:00
Author: mauro (mamico) <mauro.amico@unibo.it>
Commit: https://github.com/plone/plone.app.caching/commit/f5b08c526a783ee5ee26d6e0a63e529501aecd60

changelog

Files changed:
A news/58.feature

b'diff --git a/news/58.feature b/news/58.feature\nnew file mode 100644\nindex 0000000..21cbda4\n--- /dev/null\n+++ b/news/58.feature\n@@ -0,0 +1,2 @@\n+Remove Range from request if the If-Range condition is not fulfilled\n+[mamico]\n'

Repository: plone.app.caching


Branch: refs/heads/master
Date: 2020-06-24T09:22:27+02:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.app.caching/commit/ae038d40b48db50edd17e01257b0ee03ee665c8a

Merge pull request #58 from plone/if-range-support

If range support

Files changed:
A news/58.feature
M plone/app/caching/operations/default.py

b'diff --git a/news/58.feature b/news/58.feature\nnew file mode 100644\nindex 0000000..21cbda4\n--- /dev/null\n+++ b/news/58.feature\n@@ -0,0 +1,2 @@\n+Remove Range from request if the If-Range condition is not fulfilled\n+[mamico]\ndiff --git a/plone/app/caching/operations/default.py b/plone/app/caching/operations/default.py\nindex 54acab6..e0e1e05 100644\n--- a/plone/app/caching/operations/default.py\n+++ b/plone/app/caching/operations/default.py\n@@ -10,6 +10,7 @@\n from plone.app.caching.operations.utils import getLastModifiedAnnotation\n from plone.app.caching.operations.utils import isModified\n from plone.app.caching.operations.utils import notModified\n+from plone.app.caching.operations.utils import parseDateTime\n from plone.app.caching.operations.utils import setCacheHeaders\n from plone.app.caching.operations.utils import visibleToRole\n from plone.caching.interfaces import ICachingOperation\n@@ -22,6 +23,7 @@\n from zope.interface import provider\n from zope.publisher.interfaces.http import IHTTPRequest\n \n+import datetime\n import random\n import time\n \n@@ -98,6 +100,21 @@ def interceptResponse(self, rulename, response, class_=None):\n         lastModified = getLastModifiedAnnotation(\n             self.published, self.request, lastModified=lastModified)\n \n+        # Remove Range from request if the If-Range condition is not fulfilled\n+        if_range = self.request.environ.get(\'HTTP_IF_RANGE\', \'\').strip(\'"\')\n+        if if_range:\n+            if \'HTTP_RANGE\' in self.request.environ:\n+                if_range_dt = parseDateTime(if_range)\n+                delta_sec = datetime.timedelta(seconds=1)\n+                if if_range_dt and (lastModified - if_range_dt) < delta_sec:\n+                    pass\n+                elif if_range == etag:\n+                    pass\n+                else:\n+                    del self.request.environ[\'HTTP_RANGE\']\n+            # If-Range check is done here so we could remove it from the request\n+            del self.request.environ[\'HTTP_IF_RANGE\']\n+\n         # Check for cache stop request variables\n         if cacheStop(self.request, rulename):\n             return None\n'

