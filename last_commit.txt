Repository: plone.event


Branch: refs/heads/master
Date: 2023-06-25T23:19:47+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.event/commit/debfb6dc3c51b6f69676335621dbe333930a12dc

Configuring with plone/meta

Files changed:
A news/cfffba8c.internal
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex bb09dd7..919b411 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -33,6 +33,10 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\ndiff --git a/.flake8 b/.flake8\nindex c156803..7ef4f64 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -12,3 +12,11 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f..a7f25e0 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -15,14 +15,14 @@ on:\n \n jobs:\n   qa:\n-    uses: plone/meta/.github/workflows/qa.yml@master\n+    uses: plone/meta/.github/workflows/qa.yml@main\n   test:\n-    uses: plone/meta/.github/workflows/test.yml@master\n+    uses: plone/meta/.github/workflows/test.yml@main\n   coverage:\n-    uses: plone/meta/.github/workflows/coverage.yml@master\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n-    uses: plone/meta/.github/workflows/dependencies.yml@master\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n   release-ready:\n-    uses: plone/meta/.github/workflows/release_ready.yml@master\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 9c88e6a..81594fd 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,7 +1,51 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n-*.py?\n-.tox\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n dist/\n-!.gitattributes\n-!.gitignore\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 861c802..4ca2970 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,4 +3,4 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "b940914a"\n+commit-id = "cfffba8c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 7f17aed..7de9fd7 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -23,10 +23,26 @@ repos:\n     rev: 3.1.0a2\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.0.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.4\n     hooks:\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 6696caf..e442bd0 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -37,12 +37,36 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.codespell]\n ignore-words-list = "discreet,"\n skip = "*.po,"\n@@ -111,9 +135,9 @@ ignore = [\n     ".pre-commit-config.yaml",\n     "tox.ini",\n     ".flake8",\n+    "mx.ini",\n \n ]\n-\n ##\n # Add extra configuration options in .meta.toml:\n #  [pyproject]\n@@ -123,6 +147,7 @@ ignore = [\n #  """\n ##\n \n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pyproject]\ndiff --git a/tox.ini b/tox.ini\nindex 10c0730..7685071 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -21,6 +21,17 @@ envlist =\n #  """\n ##\n \n+[testenv]\n+skip_install = true\n+allowlist_externals =\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -51,7 +62,8 @@ commands =\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph out of the package\'s dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -63,31 +75,67 @@ commands =\n [testenv:test]\n description = run the distribution tests\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.event {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.event {posargs}\n+    coverage run --branch --source plone.event {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.event {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n \n+\n [testenv:release-check]\n description = ensure that the distribution is ready to release\n skip_install = true\n@@ -106,7 +154,17 @@ commands =\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-usedevelop = true\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n allowlist_externals =\n     sh\n deps =\n@@ -119,13 +177,13 @@ commands =\n     # Generate a DOT graph with the circular dependencies, if any\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n-    pipforester -i forest.json --check-cycles\n+    pipforester -i forest.json --check-cycles -o /dev/null\n \n \n ##\n # Add extra configuration options in .meta.toml:\n #  [tox]\n #  extra_lines = """\n-#      my_other_environment\n+#  _your own configuration lines_\n #  """\n ##\n'

Repository: plone.event


Branch: refs/heads/master
Date: 2023-06-25T23:20:45+02:00
Author: Gil Forcada Codinachs (gforcada) <gil.gnome@gmail.com>
Commit: https://github.com/plone/plone.event/commit/51a16fec3707a5b9e0447c75be10893d74091c39

fix: adjust setup.py

Files changed:
M setup.py

b'diff --git a/setup.py b/setup.py\nindex 7b6ae1a..b684023 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,14 +1,22 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n version = "2.0.1.dev0"\n \n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n+\n setup(\n     name="plone.event",\n     version=version,\n     description="Event and calendaring related tools not bound to Plone",\n-    long_description=(open("README.rst").read() + "\\n" + open("CHANGES.rst").read()),\n+    long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\n'

Repository: plone.event


Branch: refs/heads/master
Date: 2023-10-04T17:42:21+02:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.event/commit/a58538de7b4654741fc4d640b1645ac329ea6f03

Merge pull request #20 from plone/config-with-default-template-0039996b

Config with default template

Files changed:
A news/cfffba8c.internal
M .editorconfig
M .flake8
M .github/workflows/meta.yml
M .gitignore
M .meta.toml
M .pre-commit-config.yaml
M pyproject.toml
M setup.py
M tox.ini

b'diff --git a/.editorconfig b/.editorconfig\nindex bb09dd7..919b411 100644\n--- a/.editorconfig\n+++ b/.editorconfig\n@@ -33,6 +33,10 @@ indent_size = 4\n # 2 space indentation\n indent_size = 2\n \n+[*.{json,jsonl,js,jsx,ts,tsx,css,less,scss,html}]  # Frontend development\n+# 2 space indentation\n+indent_size = 2\n+\n [{Makefile,.gitmodules}]\n # Tab indentation (no size specified, but view as 4 spaces)\n indent_style = tab\ndiff --git a/.flake8 b/.flake8\nindex c156803..7ef4f64 100644\n--- a/.flake8\n+++ b/.flake8\n@@ -12,3 +12,11 @@ ignore =\n     E203,\n     # black takes care of spaces after commas\n     E231,\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [flake8]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.github/workflows/meta.yml b/.github/workflows/meta.yml\nindex 4748f0f..a7f25e0 100644\n--- a/.github/workflows/meta.yml\n+++ b/.github/workflows/meta.yml\n@@ -15,14 +15,14 @@ on:\n \n jobs:\n   qa:\n-    uses: plone/meta/.github/workflows/qa.yml@master\n+    uses: plone/meta/.github/workflows/qa.yml@main\n   test:\n-    uses: plone/meta/.github/workflows/test.yml@master\n+    uses: plone/meta/.github/workflows/test.yml@main\n   coverage:\n-    uses: plone/meta/.github/workflows/coverage.yml@master\n+    uses: plone/meta/.github/workflows/coverage.yml@main\n   dependencies:\n-    uses: plone/meta/.github/workflows/dependencies.yml@master\n+    uses: plone/meta/.github/workflows/dependencies.yml@main\n   release-ready:\n-    uses: plone/meta/.github/workflows/release_ready.yml@master\n+    uses: plone/meta/.github/workflows/release_ready.yml@main\n   circular:\n-    uses: plone/meta/.github/workflows/circular.yml@master\n+    uses: plone/meta/.github/workflows/circular.yml@main\ndiff --git a/.gitignore b/.gitignore\nindex 9c88e6a..81594fd 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1,7 +1,51 @@\n+# Generated from:\n+# https://github.com/plone/meta/tree/master/config/default\n+# See the inline comments on how to expand/tweak this configuration file\n+# python related\n *.egg-info\n-*.mo\n-*.py?\n-.tox\n+*.pyc\n+*.pyo\n+\n+# tools related\n+build/\n+.coverage\n+coverage.xml\n dist/\n-!.gitattributes\n-!.gitignore\n+docs/_build\n+__pycache__/\n+.tox\n+.vscode/\n+node_modules/\n+\n+# venv / buildout related\n+bin/\n+develop-eggs/\n+eggs/\n+.eggs/\n+etc/\n+.installed.cfg\n+include/\n+lib/\n+lib64\n+.mr.developer.cfg\n+parts/\n+pyvenv.cfg\n+var/\n+\n+# mxdev\n+/instance/\n+/.make-sentinels/\n+/*-mxdev.txt\n+/reports/\n+/sources/\n+/venv/\n+.installed.txt\n+\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [gitignore]\n+#  extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\ndiff --git a/.meta.toml b/.meta.toml\nindex 861c802..4ca2970 100644\n--- a/.meta.toml\n+++ b/.meta.toml\n@@ -3,4 +3,4 @@\n # See the inline comments on how to expand/tweak this configuration file\n [meta]\n template = "default"\n-commit-id = "b940914a"\n+commit-id = "cfffba8c"\ndiff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml\nindex 9192bf7..c633c52 100644\n--- a/.pre-commit-config.yaml\n+++ b/.pre-commit-config.yaml\n@@ -23,10 +23,26 @@ repos:\n     rev: 3.1.0\n     hooks:\n     -   id: zpretty\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  zpretty_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/PyCQA/flake8\n     rev: 6.1.0\n     hooks:\n     -   id: flake8\n+\n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pre_commit]\n+#  flake8_extra_lines = """\n+#  _your own configuration lines_\n+#  """\n+##\n -   repo: https://github.com/codespell-project/codespell\n     rev: v2.2.6\n     hooks:\ndiff --git a/news/cfffba8c.internal b/news/cfffba8c.internal\nnew file mode 100644\nindex 0000000..c08f539\n--- /dev/null\n+++ b/news/cfffba8c.internal\n@@ -0,0 +1,2 @@\n+Update configuration files.\n+[plone devs]\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 6696caf..e442bd0 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -37,12 +37,36 @@ directory = "tests"\n name = "Tests"\n showcontent = true\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  towncrier_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.isort]\n profile = "plone"\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  isort_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.black]\n target-version = ["py38"]\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [pyproject]\n+#  black_extra_lines = """\n+#  extra_configuration\n+#  """\n+##\n+\n [tool.codespell]\n ignore-words-list = "discreet,"\n skip = "*.po,"\n@@ -111,9 +135,9 @@ ignore = [\n     ".pre-commit-config.yaml",\n     "tox.ini",\n     ".flake8",\n+    "mx.ini",\n \n ]\n-\n ##\n # Add extra configuration options in .meta.toml:\n #  [pyproject]\n@@ -123,6 +147,7 @@ ignore = [\n #  """\n ##\n \n+\n ##\n # Add extra configuration options in .meta.toml:\n #  [pyproject]\ndiff --git a/setup.py b/setup.py\nindex 7b6ae1a..b684023 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,14 +1,22 @@\n+from pathlib import Path\n from setuptools import find_packages\n from setuptools import setup\n \n \n version = "2.0.1.dev0"\n \n+long_description = (\n+    f"{Path(\'README.rst\').read_text()}\\n{Path(\'CHANGES.rst\').read_text()}"\n+)\n+\n setup(\n     name="plone.event",\n     version=version,\n     description="Event and calendaring related tools not bound to Plone",\n-    long_description=(open("README.rst").read() + "\\n" + open("CHANGES.rst").read()),\n+    long_description=long_description,\n+    long_description_content_type="text/x-rst",\n+    # Get more strings from\n+    # https://pypi.org/classifiers/\n     classifiers=[\n         "Development Status :: 5 - Production/Stable",\n         "Framework :: Plone",\ndiff --git a/tox.ini b/tox.ini\nindex 10c0730..7685071 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -21,6 +21,17 @@ envlist =\n #  """\n ##\n \n+[testenv]\n+skip_install = true\n+allowlist_externals =\n+    echo\n+    false\n+# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.\n+# See https://github.com/tox-dev/tox/issues/2858.\n+commands =\n+    echo "Unrecognized environment name {envname}"\n+    false\n+\n [testenv:format]\n description = automatically reformat code\n skip_install = true\n@@ -51,7 +62,8 @@ commands =\n     dependencychecker\n \n [testenv:dependencies-graph]\n-description = generate a graph out of the package\'s dependencies\n+description = generate a graph out of the dependencies of the package\n+skip_install = false\n allowlist_externals =\n     sh\n deps =\n@@ -63,31 +75,67 @@ commands =\n [testenv:test]\n description = run the distribution tests\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n+##\n+# Specify a custom constraints file in .meta.toml:\n+#  [tox]\n+#  constraints_file = "https://my-server.com/constraints.txt"\n+##\n commands =\n     zope-testrunner --all --test-path={toxinidir} -s plone.event {posargs}\n extras =\n     test\n \n+##\n+# Add extra configuration options in .meta.toml:\n+#  [tox]\n+#  test_extras = """\n+#      tests\n+#      widgets\n+#  """\n+##\n+\n [testenv:coverage]\n description = get a test coverage report\n use_develop = true\n+skip_install = false\n constrain_package_deps = true\n-set_env = ROBOT_BROWSER=headlesschrome\n+set_env =\n+    ROBOT_BROWSER=headlesschrome\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n deps =\n     coverage\n     zope.testrunner\n     -c https://dist.plone.org/release/6.0-dev/constraints.txt\n commands =\n-    coverage run {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.event {posargs}\n+    coverage run --branch --source plone.event {envbindir}/zope-testrunner --quiet --all --test-path={toxinidir} -s plone.event {posargs}\n     coverage report -m --format markdown\n+    coverage xml\n extras =\n     test\n \n+\n [testenv:release-check]\n description = ensure that the distribution is ready to release\n skip_install = true\n@@ -106,7 +154,17 @@ commands =\n \n [testenv:circular]\n description = ensure there are no cyclic dependencies\n-usedevelop = true\n+use_develop = true\n+skip_install = false\n+set_env =\n+\n+##\n+# Specify extra test environment variables in .meta.toml:\n+#  [tox]\n+#  test_environment_variables = """\n+#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/\n+#  """\n+##\n allowlist_externals =\n     sh\n deps =\n@@ -119,13 +177,13 @@ commands =\n     # Generate a DOT graph with the circular dependencies, if any\n     pipforester -i forest.json -o forest.dot --cycles\n     # Report if there are any circular dependencies, i.e. error if there are any\n-    pipforester -i forest.json --check-cycles\n+    pipforester -i forest.json --check-cycles -o /dev/null\n \n \n ##\n # Add extra configuration options in .meta.toml:\n #  [tox]\n #  extra_lines = """\n-#      my_other_environment\n+#  _your own configuration lines_\n #  """\n ##\n'

