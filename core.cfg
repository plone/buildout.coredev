[buildout]
extends =
# Load versions-extra.cfg first, so it does not override other versions: it is extra.
    versions-extra.cfg
    bare.cfg

extensions +=
    plone.versioncheck

devtool-eggs =
    zodbverify
    pdbpp

parts +=
    robot
    zopescripts
    zopepy
    packages
    releaser
    z3c_checkversions
    ploneversioncheck
    dependencies
    zodbupdate
    vscode


[buildout:windows]
# no plone.releaser under Windows, because its dependency pywin32-ctypes fails to install
parts -=
    releaser

# no pdbpp under Windows because buildout fails
devtool-eggs -=
    pdbpp


[instance]
eggs +=
    ${buildout:custom-eggs}
    ${buildout:devtool-eggs}
environment-vars =
    zope_i18n_compile_mo_files true


[zopescripts]
# generates the Zope and WSGI specific scripts
recipe = zc.recipe.egg
eggs =
    Zope
    Paste
    ${instance:eggs}


[zopepy]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
interpreter = zopepy
scripts =
# from plone.staticresources:
    plone-register-icons
    plone-register-flags


[packages]
recipe = collective.recipe.omelette
ignore-develop = False
eggs =
    ${test:eggs}


[releaser]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    plone.releaser
    zest.releaser[recommended]
    zest.pocompile


[z3c_checkversions]
# run this via bin/checkversions -l 2 versions.cfg
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]


[ploneversioncheck]
# use after buildout run, for help: ./bin/versioncheck --help
recipe = zc.recipe.egg
eggs = plone.versioncheck


[dependencies]
recipe = zc.recipe.egg
eggs = z3c.dependencychecker

[zodbupdate]
recipe = zc.recipe.egg
eggs =
    zodbupdate
    ${instance:eggs}

[vscode]
recipe = collective.recipe.vscode
eggs = ${test:eggs}
robot-enabled = true
flake8-enabled = false
black-enabled = true
generate-envfile = true
# We do not want the PyLance language server, because it is no longer supported:
jedi-enabled = true
